{"version":3,"sources":["reducers/stateLoader.js","common/comms.js","common/api.js","actions/actions.js","reducers/appReducer.js","reducers/configureStore.js","theme-ui.js","common/graph-helper.js","actions/appActions.js","auth/app-menu.js","common/error-dialog.js","auth/sign_in.js","auth/reset_password_request.js","auth/reset_password_response.js","auth/open_source_licenses.js","auth/license_agreement.js","search/single-search-result.js","search/simsage-search.js","search/search-page.js","common/message-dialog.js","common/autocomplete.js","organisations/organisation-edit.js","common/restore-upload.js","organisations/organisations.js","users/user-manager.js","common/time-select.js","kb/knowledge-bases.js","edge/edge-devices.js","edge/edge-device-commands.js","inventory/inventory.js","crawlers/crawler-general.js","crawlers/crawler-file.js","crawlers/crawler-web.js","crawlers/crawler-database.js","crawlers/crawler-metadata-mapper.js","crawlers/crawler-office365.js","crawlers/crawler-dropbox.js","common/restore-wp-archive.js","crawlers/crawler-wordpress.js","crawlers/crawler-gdrive.js","crawlers/crawler-nfs.js","crawlers/crawler-restfull.js","crawlers/crawler-metadata.js","crawlers/crawler-dialog.js","documents/crawler-import-export.js","documents/document-sources.js","documents/documents.js","mind/mind-edit.js","common/program-upload.js","mind/mind.js","common/bot-single-search-result.js","mind/mind-search-component.js","mind/mind-test.js","synonyms/synonym-edit.js","synonyms/synonyms.js","semantics/semantic-edit.js","semantics/semantics.js","synsets/synset-edit.js","synsets/synsets.js","reports/logs.js","reports/reports.js","operator/operator-teach.js","operator/operator-previous-answer.js","operator/operator.js","operator/operator_tabs.js","ad/domain_dialog.js","ad/domains.js","home.js","index.js"],"names":["initializeState","selected_tab","notification_list","show_notifications","operator_wait_timeout_in_ms","notification_list_display_size","selected_organisation_id","selected_organisation","organisation_filter","organisation_list","selected_knowledgebase","selected_knowledgebase_id","knowledge_base_list","edge_device_list","selected_edge_device","selected_edge_device_id","edge_device_command_list","inventorize_list","inventorize_busy","user_list","user_filter","crawler_list","theme","window","ENV","busy","uploading","session","user","license","document_list","document_previous","document_filter","prev_document_filter","document_page","document_page_size","num_documents","document_nav_list","mind_item_list","mind_item_previous","mind_item_filter","mind_item_page","mind_item_page_size","num_mind_items","prev_mind_item_filter","mind_item_nav_list","bot_query","bot_query_result_list","bot_query_page_size","bot_query_threshold","synonym_list","synonym_prev_id","synonym_filter","synonym_page","synonym_page_size","num_synonyms","prev_synonym_filter","synonym_nav_list","semantic_list","semantic_prev_id","semantic_filter","semantic_page","semantic_page_size","num_semantics","prev_semantic_filter","semantic_nav_list","synset_filter","synset_list","synset_page","synset_page_size","synset_total_size","report_date","Api","toIsoDate","Date","getUTCDate","report_num_items","access_frequency","labels","general_statistics","query_word_frequency","file_type_statistics","operators","createOperator","num_active_connections","operator_connected","html5_notifications","log_list","log_date","toIsoDateTime","log_hours","log_type","log_service","log_refresh","domain_list","semantic_display_category_list","defined_semantic_list","error_title","error","loadState","serializedState","localStorage","getItem","location","href","endsWith","JSON","parse","err","saveState","state","stringify","setItem","Comms","url","payload","fn_success","fn_fail","api_base","console","log","axios","post","getHeaders","then","response","catch","undefined","get_error","put","result","get","delete","organisation_id","regime","getSession","encodeURIComponent","id","kb_id","dateTime","crawler_id","html","year","month","source_id","str","indexOf","obj","a","getFullYear","getMonth","getDate","appReducer","headers","api_version","value","s4","Math","floor","random","toString","substring","createGuid","conversation_list","operator_ready","question_id","question","answer_id","answer","client_id","client_kb_id","client_kb_name","is_typing","typing_time","current_question","prev_answer","bytes","toFixed","timestamp","getUTCFullYear","getUTCMonth","date","hour","getUTCHours","min","getUTCMinutes","sec","getUTCSeconds","pad2","getTime","day","getHours","item","padStart","original","list","seen","new_list","push","hasOwnProperty","email","success","fail","length","http_post","data","errStr","newPassword","reset_id","startsWith","http_put","organisationId","http_get","errorStr","keywords","num_results","score_threshold","kbId","botQuery","superSearch","numResults","scoreThreshold","text","navigator","clipboard","writeText","SIGN_IN","SIGN_OUT","SET_THEME","SET_USER_LIST","UPDATE_USER","SET_USER_FILTER","SET_ORGANISATION_LIST","SELECT_ORGANISATION","UPDATE_ORGANISATION","SET_ORGANISATION_FILTER","RESET_SELECTED_KB","GET_KNOWLEDGE_BASES","SELECT_KNOWLEDGE_BASE","SELECT_EDGE_DEVICE","GET_INVENTORIZE_LIST","GET_INVENTORIZE_BUSY","UPLOADING_PROGRAM","UPLOADING_PROGRAM_FINISHED","UPLOADING_WP_ARCHIVE","UPLOADING_WP_ARCHIVE_FINISHED","GET_CRAWLERS","GET_DOMAINS","GET_DOCUMENTS_PAGINATED","SET_DOCUMENT_FILTER","SET_DOCUMENT_PAGE","SET_DOCUMENT_PAGE_SIZE","RESET_DOCUMENT_PAGINATION","SET_MIND_ITEMS_PAGINATED","SET_MIND_ITEM_PAGE_SIZE","SET_MIND_ITEM_PAGE","RESET_MIND_ITEM_PAGINATION","SET_MIND_ITEM_FILTER","SET_BOT_QUERY_LIST","SET_BOT_QUERY_STRING","SET_SYNONYMS_PAGINATED","SET_SYNONYM_PAGE_SIZE","SET_SYNONYM_PAGE","RESET_SYNONYM_PAGINATION","SET_SYNONYM_FILTER","SET_SEMANTICS_PAGINATED","SET_SEMANTIC_PAGE_SIZE","SET_SEMANTIC_PAGE","RESET_SEMANTIC_PAGINATION","SET_SEMANTIC_FILTER","SET_SEMANTIC_DISPLAY_LIST","SET_SYNSET_FILTER","SET_SYNSET_LIST","SET_SYNSET_PAGE","SET_SYNSET_PAGE_SIZE","RESET_SYNSET_PAGINATION","GET_LICENSE","BUSY","ERROR","CLOSE_ERROR","SELECT_TAB","HIDE_NOTIFICATIONS","SHOW_NOTIFICATIONS","SET_NOTIFICATION_LIST","SET_REPORT_DATE","SET_REPORT_GRAPHS","PROCESS_OPERATOR_MESSAGE","SET_OPERATOR_CONNECTED","ADD_CONVERSATION","MARK_CONVERSATION_USED","OPERATOR_READY","SET_OPERATOR_ANSWER","SET_OPERATOR_QUESTION","OPERATOR_CLEAR_USER","CLEAR_PREVIOUS_ANSWER","ADD_OPERATOR","REMOVE_OPERATOR","STOP_CLIENT_TYPING","GET_HTML5_NOTIFICATIONS","SET_LOG_LIST","SET_LOG_DATE","SET_LOG_HOURS","SET_LOG_TYPE","SET_LOG_SERVICE","SET_LOG_REFRESH","GET_EDGE_DEVICES","GET_EDGE_DEVICE_COMMANDS","mt_ActiveConnections","clear_operator","op","reducer","action","debug","type","title","roles","role","filter","name","organisation","found","org","page","prev_url","page_size","mindItemList","numMindItems","prev_id","synonymList","numSynonyms","semanticList","numSemantics","prev_word","semantic_prev_word","total_size","operatorId","ready","emptyOperator","operator","operator_id","message","messageType","disconnectedByClient","connectionCount","toId","fromIsTyping","getSystemTime","assignedOperatorId","conversationList","count","index","ci","is_simsage","origin","primary","conversationText","created","secondary","used","Notification","permission","options","body","onclick","focus","previousAnswer","clientId","kbName","connected","message_list","status","loggerMiddleware","createLogger","predicate","getState","lightTheme","createMuiTheme","spacing","palette","light","main","dark","darkTheme","overrides","MuiInput","input","color","MuiInputBase","MuiInputLabel","root","MuiSelect","icon","MuiCheckbox","MuiNativeSelect","MuiSlider","markLabel","markLabelActive","createGlobalStyle","GraphHelper","labelList","valueList","datasets","backgroundColor","hoverBackgroundColor","map","description","stat_list","size_list","Set","i","cf","values","key","has","add","label","fill","lineTension","borderColor","pointBackgroundColor","pointBorderColor","pointHoverBackgroundColor","pointHoverBorderColor","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBorderWidth","pointHoverRadius","pointHoverBorderWidth","pointRadius","pointHitRadius","scale","day_map","numGtZero","num_points","values1","values2","listStart","idle","system","responsive","legend","position","hover","mode","scales","xAxes","display","scaleLabel","labelString","yAxes","ticks","beginAtZero","steps","stepValue","main_list","main_set","temp_list","processList","notification_busy","_getOrganisationList","current_org_name","current_org_id","_filter","change_organisation","dispatch","trim","_getKnowledgeBases","_getInventorizeList","_getUsers","_getCrawlers","_getDomains","_getDocuments","documentList","numDocuments","_getMindItems","mind_filter","_getSynonyms","_getSemantics","_getSemanticDisplayCategories","semanticDisplayCategoryList","_getSynSets","totalSize","_getReports","top","report","setupList","accessFrequency","setupMap","generalStatistics","queryWordFrequency","fileTypeStatistics","_getLogList","hours","logList","_getHtmlNotifications","requestPermission","_getEdgeDevices","_getEdgeDeviceCommands","edge_id","_setupPage","appCreators","signIn","password","callback","signOut","setLogRefresh","notBusy","setTheme","passwordResetRequest","resetPassword","getStats","getOSMessages","restoreSystem","getLicense","installLicense","license_str","setError","closeError","selectTab","setupManager","hideNotifications","showNotifications","getNotifications","nl","merge_notifications","notificationList","getOrganisationList","selectOrganisation","setOrganisationFilter","updateOrganisation","deleteOrganisation","http_delete","selectEdgeDevice","selectKnowledgeBase","getKnowledgeBases","optimizeIndexes","reIndex","deleteKnowledgeBase","updateKnowledgeBase","security_id","enabled","max_queries_per_day","analytics_window_size_in_months","operator_enabled","capacity_warnings","index_optimization_schedule","createInventory","getInventoryList","deleteInventoryItem","full_url","getInventoryBusy","forceInventoryBusy","getUsers","updateUser","user_id","surname","role_list","kb_list","signed_in_user","actual_role_data","roleStr","actual_kb_list_data","kb","had_operator_role","has_operator_role","deleteUser","setUserFilter","uploadProgram","wpUploadArchive","sid","securityId","getCrawlers","updateCrawler","crawler","deleteCrawlerDocuments","deleteCrawler","getDomains","updateDomain","domain","testDomain","deleteDomain","domain_id","getDocuments","setDocumentFilter","deleteDocument","btoa","unescape","setDocumentPage","prevPage","setDocumentPageSize","reprocessDocument","document","getMindItems","setMindItemPage","mi_filter","mi_page_size","setMindItemPageSize","setMindItemFilter","deleteMindItem","deleteAllMindItems","saveMindItem","mindItem","query","setBotQueryString","getSynonyms","setSynonymPage","setSynonymPageSize","deleteSynonym","saveSynonym","synonym","setSynonymFilter","getSemantics","setSemanticPage","word","setSemanticPageSize","deleteSemantic","findSemantics","saveSemantic","semantic","setSemanticFilter","getSemanticDisplayCategories","saveSemanticDisplayCategory","prevDisplayName","displayName","deleteSemanticDisplayCategory","deleteSynSet","lemma","findSynSets","saveSynSet","syn_set","setSynSetFilter","setSynSetPage","setSynSetPageSize","setReportDate","getReports","processOperatorMessage","setOperatorConnected","addConversation","markConversationItemUsed","operatorReady","setOperatorAnswer","setOperatorQuestion","clearPreviousAnswer","clearUser","addOperator","removeOperator","stopClientTyping","sendOperatorMessage","getLogs","setLogDate","setLogHours","setLogType","setLogService","restartService","subSystem","getEdgeDevices","deleteEdgeDevice","updateEdgeDevice","updateEdgeDeviceCommand","command","parameters","deleteEdgeDeviceCommand","getHtml5Notifications","restore","base64_text","styles","background","margin","padding","height","fontFamily","fontWeight","borderRadius","logo_box","left","logo","float","width","projectTitle","fontSize","marginLeft","marginTop","homeImageContainer","themeSelect","marginRight","themeSelectLoggedIn","homeImage","signOutImageContainer","paddingTop","signOutImage","bookButton","bookImage","versionText","AppMenu","props","signed_in","showDocumentation","this","getElementById","className","web_base","style","alt","src","getLogo","onClick","goWeb","Grid","container","xs","Switch","checked","onChange","flipTheme","inputProps","version","Component","connect","bindActionCreators","ErrorDialog","open","has_error","info","setState","nextProps","Dialog","ref","aria-labelledby","aria-describedby","fullWidth","maxWidth","onClose","handleOk","DialogTitle","InputLabel","DialogContent","DialogActions","Button","variant","React","center","textAlign","hr","marginBottom","hr_dark","spinner","spinnerInvisible","recaptcha","justifyContent","helpText","zIndex","opacity","backgroundSize","textBox","SignIn","clearState","event","handleClick","CssBaseline","TextField","disabled","autoFocus","placeholder","target","onKeyPress","bind","ResetPasswordRequest","error_msg","self","showError","loggedIn","queryString","require","spacer","ResetPasswordResponse","parsed","search","bottomLink","OpenSourceLicenses","clear","content","link","texcolor","lineHeight","fontColor","LicenseAgreement","close","previewImage","maxHeight","prevFragment","cursor","nextFragment","prevFragmentDisabled","nextFragmentDisabled","author","SingleSearchResult","textIndex","textList","urlId","gridWidth","getPreviewSource","dangerouslySetInnerHTML","__html","highlight","openDocument","replace","searchPage","searchBar","busyBox","searchTextBox","searchText","searchButtonBox","botResponseBubble","urlList","searchResultsBox","border","SimsageSearch","has_searched","search_result_list","shard_list","bot_response","bot_links","doSearch","kbList","semanticSearch","queryText","pageSize","shardSizeList","fragmentCount","maxWordDistance","spellingSuggest","contextLabel","contextMatchBoost","sourceId","result_list","resultList","onError","alert","handleSearchTextKeydown","SearchPage","MessageDialog","cancel","ok","controlWidth","control","downShift","popover","pullDownBox","pullDownImage","AutoComplete","onSelect","onFilter","isOpen","selectedIndex","minTextSize","suggestion_list","next","force","closeControl","exists","selectedItem","selection_list","si","keyCode","select","getItemProps","showAllData","onBlur","spellCheck","onKeyDown","handleKey","getLookupData","Paper","square","paddingBottom","getThemeColour","getThemeBackground","minHeight","overflowX","overflowY","suggestion","renderSuggestion","itemProps","highlightedIndex","isHighlighted","isSelected","MenuItem","selected","component","OrganisationEdit","onSave","disableBackdropClick","disableEscapeKeyDown","handleCancel","Checkbox","handleSave","uploadContainer","minWidth","formWidth","uploadControl","imageButton","restoreImage","busyImage","uploadInput","uploadWheel","RestoreUpload","filename","fileType","e","preventDefault","reader","FileReader","file","files","onloadend","readAsDataURL","doUpload","onSubmit","_handleSubmit","upload","_handleImageChange","pageWidth","tableHeaderStyle","tableLight","tableDark","linkButton","editBox","roleBlock","roleLabel","roleArea","roleChip","addImage","textFieldBox","imageBox","imageSize","dlImageSize","searchBox","boxShadow","floatLeftLabel","floatLeft","searchFloatLeft","findBox","copiedStyle","organisationIdLabel","copyImageSpan","clipboardImage","Organisations","edit_organisation","edit_organisation_id","max_tpm","bot_enabled","analytics_enabled","language_enabled","copied_visible","view_organisation_id","edit_security_id","defined","openDialog","closeDialog","paginated_list","first","last","get_backup_url","get_html_url","org_id","setTimeout","isAdmin","Home","hasRole","save","Table","TableHead","TableRow","TableCell","TableBody","getOrganisations","viewIds","editOrganisation","deleteOrganisationAsk","backup","colSpan","backupAll","addNewOrganisation","TablePagination","rowsPerPageOptions","rowsPerPage","backIconButtonProps","nextIconButtonProps","onChangePage","changePage","onChangeRowsPerPage","changePageSize","view_details","writeToClipboard","startCopiedVisible","disabledLinkButton","dlImageSizeDisabled","UserManager","edit_user","edit_user_id","edit_first_name","edit_surname","edit_email","edit_password","edit_roles","edit_kb_list","formatRoles","available_role","filtered_roles","x","operatorKBList","operatorKB","available_kb","firstName","capitalizeFirstLetter","string","slice","toUpperCase","firstNameSurname","split","newFirst","newSur","new_roles","erole","hasOperatorRole","new_kbs","ekb","kbs","isManager","isVisible","canEdit","canDelete","editUser","deleteUserAsk","addNewUser","numUsers","fillNames","Chip","removeRoleFromUser","getAvailableRoles","addRoleToUser","removeKBFromUser","getAvailableKnowledgeBases","addKBToUser","editCancel","editOk","roles_str","active_colour","inactive_colour","tableStyle","tHeader","tCol","tCell","legenda","activeText","inactiveText","button1","button2","labelTop","time_list","day_list","defaultAllTimesSelected","TimeSelect","time","time_map","setupTimeMap","time_str","cell","tm","dow","gmtTime","toGMTString","timeStr","gs","clearAll","selectAll","defaultIndexSchedule","sidBox","timeTabContent","KnowledgeBases","selectedTab","edit_knowledgebase","edit_knowledgebase_id","knowledgeBase","edit_kb_id","edit_name","edit_enabled","edit_max_queries_per_day","edit_analytics_window_size_in_months","edit_operator_enabled","edit_capacity_warnings","edit_created","edit_index_optimization_schedule","view_ids","maxQueriesPerDay","analyticsWindowInMonths","operatorEnabled","capacityWarnings","indexOptimizationSchedule","knowledge_base","needsIndexOptimization","indexOptimizationTime","unixTimeConvert","t_value","indexOptimizationClass","indexOptimizationText","indexOptimizationStatus","editKnowledgeBase","reIndexAsk","optimizeIndexesAsk","deleteKnowledgeBaseAsk","addNewKnowledgeBase","Tabs","Tab","tab","refreshSecurityId","updateSchedule","EdgeDevices","edit_edge_device","edgeDevice","edit_edge_id","view_ids_edge_device","view_ids_edge_map","edgeId","edge_device","edge_details","details","lastModified","formatSizeUnits","parseInt","get_edge_details","editEdgeDevice","deleteEdgeDeviceAsk","addEdgeDevice","Object","keys","pretty_key","pretty_value","commandItem","resultItem","EdgeDeviceCommands","edit_edge_device_cmd","edit_command","edit_parameters","edc","view_results","results","edgeDeviceCommand","executed","getEdgeDeviceCommands","getExecutedStatus","editEdgeDeviceCommand","deleteEdgeDeviceCommandAsk","viewResult","addEdgeDeviceCommand","snapshotItem","refreshImage","addImageDisabled","downloadImage","tableWidth","Inventory","date_time","program","innerHTML","get_inventorize_dump_url","get_inventorize_dump_spreadhseet_url","deleteReport","get_mind_dump_url","get_query_log_url","message_title","message_callback","timeList","inventorizeDump","inventorizeDumpSpreadsheet","deleteInventorizeAsk","marks","markText","customWidth","textField","formContent","exportButton","CrawlerGeneral","nodeId","maxItems","maxBotItems","filesPerSecond","crawlerType","deleteFiles","allowAnonymous","enablePreview","processingLevel","customRender","edgeDeviceId","qaMatchStrength","numFragments","construct_data","canHaveEdgeDevice","testCrawler","Select","disableUnderline","change_callback","Slider","defaultValue","processingLevelToMark","valueLabelFormat","getAriaValueText","newValue","setProcessingLevelFromMark","step","valueLabelDisplay","filteredEdgeDevices","CrawlerFile","username","server","fqdn","shareName","sharePath","specific_json","CrawlerWeb","baseUrlList","webCss","webCssIgnore","validExtensions","validExtensionsIgnore","articleIncludeWordsCsv","articleExcludeWordsCsv","multiline","rows","type_list","fieldWidth","dbType","CrawlerDatabase","jdbc","pk","template","content_url","metadata_list","instructionLabel","table","borderSpacing","tableHead","db_field","verticalAlign","displayFieldWidth","tdDisplayFieldWidth","tdSort","sortLabel","tdSort2","metadata_dropdown_box","mdDropbox","metadata_field","sort_field","action_field","metadata_dropdown","deleteBox","upDownArrow","deleteImage","dbFieldWidth","tdMetadataFieldName","mdFieldWidth","tdAction","CrawlerMetadataMapper","specificJson","md_list","get_md_list","record","db1","db2","match_item","field1","sort","field_name","direction","sort_default","i_index","old_md_list","stopPropagation","md","temp","num_rows","set_md_type","j","set_db","set_db_extra","setDisplayName","needs_metadata_field","checkMetadataName","setUserMetadataName1","sort_desc","setValue","sort_asc","setSort","setDefaultSort","deleteMetadataItem","move_row_up","move_row_down","addNewMetadataMapping","dlText","manualBox","manualImage","CrawlerOffice365","tenantId","clientSecret","redirectUrl","crawlOneDrive","crawlAllOfOneDrive","oneDriveUsersToCrawl","crawlSharePoint","crawlRootSite","sharePointSitesToCrawl","crawlExchange","crawlAllOfExchange","exchangeUsersToCrawl","CrawlerDropbox","clientToken","folderList","c_data","RestoreWPArchive","exportWP","importWP","importText","restoreWP","CrawlerWordpress","get_export_archive_url","exportArchive","CrawlerGDrive","gdrive_projectId","gdrive_clientId","gdrive_clientSecret","gdrive_clientName","gdrive_clientPort","CrawlerNFS","nfs_local_folder","nfs_userList","selectedUsers","availableUserList","removeUser","join","getSelectedUsers","getAvailableUsers","addUser","CrawlerRestFull","CrawlerMetadata","existing_md_list","tab_dark","CrawlerDialog","onUpdate","schedule","is_db","metadata_name_map","sort_counter","empty_sort_field_counter","default_sort_counter","db_name","db_name2","ch","charAt","sj","String","validFQDN","isValidMetadata","isNaN","c_type","tabStyle","update_general_data","update_specific_json","CrawlerImportExport","export_upload","empty_crawler","knowledgeSelect","lhs","rhs","linkButtonDisabled","download","downloadType","labelHeader","DocumentSources","export_open","selected_crawler","crawler_ask","confirmDocumentsDelete","crawler_str","saveCrawler","saveExport","isCrawling","numCrawledDocuments","numIndexedDocuments","editCrawler","deleteDocuments","deleteCrawlerAsk","exportCrawler","addNewCrawler","importCrawler","tableColumnStyle","urlLabel","statusImage","manualUploadSection","Documents","crawler_map","stage","crawled","converted","indexed","previewed","getActive","staging","isWeb","rel","adjustUrl","getStatus","getStatusText","deleteDocumentAsk","toLowerCase","half","maxUrlDisplayLength","image_types","MindEdit","expression","question1","question2","getAnswerText","links","getLinks","mi","actionList","createActions","links_text","actions","commands","parts","l","l_lwr","is_image","extn","param","uploadButton","ProgramUpload","file_type","binary_data","base64Text","smallTableHeaderStyle","actionTableHeaderStyle","searchTableHeaderStyle","queryMindLabel","uploader","export","Mind","mind_item","mind_edit","preContext","postContext","metadata","getMindItemList","toAnswer","editMindItem","deleteMindItemAsk","onUploadDone","programUploaded","mindDump","newMindItem","deleteAllMindItemsAsk","searchResult","searchMessage","searchFooter","searchInsideNav","insideNavButtonStyle","webkitUserSelect","mozUserSelect","msUserSelect","userSelect","insideNavButtonStyleDisabled","tinmanContainer","tinmanLeft","tinmanScore","tinmanText","tinmanImageSize","imageHolder","urlBox","urlStyle","graph_size","BotSingleSearchResult","score","imageList","image","x_name","y_name","queryResultList","sayList","graphList","text_list","context","forEach","MindSearchComponent","botQueryString","hasSearched","doClickSearch","copy","updateResults","session_id","window_url","toUrl","getResultList","MindTest","SynonymEdit","words","syn","Synonyms","synonym_edit","getSynonymList","editSynonym","deleteSynonymAsk","newSynonym","labelAdjustment","SemanticEdit","semantic_str","Semantics","prev_semantic","semantic_edit","prevWord","getSemanticList","editSemantic","deleteSemanticAsk","newSemantic","textFieldStyle","deleteButton","deleteImageSize","SynSetEdit","synSet","cloud_list","getWordCloudList","wordCloudCsvList","cl","newList","updateWC","deleteSyn","newSyn","SynSets","synSet_edit","validList","handleSynSetFilterKeydown","editSynSet","deleteSynSetAsk","newSynSet","logFiles","whiteSpace","resize","logLine","dateSelect","Logs","timer_value","messagesEndRef","createRef","timer","clearTimeout","prevPops","prevState","snapshot","scrollToBottom","current","scrollIntoView","behavior","service","dateFormat","timeFormat","showTimeSelect","timeIntervals","todayButton","getHourTitle","getSelectedHourStyle","getSelectedLogStyle","getLogRefreshStyle","getSelectedServiceStyle","line","getClassForType","graphHeight","graphWidth","barGraphs","barGraph","downloadButton","Reports","month1","downloadReport","showMonthYearPicker","stats","getGraphOptions","OperatorTeach","questionStyle","answerStyle","OperatorPreviousAnswer","topButton","conversations","avatarBackground","simSageIcon","simSageIconSelected","personIcon","personIconSelected","typingDots","Operator","operator_reply","last_time","setInterval","checkClientTyping","prevProps","sessionId","userId","curr_time","fromId","isTyping","banUser","act","teach","use","operatorReply","add_text","isOperator","active","isReady","has_user","operatorButtonStyle","teachSimSage","usePreviousQuestion","readyForChat","takeBreak","banUserConfirm","nextUser","selectForLearn","getAvatarStyle","add_button","add_button_size","max_text","right","bot_image","bot_text","OperatorTabs","AddBox","isFirst","onCloseTab","domainPage","testButton","edgeText","DomainDialog","onTest","domainId","domainName","userName","serverIp","basePath","portNumber","sslOn","gather_data","testConnection","empty_domain","Domains","selected_domain","domain_ask","saveDomain","numObjects","editDomain","deleteDomainAsk","addNewDomain","pageNav","pageContent","selectedNavItem","navItem","navItemDark","navItemDisabled","navItemDisabledDark","organisationSelect","organisationLabel","divider","notificationParent","bottom","notifications","notificationsHidden","displayAll","hideAllImage","showAllImage","infoDate","infoType","infoText","busyDark","isAdminOrManager","hasRoleInOrganisation","timeout","refreshOperator","operatorList","len","reverse","filter_text","ft_lower","filtered_list","filtered_text","dialog_open","operator_id_list","ws_base","topics","client","clientRef","onMessage","msg","onConnect","onDisconnect","connectionError","getStyle","getOrganisationListFiltered","getKnowledgeBaseListFiltered","getEdgeDeviceList","notification","pad","minute","role_name_list","signedInUser","store","reducers","AppReducer","middleware","thunk","enhancers","rootReducer","combineReducers","routing","routerReducer","createStore","compose","applyMiddleware","configureStore","subscribe","ReactDOM","render","basename","exact","path"],"mappings":"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","file":"static/js/main.f8d64375.chunk.js","sourcesContent":["import Api from '../common/api'\n\n//\n// this defines the initial state of the entire application - the state store\n//\nexport function initializeState() {\n    return {\n        // which tab is selected in the app\n        selected_tab: 'organisations',\n\n        // notification system\n        notification_list: [],\n        show_notifications: false,\n        operator_wait_timeout_in_ms: 10000,\n        notification_list_display_size: 50,\n\n        // organisational data\n        selected_organisation_id: \"\",\n        selected_organisation: \"\",\n        organisation_filter: \"\",\n        organisation_list: [],\n\n        // kb status\n        selected_knowledgebase: null,\n        selected_knowledgebase_id: \"\",\n        knowledge_base_list: [],\n\n        // edge devices\n        edge_device_list: [],\n        selected_edge_device: null,\n        selected_edge_device_id: \"\",\n        edge_device_command_list: [],\n\n        // inventory items for a given kb\n        inventorize_list: [],\n        inventorize_busy: false,\n\n        // the users\n        user_list: [],\n        user_filter: '',\n\n        // crawlers\n        crawler_list: [],\n        theme: window.ENV.theme,\n\n        // system busy\n        busy: false,\n\n        // program busy uploading\n        uploading: false,\n\n        // session and user objects\n        session: null,\n        user: null,\n\n        // system license\n        license: null,\n\n        // documents\n        document_list: [],\n        document_previous: null,\n        document_filter: '',\n        prev_document_filter: '',   // see what the last filter was (reset pagination if changed)\n        document_page: 0,\n        document_page_size: 5,\n        num_documents: 0,\n        // nav-list with page 0 id\n        document_nav_list: [\"null\"],\n\n        // mind items\n        mind_item_list: [],\n        mind_item_previous: null,\n        mind_item_filter: '',\n        mind_item_page: 0,\n        mind_item_page_size: 5,\n        num_mind_items: 0,\n        prev_mind_item_filter: '',\n        mind_item_nav_list: [\"null\"],\n\n        // mind query (aka. bot query)\n        bot_query: \"\",\n        bot_query_result_list: [],\n        bot_query_page_size: 10,\n        bot_query_threshold: 0.01,\n\n        // synonyms\n        synonym_list: [],\n        synonym_prev_id: null,\n        synonym_filter: \"\",\n        synonym_page: 0,\n        synonym_page_size: 5,\n        num_synonyms: 0,\n        prev_synonym_filter: '',\n        synonym_nav_list: [\"null\"],\n\n        // semantics\n        semantic_list: [],\n        semantic_prev_id: null,\n        semantic_filter: \"\",\n        semantic_page: 0,\n        semantic_page_size: 5,\n        num_semantics: 0,\n        prev_semantic_filter: '',\n        semantic_nav_list: [\"null\"],\n\n        // syn-sets\n        synset_filter: \"\",\n        synset_list: [],\n        synset_page: 0,\n        synset_page_size: 10,\n        synset_total_size: 0,\n\n        // reports\n        report_date: Api.toIsoDate(new Date().getUTCDate()),\n        report_num_items: 20,\n        access_frequency: {labels: []},\n        general_statistics: [],\n        query_word_frequency: [],\n        file_type_statistics: [],\n\n        // operator\n        operators: [Api.createOperator()],\n        num_active_connections: 0,\n        operator_connected: false,\n\n        // html5 notification permissions asked already?\n        html5_notifications: '',\n\n        // system logs\n        log_list: [],\n        log_date: Api.toIsoDateTime(new Date()),\n        log_hours: 2,\n        log_type: 'All',\n        log_service: 'All',\n        log_refresh: 0,\n\n        // ad domain manager\n        domain_list: [],\n\n        // semantic display categories for org:kb\n        semantic_display_category_list: [],\n        // list of semantics that are existing / defined for org:kb\n        defined_semantic_list: [],\n\n        // application error messages\n        error_title: \"Error\",\n        error: \"\",\n    }\n}\n\n\nexport function loadState() {\n    try {\n        let serializedState = localStorage.getItem(\"https://simsage.ai/state\");\n        if (serializedState === null || window.location.href.endsWith(\"/#/\")) {\n            return {\"appReducer\": initializeState()};\n        }\n        return JSON.parse(serializedState);\n    } catch (err) {\n        return {\"appReducer\": initializeState()};\n    }\n}\n\n\nexport function saveState(state) {\n    try {\n        let serializedState = JSON.stringify(state);\n        localStorage.setItem(\"https://simsage.ai/state\", serializedState);\n    } catch (err) {\n    }\n}\n\n\nexport function clearState() {\n    try {\n        saveState(initializeState());\n    } catch (err) {\n    }\n}\n\n","import axios from \"axios/index\";\n\nimport {loadState} from '../reducers/stateLoader'\n\n\n// communications common to all components\nexport class Comms {\n\n    static http_post(url, payload, fn_success, fn_fail) {\n        const api_base = window.ENV.api_base;\n        console.log('POST ' + api_base + url);\n        axios.post(api_base + url, payload, Comms.getHeaders())\n            .then(function (response) {\n                if (fn_success) {\n                    fn_success(response);\n                }\n            })\n            .catch(function (error) {\n                if (fn_fail) {\n                    if (error.response === undefined) {\n                        fn_fail('Servers not responding or cannot contact Servers');\n                    } else {\n                        fn_fail(Comms.get_error(error));\n                    }\n                }\n            });\n    };\n\n    static http_put(url, payload, fn_success, fn_fail) {\n        const api_base = window.ENV.api_base;\n        console.log('PUT ' + api_base + url);\n        axios.put(api_base + url, payload, Comms.getHeaders())\n            .then(function (result) {\n                if (fn_success) {\n                    fn_success(result);\n                }\n            })\n            .catch(function (error) {\n                if (fn_fail) {\n                    if (error.response === undefined) {\n                        fn_fail('Servers not responding or cannot contact Servers');\n                    } else {\n                        fn_fail(Comms.get_error(error));\n                    }\n                }\n            });\n    };\n\n    static http_get(url, fn_success, fn_fail) {\n        const api_base = window.ENV.api_base;\n        if (url !== '/stats/stats/os') {\n            console.log('GET ' + api_base + url);\n        }\n        return axios.get(api_base + url, Comms.getHeaders())\n            .then(function (response) {\n                if (fn_success) {\n                    fn_success(response);\n                }\n            })\n            .catch((error) => {\n                if (fn_fail) {\n                    if (error.response === undefined) {\n                        fn_fail('Servers not responding or cannot contact Servers');\n                    } else {\n                        fn_fail(Comms.get_error(error));\n                    }\n                }\n            });\n    };\n\n    static http_delete(url, fn_success, fn_fail) {\n        const api_base = window.ENV.api_base;\n        console.log('DELETE ' + api_base + url);\n        axios.delete(api_base + url, Comms.getHeaders())\n            .then(function (response) {\n                if (fn_success) {\n                    fn_success(response);\n                }\n            })\n            .catch(function (error) {\n                if (fn_fail) {\n                    if (error === undefined || error.response === undefined) {\n                        fn_fail('Servers not responding or cannot contact Servers');\n                    } else {\n                        fn_fail(Comms.get_error(error));\n                    }\n                }\n            });\n    };\n\n    // get a url that can be used to backup the system, regime e {all (backup all orgs), specific (backup specified org)}\n    static get_backup_url(organisation_id, regime) {\n        let session = Comms.getSession();\n        return window.ENV.api_base + '/backup/backup/' + encodeURIComponent(session.id) + '/' +\n                encodeURIComponent(organisation_id) + '/' + encodeURIComponent(regime);\n    };\n\n    // get a url that can be used to backup the system\n    static get_mind_dump_url(organisation_id, kb_id) {\n        let session = Comms.getSession();\n        return window.ENV.api_base + '/backup/mind-dump/' + encodeURIComponent(session.id) + '/' +\n            encodeURIComponent(organisation_id) + '/' + encodeURIComponent(kb_id);\n    };\n\n    // get a url that can be used to summarize the system\n    static get_inventorize_dump_url(organisation_id, kb_id, dateTime) {\n        let session = Comms.getSession();\n        return window.ENV.api_base + '/document/parquet/' + encodeURIComponent(session.id) + '/' +\n            encodeURIComponent(organisation_id) + '/' + encodeURIComponent(kb_id) + '/' +\n            encodeURIComponent(dateTime);\n    };\n\n    // get a url that can be used to summarize the system using a spreadsheet\n    static get_inventorize_dump_spreadhseet_url(organisation_id, kb_id, dateTime) {\n        let session = Comms.getSession();\n        return window.ENV.api_base + '/document/spreadsheet/' + encodeURIComponent(session.id) + '/' +\n            encodeURIComponent(organisation_id) + '/' + encodeURIComponent(kb_id) + '/' +\n            encodeURIComponent(dateTime);\n    };\n\n    // get a url that can be used to download a crawler\n    static get_crawler_url(organisation_id, kb_id, crawler_id) {\n        let session = Comms.getSession();\n        return window.ENV.api_base + '/crawler/download/' + encodeURIComponent(session.id) + '/' +\n            encodeURIComponent(organisation_id) + '/' + encodeURIComponent(kb_id) + '/' + encodeURIComponent(crawler_id);\n    };\n\n    // get a url that can be used to download the bot html\n    static get_html_url(html, organisation_id) {\n        let session = Comms.getSession();\n        return window.ENV.api_base + '/knowledgebase/download/' + html + '/' + encodeURIComponent(session.id) + '/' +\n                            encodeURIComponent(organisation_id);\n    };\n\n    // get a url that can be used to get the query-logs\n    static get_query_log_url(organisation_id, kb_id, year, month) {\n        let session = Comms.getSession();\n        return window.ENV.api_base + '/stats/query-logs/' + encodeURIComponent(session.id) + '/' +\n            encodeURIComponent(organisation_id) + '/' + encodeURIComponent(kb_id) + '/' +\n            encodeURIComponent(year) + '/' + encodeURIComponent(month);\n    };\n\n    // get a url that can be used to get a zip archive of a wp export\n    static get_export_archive_url(organisation_id, kb_id, source_id) {\n        let session = Comms.getSession();\n        return window.ENV.api_base + '/crawler/wp-archive/download/' + encodeURIComponent(session.id) + '/' +\n            encodeURIComponent(organisation_id) + '/' + encodeURIComponent(kb_id) + '/' + encodeURIComponent(source_id);\n    };\n\n    static toUrl(str) {\n        return window.ENV.api_base + str;\n    }\n\n    // convert js response to its error output equivalent\n    static get_error(error) {\n        if (typeof error === \"string\" && error.indexOf(\"{\") === 0) {\n            const obj = JSON.parse(error);\n            if (obj && obj[\"response\"] && obj[\"response\"][\"data\"] && obj[\"response\"][\"data\"][\"error\"]) {\n                return obj[\"response\"][\"data\"][\"error\"];\n            } else {\n                return error;\n            }\n        } else {\n            if (error && error[\"response\"] && error[\"response\"][\"data\"] && error[\"response\"][\"data\"][\"error\"]) {\n                return error[\"response\"][\"data\"][\"error\"];\n            } else {\n                return error;\n            }\n        }\n    }\n\n    // get a pretty formatted ISO date string (date only)\n    static getISODate() {\n        const a = new Date();\n        const year = a.getFullYear();\n        const month = a.getMonth() + 1;\n        const date = a.getDate();\n        return year + '-' + month + '-' + date;\n    };\n\n    static getSession() {\n        const state = loadState();\n        if (state && state.appReducer && state.appReducer.session && state.appReducer.session.id) {\n            return state.appReducer.session;\n        }\n        return null;\n    }\n\n    static getHeaders() {\n        let session = Comms.getSession();\n        if (session && session.id) {\n            return {\n                headers: {\n                    \"API-Version\": window.ENV.api_version,\n                    \"Content-Type\": \"application/json\",\n                    \"Session-Id\": session.id,\n                }\n            }\n        }\n        return {\n            headers: {\n                \"API-Version\": window.ENV.api_version,\n                \"Content-Type\": \"application/json\"\n            }\n        };\n    }\n\n}\n\nexport default Comms;\n","import {Comms} from \"../common/comms\";\n\n// api wrappers\nexport class Api {\n\n    static defined(value) {\n        return (value !== null && value !== undefined);\n    }\n\n    // generate a guid\n    static createGuid() {\n        function s4() {\n            return Math.floor((1 + Math.random()) * 0x10000)\n                .toString(16)\n                .substring(1);\n        }\n        return s4() + s4() + '-' + s4() + '-' + s4() + '-' + s4() + '-' + s4() + s4() + s4();\n    };\n\n    // create an empty operator packet\n    static createOperator() {\n        return {id: Api.createGuid(),\n            conversation_list: [], operator_ready: false,\n            question_id: '', question: '', answer_id: '', answer: '',\n            // operator connected clients\n            client_id: '', client_kb_id: '', client_kb_name: '', is_typing: false, typing_time: 0,\n            // operator previous answer\n            current_question: '', prev_answer: '',\n        }\n    };\n\n    static formatSizeUnits(bytes) {\n        if      (bytes >= 1073741824) { bytes = (bytes / 1073741824).toFixed(2) + \" GB\"; }\n        else if (bytes >= 1048576)    { bytes = (bytes / 1048576).toFixed(2) + \" MB\"; }\n        else if (bytes >= 1024)       { bytes = (bytes / 1024).toFixed(2) + \" KB\"; }\n        else if (bytes > 1)           { bytes = bytes + \" bytes\"; }\n        else if (bytes === 1)          { bytes = bytes + \" byte\"; }\n        else                          { bytes = \"0 bytes\"; }\n        return bytes;\n    };\n\n    // convert unix timestamp to string if it's for a reasonable time in the future\n    static unixTimeConvert(timestamp){\n        if (timestamp > 1000) {\n            const a = new Date(timestamp);\n            const year = a.getUTCFullYear();\n            const month = a.getUTCMonth() + 1;\n            const date = a.getUTCDate();\n            const hour = a.getUTCHours();\n            const min = a.getUTCMinutes();\n            const sec = a.getUTCSeconds();\n            return year + '/' + Api.pad2(month) + '/' + Api.pad2(date) + ' ' + Api.pad2(hour) + ':' + Api.pad2(min) + ':' + Api.pad2(sec);\n        }\n        return \"\";\n    }\n\n    // get current time in milli-seconds\n    static getSystemTime() {\n        return new Date().getTime();\n    }\n\n    // convert a date object to an iso date string\n    static toIsoDate(date) {\n        if (!date || !date.getFullYear) {\n            date = new Date()\n        }\n        const year = date.getFullYear();\n        const month = date.getMonth() + 1;\n        const day = date.getDate();\n        return year + '-' + Api.pad2(month) + '-' + Api.pad2(day) + 'T00:00:00.000';\n    }\n\n    // convert a date object to an iso date string\n    static toIsoDateTime(date) {\n        if (!date || !date.getFullYear) {\n            date = new Date()\n        }\n        const year = date.getFullYear();\n        const month = date.getMonth() + 1;\n        const day = date.getDate();\n        let offset_hours = 0; // date.getTimezoneOffset() / 60;\n        let hour = date.getHours() + offset_hours;\n        if (hour < 0) hour += 24;\n        if (hour >= 24) hour -= 24;\n        return year + '-' + Api.pad2(month) + '-' + Api.pad2(day) + 'T' + Api.pad2(hour) + ':00:00.000';\n    }\n\n    static pad2(item) {\n        return (\"\" + item).padStart(2, '0');\n    }\n\n    // setup the timer\n    static setupTimer() {\n        return true;\n    }\n\n    // merge two notifications lists together and return the resulting unique list of items\n    static merge_notifications(original, list) {\n        const seen = {};\n        const new_list = [];\n        if (original) {\n            for (const item of original) {\n                seen[item.id] = true;\n                new_list.push(item);\n            }\n        }\n        if (list) {\n            for (const item of list) {\n                if (!seen.hasOwnProperty(item.id)) {\n                    seen[item.id] = true;\n                    new_list.push(item);\n                }\n            }\n        }\n        return new_list;\n    }\n\n    // get color component (fg) of the global theme\n    static getThemeColour(theme) {\n        if (theme === 'light')\n            return \"#2a2a2e\";\n        else\n            return \"#e0e0e0\";\n    }\n\n    // get background component (bg) of the global theme\n    static getThemeBackground(theme) {\n        if (theme === 'light')\n            return \"#ffffff\";\n        else\n            return \"#2a2a2e\";\n    }\n\n    // start a password reset request\n    static passwordResetRequest(email, success, fail) {\n        if (email && email.length > 0) {\n            Comms.http_post('/auth/reset-password-request', {\"email\": email},\n                (response) => { success(response.data.session, response.data.user) },\n                (errStr) => { fail(errStr) }\n            )\n        }\n        else{\n            fail('you must provide your SimSage email address');\n        }\n    };\n\n    // reset a password (do it)\n    static resetPassword(email, newPassword, reset_id, success, fail) {\n        if (email && email.length > 0 && newPassword.length > 0) {\n            const payload = {\"email\": email, \"password\": newPassword, \"resetId\": reset_id};\n            Comms.http_post('/auth/reset-password', payload,\n                (response) => { success(response.data.session, response.data.user) },\n                (errStr) => { fail(errStr) }\n            )\n        }\n        else{\n            fail('please complete and check all fields');\n        }\n    };\n\n    // get the user object (or null if dne)\n    static getUser() {\n        var user = localStorage.getItem(\"user\");\n        if (user && user.startsWith(\"{\")) {\n            return JSON.parse(user);\n        }\n        return null;\n    }\n\n    // upload data to the system\n    static uploadDocument(payload, success, fail) {\n        Comms.http_put('/document/upload', payload,\n            (response) => { success(response.data) },\n            (errStr) => { fail(errStr) }\n        )\n    };\n\n    // test a specific crawler's connectivity\n    static testCrawler(organisationId, kb_id, id, success, fail) {\n        Comms.http_get('/crawler/crawler/test/' + encodeURIComponent(organisationId) + '/' +\n            encodeURIComponent(kb_id) + '/' + encodeURIComponent(id),\n            (response) => {\n                if (response.data && response.data.errorStr && response.data.errorStr.length > 0) {\n                    fail(response.data.errorStr);\n                } else {\n                    success(response.data)\n                }\n            },\n            (errStr) => { fail(errStr) }\n        )\n    }\n\n\n    // perform a semantic search\n    static semanticSearch(organisationId, kb_id, keywords, num_results=10, score_threshold=0.1, success, fail) {\n        Comms.http_put('/semantic/search', {\n                organisationId: organisationId,\n                kbId: kb_id,\n                botQuery: keywords,         // raw text\n                superSearch: keywords,      // super search markup\n                numResults: num_results,\n                scoreThreshold: score_threshold,\n            },\n            (response) => { success(response.data) },\n            (errStr) => { fail(errStr) }\n        )\n    }\n\n    // write text to the clipboard, if we can\n    static writeToClipboard(text) {\n        if (navigator && navigator.clipboard && navigator.clipboard.writeText) {\n            navigator.clipboard.writeText(text);\n            return true;\n        }\n        return false;\n    }\n\n\n}\n\nexport default Api;\n","\nexport const SIGN_IN = \"sign in\";\nexport const SIGN_OUT = \"sign out\";\n\nexport const SET_THEME = \"set theme\";\n\nexport const PASSWORD_RESET_REQUEST = \"password reset request\";\nexport const RESET_PASSWORD = \"reset password\";\n\nexport const SET_USER_LIST = \"set user list\";\nexport const UPDATE_USER = \"update user\";\nexport const SET_USER_FILTER = \"set user filter\";\n\nexport const SET_ORGANISATION_LIST = \"get organisation list\";\nexport const SELECT_ORGANISATION = \"select organisation\";\nexport const UPDATE_ORGANISATION = \"update organisation\";\nexport const SET_ORGANISATION_FILTER = \"set organisation filter\";\nexport const RESET_SELECTED_KB = \"reset selected kb\";\n\nexport const GET_KNOWLEDGE_BASES = \"get knowledge bases\";\nexport const SELECT_KNOWLEDGE_BASE = \"selected knowledge base\";\nexport const SELECT_EDGE_DEVICE = \"select edge device\";\nexport const GET_INVENTORIZE_LIST = \"get inventorize list\";\nexport const GET_INVENTORIZE_BUSY = \"get inventorize busy\";\n\nexport const UPLOADING_PROGRAM = \"uploading program\";\nexport const UPLOADING_PROGRAM_FINISHED = \"uploading program finished\";\n\nexport const UPLOADING_WP_ARCHIVE = \"uploading wp archive\";\nexport const UPLOADING_WP_ARCHIVE_FINISHED = \"uploading wp archive finished\";\n\nexport const GET_CRAWLERS = \"get crawlers\";\nexport const GET_DOMAINS = \"get domains\";\n\nexport const GET_DOCUMENTS_PAGINATED = \"get documents paginated\";\nexport const SET_DOCUMENT_FILTER = \"set document filter\";\nexport const SET_DOCUMENT_PAGE = \"set document page\";\nexport const SET_DOCUMENT_PAGE_SIZE = \"set document page size\";\nexport const UPLOAD_DOCUMENT = \"upload document\";\nexport const RESET_DOCUMENT_PAGINATION = \"reset document pagination\";\n\nexport const GET_STATS = \"get stats\";\nexport const GET_OS_MESSAGES = \"get os messages\";\n\nexport const MIND_FIND = \"mind find\";\nexport const SET_MIND_ITEMS_PAGINATED = \"set mind items paginated\";\nexport const SET_MIND_ITEM_PAGE_SIZE = \"set mind item page size\";\nexport const SET_MIND_ITEM_PAGE = \"set mind item page\";\nexport const RESET_MIND_ITEM_PAGINATION = \"reset mind item pagination\";\nexport const SET_MIND_ITEM_FILTER = \"set mind item filter\";\nexport const SET_BOT_QUERY_LIST = \"set bot query list\";\nexport const SET_BOT_QUERY_STRING = \"set bot query string\";\n\nexport const SEMANTIC_SEARCH = \"semantic search\";\n\nexport const SET_SYNONYMS_PAGINATED = \"set synonyms paginated\";\nexport const SET_SYNONYM_PAGE_SIZE = \"set synonym page size\";\nexport const SET_SYNONYM_PAGE = \"set synonym page\";\nexport const RESET_SYNONYM_PAGINATION = \"reset synonym pagination\";\nexport const SET_SYNONYM_FILTER = \"set synonym filter\";\n\nexport const SET_SEMANTICS_PAGINATED = \"set semantics paginated\";\nexport const SET_SEMANTIC_PAGE_SIZE = \"set semantic page size\";\nexport const SET_SEMANTIC_PAGE = \"set semantic page\";\nexport const RESET_SEMANTIC_PAGINATION = \"reset semantic pagination\";\nexport const SET_SEMANTIC_FILTER = \"set semantic filter\";\n\nexport const SET_SEMANTIC_DISPLAY_LIST = \"set semantic display list\";\n\nexport const SET_SYNSET_FILTER = \"set synset filter\";\nexport const SET_SYNSET_LIST = \"set synset list\";\nexport const SET_SYNSET_PAGE = \"set synset page\";\nexport const SET_SYNSET_PAGE_SIZE = \"set synset page size\";\nexport const RESET_SYNSET_PAGINATION = \"reset synset pagination\";\n\nexport const RESTORE_SYSTEM = \"restore system\";\n\nexport const GET_LICENSE = \"get license\";\nexport const INSTALL_LICENCE = \"install license\";\n\nexport const BUSY = \"busy\";\nexport const ERROR = \"error\";\nexport const CLOSE_ERROR = \"close error\";\nexport const SELECT_TAB = \"select tab\";\n\nexport const HIDE_NOTIFICATIONS = \"hide notifications\";\nexport const SHOW_NOTIFICATIONS = \"show notifications\";\nexport const SET_NOTIFICATION_LIST = \"set notification list\";\n\nexport const SET_REPORT_DATE = \"set report date\";\nexport const SET_REPORT_GRAPHS = \"set report graphs\";\n\nexport const PROCESS_OPERATOR_MESSAGE = \"process operator message\";\nexport const SET_OPERATOR_CONNECTED = \"set operator connected\";\nexport const ADD_CONVERSATION = \"add conversation\";\nexport const MARK_CONVERSATION_USED = \"mark conversation used\";\nexport const OPERATOR_READY = \"operator ready\";\nexport const SET_OPERATOR_ANSWER = \"set operator answer\";\nexport const SET_OPERATOR_QUESTION = \"set operator question\";\nexport const OPERATOR_CLEAR_USER = \"operator clear user\";\nexport const CLEAR_PREVIOUS_ANSWER = \"clear previous answer\";\nexport const ADD_OPERATOR = \"add operator\";\nexport const REMOVE_OPERATOR = \"remove operator\";\nexport const STOP_CLIENT_TYPING = \"stop client typing\";\nexport const MAX_OPERATORS = 5;\n\nexport const GET_HTML5_NOTIFICATIONS = \"get html5 notifications\";\n\nexport const SET_LOG_LIST = \"set log list\";\nexport const SET_LOG_DATE = \"set log date\";\nexport const SET_LOG_HOURS = \"set log hours\";\nexport const SET_LOG_TYPE = \"set log type\";\nexport const SET_LOG_SERVICE = \"set log service\";\nexport const SET_LOG_REFRESH = \"set log refresh\";\n\n// edge\nexport const GET_EDGE_DEVICES = \"get edge devices\";\nexport const GET_EDGE_DEVICE_COMMANDS = \"get edge device commands\";\n","import Api from '../common/api'\n\nimport {\n    ADD_CONVERSATION,\n    BUSY,\n    SET_THEME,\n    RESET_SELECTED_KB,\n    CLEAR_PREVIOUS_ANSWER,\n    CLOSE_ERROR,\n    ERROR,\n    GET_CRAWLERS,\n    GET_DOMAINS,\n    GET_DOCUMENTS_PAGINATED,\n    GET_HTML5_NOTIFICATIONS,\n    GET_KNOWLEDGE_BASES,\n    GET_INVENTORIZE_LIST,\n    GET_INVENTORIZE_BUSY,\n    GET_LICENSE,\n    SET_ORGANISATION_LIST,\n    SET_ORGANISATION_FILTER,\n    SET_USER_LIST,\n    SET_USER_FILTER,\n    HIDE_NOTIFICATIONS,\n    MARK_CONVERSATION_USED,\n    MIND_FIND,\n    SET_MIND_ITEMS_PAGINATED,\n    SET_MIND_ITEM_PAGE_SIZE,\n    SET_MIND_ITEM_PAGE,\n    RESET_MIND_ITEM_PAGINATION,\n    OPERATOR_CLEAR_USER,\n    OPERATOR_READY,\n    ADD_OPERATOR,\n    REMOVE_OPERATOR,\n    PROCESS_OPERATOR_MESSAGE,\n    RESET_DOCUMENT_PAGINATION,\n    SELECT_KNOWLEDGE_BASE,\n    SELECT_EDGE_DEVICE,\n    SELECT_ORGANISATION,\n    UPDATE_ORGANISATION,\n    SELECT_TAB,\n    SET_BOT_QUERY_LIST,\n    SET_BOT_QUERY_STRING,\n    SET_DOCUMENT_FILTER,\n    SET_DOCUMENT_PAGE,\n    SET_DOCUMENT_PAGE_SIZE,\n    SET_MIND_ITEM_FILTER,\n    SET_NOTIFICATION_LIST,\n    SET_OPERATOR_ANSWER,\n    SET_OPERATOR_CONNECTED,\n    SET_OPERATOR_QUESTION,\n    STOP_CLIENT_TYPING,\n    SET_REPORT_DATE,\n    SET_REPORT_GRAPHS,\n\n    SET_SEMANTIC_FILTER,\n    SET_SEMANTICS_PAGINATED,\n    RESET_SEMANTIC_PAGINATION,\n    SET_SEMANTIC_PAGE_SIZE,\n    SET_SEMANTIC_PAGE,\n\n    SET_SEMANTIC_DISPLAY_LIST,\n\n    SET_SYNONYM_FILTER,\n    SET_SYNONYMS_PAGINATED,\n    RESET_SYNONYM_PAGINATION,\n    SET_SYNONYM_PAGE_SIZE,\n    SET_SYNONYM_PAGE,\n\n    SET_SYNSET_FILTER,\n    SET_SYNSET_LIST,\n    SET_SYNSET_PAGE,\n    SET_SYNSET_PAGE_SIZE,\n    RESET_SYNSET_PAGINATION,\n    SHOW_NOTIFICATIONS,\n    SIGN_IN,\n    SIGN_OUT,\n    UPDATE_USER,\n    UPLOADING_PROGRAM,\n    UPLOADING_PROGRAM_FINISHED,\n    UPLOADING_WP_ARCHIVE,\n    UPLOADING_WP_ARCHIVE_FINISHED,\n\n    SET_LOG_LIST,\n    SET_LOG_DATE,\n    SET_LOG_HOURS,\n    SET_LOG_TYPE,\n    SET_LOG_SERVICE,\n    SET_LOG_REFRESH,\n\n    GET_EDGE_DEVICES,\n    GET_EDGE_DEVICE_COMMANDS,\n\n} from \"../actions/actions\";\nimport {initializeState} from './stateLoader'\n\n// operator message types\nconst mt_ActiveConnections = \"active connections\";\nconst mt_Disconnect = \"disconnect\";\nconst mt_Error = \"error\";\nconst mt_Message = \"message\";\nconst mt_Typing = \"typing\";\nconst mt_TeachingSuccessful = \"teaching success\";\n\n// remove all client attributes from an operator\nfunction clear_operator(op) {\n    if (op) {\n        op.conversation_list = [];\n        op.client_id = '';\n        op.client_kb_id = '';\n        op.client_kb_name = '';\n        op.question_id = '';\n        op.question = '';\n        op.answer_id = '';\n        op.answer = '';\n        op.prev_answer = '';\n        op.current_question = '';\n        op.is_typing = false;\n        op.typing_time = 0;\n    }\n}\n\nexport const reducer = (state, action) => {\n    state = state || initializeState();\n\n    // output what we've received\n    if (window.ENV.debug) {\n        console.debug(\"applicationReducer:\" + action.type);\n    }\n    if (action.type === ERROR) {\n        console.log(\"ERROR: (\" + JSON.stringify(action) + \")\");\n    }\n\n    if (action.type === SIGN_OUT) {\n        state = initializeState();\n        return state;\n    }\n\n    switch (action.type) {\n\n        default: {\n            break;\n        }\n\n        // set an error\n        case ERROR: {\n            // is this an \"invalid session id\"\n            if (action && action.error && action.error.length > 0 && action.error.indexOf(\"invalid session id\") >= 0) {\n                // wipe session and user objects - this is now a logout event\n                window.location = \"/#/\";\n                return {\n                    ...state,\n                    session: null,\n                    user: null,\n                    error_title: '',\n                    error: '',\n                    busy: false,\n                    uploading: false,\n                };\n            } else {\n                return {\n                    ...state,\n                    error_title: action.title,\n                    error: action.error,\n                    busy: false,\n                    uploading: false,\n                }\n            }\n        }\n\n        case RESET_SELECTED_KB: {\n            return {\n                ...state,\n                selected_organisation_id: \"\",\n                selected_organisation: null,\n                selected_knowledgebase_id: \"\",\n                selected_knowledgebase: null,\n            };\n        }\n\n        // close any error messages\n        case CLOSE_ERROR: {\n            return {\n                ...state,\n                error_title: \"\",\n                error: \"\",\n                busy: false,\n            };\n        }\n\n        case BUSY: {\n            return {\n                ...state,\n                busy: action.busy,\n            };\n        }\n\n        case SET_THEME: {\n            return {\n                ...state,\n                theme: action.theme,\n            };\n        }\n\n        // sign-in a user\n        case SIGN_IN: {\n            // if we're an operator - we need to change tabs\n            let selected_tab = 'operator';\n            if (action.user && action.user.roles) {\n                for (const role of action.user.roles) {\n                    if (role.role === 'admin' || role.role === 'manager') {\n                        selected_tab = 'organisations';\n                    }\n                }\n            }\n            // set the selected organisation-id (used by operators\n            let selected_organisation_id = '';\n            let selected_organisation = '';\n            if (action.user && action.user.roles) {\n                for (const role of action.user.roles) {\n                    if (role && role.organisationId && selected_organisation_id === '') {\n                        selected_organisation_id = role.organisationId;\n                    }\n                }\n            }\n            // redirect sign-in to either orgs or operator (depending on access)\n            return {\n                ...state,\n                session: action.session,\n                user: action.user,\n                selected_tab: selected_tab,\n                selected_organisation_id: selected_organisation_id,\n                selected_organisation: selected_organisation,\n                busy: false,\n            };\n        }\n\n        case GET_LICENSE: {\n            return {\n                ...state,\n                license: action.license,\n                busy: false,\n            };\n        }\n\n        case SET_ORGANISATION_LIST: {\n            return {\n                ...state,\n                organisation_list: action.organisation_list,\n                busy: false,\n            };\n        }\n\n        case SET_ORGANISATION_FILTER: {\n            return {\n                ...state,\n                organisation_filter: action.filter,\n            };\n        }\n\n        case GET_KNOWLEDGE_BASES: {\n            return {\n                ...state,\n                knowledge_base_list: action.knowledge_base_list,\n                busy: false,\n            };\n        }\n\n        case GET_INVENTORIZE_LIST: {\n            return {\n                ...state,\n                inventorize_list: action.inventorize_list,\n                busy: false,\n            };\n        }\n\n        case GET_INVENTORIZE_BUSY: {\n            return {\n                ...state,\n                inventorize_busy: action.busy,\n                busy: false,\n            };\n        }\n\n        case SELECT_ORGANISATION: {\n            return {\n                ...state,\n                selected_organisation_id: action.id,\n                selected_organisation: action.name,\n                selected_knowledgebase_id: \"\",\n                selected_knowledgebase: \"\",\n                selected_edge_device_id: \"\",\n                selected_edge_device: \"\",\n                busy: false,\n            }\n        }\n\n        case UPDATE_ORGANISATION: {\n            const new_list = [];\n            const organisation = action.organisation;\n            let found = false;\n            for (const org of state.organisation_list) {\n                if (org.id === organisation.id) {\n                    new_list.push(organisation);\n                    found = true;\n                } else {\n                    new_list.push(org);\n                }\n            }\n            if (!found) {\n                new_list.push(organisation);\n            }\n            return {\n                ...state,\n                organisation_list: new_list,\n                busy: false,\n            }\n        }\n\n        case SELECT_KNOWLEDGE_BASE: {\n            return {\n                ...state,\n                selected_knowledgebase_id: action.id,\n                selected_knowledgebase: action.name,\n                busy: false,\n            }\n        }\n\n        case SELECT_EDGE_DEVICE: {\n            return {\n                ...state,\n                selected_edge_device_id: action.id,\n                selected_edge_device: action.name,\n                busy: false,\n            }\n        }\n\n        // sign-out a user\n        case SIGN_OUT: {\n            return {\n                ...state,\n                session: null,\n                user: null,\n                busy: false,\n            }\n        }\n\n        case SELECT_TAB: {\n            return {\n                ...state,\n                selected_tab: action.selected_tab,\n                log_refresh: 0, // stop refreshing logs\n                busy: false,\n            }\n        }\n\n        case HIDE_NOTIFICATIONS: {\n            return {\n                ...state,\n                show_notifications: false,\n            }\n        }\n\n        case SHOW_NOTIFICATIONS: {\n            return {\n                ...state,\n                show_notifications: true,\n            }\n        }\n\n        case SET_NOTIFICATION_LIST: {\n            return {\n                ...state,\n                notification_list: action.notification_list,\n            }\n        }\n\n        case SET_USER_LIST: {\n            return {\n                ...state,\n                user_list: action.user_list,\n                busy: false,\n            };\n        }\n\n        case SET_USER_FILTER: {\n            return {\n                ...state,\n                user_filter: action.filter,\n            };\n        }\n\n        case UPDATE_USER: {\n            return {\n                ...state,\n                user: action.user,\n                busy: false,\n            };\n        }\n\n        case GET_CRAWLERS: {\n            return {\n                ...state,\n                crawler_list: action.crawler_list,\n                busy: false,\n            };\n        }\n\n        case GET_DOMAINS: {\n            return {\n                ...state,\n                domain_list: action.domain_list,\n                busy: false,\n            };\n        }\n\n        case UPLOADING_PROGRAM: {\n            return {\n                ...state,\n                uploading: true,\n            };\n        }\n\n        case UPLOADING_PROGRAM_FINISHED: {\n            return {\n                ...state,\n                uploading: false,\n                busy: false,\n            };\n        }\n\n        case UPLOADING_WP_ARCHIVE: {\n            return {\n                ...state,\n                uploading: true,\n            };\n        }\n\n        case UPLOADING_WP_ARCHIVE_FINISHED: {\n            return {\n                ...state,\n                uploading: false,\n                busy: false,\n            };\n        }\n\n        case GET_DOCUMENTS_PAGINATED: {\n            return {\n                ...state,\n                document_list: action.document_list,\n                num_documents: action.num_documents,\n                prev_document_filter: action.document_filter,\n                busy: false,\n            };\n        }\n\n        case SET_DOCUMENT_FILTER: {\n            return {\n                ...state,\n                document_page: 0,\n                document_filter: action.filter,\n            };\n        }\n\n        case SET_DOCUMENT_PAGE: {\n            const document_nav_list = state.document_nav_list;\n            if (action.page >= document_nav_list.length) {\n                document_nav_list.push(action.prev_url);\n            }\n            return {\n                ...state,\n                document_page: action.page,\n                document_previous: action.prev_url,\n                document_nav_list: document_nav_list,\n                busy: false,\n            }\n        }\n\n        case SET_DOCUMENT_PAGE_SIZE: {\n            return {\n                ...state,\n                document_page: 0,\n                document_previous: null,\n                document_nav_list: ['null'],\n                document_page_size: action.page_size,\n            }\n        }\n\n        case RESET_DOCUMENT_PAGINATION: {\n            return {\n                ...state,\n                document_page: 0,\n                document_previous: null,\n                document_nav_list: ['null'],\n                busy: false,\n            }\n        }\n\n        case MIND_FIND: {\n            return {\n                ...state,\n                mind_item_list: action.mind_item_list,\n                busy: false,\n            };\n        }\n\n        case SET_MIND_ITEMS_PAGINATED: {\n            return {\n                ...state,\n                mind_item_list: action.data.mindItemList,\n                num_mind_items: action.data.numMindItems,\n                prev_mind_item_filter: action.data.filter,\n                busy: false,\n            };\n        }\n\n        case SET_MIND_ITEM_FILTER: {\n            return {\n                ...state,\n                mind_item_page: 0,\n                mind_item_filter: action.filter,\n            };\n        }\n\n        case SET_MIND_ITEM_PAGE: {\n            const mind_item_nav_list = state.mind_item_nav_list;\n            if (action.page >= mind_item_nav_list.length) {\n                mind_item_nav_list.push(action.prev_id);\n            }\n            return {\n                ...state,\n                mind_item_page: action.page,\n                mind_item_previous: action.prev_id,\n                mind_item_nav_list: mind_item_nav_list,\n                busy: false,\n            }\n        }\n\n        case SET_MIND_ITEM_PAGE_SIZE: {\n            return {\n                ...state,\n                mind_item_page: 0,\n                mind_item_previous: null,\n                mind_item_nav_list: ['null'],\n                mind_item_page_size: action.page_size,\n            }\n        }\n\n        case RESET_MIND_ITEM_PAGINATION: {\n            return {\n                ...state,\n                mind_item_page: 0,\n                mind_item_previous: null,\n                mind_item_nav_list: ['null'],\n                busy: false,\n            }\n        }\n\n        case SET_BOT_QUERY_LIST: {\n            return {\n                ...state,\n                bot_query_result_list: action.bot_query_result_list,\n                busy: false,\n            };\n        }\n\n        case SET_BOT_QUERY_STRING: {\n            return {\n                ...state,\n                bot_query: action.bot_query,\n            };\n        }\n\n        case SET_SYNONYMS_PAGINATED: {\n            return {\n                ...state,\n                synonym_list: action.data.synonymList,\n                num_synonyms: action.data.numSynonyms,\n                prev_synonym_filter: action.data.filter,\n                busy: false,\n            };\n        }\n\n        case SET_SYNONYM_PAGE: {\n            const synonym_nav_list = state.synonym_nav_list;\n            if (action.page >= synonym_nav_list.length) {\n                synonym_nav_list.push(action.prev_id);\n            }\n            return {\n                ...state,\n                synonym_page: action.page,\n                synonym_prev_id: action.prev_id,\n                synonym_nav_list: synonym_nav_list,\n                busy: false,\n            }\n        }\n\n        case SET_SYNONYM_PAGE_SIZE: {\n            return {\n                ...state,\n                synonym_page: 0,\n                synonym_prev_id: null,\n                synonym_nav_list: ['null'],\n                synonym_page_size: action.page_size,\n            }\n        }\n\n        case RESET_SYNONYM_PAGINATION: {\n            return {\n                ...state,\n                synonym_page: 0,\n                synonym_prev_id: null,\n                synonym_nav_list: ['null'],\n                busy: false,\n            }\n        }\n\n        case SET_SYNONYM_FILTER: {\n            return {\n                ...state,\n                synonym_page: 0,\n                synonym_filter: action.synonym_filter,\n            };\n        }\n\n\n        case SET_SEMANTICS_PAGINATED: {\n            return {\n                ...state,\n                semantic_list: action.data.semanticList,\n                num_semantics: action.data.numSemantics,\n                prev_semantic_filter: action.data.filter,\n                busy: false,\n            };\n        }\n\n        case SET_SEMANTIC_PAGE: {\n            const semantic_nav_list = state.semantic_nav_list;\n            if (action.page >= semantic_nav_list.length) {\n                semantic_nav_list.push(action.prev_word);\n            }\n            return {\n                ...state,\n                semantic_page: action.page,\n                semantic_prev_word: action.prev_word,\n                semantic_nav_list: semantic_nav_list,\n                busy: false,\n            }\n        }\n\n        case SET_SEMANTIC_PAGE_SIZE: {\n            return {\n                ...state,\n                semantic_page: 0,\n                semantic_prev_id: null,\n                semantic_nav_list: ['null'],\n                semantic_page_size: action.page_size,\n            }\n        }\n\n        case RESET_SEMANTIC_PAGINATION: {\n            return {\n                ...state,\n                semantic_page: 0,\n                semantic_prev_id: null,\n                semantic_nav_list: ['null'],\n                busy: false,\n            }\n        }\n\n\n        case SET_SEMANTIC_DISPLAY_LIST: {\n            return {\n                ...state,\n                semantic_display_category_list: action.semantic_display_category_list,\n                defined_semantic_list: action.defined_semantic_list,\n                busy: false,\n            };\n        }\n\n        case SET_SEMANTIC_FILTER: {\n            return {\n                ...state,\n                semantic_page: 0,\n                semantic_filter: action.semantic_filter,\n            };\n        }\n\n        case SET_SYNSET_LIST: {\n            return {\n                ...state,\n                synset_list: action.synset_list,\n                synset_total_size: action.total_size,\n                busy: false,\n            };\n        }\n\n        case SET_SYNSET_FILTER: {\n            return {\n                ...state,\n                synset_page: 0,\n                synset_filter: action.synset_filter,\n            };\n        }\n\n        case SET_SYNSET_PAGE: {\n            return {\n                ...state,\n                synset_page: action.page,\n                busy: false,\n            }\n        }\n\n        case SET_SYNSET_PAGE_SIZE: {\n            return {\n                ...state,\n                synset_page: 0,\n                synset_page_size: action.page_size,\n            }\n        }\n\n        case RESET_SYNSET_PAGINATION: {\n            return {\n                ...state,\n                synset_page: 0,\n                busy: false,\n            }\n        }\n\n        case SET_REPORT_DATE: {\n            return {\n                ...state,\n                report_date: Api.toIsoDate(action.report_date),\n            };\n        }\n\n        case SET_REPORT_GRAPHS: {\n            return {\n                ...state,\n                access_frequency: action.access_frequency,\n                general_statistics: action.general_statistics,\n                query_word_frequency: action.query_word_frequency,\n                file_type_statistics: action.file_type_statistics,\n                busy: false,\n            }\n        }\n\n        case SET_OPERATOR_ANSWER: {\n            const new_list = [];\n            for (const op of state.operators) {\n                if (op.id === action.operatorId) {\n                    op.answer_id = action.id;\n                    op.answer = action.answer;\n                }\n                new_list.push(op);\n            }\n            return {\n                ...state,\n                operators: new_list,\n            }\n        }\n\n        case SET_OPERATOR_QUESTION: {\n            const new_list = [];\n            for (const op of state.operators) {\n                if (op.id === action.operatorId) {\n                    op.question_id = action.id;\n                    op.question = action.question;\n                }\n                new_list.push(op);\n            }\n            return {\n                ...state,\n                operators: new_list,\n            }\n        }\n\n        case OPERATOR_READY: {\n            if (action.ready) {\n                const new_list = [];\n                for (const op of state.operators) {\n                    if (op.id === action.operatorId) {\n                        op.operator_ready = true;\n                    }\n                    new_list.push(op);\n                }\n                return {\n                    ...state,\n                    operators: new_list,\n                }\n            } else {\n\n                const new_list = [];\n                for (const op of state.operators) {\n                    if (op.id === action.operatorId) {\n                        const emptyOperator = Api.createOperator();\n                        emptyOperator.id = action.operatorId;\n                        new_list.push(emptyOperator);\n                    } else {\n                        new_list.push(op);\n                    }\n                }\n                return {\n                    ...state,\n                    operators: new_list,\n                }\n            }\n        }\n\n        // next-user / ban-user set\n        case OPERATOR_CLEAR_USER: {\n            const new_list = [];\n            for (const op of state.operators) {\n                if (op.id === action.operatorId) {\n                    const emptyOperator = Api.createOperator();\n                    emptyOperator.id = action.operatorId; // don't wipe these\n                    emptyOperator.operator_ready = op.operator_ready;\n                    new_list.push(emptyOperator);\n                } else {\n                    new_list.push(op);\n                }\n            }\n            return {\n                ...state,\n                operators: new_list,\n            }\n        }\n\n        case ADD_OPERATOR: {\n            const new_list = JSON.parse(JSON.stringify(state.operators));\n            new_list.push(Api.createOperator());\n            return {\n                ...state,\n                operators: new_list,\n            }\n        }\n\n        case REMOVE_OPERATOR: {\n            const new_list = [];\n            for (const operator of state.operators) {\n                if (operator.id !== action.id) {\n                    new_list.push(operator);\n                }\n            }\n            return {\n                ...state,\n                operators: new_list\n            }\n        }\n\n        case STOP_CLIENT_TYPING: {\n            const operator_id = action.operator_id; // client's id\n            const new_list = [];\n            for (const op of state.operators) {\n                if (op.id === operator_id) {\n                    op.is_typing = false;\n                    op.typing_time = 0;\n                }\n                new_list.push(op);\n            }\n            return {\n                ...state,\n                operators: new_list,\n            }\n        }\n\n        // receive a message for the operator - process it\n        case PROCESS_OPERATOR_MESSAGE: {\n            const data = action.message; // the data / message\n\n            // log certain messages\n            if (data.messageType !== mt_ActiveConnections) {\n                // log any message for debugging (except active connection counts)\n                // console.debug('operator received data:' + JSON.stringify(data));\n            }\n            // an error has occurred - show it\n            if (data.messageType === mt_Error && data.error.length > 0) {\n                return {\n                    ...state,\n                    error_title: \"error\",\n                    error: data.error,\n                    busy: false,\n                    uploading: false,\n                }\n            }\n            if (data.messageType === mt_Disconnect) {\n                const new_list = [];\n                for (const op of state.operators) {\n                    if (op.id === data.operatorId) {\n                        clear_operator(op);\n                    }\n                    new_list.push(op);\n                }\n                if (data.disconnectedByClient) {\n                    return {\n                        ...state,\n                        operators: new_list,\n                        error_title: \"Disconnected\",\n                        error: \"the client has terminated this conversation.\",\n                    }\n                } else {\n                    return {\n                        ...state,\n                        operators: new_list,\n                    }\n                }\n            }\n            if (data.messageType === mt_TeachingSuccessful) {\n                // needed by javascript interface - not this app\n                return {\n                    ...state\n                }\n            }\n            if (data.messageType === mt_ActiveConnections) {\n                // set number of active connections as told by platform\n                return {\n                    ...state,\n                    num_active_connections: data.connectionCount,\n                }\n            }\n\n            // an is-typing message arrives\n            if (data.messageType === mt_Typing) {\n                // find the organisation\n                const new_list = [];\n                for (const op of state.operators) {\n                    if (op.id === data.toId) {\n                        op.is_typing = data.fromIsTyping;\n                        op.typing_time = Api.getSystemTime() + 2000;\n                    }\n                    new_list.push(op);\n                }\n                return {\n                    ...state,\n                    operators: new_list,\n                }\n            }\n\n            // a message (response) arrives\n            if (data.messageType === mt_Message) {\n\n                if (!data.kbId || data.kbId.length === 0) {\n                    // bad - must have a knowledgebase id\n                    return {\n                        ...state,\n                        error_title: \"error\",\n                        error: \"message does not include a valid knowledge-base id.\",\n                        busy: false,\n                        uploading: false,\n                    }\n\n                } else if (!data.assignedOperatorId || data.assignedOperatorId.length === 0) {\n                    // bad - must have an operator-id so we can assign it\n                    return {\n                        ...state,\n                        error_title: \"error\",\n                        error:  \"message does not include a valid assigned-operator-id.\",\n                        busy: false,\n                        uploading: false,\n                    }\n\n                } else {\n\n                    // find the organisation\n                    let operator = null;\n                    for (const op of state.operators) {\n                        if (op.id === data.assignedOperatorId) {\n                            operator = op;\n                            break;\n                        }\n                    }\n\n                    if (operator != null) {\n\n                        // get the history list (complete / abs list)\n                        let conversation_list = []; // always change the list (must update!)\n                        if (operator.conversation_list.length === 0 && data.conversationList && data.conversationList.length > 0) {\n                            // does the message come with some of the conversation data of previous attempts\n                            conversation_list = []; // reset the list - we have data\n                            let count = conversation_list.length + 1; // unique ids assigned for REACT\n                            for (const index in data.conversationList) {\n                                if (data.conversationList.hasOwnProperty(index)) {\n                                    let ci = data.conversationList[index];\n                                    const is_simsage = ci.origin !== \"user\";\n                                    conversation_list.push({\n                                        id: count, primary: ci.conversationText, created: ci.created,\n                                        secondary: is_simsage ? \"You\" : \"user\", used: false, is_simsage: is_simsage\n                                    });\n                                    count += 1;\n                                }\n                            }\n\n                        } else if (data.text && data.text.length > 0) {\n                            // otherwise - get the conversation from what just was said by the user\n                            conversation_list = JSON.parse(JSON.stringify(operator.conversation_list)); // copy existing list\n                            // add new item\n                            conversation_list.push({\n                                id: conversation_list.length + 1, primary: data.text,\n                                secondary: \"user\", used: false, is_simsage: false\n                            });\n                        } else {\n                            // the list didn't change\n                            conversation_list = operator.conversation_list;\n                        }\n\n                        // html 5 notifications enabled?\n                        if (data.text && data.text.length > 0 &&\n                            window.Notification && window.Notification.permission === \"granted\") {  // we have notification permission?\n                            const title = \"the Operator needs your Attention\"; // title\n                            const options = {\n                                body: \"A new question just came in.  Click here to open the operator window.  \\\"\" + data.text + \"\\\"\"\n                            };\n                            const notification = new Notification(title, options);  // display notification\n                            notification.onclick = function () {\n                                window.focus();\n                            }\n                        }\n\n                        if (data.previousAnswer && data.previousAnswer.length > 0) {\n                            operator.prev_answer = data.previousAnswer;\n                        }\n\n                        if (data.clientId.length > 5) {\n                            operator.client_id = data.clientId;\n                            operator.client_kb_id = data.kbId;\n                        }\n\n                        // set the name of the knowledge base connected to\n                        if (data.kbName && data.kbName.length > 0) {\n                            operator.client_kb_name = data.kbName;\n                        }\n\n                        // set potentially changed items\n                        operator.conversation_list = conversation_list;\n                        operator.is_typing = false;\n                        operator.typing_time = 0;\n\n                        // create the new organisation list\n                        const new_list = [];\n                        for (const op of state.operators) {\n                            if (op.id !== data.organisationId) {\n                                new_list.push(op);\n                            } else {\n                                new_list.push(operator);\n                            }\n                        }\n\n                        return {\n                            ...state,\n                            operators: new_list,\n                        }\n\n                    } // organisation != null\n                    else {\n                        console.log(\"organisation id not found:\" + data.organisationId);\n                    }\n\n                } // else\n\n            } // if mt_message\n\n            return {\n                ...state,\n            }\n        }\n\n        case SET_OPERATOR_CONNECTED: {\n            const new_list = [];\n            for (const op of state.operators) {\n                op.operator_ready = false;\n                clear_operator(op);\n                new_list.push(op);\n            }\n            return {\n                ...state,\n                operator_connected: action.connected,\n                num_active_connections: 0,\n                operators: new_list,\n            }\n        }\n\n        case CLEAR_PREVIOUS_ANSWER: {\n            const new_list = [];\n            for (const op of state.operators) {\n                if (op.id === action.operatorId) {\n                    op.current_question = '';\n                    op.prev_answer = '';\n                }\n                new_list.push(op);\n            }\n            return {\n                ...state,\n                operators: new_list,\n            }\n        }\n\n        case ADD_CONVERSATION: {\n            const new_list = [];\n            for (const op of state.operators) {\n                if (op.id === action.operatorId) {\n                    op.conversation_list.push(action.item);\n                }\n                new_list.push(op);\n            }\n            return {\n                ...state,\n                operators: new_list,\n            }\n        }\n\n        case MARK_CONVERSATION_USED: {\n            const new_list = [];\n            for (const op of state.operators) {\n                if (op.id === action.operatorId) {\n                    const message_list = op.conversation_list;\n                    for (const message of message_list) {\n                        if (message.id === action.id) {\n                            message.used = true;\n                        }\n                    }\n                    op.conversation_list = message_list;\n                }\n                new_list.push(op);\n            }\n            // copy list to make a new one\n            return {\n                ...state,\n                operators: new_list,\n            }\n        }\n\n\n        case GET_HTML5_NOTIFICATIONS: {\n            return {\n                ...state,\n                html5_notifications: action.status,\n            }\n        }\n\n\n        case SET_LOG_LIST: {\n            return {\n                ...state,\n                log_list: action.log_list,\n                busy: false,\n            }\n        }\n\n        case SET_LOG_DATE: {\n            return {\n                ...state,\n                log_date: Api.toIsoDateTime(action.log_date),\n            };\n        }\n\n        case SET_LOG_HOURS: {\n            return {\n                ...state,\n                log_hours: action.log_hours,\n            };\n        }\n\n        case SET_LOG_TYPE: {\n            return {\n                ...state,\n                log_type: action.log_type,\n            };\n        }\n\n        case SET_LOG_SERVICE: {\n            return {\n                ...state,\n                log_service: action.log_service,\n            };\n        }\n\n        case SET_LOG_REFRESH: {\n            return {\n                ...state,\n                log_refresh: action.log_refresh,\n            };\n        }\n\n        case GET_EDGE_DEVICES: {\n            return {\n                ...state,\n                edge_device_list: action.edge_device_list,\n                busy: false,\n            };\n        }\n\n        case GET_EDGE_DEVICE_COMMANDS: {\n            return {\n                ...state,\n                edge_device_command_list: action.edge_device_command_list,\n                busy: false,\n            };\n        }\n\n\n    }\n\n    return state;\n};\n\n","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\nimport thunk from \"redux-thunk\";\nimport {createLogger} from \"redux-logger\";\nimport {routerReducer} from \"react-router-redux\";\nimport * as AppReducer from \"./appReducer\";\n\nimport {loadState} from \"./stateLoader\";\n\n// only log when debug = false in settings.js\nconst loggerMiddleware = createLogger({\n    predicate: (getState, action) => window.ENV.debug\n});\n\nexport default function configureStore() {\n    const reducers = {\n        appReducer:  AppReducer.reducer,\n    };\n\n    const middleware = [thunk, loggerMiddleware];\n\n    // In development, use the browser's Redux dev tools extension if installed\n    const enhancers = [];\n    const isDevelopment = process.env.NODE_ENV === \"development\";\n    if (isDevelopment && typeof window !== \"undefined\" && window.devToolsExtension) {\n        enhancers.push(window.devToolsExtension());\n    }\n\n    const rootReducer = combineReducers({\n        ...reducers,\n        routing: routerReducer\n    });\n\n    return createStore(\n        rootReducer,\n        loadState(),\n        compose(\n            applyMiddleware(...middleware),\n            ...enhancers\n        )\n    );\n}\n\n","import { createGlobalStyle} from \"styled-components\"\nimport { createMuiTheme } from \"@material-ui/core\";\n\nexport const lightTheme = createMuiTheme({\n    spacing: 4,\n    palette: {\n        primary: {\n            light: '#62C2D6',\n            main: '#62C2D6',\n            dark: '#62C2D6',\n        },\n        secondary: {\n            light: '#51B274',\n            main: '#51B274',\n            dark: '#51B274',\n        }\n    },\n});\n\nexport const darkTheme = createMuiTheme({\n    spacing: 4,\n    overrides: {\n        MuiInput: {\n            input: { color: '#e0e0e0'},\n        },\n        MuiInputBase: {\n            input: { color: '#e0e0e0' },\n        },\n        MuiInputLabel: {\n            root: { color: '#e0e0e0'},\n        },\n        MuiSelect: {\n            root: {\n                color: '#808080',\n            },\n            icon: {\n                color: '#808080',\n            }\n        },\n        MuiCheckbox: {\n            root: {\n                color: '#808080',\n            },\n        },\n        MuiNativeSelect: {\n            root: { color: '#000'},\n        },\n        MuiSlider: {\n            markLabel: { color: '#a0a0a0' },\n            markLabelActive: { color: '#e0e0e0' }\n        },\n    },\n    palette: {\n        primary: {\n            light: '#62C2D6',\n            main: '#62C2D6',\n            dark: '#62C2D6',\n        },\n        secondary: {\n            light: '#9ACA93',\n            main: '#9ACA93',\n            dark: '#9ACA93',\n        }\n    },\n});\n\n\nexport const GlobalStyles = createGlobalStyle`\n  body {\n    background: ${({ theme }) => theme.body};\n    color: ${({ theme }) => theme.text};\n    font-family: Tahoma, Helvetica, Arial, Roboto, sans-serif;\n    transition: all 0.50s linear;\n  }\n`\n","\nexport class GraphHelper {\n\n    // labelList: array of strings\n    // valueList: array of same size of values (data)\n    static setupDoughnut(labelList, valueList) {\n        return {\n            labels: labelList,\n            datasets: [{\n                data: valueList,\n                backgroundColor: [\n                    '#36A2EB',\n                    '#FF6384',\n                    '#56CE56'\n                ],\n                hoverBackgroundColor: [\n                    '#36A2EB',\n                    '#FF6384',\n                    '#56CE56'\n                ]\n            }]\n        };\n    }\n\n    // setup items in a hash-map separated by frequencies\n    static setupMap(map, description) {\n        if (map) {\n            const stat_list = [];\n            const size_list = [100, 10000, 100000, -1];\n            const seen = new Set();\n            for (const i in size_list) {\n                const cf = size_list[i];\n                let labels = [];\n                let values = [];\n                for (const key in map) {\n\n                    if (map.hasOwnProperty(key)) {\n                        let value = map[key];\n                        if ((value === -1 || value < cf) && !seen.has(key)) {\n                            seen.add(key);\n                            labels.push(key);\n                            values.push(value.toFixed(2));\n                        }\n                    }\n                }\n                if (labels.length > 0) {\n                    stat_list.push({\n                        id: i,\n                        labels: labels,\n                        title: description,\n                        datasets: [\n                            {\n                                label: description,\n                                fill: false,\n                                lineTension: 0.1,\n                                backgroundColor: 'rgba(98,194,214,1)',\n                                borderColor: 'rgba(98,194,214,1)',\n                                pointBackgroundColor: '#fff',\n                                pointBorderColor: 'rgba(98,194,214,1)',\n                                pointHoverBackgroundColor: 'rgba(98,194,214,1)',\n                                pointHoverBorderColor: 'rgba(220,220,220,1)',\n                                borderCapStyle: 'butt',\n                                borderDash: [],\n                                borderDashOffset: 0.0,\n                                borderJoinStyle: 'miter',\n                                pointBorderWidth: 1,\n                                pointHoverRadius: 5,\n                                pointHoverBorderWidth: 2,\n                                pointRadius: 1,\n                                pointHitRadius: 10,\n                                data: values\n                            }\n                        ]\n                    });\n                }\n            }\n            return stat_list\n        }\n        return [];\n    }\n\n    // setup a list of values\n    static setupList(list, label, scale = 1.0) {\n        if (list && list.length) {\n            let labels = [];\n            let values = [];\n            const day_map = {};\n            let numGtZero = 0;\n            for (let i = 0; i <= 30; i++) {\n                day_map[i + 1] = list[i];\n                if (list[i] > 0) {\n                    numGtZero += 1;\n                }\n            }\n            if (numGtZero === 0) {\n                return {labels: []};\n            }\n            for (let i = 1; i <= 31; i++) {\n                labels.push('' + i);\n                if (day_map.hasOwnProperty(i) && day_map[i] > 0) {\n                    values.push(day_map[i] / scale);\n                } else {\n                    values.push(0.0);\n                }\n            }\n            return {\n                labels: labels,\n                datasets: [\n                    {\n                        label: label,\n                        fill: false,\n                        lineTension: 0.4,\n                        backgroundColor: 'rgba(154,202,147,1)',\n                        borderColor: 'rgba(154,202,147,1)',\n                        pointBackgroundColor: '#fff',\n                        pointBorderColor: 'rgba(154,202,147,1)',\n                        pointHoverBackgroundColor: 'rgba(154,202,147,1)',\n                        pointHoverBorderColor: 'rgba(220,220,220,1)',\n                        borderCapStyle: 'butt',\n                        borderDash: [],\n                        borderDashOffset: 0.0,\n                        borderJoinStyle: 'miter',\n                        pointBorderWidth: 1,\n                        pointHoverRadius: 5,\n                        pointHoverBorderWidth: 2,\n                        pointRadius: 1,\n                        pointHitRadius: 10,\n                        data: values\n                    }\n                ]\n            };\n        }\n        return {labels: []};\n    }\n\n    // setup a list of values {user, system, idle}\n    static setupCpuList(list, num_points = 50, scale = 1.0) {\n        if (list && list.length) {\n            let labels = [];\n            let values1 = [];\n            let values2 = [];\n\n            let listStart = 0;\n            if (list.length > num_points) {\n                listStart = list.length - num_points;\n            }\n            for (let i = listStart; i < listStart + num_points; i++) {\n                labels.push('');\n                if (i < list.length) {\n                    values1.push(list[i].idle / scale);\n                    values2.push((list[i].user + list[i].system) / scale);\n                } else {\n                    values1.push(0.0);\n                    values2.push(0.0);\n                }\n            }\n            return {\n                labels: labels,\n                datasets: [\n                    {\n                        label: \"busy\",\n                        fill: true,\n                        lineTension: 0.1,\n                        backgroundColor: 'rgba(192, 75,120,0.7)',\n                        borderColor: 'rgba(192, 75,120,1)',\n                        pointBackgroundColor: '#fff',\n                        pointBorderColor: 'rgba(192, 75, 120,1)',\n                        pointHoverBackgroundColor: 'rgba(192, 75,120,1)',\n                        pointHoverBorderColor: 'rgba(220,220,220,1)',\n                        borderCapStyle: 'butt',\n                        borderDash: [],\n                        borderDashOffset: 0.0,\n                        borderJoinStyle: 'miter',\n                        pointBorderWidth: 1,\n                        pointHoverRadius: 5,\n                        pointHoverBorderWidth: 2,\n                        pointRadius: 1,\n                        pointHitRadius: 10,\n                        data: values2\n                    },\n                    {\n                        label: \"idle\",\n                        fill: true,\n                        lineTension: 0.1,\n                        backgroundColor: 'rgba(75,192,120,0.4)',\n                        borderColor: 'rgba(75,192,120,1)',\n                        pointBackgroundColor: '#fff',\n                        pointBorderColor: 'rgba(75, 192,120,1)',\n                        pointHoverBackgroundColor: 'rgba(75,192,120,1)',\n                        pointHoverBorderColor: 'rgba(220,220,220,1)',\n                        borderCapStyle: 'butt',\n                        borderDash: [],\n                        borderDashOffset: 0.0,\n                        borderJoinStyle: 'miter',\n                        pointBorderWidth: 1,\n                        pointHoverRadius: 5,\n                        pointHoverBorderWidth: 2,\n                        pointRadius: 1,\n                        pointHitRadius: 0,\n                        data: values1\n                    },\n                ]\n            };\n        }\n        return {labels: []};\n    }\n\n    // setup the options for a graph\n    static getGraphOptions(title) {\n        return {\n            responsive: true,\n            legend: {\n                position: 'bottom',\n            },\n            hover: {\n                mode: 'label'\n            },\n            scales: {\n                xAxes: [{\n                    display: true,\n                    scaleLabel: {\n                        display: false,\n                        labelString: ''\n                    }\n                }],\n                yAxes: [{\n                    display: true,\n                    ticks: {\n                        beginAtZero: true,\n                        steps: 10,\n                        stepValue: 5,\n                    }\n                }]\n            },\n            title: {\n                display: true,\n                text: title\n            }\n        };\n    }\n\n    // setup the doughnut options for a graph\n    static getDoughnutOptions(title) {\n        return {\n            responsive: true,\n            legend: {\n                position: 'bottom',\n            },\n            hover: {\n                mode: 'label'\n            },\n            title: {\n                display: true,\n                text: title\n            }\n        };\n    }\n\n    // process a list of data (main_list) and put it into processList()\n    static processList(list, main_list, title) {\n\n        if (main_list && main_list.labels && main_list.datasets &&\n            main_list.datasets.length === 1 && main_list.datasets[0].data) {\n\n            list.push([\"\", \"\"]);\n            list.push([title, \"\"]);\n            for (let i = 0; i < main_list.labels.length; i++) {\n                list.push([\"\" + main_list.labels[i], \"\" + main_list.datasets[0].data[i]]);\n            }\n        }\n    }\n\n    // process a set of data (main_list) and put it into list\n    static processSet(list, main_set, title) {\n        for (const temp_list of main_set) {\n            GraphHelper.processList(list, temp_list, title);\n        }\n    }\n\n}\n\n\nexport default GraphHelper;\n","import GraphHelper from '../common/graph-helper'\nimport Api from '../common/api'\n\nimport {\n    ADD_CONVERSATION,\n    BUSY,\n    SET_THEME,\n    RESET_SELECTED_KB,\n    CLEAR_PREVIOUS_ANSWER,\n    CLOSE_ERROR,\n    ERROR,\n    GET_CRAWLERS,\n    GET_DOMAINS,\n    GET_DOCUMENTS_PAGINATED,\n    GET_HTML5_NOTIFICATIONS,\n    GET_KNOWLEDGE_BASES,\n    GET_INVENTORIZE_LIST,\n    GET_LICENSE,\n    SET_ORGANISATION_LIST,\n    SET_ORGANISATION_FILTER,\n    GET_INVENTORIZE_BUSY,\n    GET_OS_MESSAGES,\n    GET_STATS,\n    SET_USER_LIST,\n    SET_USER_FILTER,\n    HIDE_NOTIFICATIONS,\n    MARK_CONVERSATION_USED,\n\n    OPERATOR_CLEAR_USER,\n    OPERATOR_READY,\n    PASSWORD_RESET_REQUEST,\n    PROCESS_OPERATOR_MESSAGE,\n    RESET_DOCUMENT_PAGINATION,\n    RESET_PASSWORD,\n    SET_SYNSET_PAGE,\n    SET_SYNSET_PAGE_SIZE,\n    RESTORE_SYSTEM,\n    SELECT_KNOWLEDGE_BASE,\n    SELECT_EDGE_DEVICE,\n    SELECT_ORGANISATION,\n    UPDATE_ORGANISATION,\n    SELECT_TAB,\n    SET_BOT_QUERY_LIST,\n    SET_BOT_QUERY_STRING,\n    SET_DOCUMENT_FILTER,\n    SET_DOCUMENT_PAGE,\n    SET_DOCUMENT_PAGE_SIZE,\n\n    SET_MIND_ITEM_FILTER,\n    SET_MIND_ITEMS_PAGINATED,\n    SET_MIND_ITEM_PAGE_SIZE,\n    SET_MIND_ITEM_PAGE,\n    RESET_MIND_ITEM_PAGINATION,\n\n    SET_NOTIFICATION_LIST,\n    SET_OPERATOR_ANSWER,\n    SET_OPERATOR_CONNECTED,\n    SET_OPERATOR_QUESTION,\n    STOP_CLIENT_TYPING,\n    ADD_OPERATOR,\n    REMOVE_OPERATOR,\n    MAX_OPERATORS,\n    SET_REPORT_DATE,\n    SET_REPORT_GRAPHS,\n\n    SET_SEMANTICS_PAGINATED,\n    SET_SEMANTIC_PAGE_SIZE,\n    SET_SEMANTIC_PAGE,\n    RESET_SEMANTIC_PAGINATION,\n    SET_SEMANTIC_FILTER,\n\n    SET_SEMANTIC_DISPLAY_LIST,\n\n    SET_SYNONYM_FILTER,\n    SET_SYNONYMS_PAGINATED,\n    RESET_SYNONYM_PAGINATION,\n    SET_SYNONYM_PAGE_SIZE,\n    SET_SYNONYM_PAGE,\n\n    SET_SYNSET_LIST,\n    SET_SYNSET_FILTER,\n    RESET_SYNSET_PAGINATION,\n    SHOW_NOTIFICATIONS,\n    SIGN_IN,\n    SIGN_OUT,\n    UPDATE_USER,\n    UPLOADING_PROGRAM,\n    UPLOADING_PROGRAM_FINISHED,\n\n    UPLOADING_WP_ARCHIVE,\n    UPLOADING_WP_ARCHIVE_FINISHED,\n\n    SET_LOG_LIST,\n    SET_LOG_DATE,\n    SET_LOG_HOURS,\n    SET_LOG_TYPE,\n    SET_LOG_SERVICE,\n    SET_LOG_REFRESH,\n\n    // the edge\n    GET_EDGE_DEVICES,\n    GET_EDGE_DEVICE_COMMANDS,\n} from \"./actions\";\n\nimport {Comms} from \"../common/comms\";\n\n// not in state system - bad in the state system\nlet notification_busy = false;\n\nasync function _getOrganisationList(current_org_name, current_org_id, _filter, change_organisation, dispatch) {\n    dispatch({type: BUSY, busy: true});\n    let filter = _filter;\n    if (!_filter || _filter.trim() === \"\") {\n        filter = \"null\";\n    }\n    await Comms.http_get('/auth/user/organisations/' + encodeURIComponent(filter),\n        (response) => {\n            const organisation_list = response.data;\n            dispatch({type: SET_ORGANISATION_LIST, organisation_list: organisation_list});\n            // select an organisation if there is one to select and none yet has been selected\n            if (change_organisation && organisation_list && organisation_list.length > 0 && current_org_id.length === 0) {\n                dispatch({type: SELECT_ORGANISATION, name: organisation_list[0].name, id: organisation_list[0].id});\n                // and get the knowledge bases for this org\n                _getKnowledgeBases(organisation_list[0].id, dispatch);\n            }\n        },\n        (errStr) => { dispatch({type: ERROR, title: \"Error\", error: errStr}) }\n    )\n}\n\nasync function _getKnowledgeBases(organisation_id, dispatch) {\n    dispatch({type: BUSY, busy: true});\n    await Comms.http_get('/knowledgebase/' + encodeURIComponent(organisation_id),\n        (response) => {\n            dispatch({type: GET_KNOWLEDGE_BASES, knowledge_base_list: response.data});\n        },\n        (errStr) => { dispatch({type: ERROR, title: \"Error\", error: errStr}) }\n    )\n}\n\nasync function _getInventorizeList(organisation_id, kb_id, dispatch) {\n    if (organisation_id.length > 0 && kb_id.length > 0) {\n        dispatch({type: BUSY, busy: true});\n        await Comms.http_get('/document/parquets/' + encodeURIComponent(organisation_id) + '/' +\n            encodeURIComponent(kb_id) + '/0/5',\n            (response) => {\n                dispatch({type: GET_INVENTORIZE_LIST, inventorize_list: response.data});\n            },\n            (errStr) => {\n                dispatch({type: ERROR, title: \"Error\", error: errStr})\n            }\n        )\n    }\n}\n\nasync function _getUsers(organisation_id, filter, dispatch) {\n    dispatch({type: BUSY, busy: true});\n    if (!filter || filter.trim() === '') {\n        filter = 'null';\n    }\n    await Comms.http_get('/auth/users/' + encodeURIComponent(organisation_id) + '/' + encodeURIComponent(filter),\n        (response) => {\n            dispatch({type: SET_USER_LIST, user_list: response.data});\n        },\n        (errStr) => { dispatch({type: ERROR, title: \"Error\", error: errStr}) }\n    )\n}\n\nasync function _getCrawlers(organisation_id, kb_id, dispatch) {\n    if (organisation_id.length > 0 && kb_id.length > 0) {\n        dispatch({type: BUSY, busy: true});\n        await Comms.http_get('/crawler/crawlers/' + encodeURIComponent(organisation_id) + '/' + encodeURIComponent(kb_id),\n            (response) => {\n                dispatch({type: GET_CRAWLERS, crawler_list: response.data});\n            },\n            (errStr) => {\n                dispatch({type: ERROR, title: \"Error\", error: errStr})\n            }\n        )\n    }\n}\n\nasync function _getDomains(organisation_id, kb_id, page, page_size, filter, dispatch) {\n    if (organisation_id.length > 0 && kb_id.length > 0) {\n        dispatch({type: BUSY, busy: true});\n        await Comms.http_put('/knowledgebase/domains', {\n                \"organisationId\": organisation_id, \"kbId\": kb_id, \"page\": page, \"pageSize\": page_size, \"filter\": filter\n            },\n            (response) => {\n                dispatch({type: GET_DOMAINS, domain_list: response.data});\n            },\n            (errStr) => {\n                dispatch({type: ERROR, title: \"Error\", error: errStr})\n            }\n        )\n    }\n}\n\nasync function _getDocuments(organisation_id, kb_id, document_previous, document_page_size, document_filter, dispatch) {\n    if (organisation_id.length > 0 && kb_id.length > 0) {\n        dispatch({type: BUSY, busy: true});\n        await Comms.http_post('/document/documents', {\n                \"organisationId\": organisation_id, \"kbId\": kb_id,\n                \"prevUrl\": document_previous ? document_previous : 'null',\n                \"pageSize\": document_page_size,\n                \"filter\": document_filter\n            },\n            (response) => {\n                const document_list = response.data.documentList;\n                const num_documents = response.data.numDocuments;\n                dispatch(({\n                    type: GET_DOCUMENTS_PAGINATED,\n                    document_list: document_list,\n                    num_documents: num_documents,\n                    document_filter: document_filter\n                }));\n            },\n            (errStr) => {\n                dispatch({type: ERROR, title: \"Error\", error: errStr})\n            }\n        )\n    }\n}\n\nasync function _getMindItems(organisation_id, kb_id, prev_id, mind_filter, mind_item_page_size, dispatch) {\n    if (organisation_id.length > 0 && kb_id.length > 0) {\n        dispatch({type: BUSY, busy: true});\n        const data = {\n            \"organisationId\": organisation_id, \"kbId\": kb_id, \"prevId\": prev_id ? prev_id : \"null\",\n            \"filter\": mind_filter, \"pageSize\": mind_item_page_size\n        };\n        await Comms.http_put('/bot/mind-items', data,\n            (response) => {\n                dispatch({type: SET_MIND_ITEMS_PAGINATED, data: response.data});\n            },\n            (errStr) => {\n                dispatch({type: ERROR, title: \"Error\", error: errStr})\n            }\n        )\n    }\n}\n\nasync function _getSynonyms(organisation_id, kb_id, prev_id, synonym_filter, synonym_page_size, dispatch) {\n    if (organisation_id.length > 0 && kb_id.length > 0) {\n        dispatch({type: BUSY, busy: true});\n        const data = {\n            \"organisationId\": organisation_id, \"kbId\": kb_id, \"prevId\": prev_id ? prev_id : \"\",\n            \"filter\": synonym_filter, \"pageSize\": synonym_page_size\n        };\n        await Comms.http_put('/language/synonyms', data,\n            (response) => {\n                dispatch({type: SET_SYNONYMS_PAGINATED, data: response.data});\n            },\n            (errStr) => {\n                dispatch({type: ERROR, title: \"Error\", error: errStr})\n            }\n        )\n    }\n}\n\nasync function _getSemantics(organisation_id, kb_id, prev_word, semantic_filter, semantic_page_size, dispatch) {\n    if (organisation_id.length > 0 && kb_id.length > 0) {\n        dispatch({type: BUSY, busy: true});\n        await Comms.http_put('/language/semantics', {\n                \"organisationId\": organisation_id, \"kbId\": kb_id, \"prevWord\": prev_word ? prev_word : \"\",\n                \"filter\": semantic_filter, \"pageSize\": semantic_page_size\n            },\n            (response) => {\n                dispatch({type: SET_SEMANTICS_PAGINATED, data: response.data});\n            },\n            (errStr) => {\n                dispatch({type: ERROR, title: \"Error\", error: errStr})\n            }\n        )\n    }\n}\n\nasync function _getSemanticDisplayCategories(organisation_id, kb_id, dispatch) {\n    if (organisation_id.length > 0 && kb_id.length > 0) {\n        dispatch({type: BUSY, busy: true});\n        await Comms.http_get('/language/semantic-display-categories/' +\n            encodeURIComponent(organisation_id) + '/' + encodeURIComponent(kb_id),\n            (response) => {\n                dispatch({type: SET_SEMANTIC_DISPLAY_LIST,\n                    semantic_display_category_list: response.data.semanticDisplayCategoryList,\n                    defined_semantic_list: response.data.semanticList\n                });\n            },\n            (errStr) => {\n                dispatch({type: ERROR, title: \"Error\", error: errStr})\n            });\n    } else {\n        dispatch({type: SET_SEMANTIC_DISPLAY_LIST, semantic_display_category_list: [], defined_semantic_list: []});\n    }\n}\n\nasync function _getSynSets(organisation_id, kb_id, page, page_size, filter, dispatch) {\n    if (organisation_id.length > 0 && kb_id.length > 0) {\n        dispatch({type: BUSY, busy: true});\n        await Comms.http_put('/language/find-syn-sets', {\n                \"organisationId\": organisation_id, \"kbId\": kb_id,\n                \"page\": page, \"pageSize\": page_size, \"filter\": filter\n            },\n            (response) => {\n                dispatch({type: SET_SYNSET_LIST, synset_list: response.data.list, total_size: response.data.totalSize});\n            },\n            (errStr) => {\n                dispatch({type: ERROR, title: \"Error\", error: errStr})\n            }\n        )\n    }\n}\n\nasync function _getReports(organisation_id, kb_id, year, month, top, dispatch) {\n    if (organisation_id.length > 0 && kb_id.length > 0) {\n        dispatch({type: BUSY, busy: true});\n        await Comms.http_get('/stats/stats/' + encodeURIComponent(organisation_id) + '/' +\n                                encodeURIComponent(kb_id) + '/' +\n                                encodeURIComponent(year) + '/' +\n                                encodeURIComponent(month) + '/' +\n                                encodeURIComponent(top),\n            (response) => {\n                const report = response.data;\n                const access_frequency = GraphHelper.setupList(report.accessFrequency, \"access\");\n                const general_statistics = GraphHelper.setupMap(report.generalStatistics, \"system\");\n                const query_word_frequency = GraphHelper.setupMap(report.queryWordFrequency, \"queries (top \" + top + \")\");\n                const file_type_statistics = GraphHelper.setupMap(report.fileTypeStatistics, \"file types\");\n                dispatch({type: SET_REPORT_GRAPHS, access_frequency: access_frequency,\n                                    general_statistics: general_statistics,\n                                    query_word_frequency: query_word_frequency,\n                                    file_type_statistics: file_type_statistics\n                });\n            },\n            (errStr) => { dispatch({type: ERROR, title: \"Error\", error: errStr})}\n        )\n    } else {\n        dispatch({type: SET_REPORT_GRAPHS,\n            access_frequency: GraphHelper.setupList([]),\n            general_statistics: GraphHelper.setupMap([]), query_word_frequency: GraphHelper.setupMap([]),\n            file_type_statistics: GraphHelper.setupMap([])});\n    }\n}\n\n// get list of logs\nasync function _getLogList(year, month, day, hour, hours, dispatch) {\n    if (year && month && day && hour && hours) {\n        dispatch({type: BUSY, busy: true});\n        await Comms.http_get('/stats/system-logs/' + encodeURIComponent(year) + '/' + encodeURIComponent(month) +\n            '/' + encodeURIComponent(day) + '/' + encodeURIComponent(hour) + '/' + encodeURIComponent(hours),\n            (response) => {\n                const data = response.data;\n                dispatch({\n                    type: SET_LOG_LIST, log_list: data.logList,\n                })\n            },\n            (errStr) => {\n                dispatch({type: ERROR, title: \"Error\", error: errStr})\n            }\n        )\n    }\n}\n\nasync function _getHtmlNotifications(dispatch) {\n    if (window.Notification && window.Notification.permission !== \"granted\" &&\n        window.Notification.requestPermission) {\n        //if it is not supported request permission\n        window.Notification.requestPermission(function (status) {\n            if (Notification.permission !== status) {\n                Notification.permission = status;\n            }\n            dispatch({type: GET_HTML5_NOTIFICATIONS, status: status});\n        })\n    }\n}\n\n\nasync function _getEdgeDevices(organisation_id, dispatch) {\n    dispatch({type: BUSY, busy: true});\n    await Comms.http_get('/edge/' + encodeURIComponent(organisation_id),\n        (response) => {\n            dispatch({type: GET_EDGE_DEVICES, edge_device_list: response.data});\n        },\n        (errStr) => { dispatch({type: ERROR, title: \"Error\", error: errStr}) }\n    )\n}\n\n\nasync function _getEdgeDeviceCommands(organisation_id, edge_id, dispatch) {\n    dispatch({type: BUSY, busy: true});\n    await Comms.http_get('/edge/command/' + encodeURIComponent(organisation_id) + '/' + encodeURIComponent(edge_id),\n        (response) => {\n            dispatch({type: GET_EDGE_DEVICE_COMMANDS, edge_device_command_list: response.data});\n        },\n        (errStr) => { dispatch({type: ERROR, title: \"Error\", error: errStr}) }\n    )\n}\n\n\n\n// setup a page for different tabs\nasync function _setupPage(selected_tab, dispatch, getState) {\n    const organisation_id = getState().appReducer.selected_organisation_id;\n    const organisation = getState().appReducer.selected_organisation;\n    const kb_id = getState().appReducer.selected_knowledgebase_id;\n\n    // don't reset when you're the operator\n    if (selected_tab !== 'operator' &&\n        (!organisation_id || organisation_id.length === 0 || !organisation || organisation.length === 0)) {\n        dispatch({type: RESET_SELECTED_KB});\n    }\n\n    if (selected_tab === 'users' && organisation_id !== '') {\n        const filter = getState().appReducer.user_filter;\n        await _getUsers(organisation_id, filter, dispatch);\n\n    } else if (selected_tab === 'organisations') {\n        const name = getState().appReducer.selected_organisation;\n        const id = getState().appReducer.selected_organisation_id;\n        const filter = getState().appReducer.organisation_filter;\n        await _getOrganisationList(name, id, filter, true, dispatch);\n\n    } else if (selected_tab === 'edge devices' && organisation_id !== '') {\n        await _getEdgeDevices(organisation_id, dispatch);\n\n    } else if (selected_tab === 'edge commands' && organisation_id !== '') {\n        const edge_id = getState().appReducer.selected_edge_device_id;\n        if (edge_id && edge_id !== '') {\n            await _getEdgeDeviceCommands(organisation_id, edge_id, dispatch);\n        }\n\n    } else if (selected_tab === 'knowledge bases') {\n        const id = getState().appReducer.selected_organisation_id;\n        if (id !== '') {\n            await _getKnowledgeBases(id, dispatch);\n        }\n\n    } else if (selected_tab === 'document sources' && organisation_id !== '' && kb_id !== '') {\n        await _getUsers(organisation_id, '', dispatch);\n        await _getCrawlers(organisation_id, kb_id, dispatch);\n\n    } else if (selected_tab === 'documents' && organisation_id !== '' && kb_id !== '') {\n        dispatch({type:RESET_DOCUMENT_PAGINATION});\n        dispatch({type: BUSY, busy: true});\n        const document_filter = getState().appReducer.document_filter;\n        const document_previous = 'null'; // reset\n        const document_page_size = getState().appReducer.document_page_size;\n        await _getDocuments(organisation_id, kb_id, document_previous, document_page_size, document_filter, dispatch);\n\n    } else if (selected_tab === 'syn-sets' && organisation_id !== '' && kb_id !== '') {\n        const page = getState().appReducer.synset_page;\n        const page_size = getState().appReducer.synset_page_size;\n        const filter = getState().appReducer.synset_filter;\n        await _getSynSets(organisation_id, kb_id, page, page_size, filter, dispatch);\n        dispatch({type: RESET_SYNSET_PAGINATION});\n\n    } else if (selected_tab === 'inventory' && organisation_id !== '' && kb_id !== '') {\n        await _getInventorizeList(organisation_id, kb_id, dispatch);\n\n    } else if (selected_tab === 'reports' && organisation_id !== '' && kb_id !== '') {\n        const top = getState().appReducer.report_num_items;\n        const date = new Date(getState().appReducer.report_date);\n        const year = date.getFullYear();\n        const month = date.getMonth() + 1;\n        await _getReports(organisation_id, kb_id, year, month, top, dispatch);\n\n    } else if (selected_tab === 'logs' && organisation_id !== '') {\n        const date = new Date(getState().appReducer.log_date);\n        const year = date.getFullYear();\n        const month = date.getMonth() + 1;\n        const day = date.getDate();\n        const hour = date.getHours();\n        const hours = getState().appReducer.log_hours;\n        await _getLogList(year, month, day, hour, hours, dispatch);\n\n    } else if (selected_tab === 'mind') {\n        dispatch({type:RESET_MIND_ITEM_PAGINATION});\n        dispatch({type: BUSY, busy: true});\n        const mind_item_filter = getState().appReducer.mind_item_filter;\n        const mind_item_page_size = getState().appReducer.mind_item_page_size;\n        if (organisation_id && kb_id) {\n            await _getMindItems(organisation_id, kb_id, null, mind_item_filter, mind_item_page_size, dispatch);\n        } else {\n            dispatch({type: SET_MIND_ITEMS_PAGINATED, data: {mindItemList: [], numMindItems: 0, filter: ''} });\n        }\n\n    } else if (selected_tab === 'synonyms') {\n        dispatch({type: RESET_SYNONYM_PAGINATION});\n        dispatch({type: BUSY, busy: true});\n        const synonym_filter = getState().appReducer.synonym_filter;\n        const synonym_page_size = getState().appReducer.synonym_page_size;\n        if (organisation_id && kb_id) {\n            await _getSynonyms(organisation_id, kb_id, \"\", synonym_filter, synonym_page_size, dispatch);\n        } else {\n            dispatch({type: SET_SYNONYMS_PAGINATED, data: {synonymList: [], numSynonyms: 0, filter: \"\"} });\n        }\n\n    } else if (selected_tab === 'semantics') {\n        dispatch({type: RESET_SEMANTIC_PAGINATION});\n        dispatch({type: BUSY, busy: true});\n        const semantic_filter = getState().appReducer.semantic_filter;\n        const semantic_page_size = getState().appReducer.semantic_page_size;\n        if (organisation_id && kb_id) {\n            await _getSemantics(organisation_id, kb_id, \"\", semantic_filter, semantic_page_size, dispatch);\n        } else {\n            dispatch({type: SET_SEMANTICS_PAGINATED, data: {semanticList: [], numSemantics: 0, filter: \"\"} });\n        }\n\n    } else if (selected_tab === 'active directory') {\n        dispatch({type: BUSY, busy: true});\n        if (organisation_id && kb_id) {\n            await _getDomains(organisation_id, kb_id, 0, 10, '', dispatch);\n        } else {\n            dispatch({type: GET_DOMAINS, domain_list: []});\n        }\n    }\n\n}\n\n\n// application creators / actions\nexport const appCreators = {\n\n    // do a sign in\n    signIn: (email, password, callback) => async (dispatch, getState) => {\n        if (email && email.length > 0 && password && password.length > 0) {\n            dispatch({type: BUSY, busy: true});\n            await Comms.http_post('/auth/sign-in', {\"email\": email, \"password\": password},\n                (response) => {\n                    dispatch({type: SIGN_IN, session: response.data.session, user: response.data.user});\n                    if (callback) {\n                        callback();\n                    }\n                },\n                (errStr) => { dispatch({type: ERROR, title: \"Error\", error: errStr}) }\n            )\n        } else {\n            dispatch({type: ERROR, title: \"Error\", error: 'please complete and check all fields'});\n        }\n    },\n\n    signOut: () => async (dispatch, getState) => {\n        appCreators.setLogRefresh(0);   // stop log fetching\n        dispatch({type: SIGN_OUT});\n    },\n\n    notBusy: () => async (dispatch, getState) => {\n        dispatch({type: BUSY, busy: false});\n    },\n\n    setTheme: (theme) => async (dispatch, getState) => {\n        dispatch({type: SET_THEME, theme: theme});\n    },\n\n    passwordResetRequest: (email) => ({type: PASSWORD_RESET_REQUEST}),\n\n    resetPassword: (email, newPassword, reset_id) => ({type: RESET_PASSWORD, email, newPassword, reset_id}),\n\n    getStats: (year, month, top) => ({type: GET_STATS, year, month, top}),\n\n    getOSMessages: () => ({type: GET_OS_MESSAGES}),\n\n    restoreSystem: (data) => ({type: RESTORE_SYSTEM, data}),\n\n    getLicense: () => async (dispatch, getState) => {\n        dispatch({type: BUSY, busy: true});\n        await Comms.http_get('/auth/license',\n            (response) => {\n                dispatch(({type: GET_LICENSE, license: response.data}));\n            },\n            (errStr) => { dispatch({type: ERROR, title: \"Error\", error: errStr}) }\n        )\n    },\n\n    installLicense: (license_str) => async (dispatch, getState) => {\n        dispatch({type: BUSY, busy: true});\n        await Comms.http_post('/auth/license', {\"license\": license_str},\n            (response) => {\n                dispatch(({type: GET_LICENSE, license: response.data}));\n            },\n            (errStr) => { dispatch({type: ERROR, title: \"Error\", error: errStr}) }\n        )\n    },\n\n    setError: (title, error) => ({type: ERROR, title, error}),\n\n    closeError: () => ({type: CLOSE_ERROR}),\n\n    // set the active tab\n    selectTab: (selected_tab) => async (dispatch, getState) => {\n        dispatch(({type: SELECT_TAB, selected_tab}));\n        await _setupPage(selected_tab, dispatch, getState);\n    },\n\n    setupManager: () => async (dispatch, getState) => {\n        dispatch(({type: SELECT_TAB, selected_tab: 'knowledge bases'}));\n        await _getOrganisationList('', '', '', true, dispatch);\n        await _setupPage('knowledge bases', dispatch, getState);\n    },\n\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////\n    // Notification system\n\n    hideNotifications: () => ({type: HIDE_NOTIFICATIONS}),\n\n    showNotifications: () => ({type: SHOW_NOTIFICATIONS}),\n\n    getNotifications: () => async (dispatch, getState) => {\n        if (!notification_busy) {\n            notification_busy = true;\n            const nl = getState().appReducer.notification_list;\n            await Comms.http_get('/stats/stats/os',\n                (response) => {\n                    const notification_list = Api.merge_notifications(nl, response.data.notificationList);\n                    if (notification_list.length !== nl.length) { // update?\n                        dispatch(({type: SET_NOTIFICATION_LIST, notification_list}));\n                    }\n                    notification_busy = false;\n                },\n                (errStr) => {\n                    console.log(\"error getting os-messages:\" + errStr);\n                    notification_busy = false;\n                }\n            )\n        }\n    },\n\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////\n    // Organisations\n\n    // retrieve list of all organisations from server\n    getOrganisationList: () => async (dispatch, getState) => {\n        dispatch({type: BUSY, busy: true});\n        const name = getState().appReducer.selected_organisation;\n        const id = getState().appReducer.selected_organisation_id;\n        const filter = getState().appReducer.organisation_filter;\n        await _getOrganisationList(name, id, filter, true, dispatch);\n    },\n\n    // select an organisation for operational stuff\n    selectOrganisation: (name, id) => async (dispatch, getState) => {\n        if (id && id.length > 0) {\n            dispatch({type: BUSY, busy: true});\n            dispatch(({type: SELECT_ORGANISATION, name, id}));\n            await _getKnowledgeBases(id, dispatch);\n\n            const selected_tab = getState().appReducer.selected_tab;\n            await _setupPage(selected_tab, dispatch, getState);\n        }\n    },\n\n    setOrganisationFilter: (filter) => ({type: SET_ORGANISATION_FILTER, filter}),\n\n    // organisation save\n    updateOrganisation: (organisation) => async (dispatch, getState) => {\n        dispatch({type: BUSY, busy: true});\n        await Comms.http_put('/auth/organisation',\n            organisation,\n            (response) => {\n                dispatch(({type: UPDATE_ORGANISATION, organisation: response.data}));\n            },\n            (errStr) => { dispatch({type: ERROR, title: \"Error\", error: errStr}) }\n        )\n    },\n\n    // organisation remove\n    deleteOrganisation: (organisation_id) => async (dispatch, getState) => {\n        dispatch({type: BUSY, busy: true});\n        const name = getState().appReducer.selected_organisation;\n        const id = getState().appReducer.selected_organisation_id;\n        const filter = getState().appReducer.organisation_filter;\n        await Comms.http_delete('/auth/organisation/' + encodeURIComponent(organisation_id),\n            (response) => {\n                _getOrganisationList(name, id, filter, false, dispatch);\n                // did we just delete the active organisation?\n                if (id === organisation_id) {\n                    dispatch({type: SELECT_ORGANISATION, name: '', id: ''});\n                    dispatch({type: GET_KNOWLEDGE_BASES, knowledge_base_list: []});\n                }\n            },\n            (errStr) => { dispatch({type: ERROR, title: \"Error\", error: errStr}) }\n        )\n    },\n\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////\n    // Knowledge bases\n\n    // selected a knowledge base for operational stuff\n    selectEdgeDevice: (name, id) => async (dispatch, getState) => {\n        if (id && id.length > 0) {\n            dispatch({type: BUSY, busy: true});\n            const selected_tab = getState().appReducer.selected_tab;\n            dispatch({type: SELECT_EDGE_DEVICE, name, id});\n            await _setupPage(selected_tab, dispatch, getState);\n        }\n    },\n\n    // selected a knowledge base for operational stuff\n    selectKnowledgeBase: (name, id) => async (dispatch, getState) => {\n        if (id && id.length > 0) {\n            dispatch({type: BUSY, busy: true});\n            const selected_tab = getState().appReducer.selected_tab;\n            dispatch({type: SELECT_KNOWLEDGE_BASE, name, id});\n            await _setupPage(selected_tab, dispatch, getState);\n        }\n    },\n\n    // retrieve list of all organisations from server\n    getKnowledgeBases: () => async (dispatch, getState) => {\n        await _getKnowledgeBases(getState().appReducer.selected_organisation_id, dispatch);\n    },\n\n    optimizeIndexes: (organisation_id, kb_id) => async (dispatch, getState) => {\n        dispatch({type: BUSY, busy: true});\n        const data = {'organisationId': organisation_id, 'kbId': kb_id};\n        await Comms.http_put('/language/optimize-indexes', data,\n            (response) => {\n                dispatch({type: BUSY, busy: false});\n            },\n            (errStr) => { dispatch({type: ERROR, title: \"Error\", error: errStr}) }\n        )\n    },\n\n    reIndex: (organisation_id, kb_id) => async (dispatch, getState) => {\n        dispatch({type: BUSY, busy: true});\n        await Comms.http_get('/knowledgebase/re-index/' + encodeURIComponent(organisation_id) + '/' + encodeURIComponent(kb_id),\n            (response) => {\n                dispatch({type: BUSY, busy: false});\n            },\n            (errStr) => { dispatch({type: ERROR, title: \"Error\", error: errStr}) }\n        )\n    },\n\n    deleteKnowledgeBase: (organisation_id, kb_id) => async (dispatch, getState) => {\n        dispatch({type: BUSY, busy: true});\n        await Comms.http_delete('/knowledgebase/' + encodeURIComponent(organisation_id) + '/' + encodeURIComponent(kb_id),\n            (response) => {\n                _getKnowledgeBases(organisation_id, dispatch);\n                dispatch({type: SELECT_KNOWLEDGE_BASE, name: '', id: ''});\n            },\n            (errStr) => { dispatch({type: ERROR, title: \"Error\", error: errStr}) }\n        )\n    },\n\n    updateKnowledgeBase: (organisation_id, kb_id, name, email, security_id, enabled, max_queries_per_day,\n                          analytics_window_size_in_months, operator_enabled, capacity_warnings,\n                          created, index_optimization_schedule) => async (dispatch, getState) => {\n        dispatch({type: BUSY, busy: true});\n        const payload = {\"kbId\": kb_id, \"organisationId\": organisation_id, \"name\": name, \"email\": email,\n            \"securityId\": security_id, \"maxQueriesPerDay\": max_queries_per_day, \"enabled\": enabled,\n            \"analyticsWindowInMonths\": analytics_window_size_in_months, \"operatorEnabled\": operator_enabled,\n            \"capacityWarnings\": capacity_warnings, \"created\": created, \"indexOptimizationSchedule\": index_optimization_schedule};\n        await Comms.http_put('/knowledgebase/', payload,\n            (response) => {\n                _getKnowledgeBases(organisation_id, dispatch);\n            },\n            (errStr) => { dispatch({type: ERROR, title: \"Error\", error: errStr}) }\n        )\n    },\n\n    createInventory: () => async (dispatch, getState) => {\n        dispatch({type: BUSY, busy: true});\n        const organisation_id = getState().appReducer.selected_organisation_id;\n        const kb_id = getState().appReducer.selected_knowledgebase_id;\n        await Comms.http_post('/document/inventorize',\n            {\"kbId\": kb_id, \"organisationId\": organisation_id},\n            (response) => {\n                _getInventorizeList(organisation_id, kb_id, dispatch);\n            },\n            (errStr) => {\n                dispatch({type: ERROR, title: \"Error\", error: errStr})\n            }\n        )\n    },\n\n    getInventoryList: () => async (dispatch, getState) => {\n        const organisation_id = getState().appReducer.selected_organisation_id;\n        const kb_id = getState().appReducer.selected_knowledgebase_id;\n        await _getInventorizeList(organisation_id, kb_id, dispatch);\n    },\n\n    // remove a document (delete) from the system\n    deleteInventoryItem: (dateTime) => async (dispatch, getState) => {\n        const organisation_id = getState().appReducer.selected_organisation_id;\n        const kb_id = getState().appReducer.selected_knowledgebase_id;\n        if (organisation_id.length > 0 && kb_id.length > 0) {\n            dispatch({type: BUSY, busy: true});\n            const full_url = '/document/parquet/' + encodeURIComponent(organisation_id) + '/' +\n                                encodeURIComponent(kb_id) + '/' + encodeURIComponent(dateTime);\n            await Comms.http_delete(full_url,\n                (response) => {\n                    _getInventorizeList(organisation_id, kb_id, dispatch);\n                },\n                (errStr) => { dispatch({type: ERROR, title: \"Error\", error: errStr}) }\n            )\n        }\n    },\n\n    getInventoryBusy: () => async (dispatch, getState) => {\n        const organisation_id = getState().appReducer.selected_organisation_id;\n        const kb_id = getState().appReducer.selected_knowledgebase_id;\n        if (organisation_id.length > 0 && kb_id.length > 0) {\n            dispatch({type: BUSY, busy: true});\n            await Comms.http_get('/document/inventorize/' + encodeURIComponent(organisation_id),\n                (response) => {\n                    dispatch({type: GET_INVENTORIZE_BUSY, busy: response.data});\n                },\n                (errStr) => {\n                    dispatch({type: ERROR, title: \"Error\", error: errStr})\n                }\n            )\n        }\n    },\n\n    forceInventoryBusy: () => (dispatch, getState) => {\n        dispatch({type: GET_INVENTORIZE_BUSY, busy: true});\n    },\n\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////\n    // Users\n\n    getUsers: (organisation_id) => async (dispatch, getState) => {\n        const filter = getState().appReducer.user_filter;\n        await _getUsers(organisation_id, filter, dispatch)\n    },\n\n    updateUser: (organisation_id, user_id, name, surname, email, password, role_list, kb_list) => async (dispatch, getState) => {\n        dispatch({type: BUSY, busy: true});\n        const filter = getState().appReducer.user_filter;\n        const signed_in_user = getState().appReducer.user;\n        const actual_role_data = [];\n        for (const roleStr of role_list) {\n            actual_role_data.push({\"userId\": user_id, \"organisationId\": organisation_id, \"role\": roleStr});\n        }\n        const actual_kb_list_data = [];\n        for (const kb of kb_list) {\n            actual_kb_list_data.push({\"userId\": user_id, \"organisationId\": organisation_id, \"kbId\": kb.kbId});\n        }\n        await Comms.http_put('/auth/user/' + encodeURIComponent(organisation_id),\n            {\"id\": user_id, \"password\": password, \"firstName\": name, \"surname\": surname, \"email\": email, \"roles\": actual_role_data,\n                \"operatorKBList\": actual_kb_list_data},\n            (response) => {\n                const user = response.data;\n                let had_operator_role = false;\n                let has_operator_role = false;\n                if (user && signed_in_user && user.id === signed_in_user.id) {\n                    for (const role of signed_in_user.roles) {\n                        if (role && role.role === 'operator') {\n                            had_operator_role = true;\n                        }\n                    }\n                    for (const role of user.roles) {\n                        if (role && role.role === 'operator') {\n                            has_operator_role = true;\n                        }\n                    }\n                    // we need to ask if they want to receive html events!\n                    if (!had_operator_role && has_operator_role) {\n                        _getHtmlNotifications(dispatch);\n                    }\n                    dispatch({type: UPDATE_USER, user: user});\n                }\n                _getUsers(organisation_id, filter, dispatch)\n\n            },\n            (errStr) => { dispatch({type: ERROR, title: \"Error\", error: errStr}) }\n        )\n    },\n\n    deleteUser: (organisation_id, user_id) => async (dispatch, getState) => {\n        dispatch({type: BUSY, busy: true});\n        const filter = getState().appReducer.user_filter;\n        await Comms.http_delete('/auth/organisation/user/' + encodeURIComponent(user_id) + '/' +\n            encodeURIComponent(organisation_id),\n            (response) => {\n                _getUsers(organisation_id, filter, dispatch)\n            },\n            (errStr) => { dispatch({type: ERROR, title: \"Error\", error: errStr}) }\n        )\n    },\n\n    setUserFilter: (filter) => ({type: SET_USER_FILTER, filter}),\n\n    uploadProgram: (payload) => async (dispatch, getState) => {\n        dispatch({type: BUSY, busy: true});\n        dispatch(({type: UPLOADING_PROGRAM}));\n        await Comms.http_put('/knowledgebase/upload', payload,\n            (response) => {\n                dispatch(({type: UPLOADING_PROGRAM_FINISHED}));\n            },\n            (errStr) => { dispatch({type: ERROR, title: \"Error\", error: errStr}) }\n        );\n    },\n\n    // {\"organisationId\": \"\", \"kbId\": \"\", \"sid\": \"\", \"sourceId\": 0, \"data\": \";base64,\" + data}\n    wpUploadArchive: (payload) => async (dispatch, getState) => {\n        dispatch({type: BUSY, busy: true});\n        dispatch(({type: UPLOADING_WP_ARCHIVE}));\n        // get the sid\n        const kb_list = getState().appReducer.knowledge_base_list;\n        let sid = \"\";\n        if (kb_list) {\n            for (const kb of kb_list) {\n                if (kb.kbId === payload.kbId) {\n                    sid = kb.securityId;\n                    break;\n                }\n            }\n        }\n        payload.sid = sid;\n        await Comms.http_post('/crawler/admin/upload/archive', payload,\n            (response) => {\n                dispatch(({type: UPLOADING_WP_ARCHIVE_FINISHED}));\n            },\n            (errStr) => { dispatch({type: ERROR, title: \"Error\", error: errStr}) }\n        );\n    },\n\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////\n    // Crawlers\n\n    getCrawlers: (organisation_id, kb_id) => async (dispatch, getState) => {\n        await _getCrawlers(organisation_id, kb_id, dispatch)\n    },\n\n    updateCrawler: (crawler) => async (dispatch, getState) => {\n        dispatch({type: BUSY, busy: true});\n        const organisation_id = getState().appReducer.selected_organisation_id;\n        const kb_id = getState().appReducer.selected_knowledgebase_id;\n        await Comms.http_post('/crawler/crawler', crawler,\n            (response) => {\n                _getCrawlers(organisation_id, kb_id, dispatch)\n            },\n            (errStr) => { dispatch({type: ERROR, title: \"Error\", error: errStr}) }\n        )\n    },\n\n    deleteCrawlerDocuments: (crawler_id) => async (dispatch, getState) => {\n        dispatch({type: BUSY, busy: true});\n        const organisation_id = getState().appReducer.selected_organisation_id;\n        const kb_id = getState().appReducer.selected_knowledgebase_id;\n        await Comms.http_delete('/crawler/crawler/document/' + encodeURIComponent(organisation_id) + '/' + encodeURIComponent(kb_id) + '/' + encodeURIComponent(crawler_id),\n            (response) => {\n                _getCrawlers(organisation_id, kb_id, dispatch)\n            },\n            (errStr) => { dispatch({type: ERROR, title: \"Error\", error: errStr}) }\n        )\n    },\n\n    deleteCrawler: (crawler_id) => async (dispatch, getState) => {\n        dispatch({type: BUSY, busy: true});\n        const organisation_id = getState().appReducer.selected_organisation_id;\n        const kb_id = getState().appReducer.selected_knowledgebase_id;\n        await Comms.http_delete('/crawler/crawler/' + encodeURIComponent(organisation_id) + '/' +\n                                    encodeURIComponent(kb_id) + '/' + encodeURIComponent(crawler_id),\n            (response) => {\n                _getCrawlers(organisation_id, kb_id, dispatch)\n            },\n            (errStr) => { dispatch({type: ERROR, title: \"Error\", error: errStr}) }\n        )\n    },\n\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////\n    // Active Directory / Domains\n\n    getDomains: (organisation_id, kb_id) => async (dispatch, getState) => {\n        await _getDomains(organisation_id, kb_id, 0, 10, \"\", dispatch);\n    },\n\n    updateDomain: (domain) => async (dispatch, getState) => {\n        dispatch({type: BUSY, busy: true});\n        const organisation_id = getState().appReducer.selected_organisation_id;\n        const kb_id = getState().appReducer.selected_knowledgebase_id;\n        await Comms.http_put('/knowledgebase/domain', domain,\n            (response) => {\n                _getDomains(organisation_id, kb_id, 0, 10, \"\", dispatch);\n            },\n            (errStr) => { dispatch({type: ERROR, title: \"Error\", error: errStr}) }\n        )\n    },\n\n    testDomain: (domain) => async (dispatch, getState) => {\n        dispatch({type: BUSY, busy: true});\n        await Comms.http_put('/knowledgebase/domain/test', domain,\n            (response) => {\n                dispatch({type: ERROR, title: \"Success\", error: \"Connected Successfully\"});\n            },\n            (errStr) => { dispatch({type: ERROR, title: \"Error\", error: errStr}) }\n        )\n    },\n\n\n    deleteDomain: (domain_id) => async (dispatch, getState) => {\n        dispatch({type: BUSY, busy: true});\n        const organisation_id = getState().appReducer.selected_organisation_id;\n        const kb_id = getState().appReducer.selected_knowledgebase_id;\n        await Comms.http_delete('/knowledgebase/domain/' + encodeURIComponent(organisation_id) + '/' +\n            encodeURIComponent(kb_id) + '/' + encodeURIComponent(domain_id),\n            (response) => {\n                _getDomains(organisation_id, kb_id, 0, 10, \"\", dispatch);\n            },\n            (errStr) => { dispatch({type: ERROR, title: \"Error\", error: errStr}) }\n        )\n    },\n\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////\n    // Documents\n\n    getDocuments: () => async (dispatch, getState) => {\n        dispatch({type: BUSY, busy: true});\n        const organisation_id = getState().appReducer.selected_organisation_id;\n        const kb_id = getState().appReducer.selected_knowledgebase_id;\n        const document_filter = getState().appReducer.document_filter;\n        const prev_document_filter = getState().appReducer.prev_document_filter;\n        const document_page_size = getState().appReducer.document_page_size;\n        let document_previous = getState().appReducer.document_previous;\n        // filter criteria changed?\n        if (prev_document_filter !== document_filter) {\n            dispatch({type:RESET_DOCUMENT_PAGINATION});\n            document_previous = null;\n        }\n        if (organisation_id && kb_id) {\n            await _getDocuments(organisation_id, kb_id, document_previous, document_page_size, document_filter, dispatch);\n        }\n    },\n\n    // update the document search filter (document_filter)\n    setDocumentFilter: (filter) => ({type: SET_DOCUMENT_FILTER, filter}),\n\n    // remove a document (delete) from the system\n    deleteDocument: (url, crawler_id) => async (dispatch, getState) => {\n        dispatch({type: BUSY, busy: true});\n        const organisation_id = getState().appReducer.selected_organisation_id;\n        const kb_id = getState().appReducer.selected_knowledgebase_id;\n        const document_filter = getState().appReducer.document_filter;\n        const prev_document_filter = getState().appReducer.prev_document_filter;\n        const document_page_size = getState().appReducer.document_page_size;\n        let document_previous = getState().appReducer.document_previous;\n        if (organisation_id && kb_id && url) {\n            // filter criteria changed?\n            if (prev_document_filter !== document_filter) {\n                dispatch({type:RESET_DOCUMENT_PAGINATION});\n                document_previous = null;\n            }\n            const full_url = '/document/document/' + encodeURIComponent(organisation_id) + '/' +\n                                    encodeURIComponent(kb_id) + '/' + btoa(unescape(encodeURIComponent(url))) + '/' +\n                                    encodeURIComponent(crawler_id);\n            await Comms.http_delete(full_url,\n                (response) => {\n                    _getDocuments(organisation_id, kb_id, document_previous, document_page_size, document_filter, dispatch);\n                },\n                (errStr) => { dispatch({type: ERROR, title: \"Error\", error: errStr}) }\n            )\n        }\n    },\n\n    // update the document paged set\n    setDocumentPage: (page) => async (dispatch, getState) => {\n        dispatch({type: BUSY, busy: true});\n        const organisation_id = getState().appReducer.selected_organisation_id;\n        const kb_id = getState().appReducer.selected_knowledgebase_id;\n        const document_filter = getState().appReducer.document_filter;\n        const document_page_size = getState().appReducer.document_page_size;\n\n        const prevPage = getState().appReducer.document_page;\n        const document_nav_list = getState().appReducer.document_nav_list;\n        const document_list = getState().appReducer.document_list;\n        if (page !== prevPage && page >= 0) {\n            if (page > prevPage) {\n                if (document_list.length > 0) {\n                    const prev_url = document_list[document_list.length - 1].url;\n                    dispatch(({type: SET_DOCUMENT_PAGE, page, prev_url}));\n                    await _getDocuments(organisation_id, kb_id, prev_url, document_page_size, document_filter, dispatch);\n                }\n            } else if (page < document_nav_list.length) {\n                const prev_url = document_nav_list[page];\n                dispatch(({type: SET_DOCUMENT_PAGE, page, prev_url}));\n                await _getDocuments(organisation_id, kb_id, prev_url, document_page_size, document_filter, dispatch);\n            }\n        }\n    },\n\n    // update the document paged set\n    setDocumentPageSize: (page_size) => async (dispatch, getState) => {\n        dispatch({type: BUSY, busy: true});\n        dispatch(({type: SET_DOCUMENT_PAGE_SIZE, page_size}));\n\n        const organisation_id = getState().appReducer.selected_organisation_id;\n        const kb_id = getState().appReducer.selected_knowledgebase_id;\n        const document_filter = getState().appReducer.document_filter;\n        await _getDocuments(organisation_id, kb_id, null, page_size, document_filter, dispatch);\n    },\n\n\n    // refresh / re-parse etc. a document\n    reprocessDocument: (document) => async (dispatch, getState) => {\n        const document_filter = getState().appReducer.document_filter;\n        const document_previous = getState().appReducer.document_previous;\n        const page_size = getState().appReducer.document_page_size;\n        dispatch({type: BUSY, busy: true});\n        await Comms.http_post('/document/reprocess', {\n                \"organisationId\": document.organisationId, \"kbId\": document.kbId, \"url\": document.url\n            },\n            (response) => {\n                _getDocuments(document.organisationId, document.kbId, document_previous, page_size, document_filter, dispatch);\n            },\n            (errStr) => { dispatch({type: ERROR, title: \"Error\", error: errStr}) }\n        )\n    },\n\n\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////\n    // mind items\n\n    getMindItems: () => async (dispatch, getState) => {\n        dispatch({type: BUSY, busy: true});\n        const organisation_id = getState().appReducer.selected_organisation_id;\n        const kb_id = getState().appReducer.selected_knowledgebase_id;\n        const mind_item_filter = getState().appReducer.mind_item_filter;\n        const prev_mind_item_filter = getState().appReducer.prev_mind_item_filter;\n        const mind_item_page_size = getState().appReducer.mind_item_page_size;\n        let prev_id = getState().appReducer.mind_item_previous;\n        // filter criteria changed?\n        if (prev_mind_item_filter !== mind_item_filter) {\n            dispatch({type:RESET_DOCUMENT_PAGINATION});\n            prev_id = null;\n        }\n        if (organisation_id && kb_id) {\n            await _getMindItems(organisation_id, kb_id, prev_id, mind_item_filter, mind_item_page_size, dispatch);\n        }\n    },\n\n    // update the mind-item paged set\n    setMindItemPage: (page) => async (dispatch, getState) => {\n        dispatch({type: BUSY, busy: true});\n        const organisation_id = getState().appReducer.selected_organisation_id;\n        const kb_id = getState().appReducer.selected_knowledgebase_id;\n        const mi_filter = getState().appReducer.mind_item_filter;\n        const mi_page_size = getState().appReducer.mind_item_page_size;\n        const prevPage = getState().appReducer.mind_item_page;\n        const mind_item_nav_list = getState().appReducer.mind_item_nav_list;\n        const mind_item_list = getState().appReducer.mind_item_list;\n        if (page !== prevPage && page >= 0) {\n            if (page > prevPage) {\n                if (mind_item_list.length > 0) {\n                    const prev_id = mind_item_list[mind_item_list.length - 1].id;\n                    dispatch(({type: SET_MIND_ITEM_PAGE, page, prev_id}));\n                    await _getMindItems(organisation_id, kb_id, prev_id, mi_filter, mi_page_size, dispatch);\n                }\n            } else if (page < mind_item_nav_list.length) {\n                const prev_id = mind_item_nav_list[page];\n                dispatch(({type: SET_MIND_ITEM_PAGE, page, prev_id}));\n                await _getMindItems(organisation_id, kb_id, prev_id, mi_filter, mi_page_size, dispatch);\n            }\n        }\n    },\n\n    // update the mind-item paged set\n    setMindItemPageSize: (page_size) => async (dispatch, getState) => {\n        dispatch({type: BUSY, busy: true});\n        dispatch(({type: SET_MIND_ITEM_PAGE_SIZE, page_size}));\n\n        const organisation_id = getState().appReducer.selected_organisation_id;\n        const kb_id = getState().appReducer.selected_knowledgebase_id;\n        const mi_filter = getState().appReducer.mind_item_filter;\n        await _getMindItems(organisation_id, kb_id, null, mi_filter, page_size, dispatch);\n    },\n\n\n    // update the mind item search filter\n    setMindItemFilter: (filter) => ({type: SET_MIND_ITEM_FILTER, filter}),\n\n    // remove a mind item by id\n    deleteMindItem: (id) => async (dispatch, getState) => {\n        dispatch({type: BUSY, busy: true});\n        const organisation_id = getState().appReducer.selected_organisation_id;\n        const kb_id = getState().appReducer.selected_knowledgebase_id;\n        const mind_item_filter = getState().appReducer.mind_item_filter;\n        const mind_item_page_size = getState().appReducer.mind_item_page_size;\n        const prev_id = getState().appReducer.mind_item_previous;\n        await Comms.http_delete('/bot/ui-delete/' + encodeURIComponent(organisation_id) + '/' +\n            encodeURIComponent(kb_id) + '/' + encodeURIComponent(id),\n            (response) => {\n                _getMindItems(organisation_id, kb_id, prev_id, mind_item_filter, mind_item_page_size, dispatch);\n            },\n            (errStr) => { dispatch({type: ERROR, title: \"Error\", error: errStr}) }\n        )\n    },\n\n    // remove a mind item by id\n    deleteAllMindItems: () => async (dispatch, getState) => {\n        dispatch({type: BUSY, busy: true});\n        const organisation_id = getState().appReducer.selected_organisation_id;\n        const kb_id = getState().appReducer.selected_knowledgebase_id;\n        const mind_item_filter = getState().appReducer.mind_item_filter;\n        const mind_item_page_size = getState().appReducer.mind_item_page_size;\n        const prev_id = getState().appReducer.mind_item_previous;\n        await Comms.http_delete('/bot/ui-delete-all/' + encodeURIComponent(organisation_id) + '/' + encodeURIComponent(kb_id),\n            (response) => {\n                _getMindItems(organisation_id, kb_id, prev_id, mind_item_filter, mind_item_page_size, dispatch);\n            },\n            (errStr) => { dispatch({type: ERROR, title: \"Error\", error: errStr}) }\n        )\n    },\n\n    // save a mind item to simsage\n    saveMindItem: (mindItem) => async (dispatch, getState) => {\n        dispatch({type: BUSY, busy: true});\n        const organisation_id = getState().appReducer.selected_organisation_id;\n        const kb_id = getState().appReducer.selected_knowledgebase_id;\n        const mind_item_filter = getState().appReducer.mind_item_filter;\n        const mind_item_page_size = getState().appReducer.mind_item_page_size;\n        const prev_id = getState().appReducer.mind_item_previous;\n        await Comms.http_put('/bot/ui-save/' + encodeURIComponent(organisation_id) + '/' +\n            encodeURIComponent(kb_id), mindItem,\n            (response) => {\n                _getMindItems(organisation_id, kb_id, prev_id, mind_item_filter, mind_item_page_size, dispatch);\n            },\n            (errStr) => { dispatch({type: ERROR, title: \"Error\", error: errStr}) }\n        )\n    },\n\n    botQuery: () => async (dispatch, getState) => {\n        dispatch({type: BUSY, busy: true});\n        const organisation_id = getState().appReducer.selected_organisation_id;\n        const kb_id = getState().appReducer.selected_knowledgebase_id;\n        const bot_query_page_size = getState().appReducer.bot_query_page_size;\n        const bot_query_threshold = getState().appReducer.bot_query_threshold;\n        const bot_query = getState().appReducer.bot_query;\n        if (bot_query.length > 0) {\n            const data = {\n                organisationId: organisation_id,\n                kbId: kb_id,\n                query: bot_query,\n                numResults: bot_query_page_size,\n                scoreThreshold: bot_query_threshold,\n            };\n            await Comms.http_put('/bot/query', data,\n                (response) => {\n                    dispatch({type: SET_BOT_QUERY_LIST, bot_query_result_list: response.data});\n                },\n                (errStr) => {\n                    dispatch({type: ERROR, title: \"Error\", error: errStr})\n                }\n            );\n        } else {\n            dispatch({type: SET_BOT_QUERY_LIST, bot_query_result_list: []});\n        }\n    },\n\n    setBotQueryString: (query) => async (dispatch, getState) => {\n        dispatch({type: SET_BOT_QUERY_STRING, bot_query: query});\n    },\n\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////\n    // synonyms\n\n    getSynonyms: () => async (dispatch, getState) => {\n        dispatch({type: BUSY, busy: true});\n        const organisation_id = getState().appReducer.selected_organisation_id;\n        const kb_id = getState().appReducer.selected_knowledgebase_id;\n        const synonym_filter = getState().appReducer.synonym_filter;\n        const prev_synonym_filter = getState().appReducer.prev_synonym_filter;\n        const synonym_page_size = getState().appReducer.synonym_page_size;\n        let prev_id = getState().appReducer.synonym_prev_id;\n        // filter criteria changed?\n        if (prev_synonym_filter !== synonym_filter) {\n            dispatch({type: RESET_SYNONYM_PAGINATION});\n            prev_id = null;\n        }\n        if (organisation_id && kb_id) {\n            await _getSynonyms(organisation_id, kb_id, prev_id, synonym_filter, synonym_page_size, dispatch);\n        }\n    },\n\n    // update the synonym page\n    setSynonymPage: (page) => async (dispatch, getState) => {\n        dispatch({type: BUSY, busy: true});\n        const organisation_id = getState().appReducer.selected_organisation_id;\n        const kb_id = getState().appReducer.selected_knowledgebase_id;\n        const synonym_filter = getState().appReducer.synonym_filter;\n        const synonym_page_size = getState().appReducer.synonym_page_size;\n        const prevPage = getState().appReducer.synonym_page;\n        const synonym_nav_list = getState().appReducer.synonym_nav_list;\n        const synonym_list = getState().appReducer.synonym_list;\n        if (page !== prevPage && page >= 0) {\n            if (page > prevPage) {\n                if (synonym_list.length > 0) {\n                    const prev_id = synonym_list[synonym_list.length - 1].id;\n                    dispatch(({type: SET_SYNONYM_PAGE, page, prev_id}));\n                    await _getSynonyms(organisation_id, kb_id, prev_id, synonym_filter, synonym_page_size, dispatch);\n                }\n            } else if (page < synonym_nav_list.length) {\n                const prev_id = synonym_nav_list[page];\n                dispatch(({type: SET_SYNONYM_PAGE, page, prev_id}));\n                await _getSynonyms(organisation_id, kb_id, prev_id, synonym_filter, synonym_page_size, dispatch);\n            }\n        }\n    },\n\n    // update the synonym list page-size\n    setSynonymPageSize: (page_size) => async (dispatch, getState) => {\n        dispatch({type: BUSY, busy: true});\n        dispatch(({type: SET_SYNONYM_PAGE_SIZE, page_size}));\n\n        const organisation_id = getState().appReducer.selected_organisation_id;\n        const kb_id = getState().appReducer.selected_knowledgebase_id;\n        const synonym_filter = getState().appReducer.synonym_filter;\n        await _getSynonyms(organisation_id, kb_id, null, synonym_filter, page_size, dispatch);\n    },\n\n    deleteSynonym: (id) => async (dispatch, getState) => {\n        dispatch({type: BUSY, busy: true});\n        const organisation_id = getState().appReducer.selected_organisation_id;\n        const kb_id = getState().appReducer.selected_knowledgebase_id;\n        const prev_id = getState().appReducer.synonym_prev_id;\n        const filter = getState().appReducer.synonym_filter;\n        const page_size = getState().appReducer.synonym_page_size;\n        await Comms.http_delete('/language/delete-synonym/' + encodeURIComponent(organisation_id) + '/' +\n                                    encodeURIComponent(kb_id) + '/' + encodeURIComponent(id),\n            (response) => {\n                _getSynonyms(organisation_id, kb_id, prev_id, filter, page_size, dispatch);\n            },\n            (errStr) => { dispatch({type: ERROR, title: \"Error\", error: errStr})}\n        )\n    },\n\n    saveSynonym: (synonym) => async (dispatch, getState) => {\n        dispatch({type: BUSY, busy: true});\n        const organisation_id = getState().appReducer.selected_organisation_id;\n        const kb_id = getState().appReducer.selected_knowledgebase_id;\n        const prev_id = getState().appReducer.synonym_prev_id;\n        const filter = getState().appReducer.synonym_filter;\n        const page_size = getState().appReducer.synonym_page_size;\n        Comms.http_put('/language/save-synonym/' + encodeURIComponent(organisation_id) + '/' +\n                            encodeURIComponent(kb_id), synonym,\n            (response) => {\n                _getSynonyms(organisation_id, kb_id, prev_id, filter, page_size, dispatch);\n            },\n            (errStr) => { dispatch({type: ERROR, title: \"Error\", error: errStr})}\n        )\n    },\n\n    setSynonymFilter: (filter) => async (dispatch, getState) => {\n        dispatch({type: SET_SYNONYM_FILTER, synonym_filter: filter});\n    },\n\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////\n    // semantics\n\n    getSemantics: () => async (dispatch, getState) => {\n        dispatch({type: BUSY, busy: true});\n        const organisation_id = getState().appReducer.selected_organisation_id;\n        const kb_id = getState().appReducer.selected_knowledgebase_id;\n        const semantic_filter = getState().appReducer.semantic_filter;\n        const prev_semantic_filter = getState().appReducer.prev_semantic_filter;\n        const semantic_page_size = getState().appReducer.semantic_page_size;\n        let prev_word = getState().appReducer.semantic_prev_word;\n        // filter criteria changed?\n        if (prev_semantic_filter !== semantic_filter) {\n            dispatch({type: RESET_SEMANTIC_PAGINATION});\n            prev_word = null;\n        }\n        if (organisation_id && kb_id) {\n            await _getSemantics(organisation_id, kb_id, prev_word, semantic_filter, semantic_page_size, dispatch);\n        }\n    },\n\n    // update the semantic page\n    setSemanticPage: (page) => async (dispatch, getState) => {\n        dispatch({type: BUSY, busy: true});\n        const organisation_id = getState().appReducer.selected_organisation_id;\n        const kb_id = getState().appReducer.selected_knowledgebase_id;\n        const semantic_filter = getState().appReducer.semantic_filter;\n        const semantic_page_size = getState().appReducer.semantic_page_size;\n        const prevPage = getState().appReducer.semantic_page;\n        const semantic_nav_list = getState().appReducer.semantic_nav_list;\n        const semantic_list = getState().appReducer.semantic_list;\n        if (page !== prevPage && page >= 0) {\n            if (page > prevPage) {\n                if (semantic_list.length > 0) {\n                    const prev_word = semantic_list[semantic_list.length - 1].word;\n                    dispatch(({type: SET_SEMANTIC_PAGE, page, prev_word: prev_word}));\n                    await _getSemantics(organisation_id, kb_id, prev_word, semantic_filter, semantic_page_size, dispatch);\n                }\n            } else if (page < semantic_nav_list.length) {\n                const prev_word = semantic_nav_list[page];\n                dispatch(({type: SET_SEMANTIC_PAGE, page, prev_word}));\n                await _getSemantics(organisation_id, kb_id, prev_word, semantic_filter, semantic_page_size, dispatch);\n            }\n        }\n    },\n\n    // update the semantic page-size\n    setSemanticPageSize: (page_size) => async (dispatch, getState) => {\n        dispatch({type: BUSY, busy: true});\n        dispatch(({type: SET_SEMANTIC_PAGE_SIZE, page_size}));\n\n        const organisation_id = getState().appReducer.selected_organisation_id;\n        const kb_id = getState().appReducer.selected_knowledgebase_id;\n        const semantic_filter = getState().appReducer.semantic_filter;\n        await _getSemantics(organisation_id, kb_id, null, semantic_filter, page_size, dispatch);\n    },\n\n    deleteSemantic: (word) => async (dispatch, getState) => {\n        dispatch({type: BUSY, busy: true});\n        const organisation_id = getState().appReducer.selected_organisation_id;\n        const kb_id = getState().appReducer.selected_knowledgebase_id;\n        const filter = getState().appReducer.semantic_filter;\n        const prev_word = getState().appReducer.semantic_prev_word;\n        const page_size = getState().appReducer.semantic_page_size;\n        await Comms.http_delete('/language/delete-semantic/' + encodeURIComponent(organisation_id) + '/' +\n                                    encodeURIComponent(kb_id) + '/' + encodeURIComponent(word),\n            (response) => {\n                _getSemantics(organisation_id, kb_id, prev_word, filter, page_size, dispatch);\n            },\n            (errStr) => { dispatch({type: ERROR, title: \"Error\", error: errStr})}\n        )\n    },\n\n    findSemantics: () => async (dispatch, getState) => {\n        const organisation_id = getState().appReducer.selected_organisation_id;\n        const kb_id = getState().appReducer.selected_knowledgebase_id;\n        const filter = getState().appReducer.semantic_filter;\n        const page_size = getState().appReducer.semantic_page_size;\n        const prev_word = getState().appReducer.semantic_prev_word;\n        await _getSemantics(organisation_id, kb_id, prev_word, filter, page_size, dispatch);\n    },\n\n    saveSemantic: (semantic) => async (dispatch, getState) => {\n        dispatch({type: BUSY, busy: true});\n        const organisation_id = getState().appReducer.selected_organisation_id;\n        const kb_id = getState().appReducer.selected_knowledgebase_id;\n        const filter = getState().appReducer.semantic_filter;\n        const page_size = getState().appReducer.semantic_page_size;\n        const prev_word = '';\n        Comms.http_put('/language/save-semantic/' + encodeURIComponent(organisation_id) + '/' +\n                        encodeURIComponent(kb_id), semantic,\n            (response) => {\n                _getSemantics(organisation_id, kb_id, prev_word, filter, page_size, dispatch);\n            },\n            (errStr) => { dispatch({type: ERROR, title: \"Error\", error: errStr})}\n        )\n    },\n\n    setSemanticFilter: (filter) => async (dispatch, getState) => {\n        dispatch({type: SET_SEMANTIC_FILTER, semantic_filter: filter});\n    },\n\n    getSemanticDisplayCategories: () => async (dispatch, getState) => {\n        const organisation_id = getState().appReducer.selected_organisation_id;\n        const kb_id = getState().appReducer.selected_knowledgebase_id;\n        await _getSemanticDisplayCategories(organisation_id, kb_id, dispatch);\n    },\n\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////\n    // semantic display categories\n\n    saveSemanticDisplayCategory: (prevDisplayName, displayName, semanticList) => async (dispatch, getState) => {\n        const organisation_id = getState().appReducer.selected_organisation_id;\n        const kb_id = getState().appReducer.selected_knowledgebase_id;\n        await Comms.http_put('/language/semantic-display-category/',\n            {\"organisationId\": organisation_id, \"kbId\": kb_id, \"prevDisplayName\": prevDisplayName,\n                    \"displayName\": displayName, \"semanticList\": semanticList},\n            (response) => {\n                _getSemanticDisplayCategories(organisation_id, kb_id, dispatch);\n            },\n            (errStr) => { dispatch({type: ERROR, title: \"Error\", error: errStr})}\n        )\n    },\n\n    deleteSemanticDisplayCategory: (displayName) => async (dispatch, getState) => {\n        const organisation_id = getState().appReducer.selected_organisation_id;\n        const kb_id = getState().appReducer.selected_knowledgebase_id;\n        await Comms.http_delete('/language/semantic-display-category/' + encodeURIComponent(organisation_id) + '/' +\n            encodeURIComponent(kb_id) + '/' + encodeURIComponent(displayName),\n            (response) => {\n                _getSemanticDisplayCategories(organisation_id, kb_id, dispatch);\n            },\n            (errStr) => { dispatch({type: ERROR, title: \"Error\", error: errStr})}\n        )\n    },\n\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////\n    // syn-sets\n\n    deleteSynSet: (lemma) => async (dispatch, getState) => {\n        dispatch({type: BUSY, busy: true});\n        const organisation_id = getState().appReducer.selected_organisation_id;\n        const kb_id = getState().appReducer.selected_knowledgebase_id;\n        const page = getState().appReducer.synset_page;\n        const page_size = getState().appReducer.synset_page_size;\n        const filter = getState().appReducer.synset_filter;\n        await Comms.http_delete('/language/delete-syn-set/' + encodeURIComponent(organisation_id) + '/' +\n            encodeURIComponent(kb_id) + '/' + encodeURIComponent(lemma),\n            (response) => {\n                _getSynSets(organisation_id, kb_id, page, page_size, filter, dispatch);\n            },\n            (errStr) => { dispatch({type: ERROR, title: \"Error\", error: errStr})}\n        )\n    },\n\n    findSynSets: () => async (dispatch, getState) => {\n        const organisation_id = getState().appReducer.selected_organisation_id;\n        const kb_id = getState().appReducer.selected_knowledgebase_id;\n        const page = getState().appReducer.synset_page;\n        const page_size = getState().appReducer.synset_page_size;\n        const filter = getState().appReducer.synset_filter;\n        await _getSynSets(organisation_id, kb_id, page, page_size, filter, dispatch);\n    },\n\n    saveSynSet: (syn_set) => async (dispatch, getState) => {\n        dispatch({type: BUSY, busy: true});\n        const organisation_id = getState().appReducer.selected_organisation_id;\n        const kb_id = getState().appReducer.selected_knowledgebase_id;\n        const page = getState().appReducer.synset_page;\n        const page_size = getState().appReducer.synset_page_size;\n        const filter = getState().appReducer.synset_filter;\n        Comms.http_put('/language/save-syn-set/' + encodeURIComponent(organisation_id) + '/' +\n            encodeURIComponent(kb_id), syn_set,\n            (response) => {\n                _getSynSets(organisation_id, kb_id, page, page_size, filter, dispatch);\n            },\n            (errStr) => { dispatch({type: ERROR, title: \"Error\", error: errStr})}\n        )\n    },\n\n    setSynSetFilter: (filter) => async (dispatch, getState) => {\n        dispatch({type: SET_SYNSET_FILTER, synset_filter: filter});\n    },\n\n    // update the syn-set page\n    setSynSetPage: (page) => async (dispatch, getState) => {\n        dispatch({type: BUSY, busy: true});\n        const organisation_id = getState().appReducer.selected_organisation_id;\n        const kb_id = getState().appReducer.selected_knowledgebase_id;\n        const page_size = getState().appReducer.synset_page_size;\n        const filter = getState().appReducer.synset_filter;\n\n        dispatch(({type: SET_SYNSET_PAGE, page: page}));\n        await _getSynSets(organisation_id, kb_id, page, page_size, filter, dispatch);\n    },\n\n    // update the syn-set pagination size\n    setSynSetPageSize: (page_size) => async (dispatch, getState) => {\n        dispatch({type: BUSY, busy: true});\n        dispatch(({type: SET_SYNSET_PAGE_SIZE, page_size: page_size}));\n\n        const organisation_id = getState().appReducer.selected_organisation_id;\n        const kb_id = getState().appReducer.selected_knowledgebase_id;\n        const page = getState().appReducer.synset_page;\n        const filter = getState().appReducer.synset_filter;\n\n        await _getSynSets(organisation_id, kb_id, page, page_size, filter, dispatch);\n    },\n\n\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////\n    // reports\n\n    setReportDate: (report_date) => ({type: SET_REPORT_DATE, report_date}),\n\n    getReports: () => async (dispatch, getState) => {\n        const organisation_id = getState().appReducer.selected_organisation_id;\n        const kb_id = getState().appReducer.selected_knowledgebase_id;\n        const top = getState().appReducer.report_num_items;\n        const date = new Date(getState().appReducer.report_date);\n        const year = date.getFullYear();\n        const month = date.getMonth() + 1;\n        await _getReports(organisation_id, kb_id, year, month, top, dispatch);\n    },\n\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////\n    // operator\n\n    // add a new message to the list\n    processOperatorMessage: (message) => ({type: PROCESS_OPERATOR_MESSAGE, message}),\n\n    // set connected status of operator\n    setOperatorConnected: (connected) => ({type: SET_OPERATOR_CONNECTED, connected}),\n\n    // add a conversation to the list\n    addConversation: (operatorId, item) => ({type: ADD_CONVERSATION, operatorId, item}),\n\n    markConversationItemUsed: (operatorId, id) => ({type: MARK_CONVERSATION_USED, operatorId, id}),\n\n    operatorReady: (operatorId, ready) => ({type: OPERATOR_READY, operatorId, ready}),\n\n    setOperatorAnswer: (operatorId, id, answer) => ({type: SET_OPERATOR_ANSWER, operatorId, id, answer}),\n\n    setOperatorQuestion: (operatorId, id, question) => ({type: SET_OPERATOR_QUESTION, operatorId, id, question}),\n\n    clearPreviousAnswer: (operatorId) => ({type: CLEAR_PREVIOUS_ANSWER, operatorId}),\n\n    clearUser: (operatorId) => ({type: OPERATOR_CLEAR_USER, operatorId}),\n\n    addOperator: () => async (dispatch, getState) => {\n        const operators = getState().appReducer.operators;\n        if (operators.length < MAX_OPERATORS) {\n            dispatch({type: ADD_OPERATOR});\n        }\n    },\n\n    removeOperator: (id) => ({type: REMOVE_OPERATOR, id: id}),\n\n    stopClientTyping: (operator_id) => ({type: STOP_CLIENT_TYPING, operator_id: operator_id}),\n\n    // POST data to url for operator processing\n    sendOperatorMessage: (url, data) => async (dispatch, getState) => {\n        await Comms.http_post(url, data,\n            (response) => {\n            },\n            (errStr) => {\n                dispatch({type: ERROR, title: \"Error\", error: errStr})\n            }\n        )\n    },\n\n    //////////////////////////////////////////////////////////////////////////////////////////////////////////\n    // log list\n\n    getLogs: () => async (dispatch, getState) => {\n        const date = new Date(getState().appReducer.log_date);\n        const year = date.getFullYear();\n        const month = date.getMonth() + 1;\n        const day = date.getDate();\n        const hour = date.getHours();\n        const hours = getState().appReducer.log_hours;\n        await _getLogList(year, month, day, hour, hours, dispatch);\n    },\n\n    setLogDate: (log_date) => ({type: SET_LOG_DATE, log_date}),\n\n    setLogHours: (log_hours) => ({type: SET_LOG_HOURS, log_hours}),\n\n    setLogType: (log_type) => ({type: SET_LOG_TYPE, log_type}),\n\n    setLogService: (log_service) => ({type: SET_LOG_SERVICE, log_service}),\n\n    setLogRefresh: (log_refresh) => async (dispatch, getState) => {\n        dispatch({type: SET_LOG_REFRESH, log_refresh})\n    },\n\n    restartService: (subSystem) => async (dispatch, getState) => {\n        const session = getState().appReducer.session;\n        const organisation_id = getState().appReducer.selected_organisation_id;\n        await Comms.http_get('/stats/restart-service/' + encodeURIComponent(session.id) + '/' + encodeURIComponent(organisation_id) + '/' + encodeURIComponent(subSystem),\n            (response) => {},\n            (errStr) => {\n                dispatch({type: ERROR, title: \"Error\", error: errStr})\n            }\n        )\n    },\n\n    //////////////////////////////////////////////////////////////////////////////////////////////////////////\n    // Edge devices\n\n    // retrieve list of all organisations from server\n    getEdgeDevices: () => async (dispatch, getState) => {\n        await _getEdgeDevices(getState().appReducer.selected_organisation_id, dispatch);\n    },\n\n    deleteEdgeDevice: (organisation_id, edge_id) => async (dispatch, getState) => {\n        dispatch({type: BUSY, busy: true});\n        await Comms.http_delete('/edge/' + encodeURIComponent(organisation_id) + '/' + encodeURIComponent(edge_id),\n            (response) => {\n                _getEdgeDevices(organisation_id, dispatch);\n            },\n            (errStr) => { dispatch({type: ERROR, title: \"Error\", error: errStr}) }\n        )\n    },\n\n    updateEdgeDevice: (organisation_id, edge_id, name, created) => async (dispatch, getState) => {\n        dispatch({type: BUSY, busy: true});\n        const payload = {\"edgeId\": edge_id, \"organisationId\": organisation_id, \"name\": name, \"created\": created};\n        await Comms.http_put('/edge/', payload,\n            (response) => {\n                _getEdgeDevices(organisation_id, dispatch);\n            },\n            (errStr) => { dispatch({type: ERROR, title: \"Error\", error: errStr}) }\n        )\n    },\n\n    updateEdgeDeviceCommand: (organisation_id, edge_id, command, parameters, created) => async (dispatch, getState) => {\n        dispatch({type: BUSY, busy: true});\n        const payload = {\"edgeId\": edge_id, \"organisationId\": organisation_id, \"command\": command,\n                         \"parameters\": parameters, \"created\": created, \"executed\": 0, \"result\": \"\"};\n        await Comms.http_put('/edge/command', payload,\n            (response) => {\n                _getEdgeDeviceCommands(organisation_id, edge_id, dispatch);\n            },\n            (errStr) => { dispatch({type: ERROR, title: \"Error\", error: errStr}) }\n        )\n    },\n\n    deleteEdgeDeviceCommand: (organisation_id, edge_id, created) => async (dispatch, getState) => {\n        dispatch({type: BUSY, busy: true});\n        await Comms.http_delete('/edge/command/' + encodeURIComponent(organisation_id) + '/' + encodeURIComponent(edge_id) + '/' + encodeURIComponent(created),\n            (response) => {\n                _getEdgeDeviceCommands(organisation_id, edge_id, dispatch);\n            },\n            (errStr) => { dispatch({type: ERROR, title: \"Error\", error: errStr}) }\n        )\n    },\n\n    //////////////////////////////////////////////////////////////////////////////////////////////////////////\n    // html 5 notification permissions\n\n    getHtml5Notifications: () => async (dispatch, getState) => {\n        await _getHtmlNotifications(dispatch);\n    },\n\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////\n    // restore a text file on the server\n\n    restore: (base64_text) => async (dispatch, getState) => {\n        dispatch({type: BUSY, busy: true});\n        await Comms.http_put('/backup/restore', {\"data\": base64_text},\n            (response) => {\n                dispatch({type: BUSY, busy: false});\n            },\n            (errStr) => {\n                dispatch({type: ERROR, title: \"Error\", error: errStr})\n            })\n    },\n\n\n};\n\n","import React, {Component} from 'react';\nimport Grid from '@material-ui/core/Grid';\n\nimport {Switch} from \"@material-ui/core\";\nimport {connect} from \"react-redux\";\nimport {bindActionCreators} from \"redux\";\nimport {appCreators} from \"../actions/appActions\";\n\nconst styles = {\n    background: {\n        margin: '5px',\n        backgroundColor: '#fefefe',\n        padding: '15px',\n        height: '55px',\n        fontFamily: 'Tahoma',\n        fontWeight: '500',\n        color: '#888',\n        borderRadius: '4px',\n    },\n    logo_box: {\n        position: 'absolute',\n        left: '10px',\n        top: '10px'\n    },\n    logo: {\n        float: 'left',\n        width: '200px',\n    },\n    projectTitle: {\n        fontSize: '1.1em',\n        float: 'left',\n        marginLeft: '50px',\n        marginTop: '25px',\n    },\n    homeImageContainer: {\n        float: 'left',\n    },\n    themeSelect: {\n        marginRight: '20px',\n        marginTop: '4px',\n        float: 'left',\n    },\n    themeSelectLoggedIn: {\n        marginTop: '-10px',\n        marginRight: '10px',\n        float: 'left',\n    },\n    homeImage: {\n        width: '32px',\n    },\n    signOutImageContainer: {\n        paddingTop: '5px',\n    },\n    signOutImage: {\n        width: '22px',\n    },\n    bookButton: {\n        float: 'right',\n        marginRight: '20px',\n    },\n    bookImage: {\n        width: '32px',\n    },\n    versionText: {\n        fontSize: '0.8em',\n        marginLeft: '-20px',\n    }\n};\n\n\nexport class AppMenu extends Component {\n    constructor(props){\n        super(props);\n\n        this.state={\n            title: props.title,\n            signed_in: props.signed_in,\n            showDocumentation: window.location.toString().indexOf('/#/documentation') < 0,\n        };\n    }\n    componentDidMount() {\n        if (this.props.theme === 'light') {\n            document.getElementById('ss-body').className = 'light';\n        } else {\n            document.getElementById('ss-body').className = 'dark';\n        }\n    }\n    goWeb() {\n        window.location = window.ENV.web_base;\n    }\n    signOut() {\n        this.props.signOut();\n        window.location = \"/#/\";\n    }\n    // get the right logo file depending on the theme\n    getLogo() {\n        if (this.props.theme === 'dark') {\n            return \"../images/simsage-logo-white-no-strapline.svg\";\n        }\n        return \"../images/simsage-logo-no-strapline.svg\"; // default\n    }\n    flipTheme() {\n        if (this.props.theme !== 'light') {\n            this.props.setTheme('light');\n            document.getElementById('ss-body').className = 'light';\n        } else {\n            this.props.setTheme('dark');\n            document.getElementById('ss-body').className = 'dark';\n        }\n    }\n    render() {\n        const theme = this.props.theme;\n        return (\n            <div className={theme + \" menu-padding no-select\"}>\n                <div style={styles.logo_box}>\n                    <img alt=\"SimSage\" title=\"Search less; find more.\" style={styles.logo} src={this.getLogo()} onClick={() => this.goWeb()} />\n                </div>\n                <Grid container spacing={1}>\n                    <Grid item xs={2} />\n                    <Grid item xs={4}>\n                        <span style={styles.projectTitle}>{this.state.title}</span>\n                    </Grid>\n                    <Grid item xs={4} />\n                    <Grid item xs={2}>\n                        {\n                            <div style={this.state.signed_in ? styles.themeSelectLoggedIn : styles.themeSelect}>\n                                <Switch\n                                    checked={this.props.theme === 'light'}\n                                    onChange={() => this.flipTheme()}\n                                    title=\"change the SimSage theme from dark to light or vice versa\"\n                                    color=\"primary\"\n                                    name=\"checkedTheme\"\n                                    inputProps={{ 'aria-label': 'primary checkbox' }}\n                                />\n                            </div>\n                        }\n                        {\n                            !this.state.signed_in &&\n                            <span style={styles.homeImageContainer}>\n                                <img src={theme === 'light' ? \"../images/home.svg\" : \"../images/home-light.svg\"} alt=\"home\" title=\"home\" onClick={() => this.goWeb()}\n                                     style={styles.homeImage}/>\n                                 <div style={styles.versionText}>version {window.ENV.version}</div>\n                            </span>\n                        }\n                        {\n                            this.state.signed_in &&\n                            <span style={styles.signOutImageContainer}>\n                                <img src={theme === 'light' ? \"../images/sign-out.svg\" : \"../images/sign-out-light.svg\"} alt=\"sign-out\" title=\"sign-out\"\n                                     onClick={() => { this.signOut() }} style={styles.signOutImage}/>\n                            </span>\n                        }\n                    </Grid>\n                </Grid>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = function(state) {\n    return {\n        theme: state.appReducer.theme,\n    }\n};\n\nexport default connect(\n    mapStateToProps,\n    dispatch => bindActionCreators(appCreators, dispatch)\n)(AppMenu);\n","import React from 'react';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Button from '@material-ui/core/Button';\nimport InputLabel from '@material-ui/core/InputLabel';\n\n// display error dialog\nexport class ErrorDialog extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            open: false,\n            title: props.title,\n            message: props.message,\n            callback: props.callback,\n            has_error: false,\n        };\n    }\n    componentDidCatch(error, info) {\n        this.setState({ has_error: true });\n        console.log(error, info);\n    }\n    handleOk() {\n        this.setState({open: false});\n        if (this.state.callback) {\n            this.state.callback();\n        }\n    }\n    UNSAFE_componentWillReceiveProps(nextProps) {\n        // see if we have data to start this dialog\n        if (nextProps !== null && nextProps.message) {\n            this.setState({\n                open: (nextProps.message.length > 0),\n                message: nextProps.message,\n                title: nextProps.title\n            })\n        }\n    }\n    render() {\n        if (this.state.has_error) {\n            return <h1>error-dialog.js: Something went wrong.</h1>;\n        }\n        return (\n            <Dialog className=\"error-dialog\" ref=\"dialog\"\n                    aria-labelledby=\"alert-dialog-title\"\n                    aria-describedby=\"alert-dialog-description\"\n                    open={this.state.open}\n                    fullWidth={true}\n                    maxWidth=\"md\"\n                    onClose={() => this.handleOk()} >\n\n                <DialogTitle id=\"alert-dialog-title\" className={this.props.theme}><InputLabel error={true}>{this.state.title}</InputLabel></DialogTitle>\n                <DialogContent className={this.props.theme}>\n                    <div>\n                        {this.state.message}\n                    </div>\n                </DialogContent>\n                <DialogActions className={this.props.theme}>\n                    <Button variant=\"contained\" type=\"submit\" color=\"primary\" onClick={() => this.handleOk()}>Ok</Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nexport default ErrorDialog;\n","import React, {Component} from 'react';\n\nimport {MuiThemeProvider} from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport {darkTheme, lightTheme} from \"../theme-ui\";\nimport Grid from '@material-ui/core/Grid';\n\nimport AppMenu from './app-menu';\nimport ErrorDialog from '../common/error-dialog';\nimport {clearState} from '../reducers/stateLoader';\n\nimport {connect} from \"react-redux\";\nimport {bindActionCreators} from \"redux\";\nimport {appCreators} from \"../actions/appActions\";\nimport {CssBaseline} from \"@material-ui/core\";\n\n\nconst styles = {\n    center: {\n        textAlign: 'center',\n    },\n    hr: {\n        color: '#e0e0e0',\n        background: '#e0e0e0',\n        width: '30%',\n        height: '1px',\n        marginLeft: 'auto',\n        marginRight: 'auto',\n        marginTop: '20px',\n        marginBottom: '20px',\n    },\n    hr_dark: {\n        color: '#444',\n        background: '#444',\n        width: '30%',\n        height: '1px',\n        marginLeft: 'auto',\n        marginRight: 'auto',\n        marginTop: '20px',\n        marginBottom: '20px',\n    },\n    spinner: {\n        position: 'relative',\n        top: '-8px',\n        left: '40px',\n        width: '32px',\n    },\n    spinnerInvisible: {\n        display: 'none',\n        position: 'relative',\n        top: '-8px',\n        left: '40px',\n        width: '32px',\n    },\n    page: {\n        textAlign: 'center',\n        fontSize: '1.0em',\n        fontFamily: 'Tahoma',\n    },\n    recaptcha: {\n        display: 'flex',\n        justifyContent: 'center',\n        width: \"100%\"\n    },\n    helpText: {\n        marginTop: '10px',\n        fontSize: '0.9em',\n        color: '#888',\n        marginBottom: '2px',\n    },\n    license: {\n        marginTop: '20px',\n    },\n    busy: {\n        display: 'block',\n        position: 'fixed',\n        left: 0,\n        top: 0,\n        width: '100%',\n        height: '100%',\n        zIndex: '9999',\n        borderRadius: '10px',\n        opacity: '0.8',\n        backgroundSize: '100px',\n        background: \"url('../images/busy.gif') 50% 50% no-repeat rgb(255,255,255)\"\n    },\n    textBox: {\n        width: '250px',\n        borderRadius: '3px',\n        marginBottom: '10px',\n    },\n};\n\n// sign-in screen\nexport class SignIn extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state={\n            email: '',\n            password: '',\n        }\n    }\n    componentDidMount() {\n        clearState();\n        this.props.notBusy();\n    }\n    componentDidCatch(error, info) {\n        this.props.setError(error, info);\n        console.log(error, info);\n    }\n    handleClick() {\n        this.props.signIn(this.state.email, this.state.password, () => {\n            window.location = '/#/home';\n        });\n    }\n    onKeyPress(event) {\n        if (event.key === \"Enter\") {\n            this.handleClick();\n        }\n    }\n    render() {\n        const theme = this.props.theme;\n        return (\n            <MuiThemeProvider theme={theme === 'light' ? lightTheme : darkTheme}>\n                <CssBaseline />\n                <AppMenu title=\"administration\" signed_in={false} />\n                <ErrorDialog title={this.props.error_title}\n                             theme={this.props.theme}\n                             message={this.props.error}\n                             callback={() => this.props.closeError()} />\n\n                {\n                    this.props.busy &&\n                    <div style={styles.busy} />\n                }\n\n                <Grid container spacing={1}>\n\n                    <Grid item xs={12}>\n                        <div style={theme === 'light' ? styles.hr : styles.hr_dark}/>\n                    </Grid>\n\n                    <Grid item xs={3} />\n                    <Grid item xs={6} style={styles.center}>\n                        <TextField\n                            disabled={this.props.busy}\n                            variant={\"standard\"}\n                            style={styles.textBox}\n                            autoFocus\n                            placeholder=\"Enter your email\"\n                            label=\"email\"\n                            onChange = {(event) => this.setState({email: event.target.value})}\n                            onKeyPress = {this.onKeyPress.bind(this)}\n                        />\n                    </Grid>\n                    <Grid item xs={3} />\n\n\n                    <Grid item xs={3} />\n                    <Grid item xs={6} style={styles.center}>\n                        <TextField\n                            disabled={this.props.busy}\n                            style={styles.textBox}\n                            type=\"password\"\n                            placeholder=\"Enter your Password\"\n                            label=\"Password\"\n                            onChange = {(event) => this.setState({password: event.target.value})}\n                            onKeyPress = {this.onKeyPress.bind(this)}\n                        />\n                    </Grid>\n                    <Grid item xs={3} />\n\n                    <Grid item xs={3} />\n                    <Grid item xs={6} style={styles.center}>\n                        <Button variant=\"contained\" color=\"primary\" className=\"button-style\"\n                                      disabled={this.props.busy} onClick={() => this.handleClick()}>Sign-in\n                        </Button>\n                    </Grid>\n                    <Grid item xs={3} />\n\n                    <Grid item xs={12}>\n                        <div style={theme === 'light' ? styles.hr : styles.hr_dark}/>\n                    </Grid>\n\n                    <Grid item xs={3} />\n                    <Grid item xs={6} style={styles.center}>\n                        <div style={styles.helpText} className=\"no-select\">forgotten your password?</div>\n                    </Grid>\n                    <Grid item xs={3} />\n\n\n                    <Grid item xs={3} />\n                    <Grid item xs={6} style={styles.center}>\n                        <Button variant=\"contained\" onClick={() => window.location = '/#/reset-password-request'}\n                                disabled={this.props.busy}  className=\"button-style\">Reset my Password</Button>\n                    </Grid>\n                    <Grid item xs={3} />\n\n\n                    <Grid item xs={12} />\n\n                    <Grid item xs={3} />\n                    <Grid item xs={6} style={styles.center}>\n                        <div style={styles.license}>\n                            <Button variant=\"contained\" onClick={() => window.location = '/#/foss-license'}\n                                    disabled={this.props.busy} className=\"button-style\">open source licenses</Button>\n                        </div>\n                    </Grid>\n                    <Grid item xs={3} />\n\n                </Grid>\n\n            </MuiThemeProvider>\n        );\n    }\n\n}\n\n\n\nconst mapStateToProps = function(state) {\n    return {\n        error: state.appReducer.error,\n        error_title: state.appReducer.error_title,\n        busy: state.appReducer.busy,\n        theme: state.appReducer.theme,\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    dispatch => bindActionCreators(appCreators, dispatch)\n)(SignIn);\n","import React, {Component} from 'react';\n\nimport {MuiThemeProvider} from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport {darkTheme, lightTheme} from \"../theme-ui\";\nimport Grid from '@material-ui/core/Grid';\n\nimport Api from '../common/api'\nimport AppMenu from './app-menu';\nimport ErrorDialog from '../common/error-dialog';\nimport {CssBaseline} from \"@material-ui/core\";\nimport {connect} from \"react-redux\";\nimport {bindActionCreators} from \"redux\";\nimport {appCreators} from \"../actions/appActions\";\n\n\nconst styles = {\n    center: {\n        textAlign: 'center',\n    },\n};\n\n\nexport class ResetPasswordRequest extends Component {\n    constructor(props){\n        super(props);\n        this.state={\n            email:'',\n\n            error_title: '',\n            error_msg: '',\n\n            has_error: false,  // error trapping\n        }\n    }\n    componentDidCatch(error, info) {\n        this.setState({ has_error: true });\n        console.log(error, info);\n    }\n    handleClick(event) {\n        const self = this;\n        //To be done:check for empty values before hitting submit\n        if(this.state.email.length > 0) {\n            Api.passwordResetRequest(this.state.email,\n                (response) => {\n                    self.showError('Success', \"we've emailed you a link for resetting your password.\");\n                },\n                (error) => {\n                    self.showError('Error', error);\n                }\n            );\n        }\n        else{\n            this.showError('Error', 'Input field value is missing');\n        }\n    }\n    showError(title, error_msg) {\n        this.setState({error_title: title, error_msg: error_msg});\n    }\n    closeError() {\n        this.setState({error_msg: ''});\n    }\n    render() {\n        if (this.state.has_error) {\n            return <h1>ResetPasswordRequest: Something went wrong.</h1>;\n        }\n        const theme = this.props.theme;\n        return (\n            <MuiThemeProvider theme={theme === 'light' ? lightTheme : darkTheme}>\n                <CssBaseline />\n\n                <AppMenu title=\"administration\" loggedIn={false} />\n\n                <ErrorDialog title={this.state.error_title}\n                             theme={this.props.theme}\n                             message={this.state.error_msg}\n                             callback={this.closeError.bind(this)} />\n\n                <Grid container spacing={3}>\n\n                    <Grid item xs={12} />\n                    <Grid item xs={12} />\n\n                    <Grid item xs={3} />\n                    <Grid item xs={6} style={styles.center}>\n                        <div className=\"sign-in-help-text no-select\">Please enter your email address and we'll email you a link to reset your password.</div>\n                    </Grid>\n                    <Grid item xs={3} />\n\n                    <Grid item xs={3} />\n                    <Grid item xs={6} style={styles.center}>\n                        <TextField\n                            autoFocus\n                            placeholder=\"Enter your email Address\"\n                            label=\"Email Address\"\n                            onChange = {(event) => this.setState({email: event.target.value})} />\n                    </Grid>\n                    <Grid item xs={3} />\n\n                    <Grid item xs={3} />\n                    <Grid item xs={6} style={styles.center}>\n                        <Button variant=\"contained\" color=\"primary\" className=\"button-style\" onClick={(event) => this.handleClick(event)}>\n                            Submit\n                        </Button>\n                    </Grid>\n                    <Grid item xs={3} />\n\n                    <Grid item xs={12} />\n                    <Grid item xs={12} />\n\n                    <Grid item xs={3} />\n                    <Grid item xs={6} style={styles.center}>\n                        <div className=\"sign-in-help-text no-select\">Click here to return to sign-in</div>\n                    </Grid>\n                    <Grid item xs={3} />\n\n                    <Grid item xs={3} />\n                    <Grid item xs={6} style={styles.center}>\n                        <div>\n                            <Button variant=\"contained\" onClick={() => window.location = '/#/'} className=\"button-style\">Return to Sign-in</Button>\n                        </div>\n                    </Grid>\n                    <Grid item xs={3} />\n\n                </Grid>\n\n            </MuiThemeProvider>\n        );\n    }\n}\n\nconst mapStateToProps = function(state) {\n    return {\n        theme: state.appReducer.theme,\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    dispatch => bindActionCreators(appCreators, dispatch)\n)(ResetPasswordRequest);\n","import React, {Component} from 'react';\n\nimport {MuiThemeProvider} from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport {darkTheme, lightTheme} from \"../theme-ui\";\nimport Grid from '@material-ui/core/Grid';\n\nimport Api from '../common/api'\nimport AppMenu from './app-menu';\nimport ErrorDialog from '../common/error-dialog';\nimport {CssBaseline} from \"@material-ui/core\";\nimport {connect} from \"react-redux\";\nimport {bindActionCreators} from \"redux\";\nimport {appCreators} from \"../actions/appActions\";\n\nconst queryString = require('query-string');\n\nconst styles = {\n    input: {\n        width: '350px'\n    },\n    page: {\n        textAlign: 'center',\n        fontSize: '1.0em',\n        fontFamily: 'Tahoma',\n    },\n    spacer: {\n        height: '10px',\n    }\n};\n\n\nexport class ResetPasswordResponse extends Component {\n    constructor(props){\n        super(props);\n\n        const parsed = queryString.parse(props.location.search);\n\n        let email = '';\n        let reset_id = '';\n        if (parsed['email']) {\n            email = parsed['email'];\n        }\n        if (parsed['resetid']) {\n            reset_id = parsed['resetid'];\n        }\n\n        this.state={\n            email: email,\n            reset_id: reset_id,\n            password: '',\n\n            error_title: '',\n            error_msg: '',\n\n            has_error: false,  // error trapping\n        }\n    }\n    componentDidCatch(error, info) {\n        this.setState({ has_error: true });\n        console.log(error, info);\n    }\n    handleClick(event) {\n        const self = this;\n        //To be done:check for empty values before hitting submit\n        if(this.state.email.length > 0 && this.state.reset_id.length > 0 && this.state.password.length > 5) {\n            Api.resetPassword(this.state.email, this.state.password, this.state.reset_id,\n                (response) => {\n                    self.showError('Success', \"Password reset.  You can now sign-in using your new password.\");\n                    self.setState({reset_id: '', email: '', password: ''});\n                },\n                (error) => {\n                    self.showError('Error', error);\n                }\n            );\n        }\n        else{\n            this.showError('Error', 'Input field value(s) missing or incorrect.');\n        }\n    }\n    onKeyPress(event) {\n        if (event.key === \"Enter\") {\n            this.handleClick(event);\n        }\n    }\n    showError(title, error_msg) {\n        this.setState({error_title: title, error_msg: error_msg});\n    }\n    closeError() {\n        this.setState({error_msg: ''});\n    }\n    render() {\n        if (this.state.has_error) {\n            return <h1>ResetPasswordResponse: Something went wrong.</h1>;\n        }\n        const theme = this.props.theme;\n        return (\n            <MuiThemeProvider theme={theme === 'light' ? lightTheme : darkTheme}>\n                <CssBaseline />\n\n                <AppMenu title=\"\" loggedIn={false} />\n\n                <ErrorDialog title={this.state.error_title}\n                             theme={this.props.theme}\n                             message={this.state.error_msg}\n                             callback={this.closeError.bind(this)} />\n\n                <Grid container spacing={1}>\n\n                    <Grid item xs={3} />\n                    <Grid item xs={6}>\n                        <TextField\n                            placeholder=\"Enter your email Address\"\n                            label=\"Email Address\"\n                            style={styles.input}\n                            value={this.state.email}\n                            onChange = {(event) => this.setState({email: event.target.value})} />\n                    </Grid>\n                    <Grid item xs={3} />\n\n                    <Grid item xs={3} />\n                    <Grid item xs={6}>\n                        <TextField\n                            placeholder=\"Enter the reset-id we sent you\"\n                            label=\"Reset Id\"\n                            style={styles.input}\n                            value={this.state.reset_id}\n                            onChange = {(event) => this.setState({reset_id: event.target.value})} />\n                    </Grid>\n                    <Grid item xs={3} />\n\n                    <Grid item xs={12}><br /></Grid>\n\n                    <Grid item xs={3} />\n                    <Grid item xs={6}>\n                        <TextField\n                            type=\"password\"\n                            placeholder=\"Enter your new Password\"\n                            label=\"Enter your new Password\"\n                            autoFocus={true}\n                            style={styles.input}\n                            onChange = {(event) => this.setState({password: event.target.value})}\n                            onKeyPress = {this.onKeyPress.bind(this)}\n                        />\n                    </Grid>\n                    <Grid item xs={3} />\n\n                    <Grid item xs={12}>\n                        <div style={styles.spacer}>&nbsp;</div>\n                    </Grid>\n\n                    <Grid item xs={3} />\n                    <Grid item xs={6}>\n                        <div>\n                            <Button variant=\"contained\" className=\"button-style\"\n                                          onClick={(event) => this.handleClick(event)}>\n                                Reset Password\n                            </Button>\n                        </div>\n                    </Grid>\n                    <Grid item xs={3} />\n\n                    <Grid item xs={12}><br /></Grid>\n\n                    <Grid item xs={3} />\n                    <Grid item xs={6}>\n                        <div className=\"sign-in-help-text no-select\">Click here to return to sign-in</div>\n                    </Grid>\n                    <Grid item xs={3} />\n\n                    <Grid item xs={3} />\n                    <Grid item xs={6}>\n                        <div>\n                            <Button variant=\"contained\" className=\"button-style\" onClick={() => window.location = '/#/'}>\n                                Return to Sign-in\n                            </Button>\n                        </div>\n                    </Grid>\n                    <Grid item xs={3} />\n\n                </Grid>\n\n            </MuiThemeProvider>\n        );\n    }\n}\n\nconst mapStateToProps = function(state) {\n    return {\n        theme: state.appReducer.theme,\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    dispatch => bindActionCreators(appCreators, dispatch)\n)(ResetPasswordResponse);\n","import React, {Component} from 'react';\n\nimport Button from '@material-ui/core/Button';\n\nimport AppMenu from '../auth/app-menu';\nimport ErrorDialog from '../common/error-dialog';\nimport {MuiThemeProvider} from \"@material-ui/core/styles\";\nimport {darkTheme, lightTheme} from \"../theme-ui\";\nimport {CssBaseline} from \"@material-ui/core\";\nimport {connect} from \"react-redux\";\nimport {bindActionCreators} from \"redux\";\nimport {appCreators} from \"../actions/appActions\";\n\n\nconst styles = {\n    bottomLink: {\n        textAlign: 'center',\n        marginTop: '50px',\n    },\n};\n\nexport class OpenSourceLicenses extends Component {\n    constructor(props){\n        super(props);\n        this.state={\n            error_title: '',\n            error_msg: '',\n            has_error: false,  // error trapping\n        }\n    }\n    componentDidCatch(error, info) {\n        this.setState({ has_error: true });\n        console.log(error, info);\n    }\n    showError(title, error_msg) {\n        this.setState({error_title: title, error_msg: error_msg});\n    }\n    closeError() {\n        this.setState({error_msg: ''});\n    }\n    render() {\n        if (this.state.has_error) {\n            return <h1>license: Something went wrong.</h1>;\n        }\n        const theme = this.props.theme;\n        return (\n            <MuiThemeProvider theme={theme === 'light' ? lightTheme : darkTheme}>\n                <CssBaseline />\n\n                <AppMenu title=\"Open Source Licenses\" loggedIn={false} />\n\n                <ErrorDialog title={this.state.error_title}\n                             theme={this.props.theme}\n                             message={this.state.error_msg}\n                             callback={this.closeError.bind(this)} />\n\n                 <div className=\"license-container no-select\">\n\n                     <div className=\"license-section\">\n                         <div className=\"title\">Apache ActiveMQ</div>\n                         <div className=\"copyright\">Copyright © 2005-2019 The Apache Software Foundation </div>\n                         <div className=\"license\">Apache 2.0 license</div>\n                     </div>\n\n                     <div className=\"license-section\">\n                         <div className=\"title\">Apache Avro</div>\n                         <div className=\"copyright\">Copyright © 2010-2019 The Apache Software Foundation </div>\n                         <div className=\"license\">Apache 2.0 license</div>\n                     </div>\n\n                     <div className=\"license-section\">\n                         <div className=\"title\">Apache Cassandra</div>\n                         <div className=\"copyright\">Copyright © 2009-2021 The Apache Software Foundation </div>\n                         <div className=\"license\">Apache 2.0 license</div>\n                     </div>\n\n                     <div className=\"license-section\">\n                         <div className=\"title\">Apache Hadoop</div>\n                         <div className=\"copyright\">Copyright © 2019 The Apache Software Foundation </div>\n                         <div className=\"license\">Apache 2.0 license</div>\n                     </div>\n\n                     <div className=\"license-section\">\n                         <div className=\"title\">Apache http-client</div>\n                         <div className=\"copyright\">Copyright © 1999-2007 The Apache Software Foundation</div>\n                         <div className=\"license\">Apache 2.0 license</div>\n                     </div>\n\n                     <div className=\"license-section\">\n                         <div className=\"title\">Apache http-mime</div>\n                         <div className=\"copyright\">Copyright © 1999-2020 The Apache Software Foundation</div>\n                         <div className=\"license\">Apache 2.0 license</div>\n                     </div>\n\n                     <div className=\"license-section\">\n                         <div className=\"title\">Apache Parquet</div>\n                         <div className=\"copyright\">Copyright © 2020 The Apache Software Foundation </div>\n                         <div className=\"license\">Apache 2.0 license</div>\n                     </div>\n\n                     <div className=\"license-section\">\n                         <div className=\"title\">Apache PDFBox</div>\n                         <div className=\"copyright\">Copyright © 2020 The Apache Software Foundation </div>\n                         <div className=\"license\">Apache 2.0 license</div>\n                     </div>\n\n                     <div className=\"license-section\">\n                         <div className=\"title\">Apache Spark</div>\n                         <div className=\"copyright\">Copyright © 2014- The Apache Software Foundation </div>\n                         <div className=\"license\">Apache 2.0 license</div>\n                     </div>\n\n                     <div className=\"license-section\">\n                         <div className=\"title\">Apache Tika</div>\n                         <div className=\"copyright\">Copyright © 2020 The Apache Software Foundation</div>\n                         <div className=\"license\">Apache 2.0 license</div>\n                     </div>\n\n                     <div className=\"license-section\">\n                         <div className=\"title\">commons-io</div>\n                         <div className=\"copyright\">Copyright © 2002-2020 The Apache Software Foundation</div>\n                         <div className=\"license\">Apache 2.0 license</div>\n                     </div>\n\n                     <div className=\"license-section\">\n                         <div className=\"title\">commons-fileupload</div>\n                         <div className=\"copyright\">Copyright © 2002-2020 The Apache Software Foundation</div>\n                         <div className=\"license\">Apache 2.0 license</div>\n                     </div>\n\n                     <div className=\"license-section\">\n                         <div className=\"title\">DataStax Driver</div>\n                         <div className=\"copyright\">Copyright © DataStax, Inc.</div>\n                         <div className=\"license\">Apache 2.0 license</div>\n                     </div>\n\n                     <div className=\"license-section\">\n                         <div className=\"title\">Google API</div>\n                         <div className=\"copyright\">Copyright © 2012 Google Inc.</div>\n                         <div className=\"license\">Apache 2.0 license</div>\n                     </div>\n\n                     <div className=\"license-section\">\n                         <div className=\"title\">Google Drive</div>\n                         <div className=\"copyright\">Copyright © 2018, Google Inc.</div>\n                         <div className=\"license\">Apache 2.0 license</div>\n                     </div>\n\n                     <div className=\"license-section\">\n                         <div className=\"title\">Google OAuth</div>\n                         <div className=\"copyright\">Copyright © 2018, Google Inc.</div>\n                         <div className=\"license\">Apache 2.0 license</div>\n                     </div>\n\n                     <div className=\"license-section\">\n                         <div className=\"title\">Jackson</div>\n                         <div className=\"copyright\">Copyright © 2007- Tatu Saloranta, tatu.saloranta@iki.fi</div>\n                         <div className=\"license\">Apache 2.0 license</div>\n                     </div>\n\n                     <div className=\"license-section\">\n                         <div className=\"title\">javax-mail</div>\n                         <div className=\"copyright\">Copyright © 1997-2011 Oracle and/or its affiliates.</div>\n                         <div className=\"license\">CDDL 1.1</div>\n                     </div>\n\n                     <div className=\"license-section\">\n                         <div className=\"title\">javax WebSocket Client</div>\n                         <div className=\"copyright\">Copyright © 2012-2014 Oracle and/or its affiliates. </div>\n                         <div className=\"license\">CDDL 1.1, GPL 2.0</div>\n                     </div>\n\n                     <div className=\"license-section\">\n                         <div className=\"title\">jBcrypt</div>\n                         <div className=\"copyright\">Copyright © 2006 Damien Miller &lt;djm@mindrot.org&gt;</div>\n                         <div className=\"license\">Mozilla public license 2.0</div>\n                     </div>\n\n                     <div className=\"license-section\">\n                         <div className=\"title\">JCIFS-ng</div>\n                         <div className=\"copyright\">Copyright © 2016 AgNO3 Gmbh & Co. KG</div>\n                         <div className=\"license\">GNU Lesser General public license 2.1</div>\n                     </div>\n\n                     <div className=\"license-section\">\n                         <div className=\"title\">JEP</div>\n                         <div className=\"copyright\">Copyright (c) 2004 - 2020 JEP AUTHORS</div>\n                         <div className=\"license\">zlib/libpng License</div>\n                     </div>\n\n                     <div className=\"license-section\">\n                         <div className=\"title\">JNA</div>\n                         <div className=\"copyright\">Copyright © 2011 Timothy Wall</div>\n                         <div className=\"license\">Apache 2.0 license</div>\n                     </div>\n\n                     <div className=\"license-section\">\n                         <div className=\"title\">JEP</div>\n                         <div className=\"copyright\">Copyright © 2004 - 2020 JEP AUTHORS</div>\n                         <div className=\"license\">zlib/libpng License</div>\n                     </div>\n\n                     <div className=\"license-section\">\n                         <div className=\"title\">Joda-time</div>\n                         <div className=\"copyright\">Copyright © 2001-2005 Stephen Colebourne</div>\n                         <div className=\"license\">Apache 2.0 license</div>\n                     </div>\n\n                     <div className=\"license-section\">\n                         <div className=\"title\">jSoup</div>\n                         <div className=\"copyright\">Copyright © 2009 - 2021 Jonathan Hedley (https://jsoup.org/)</div>\n                         <div className=\"license\">MIT License</div>\n                     </div>\n\n                     <div className=\"license-section\">\n                         <div className=\"title\">junit</div>\n                         <div className=\"copyright\">Copyright © 2002-2020 JUnit</div>\n                         <div className=\"license\">Eclipse Public License 1.0</div>\n                     </div>\n\n                     <div className=\"license-section\">\n                         <div className=\"title\">Kotlin</div>\n                         <div className=\"copyright\">Copyright © 2016-2020 JetBrains s.r.o.</div>\n                         <div className=\"license\">Apache 2.0 license</div>\n                     </div>\n\n                     <div className=\"license-section\">\n                        <div className=\"title\">Kotlin Coroutines Core</div>\n                        <div className=\"copyright\">Copyright © 2016-2020 JetBrains s.r.o.</div>\n                        <div className=\"license\">Apache 2.0 license</div>\n                    </div>\n\n                     <div className=\"license-section\">\n                         <div className=\"title\">Microsoft SQL JDBC</div>\n                         <div className=\"copyright\">Copyright © 2020 Microsoft Corporation</div>\n                         <div className=\"license\">MIT license</div>\n                     </div>\n\n                     <div className=\"license-section\">\n                         <div className=\"title\">Microsoft msal4j</div>\n                         <div className=\"copyright\">Copyright © 2020 Microsoft Corporation</div>\n                         <div className=\"license\">MIT license</div>\n                     </div>\n\n                     <div className=\"license-section\">\n                         <div className=\"title\">MariaDB JDBC</div>\n                         <div className=\"copyright\">Copyright © 2021, MariaDB</div>\n                         <div className=\"license\">LGPL 2.1</div>\n                     </div>\n\n                     <div className=\"license-section\">\n                         <div className=\"title\">OpenJDK 11.0.9.1</div>\n                         <div className=\"copyright\">Copyright © 1995, 2021, Oracle and/or its affiliates.</div>\n                         <div className=\"license\">GPLv2 with linking exception</div>\n                     </div>\n\n                     <div className=\"license-section\">\n                         <div className=\"title\">Postgres SQL JDBC</div>\n                         <div className=\"copyright\">Copyright © 1997, PostgreSQL Global Development Group</div>\n                         <div className=\"license\">BSD-2 Clause</div>\n                     </div>\n\n                     <div className=\"license-section\">\n                         <div className=\"title\">snakeyaml</div>\n                         <div className=\"copyright\">Copyright © 2008-2013 Andrey Somov</div>\n                         <div className=\"license\">Apache 2.0 license</div>\n                     </div>\n\n                     <div className=\"license-section\">\n                         <div className=\"title\">snappy java</div>\n                         <div className=\"copyright\">Copyright © 2011 Taro L. Saito</div>\n                         <div className=\"license\">Apache 2.0 license</div>\n                     </div>\n\n                     <div className=\"license-section\">\n                         <div className=\"title\">spaCy</div>\n                         <div className=\"copyright\">Copyright © 2016-2020 ExplosionAI GmbH, 2016 spaCy GmbH, 2015 Matthew Honnibal</div>\n                         <div className=\"license\">MIT license</div>\n                     </div>\n\n                     <div className=\"license-section\">\n                        <div className=\"title\">Spring</div>\n                        <div className=\"copyright\">Copyright © 2002-2021 Pivotal, Inc.</div>\n                        <div className=\"license\">Apache 2.0 license</div>\n                    </div>\n\n                    <div className=\"license-section\">\n                        <div className=\"title\">Tyrus WebSocket Client</div>\n                        <div className=\"copyright\">Copyright © 2014-2015 Oracle and/or its affiliates. </div>\n                        <div className=\"license\">Eclipse Public License 2.0</div>\n                    </div>\n\n                </div>\n\n                <br clear=\"both\" />\n\n                <div style={styles.bottomLink}>\n                    <Button variant=\"contained\" onClick={() => window.location = \"/#/\"} className=\"button-style\">Return to Sign-in</Button>\n                </div>\n\n                <br/>\n                <br/>\n\n            </MuiThemeProvider>\n        );\n    }\n}\n\nconst mapStateToProps = function(state) {\n    return {\n        theme: state.appReducer.theme,\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    dispatch => bindActionCreators(appCreators, dispatch)\n)(OpenSourceLicenses);\n\n","import React, {Component} from 'react';\n\nimport {MuiThemeProvider} from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport {darkTheme, lightTheme} from \"../theme-ui\";\n\nimport AppMenu from '../auth/app-menu';\nimport ErrorDialog from '../common/error-dialog';\nimport {CssBaseline} from \"@material-ui/core\";\nimport {connect} from \"react-redux\";\nimport {bindActionCreators} from \"redux\";\nimport {appCreators} from \"../actions/appActions\";\n\n\nconst styles = {\n    page: {\n        fontSize: '0.9em',\n        fontFamily: 'Tahoma',\n    },\n\n    content: {\n        marginTop: '10px',\n        marginLeft: '50px',\n    },\n\n    link: {\n        margin: '10px',\n        texcolor: '#c0c0c0'\n    },\n\n    bottomLink: {\n        textAlign: 'center',\n        marginTop: '50px',\n        marginBottom: '50px',\n    },\n    text: {\n        lineHeight: '22px',\n        fontSize: '1.2em',\n        fontColor: '#222',\n    },\n};\n\n\nexport class LicenseAgreement extends Component {\n    constructor(props){\n        super(props);\n        this.state={\n            error_title: '',\n            error_msg: '',\n            has_error: false,  // error trapping\n        }\n    }\n    componentDidCatch(error, info) {\n        this.setState({ has_error: true });\n        console.log(error, info);\n    }\n    showError(title, error_msg) {\n        this.setState({error_title: title, error_msg: error_msg});\n    }\n    closeError() {\n        this.setState({error_msg: ''});\n    }\n    render() {\n        if (this.state.has_error) {\n            return <h1>license-agreement: Something went wrong.</h1>;\n        }\n        const theme = this.props.theme;\n        return (\n            <MuiThemeProvider theme={theme === 'light' ? lightTheme : darkTheme}>\n                <CssBaseline />\n                <div>\n                    <AppMenu title=\"\" loggedIn={false} />\n                    <ErrorDialog title={this.state.error_title}\n                                 theme={this.props.theme}\n                                 message={this.state.error_msg}\n                                 callback={this.closeError.bind(this)} />\n\n                    <br clear=\"both\" />\n                    <div style={styles.content}>\n\n                        <h1>SIMSAGE™ TERMS OF USE</h1>\n                        <br/>\n                        Welcome to SimSage™, an innovative, semantic, software-based Artificial Intelligence service that assists organisations to automate their web-page interactions with Customers. SimSage™’s capabilities include automating Customer enquiries requests for information, particularly by supplementing, or replacing Frequently Asked Questions (FAQs).<br/>\n                        <br/>\n                        <br/>\n                        These Terms of Use, as amended from time to time (Terms) explain the terms on which SimSage™  Limited (NZCN 6798094) of 86 Tinakori Road, Wellington, New Zealand (SimSage™) provides customers with access to certain services through the www.simsage.nz website (Website). Please read them carefully.<br/>\n                        <br/>\n                        By registering to use the Services and clicking “I accept”, You acknowledge that You have read and understood these Terms and if You are acting on behalf of any person for whom You are using the Services, that You have full authority to act and are deemed to have agreed to these Terms on behalf of that person for whom you use the Services.<br/>\n                        <br/>\n                        SimSage™ reserves the right to change these Terms at any time, effective on posting the modified terms on the Website, and SimSage™ will make every effort to communicate these changes to You via email or notification via the Website. It is likely the Terms will change over time, particularly as the Services evolve to reflect our development of the Services and user feedback. It is Your obligation to ensure that You have read, understood and agree to the most recent Terms available on the Website.<br/>\n                        <br/>\n                        <h2>1. The Website and the Services</h2>\n                        <br/>\n                        1.1\tThe Website is owned and managed by SimSage Limited (NZCN 6798094) of 86 Tinakori Road, Wellington, New Zealand.<br/>\n                        <br/>\n                        1.2 In consideration of You paying the Fees, SimSage™ shall provide You with the services described on the Website (Services). To avoid doubt, SimSage™’s obligations are limited to providing the Services and do not in any way include acting on Your behalf. Nothing in these Terms is intended to, or shall be deemed to, establish any partnership or joint venture between You and SimSage™, appoint either party as the agent of the other, nor authorise either party to make or enter into any commitments for, or on behalf of, the other party.<br/>\n                        <br/>\n                        1.3 SimSage™ may from time to time add, modify, suspend or cease (temporarily or permanently) providing any element of the Services upon notice to You, such notice to be effective on the earlier of SimSage™ posting on the Website or via email to You.<br/>\n                        <br/>\n                        1.4 If there is unplanned service downtime in respect of the Services or the Website, SimSage™ shall use its reasonable endeavours (but has no obligation) to notify You in advance provided that SimSage™ is able to do so and such notice will be effective on the earlier of SimSage™ posting on the Website or notifying You via email.<br/>\n                        <br/>\n                        1.5 Access to the Website and the Services may be granted to You, at SimSage™’s discretion and on terms and for a period agreed in writing (and if no time period is specified, for one month only), on a trial or ‘free’ basis (Trial). You acknowledge and agree that these Terms shall apply to the Trial, and in addition, during the Trial:<br/>\n                        1.5.1 access to the Services will be provided to You at no cost;<br/>\n                        1.5.2 such access is solely for the purpose of offering You a preview demonstration of the functionality and features of the Services;<br/>\n                        1.5.3 the functionality of the Services may be limited or restricted; and<br/>\n                        1.5.4 SimSage™ may withdraw or suspend Your access to the Services at any time, and at the end of the one month Trial period (or such other Trial period agreed in writing), Your continued access to the Website and/or Services will be subject to payment of Fees or charges in accordance with clause 4.<br/>\n                        <br/>\n                        <h2>2 Register to use the Services</h2>\n                        <br/>\n                        2.1\tTo use the Services You must first register with SimSage™ by completing the online registration form on the Website.<br/>\n                        <br/>\n                        2.2 SimSage™ will send You a confirmation email (Confirmation Email) once it has accepted and confirmed Your registration. Your contract to use the Services on these Terms (Contract) starts on the date of the Confirmation Email.<br/>\n                        <br/>\n                        2.3 SimSage™ reserves the right to conduct verification and security procedures in respect of all information provided by You to SimSage™. If SimSage™ believes the information provided by You to register and use any of the Services breaches (or may breach) any of these Terms, SimSage™ at its sole discretion may take any action it deems appropriate, including without limitation, to terminate Your Contract (with no return of any Fees already paid).<br/>\n                        <br/>\n                        2.4 These Terms apply to any Authorised Personnel who You authorize to access and use the Website and the Services through Your account. You acknowledge and agree:<br/>\n                        2.4.1 all Authorised Personnel must use the corporate  email address allocated to them by You when creating an Authorised Personnel profile;<br/>\n                        2.4.2 SimSage™ may allocate Your \"Admin\" or \"Member\" accounts with varying levels of access, and You shall comply (and ensure each Authorised Personnel complies) with any SimSage™ directions for setting up and using such accounts; and<br/>\n                        2.4.3 You are directly liable to SimSage™ at all times for the acts or omissions of Your Authorised Personnel.<br/>\n                        <br/>\n                        2.5 You shall keep, and ensure Your Authorised Personnel keep, Your and Your Authorised Personnel’s usernames and passwords (Logins) safe and secure to ensure they are not used without Your permission. You must immediately notify SimSage™ if You believe there has been unauthorised use or access to Your Logins and/or Your profile on the Website. You shall be solely responsible and liable for any breach of these Terms arising out of, or resulting from, using Your Logins to access the Services and/or the Website (whether such use is authorised by You or not).<br/>\n                        <br/>\n                        2.6 SimSage™ may, at any time on notice, require You to sign any further documents to confirm Your acceptance of, or give full effect to, these Terms.<br/>\n                        <br/>\n                        <h2>3 Your obligations - general</h2>\n                        <br/>\n                        3.1\tThe obligations in this clause 3 apply to all users of SimSage™, the Services and/or the Website. Additional obligations   are set out below.<br/>\n                        <br/>\n                        3.2 You shall at all times use the Services and the Website in accordance with these Terms.<br/>\n                        <br/>\n                        3.3 You shall ensure Your use of the Services and/or the Website, including submitting any information, data, images, videos, audio, files, links to external websites, communication between Authorised Personnel, and all other material of any format (Submissions), in each case:<br/>\n                        3.3.1 complies with all applicable laws;<br/>\n                        3.3.2 does not infringe any intellectual property or other proprietary rights of any third party;<br/>\n                        3.3.3 does not, or could not reasonably be deemed to:<br/>\n                        <ul>\n                            <li>be offensive, illegal, inappropriate or in any way promote racism, bigotry, hatred or physical harm of any kind against any group or individual;</li>\n                            <li>harass or advocate harassment of another person;</li>\n                            <li>display pornographic or sexually explicit material;</li>\n                            <li>promote conduct that is abusive, threatening, obscene, or defamatory;</li>\n                            <li>promote any illegal activities, or provide instructional information about illegal activities, including violating someone else’s privacy; or</li>\n                            <li>provide or create computer viruses, other malware or denial of service attacks;</li>\n                            <li>promote or contain information that is inaccurate, false or misleading;</li>\n                            <li>engage in promoting contests, sweepstakes and pyramid schemes;</li>\n                            <li>exploit people in a sexual or violent manner;</li>\n                            <li>invade or violate any third party’s right to privacy; and</li>\n                            <li>transmit \"junk mail\", or \"chain letters\", or unsolicited mass mailing, messaging or \"spamming\";</li>\n                        </ul>\n                        and You hereby indemnify SimSage™ for all losses, liabilities, costs and expenses (including legal costs) suffered or incurred by SimSage™ (and/or its parent company) which arise directly or indirectly from Your breach of this clause 3.2.<br/>\n                        <br/>\n                        3.4 SimSage™ does not vet, verify the accuracy, correctness and completeness, edit or modify any Submission or any other information, data and materials created, used and/or published by You or on Your behalf on Your Website to determine whether they may result in any liability to any third party. You warrant that You have the right to use all such information and material.<br/>\n                        <br/>\n                        3.5 Notwithstanding clause 3.3, SimSage™ reserves the right to refuse to publish any Submissions, or to remove or edit a Submission (in whole or in part and at any time), if SimSage™ believes Your use of the Services and/or the Website breaches these Terms.<br/>\n                        <br/>\n                        3.6 You shall not at any time:<br/>\n                        3.6.1 use the Services and/or the Website to impersonate (or in a way that impersonates) another User or person; and<br/>\n                        3.6.2 use the information made available to You through Your use of the Services and/or the Website for any purpose other than for procuring benefit out of the Services and/or the Website; and<br/>\n                        3.6.3 do anything whatsoever which (or which is likely to) impair, interfere with, damage, or cause harm or distress to any person using the Services and/or the Website or in respect of the network.<br/>\n                        <br/>\n                        3.7 SimSage™ takes breaches of this clause 3 very seriously and reserves the right to take any action that SimSage™ deems necessary, including suspending or terminating Your use of the Services and/or access to the Website. SimSage™ may also commence legal proceedings if there is illegal use of the Services and/or the Website, or disclose information to any third party who is claiming that any material posted or uploaded by You to our Website violates their intellectual property or other proprietary rights or their right to privacy. You shall promptly notify SimSage™ if You are aware of any breach (or any suspected breach) of this clause 3 by Your Authorised Personnel.<br/>\n                        <br/>\n                        <h2>4 Fees</h2>\n                        <br/>\n                        4.1 The fees to access the Services are set out on the Website (Fees). Except where You are using any Services that are specifically noted on the Website as “Free”, or participating in a Trial in accordance with clause 1.5, You may only access the Services by paying the Fees noted on the Website..<br/>\n                        <br/>\n                        4.2 Unless stated otherwise on the Website or agreed by SimSage™ in writing, the Fees shall be payable by You, in the manner as set out on the Website.<br/>\n                        <br/>\n                        4.3 All Fees are inclusive of GST and all other taxes or duties, and are non-refundable for any reason whatsoever.<br/>\n                        <br/>\n                        4.4 The Fees or any rate of charge may be increased by SimSage™ upon not less than 30 days prior written notice to You, which notice may be provided through the Website.<br/>\n                        <br/>\n                        <h2>5 Warranties</h2>\n                        <br/>\n                        5.1 You: You warrant that (a) You have the right and capacity to enter into, and be bound by, these Terms;  (b) You shall comply with all applicable laws relating to Your use of the Services and/or the Website; and (c)  You shall comply with SimSage™’s requirements and reasonable directions relating to the Services and Website as notified by SimSage™ from time to time.<br/>\n                        <br/>\n                        5.2 SimSage™: The provision of, access to, and use of, the Services and the Website is on an \"as is \" basis and at Your own risk. SimSage™ gives no warranty about the Services and/or the Website, and in particular, SimSage™ does not warrant that:<br/>\n                        5.2.1 the Services will meet Your requirements or that it will be suitable for any particular purpose. It is Your sole responsibility to determine that the Services meet Your needs and/or the needs of Your business and are suitable for the purposes for which they are used; or<br/>\n                        5.2.2 the use of the Services will be uninterrupted or error free. Among other things, the operation and availability of the systems used for accessing the Services, including public telephone services, computer networks and the Internet, can be unpredictable and may from time to time interfere with or prevent access to the Services. SimSage™ is not in any way responsible for any such interference or prevention of Your access or use of the Services.\n                        To avoid doubt, all implied conditions or warranties are excluded to the maximum extent permitted by law, including (without limitation) warranties of merchantability, non-infringement of intellectual property, accuracy, completeness, fitness for a particular purpose, and any warranties arising by statute or otherwise in law or from course of dealing, course of performance, or use of trade.<br/>\n                        <br/>\n                        5.3 Third party websites: SimSage™ may display or provide links or other interaction with third party websites and third party advertising banners on the Website (Third Party Websites). In particular, the Services may also provide You with the opportunity to connect and publish Your Information through Third Party Websites and other third party services such as social and business networking sites. Use of any such Third Party Websites and services shall be at Your sole risk and subject to the terms and conditions of the Third Party Website provider.<br/>\n                        <br/>\n                        <h2>6 Limitation of liability</h2>\n                        <br/>\n                        6.1 To the maximum extent permitted by law, SimSage™ excludes all liability and responsibility to You (or any other person) in contract, tort (including negligence), or otherwise, for any loss (including loss of information, Data, profits and savings) or damage resulting, directly or indirectly, from any use of, or reliance on, the Services and/or Website.<br/>\n                        <br/>\n                        6.2 If You suffer loss or damage as a result of SimSage™'s negligence or failure to comply with these Terms, any claim by You against SimSage™ arising from SimSage™'s negligence or failure will be limited in respect of any one incident, or series of connected incidents, to the Fees paid by You in the previous month. You are directly liable to SimSage™ at all times for the acts or omissions of Your Authorised Personnel, in accordance with clause 2.4.<br/>\n                        <br/>\n                        6.3 If You are not satisfied with the Services, Your sole and exclusive remedy is to terminate these Terms in accordance with clause 7.<br/>\n                        <br/>\n                        <h2>7 Termination</h2>\n                        <br/>\n                        7.1 Trial policy: If SimSage™ agrees in writing, in accordance with clause 1.5, to provide You with a trial usage period when You first sign up for access to the Services, You can evaluate the Services under the specified trial usage conditions, with no obligation to continue to use the Services. If You choose to continue using the Services thereafter, any payment applicable in accordance with clause 7 will be billed to You from the day You first added Your billing details into the Services.<br/>\n                        <br/>\n                        7.2 Prepaid Subscriptions: SimSage™ will not provide any refund for any remaining prepaid period for a prepaid Fee subscription.<br/>\n                        <br/>\n                        7.3 No-fault termination: These Terms will continue for the period covered by the Fee paid or payable under clause 7.1. At the end of each billing period, these Terms will automatically continue for another period of the same duration as that period, provided You continue to pay the prescribed Fee when due, unless either party terminates these Terms by giving at least 30 days’ notice to the other party before the end of the relevant payment period. If You terminate these Terms, You shall be liable to pay all relevant Fees on a pro-rata basis for each day of the then current period up to and including the day of termination of these Terms.<br/>\n                        <br/>\n                        7.4 Breach: If You:<br/>\n                        7.4.1 breach any of these Terms (including by non-payment of any Fees) and (i) if the breach is capable of being remedied, do not remedy the breach within 14 days after receiving notice of the breach; and (ii) if the breach is not capable of being remedied (which includes any payment of Fees that are more than 30 days overdue); or<br/>\n                        7.4.2 You or Your business become insolvent or Your business goes into liquidation or has a receiver or manager appointed of any of its assets or if You become insolvent, or make any arrangement with Your creditors, or become subject to any similar insolvency event in any jurisdiction,\n                        SimSage™ may, at its sole discretion:<br/>\n                        7.4.3 Terminate this Agreement and Your use of the Services;<br/>\n                        7.4.4 Suspend for any definite or indefinite period of time, Your use of the Services;<br/>\n                        7.4.5 Suspend or terminate access to all or any Data; and/or<br/>\n                        7.4.6 Take any of these actions in relation to any other person/s whom You have authorised to have access to Your information or Data.<br/>\n                        <br/>\n                        7.5 Accrued Rights: Termination of these Terms is without prejudice to any rights or obligations of the parties which have accrued up to and including the date of termination, and shall not affect the provisions of these Terms which expressly, or by their nature, are intended to continue, including this clause 7 (Termination), and clauses 5 (Warranties), 6 (Limitation of Liability), 8 (Intellectual Property Rights). On termination of this Agreement You will:<br/>\n                        7.5.1 remain liable for any accrued Fees and amounts which become due for payment before or after termination; and<br/>\n                        7.5.2 immediately cease to use the Services.<br/>\n                        <br/>\n                        <h2>8 Intellectual property rights</h2>\n                        <br/>\n                        8.1 Title to, and all intellectual property rights in, the Services, the Website, including all software forming part of the Website (Software), and any documentation relating to the Services, is and remains the property of SimSage™ (or its licensors). Nothing in these Terms will transfer from SimSage™ to You any right, title or interest in the Services, the Website, the Software and associated documentation, all of which remain exclusively with SimSage™ (or its licensors). All rights in and to the Software and the Website not expressly granted to You are reserved by SimSage™ (and its licensors).<br/>\n                        <br/>\n                        8.2 You may print off one copy and may download extracts of any pages from the Website solely for use by You; and You may draw the attention of other Users to Submissions or materials posted on the Website. You must not use any part of the Submissions of other Users and all materials on the Website for any purpose other than accessing the Website or obtaining a benefit from the Services in accordance with these Terms.<br/>\n                        <br/>\n                        8.3 You shall not, and shall procure that Authorised Personnel shall not modify, translate, create or attempt to create derivative copies of or copy the Software and/or the Website in whole or in part; reverse engineer, decompile, disassemble or otherwise reduce the object code of the Software and/or the Website to source code form; distribute, sub-licence, assign, share, timeshare, sell, rent, lease, transmit, grant a security interest in or otherwise transfer the Software, the Website and/or Your right to use the Software or the Website.<br/>\n                        <br/>\n                        8.4 You:<br/>\n                        8.4.1 Warrant that You own or have the right or licence to use the intellectual property rights in the Your Information, all information and materials provided by You to SimSage™; and<br/>\n                        8.4.2 indemnify SimSage™ against all losses, liabilities, costs and expenses (including but not limited to legal costs) arising from or incurred by reason of any infringement of any intellectual property right by the use or possession of Your Information, and all other information and material provided by You to SimSage™.<br/>\n                        <br/>\n                        <h2>9 Data protection & privacy policy</h2>\n                        <br/>\n                        9.1 You and SimSage™ shall comply with the Privacy Act 1993 (and all other successor legislation and regulations) in performing their obligations under these Terms.<br/>\n                        <br/>\n                        9.2 SimSage™ processes personal information (as defined in the Privacy Act 1993) which it collects in the course of providing the Services in accordance with its Privacy Policy which is accessible on the Website. You should read that policy at www.SimSage.nz/privacy/. You will be deemed to have accepted that policy when You accept these Terms.<br/>\n                        <br/>\n                        9.3 For personal information which is processed by SimSage™ on Your behalf as part of the Services, SimSage™ will act strictly in accordance with Your instructions by following the processing and security obligations contained in these Terms. You confirm that You are solely responsible for ensuring that any such processing and security obligations comply with all applicable privacy and data protection laws. You hereby indemnify SimSage™ against all losses, liabilities, costs and expenses (including but not limited to legal costs) arising from or incurred by reason of Your failure to comply with this clause 9.<br/>\n                        <br/>\n                        <h2>10 General</h2>\n                        <br/>\n                        10.1 No Assignment: You may not assign or transfer any rights to any other person without SimSage™'s prior written consent. SimSage™ may assign or transfer its rights and/or obligations under these Terms without requiring Your consent.<br/>\n                        <br/>\n                        10.2 Waiver: If either party waives any breach of these Terms, this will not constitute a waiver of any other breach. No waiver will be effective unless made in writing.<br/>\n                        <br/>\n                        10.3 Delays: Neither party will be liable for any delay or failure in performing its obligations under these Terms if the delay or failure is due to any cause outside its reasonable control. This clause does not apply to any obligation to pay money.<br/>\n                        <br/>\n                        10.4 Severability: If any provision of these Terms is invalid, unenforceable or conflicts with applicable law, that provision is replaced with a provision which, as far as possible, accomplishes the original purpose of that provision. The remainder of these Terms will be binding on the parties.<br/>\n                        <br/>\n                        10.5 Notices: Unless specified otherwise in these Terms, any notice given under these Terms by one party to the other must be in writing by email and will be deemed to have been given on transmission. Notices to SimSage™ must be sent to support@simsage.nz  or to any other email address notified by email to You by SimSage™. Notices to You will be sent to the email address which You provided when registering for the Services. SimSage™ reserves the right to change these Terms at any time, effective on posting the modified terms on the Website, and SimSage™ will make every effort to communicate these changes to You via email or notification via the Website.<br/>\n                        <br/>\n                        10.6 Rights of Third Parties: A person who is not a party to these Terms has no right to benefit under or to enforce any term of these Terms.<br/>\n                        <br/>\n                        10.7 Acknowledgement: You acknowledge that in entering into these Terms, You have not relied on any representations, undertakings or promises given by or implied from anything said or written (whether on the Website, the internet or in negotiation between the parties) except as expressly set out in these Terms.<br/>\n                        <br/>\n                        10.8 Entire agreement: These Terms, together with our Privacy Policy and the terms of any other notices or instructions given to You under these Terms, supersede and extinguish all prior agreements, representations (whether oral or written), and understandings and constitute the entire agreement between You and SimSage™ relating to the Services, the Website and the other matters addressed in these Terms.<br/>\n                        <br/>\n                        10.9 Governing law and jurisdiction: These Terms are governed by, and shall be construed in accordance with, New Zealand law and shall be subject to the exclusive jurisdiction of the New Zealand courts.<br/>\n                        <br/>\n                        <br/>\n                    </div>\n\n                    <div style={styles.bottomLink}>\n                        <Button variant=\"contained\" onClick={() => window.close()} className=\"button-style\">close</Button>\n                    </div>\n\n                </div>\n            </MuiThemeProvider>\n        );\n    }\n}\n\nconst mapStateToProps = function(state) {\n    return {\n        theme: state.appReducer.theme,\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    dispatch => bindActionCreators(appCreators, dispatch)\n)(LicenseAgreement);\n","import React from 'react';\n\nimport Grid from '@material-ui/core/Grid';\n\nconst styles = {\n    title: {\n        fontSize: '16px',\n    },\n    text: {\n        fontSize: '12px',\n    },\n    previewImage: {\n        maxHeight: '100px',\n    },\n    prevFragment: {\n        display: 'inline-block',\n        width: '20px',\n        background: 'black',\n        color: 'white',\n        borderRadius: '5px',\n        textAlign: 'center',\n        marginRight: '5px',\n        cursor: 'pointer',\n    },\n    nextFragment: {\n        display: 'inline-block',\n        width: '20px',\n        background: 'black',\n        color: 'white',\n        borderRadius: '5px',\n        textAlign: 'center',\n        cursor: 'pointer',\n    },\n    prevFragmentDisabled: {\n        display: 'inline-block',\n        width: '20px',\n        background: 'grey',\n        color: 'white',\n        borderRadius: '5px',\n        textAlign: 'center',\n        marginRight: '5px',\n        cursor: 'default',\n    },\n    nextFragmentDisabled: {\n        display: 'inline-block',\n        width: '20px',\n        background: 'grey',\n        color: 'white',\n        borderRadius: '5px',\n        textAlign: 'center',\n        cursor: 'default',\n    },\n    author: {\n        fontSize: '10px',\n        fontWeight: '600',\n    },\n    url: {\n        marginLeft: '10px',\n        fontSize: '10px',\n        color: 'blue',\n        cursor: 'pointer',\n    },\n    spacer: {\n        height: '20px'\n    }\n};\n\n\nexport class SingleSearchResult extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            has_error: false,\n            item: this.props.item,\n        };\n    }\n\n    UNSAFE_componentWillReceiveProps(nextProps) {\n        this.setState({\n            item: nextProps.item,\n        });\n    }\n\n    componentDidCatch(error, info) {\n        this.setState({ has_error: true });\n        console.log(error, info);\n    }\n\n    // helper - highlight SimSage matching keywords at various levels\n    static highlight(str) {\n        if (str && str.replace) {\n            str = str.replace(/{hl1:}/g, \"<span class='hl1'>\");\n            str = str.replace(/{hl2:}/g, \"<span class='hl2'>\");\n            str = str.replace(/{:hl1}/g, \"</span>\");\n            str = str.replace(/{:hl2}/g, \"</span>\");\n            str = str.replace(/\\n/g, \"<br />\");\n        }\n        return str;\n    }\n    prevFragment() {\n        const item = this.state.item;\n        if (item && item.textIndex > 0) {\n            item.textIndex -= 1;\n            this.setState({item: item});\n        }\n    }\n    nextFragment() {\n        const item = this.state.item;\n        if (item && item.textIndex + 1 < item.textList.length) {\n            item.textIndex += 1;\n            this.setState({item: item});\n        }\n    }\n    getPreviewSource(item) {\n        return \"http://localhost:8080/api/document/preview/\" + this.props.organisationId + \"/\" +\n                    this.props.kbId + \"/\" + this.props.clientId + \"/\" + item.urlId + \"/-1\"\n    }\n    getBinarySource(item) {\n        return \"http://localhost:8080/api/document/binary/\" + this.props.organisationId + \"/\" +\n            this.props.kbId + \"/\" + this.props.clientId + \"/\" + item.urlId;\n    }\n    render() {\n        if (this.state.has_error) {\n            return <h1>single-search-result: Something went wrong.</h1>;\n        }\n        const item = this.state.item;\n        return (\n            <Grid container spacing={1} style={styles.gridWidth}>\n                <Grid item xs={12}>\n                    <div style={styles.title}><a href={this.getPreviewSource(item)} target=\"_blank\">{item.title}</a></div>\n                </Grid>\n                <Grid item xs={1}>\n                    <div>\n                        {item.textIndex > 0 &&\n                        <span style={styles.prevFragment} onClick={() => this.prevFragment()}>&lt;</span>\n                        }\n                        {item.textIndex === 0 &&\n                        <span style={styles.prevFragmentDisabled}>&lt;</span>\n                        }\n                        {item.textIndex + 1 < item.textList.length &&\n                        <span style={styles.nextFragment} onClick={() => this.nextFragment()}>&gt;</span>\n                        }\n                        {item.textIndex + 1 >= item.textList.length &&\n                        <span style={styles.nextFragmentDisabled}>&gt;</span>\n                        }\n                    </div>\n                </Grid>\n                <Grid item xs={9}>\n                    <div style={styles.text} dangerouslySetInnerHTML={{__html: SingleSearchResult.highlight(item.textList[item.textIndex])}}/>\n                </Grid>\n                <Grid item xs={2}>\n                    <div style={styles.previewImage}>\n                        <img src={this.getPreviewSource(item)} alt={item.title} style={styles.previewImage} title={item.title} />\n                    </div>\n                </Grid>\n                <Grid item xs={12}>\n                    <span style={styles.author}>{item.author}</span>\n                    <span style={styles.url} onClick={() => { if (this.props.openDocument) this.props.openDocument(item.url)} }>{item.url}</span>\n                </Grid>\n                <Grid item xs={12}>\n                    <div style={styles.spacer} />\n                </Grid>\n            </Grid>\n        )\n    }\n\n}\n\nexport default SingleSearchResult;\n\n","import React, {Component} from 'react';\n\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport axios from \"axios\";\n\nimport SingleSearchResult from './single-search-result'\n\n// constants\n// const api_base = \"http://localhost:8080/api\";   // the remote SimSage server's location\nconst api_base = window.ENV.api_base;\nconst pageSize = 10;                            // number of search results per page\nconst fragmentCount = 3;                        // number of fragments per search result\nconst scoreThreshold = 0.8125;                  // bot score threshold (0.8125 is a good value)\nconst maxWordDistance = 20;                     // distance between words in search results for scoring\nconst numBotResults = 1;                        // number of bot replies, set to 1\n\n// styles of form\nconst styles = {\n    searchPage: {\n        margin: '50px',\n    },\n    searchBar: {\n        display: 'inline-block',\n    },\n    busyBox: {\n        marginTop: '10px',\n        marginLeft: '10px',\n        marginRight: '5px',\n        width: '32px',\n        float: 'left',\n        display: 'inline-block',\n    },\n    searchTextBox: {\n        marginBottom: 16,\n        width: '400px',\n        float: 'left',\n    },\n    searchText: {\n        width: '400px',\n    },\n    searchButtonBox: {\n        float: 'left',\n        marginLeft: '20px',\n        marginTop: '14px',\n    },\n    botResponseBubble: {\n        marginLeft: '20px',\n        background: 'blue',\n        color: 'white',\n        borderRadius: '5px',\n        width: '600px',\n        padding: '10px',\n        marginBottom: '10px',\n    },\n    urlList: {\n        marginTop: '10px',\n    },\n    url: {\n        fontSize: '12px',\n        cursor: 'pointer',\n    },\n    searchResultsBox: {\n        padding: '10px',\n        borderRadius: '4px',\n        width: '700px',\n        border: '0.5px solid #ccc'\n    }\n};\n\n\nexport class SimsageSearch extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            has_error: false,\n\n            // search system\n            busy: false,\n            searchText: '',\n\n            // a result list if applicable after asking\n            page: 0,\n            has_searched: false,\n            search_result_list: [],\n            shard_list: [],\n            bot_response: '',\n            bot_links: [],\n        };\n\n    }\n    componentDidCatch(error, info) {\n        this.setState({ has_error: true });\n        console.log(error, info);\n    }\n    handleSearchTextKeydown(event) {\n        if (event.key === \"Enter\" && this.state.searchText.length > 0) {\n            this.doSearch();\n        }\n    }\n\n    // convert js response to its error output equivalent\n    static get_error(error) {\n        if (typeof error === \"string\" && error.indexOf(\"{\") === 0) {\n            const obj = JSON.parse(error);\n            if (obj && obj[\"response\"] && obj[\"response\"][\"data\"] && obj[\"response\"][\"data\"][\"error\"]) {\n                return obj[\"response\"][\"data\"][\"error\"];\n            } else {\n                return error;\n            }\n        } else {\n            if (error && error[\"response\"] && error[\"response\"][\"data\"] && error[\"response\"][\"data\"][\"error\"]) {\n                return error[\"response\"][\"data\"][\"error\"];\n            } else {\n                return error;\n            }\n        }\n    }\n\n    static getHeaders() {\n        return {\n            headers: {\n                \"API-Version\": \"1\",\n                \"Content-Type\": \"application/json\"\n            }\n        };\n    }\n\n    static http_post(url, payload, fn_success, fn_fail) {\n        axios.post(api_base + url, payload, SimsageSearch.getHeaders())\n            .then(function (response) {\n                if (fn_success) {\n                    fn_success(response);\n                }\n            })\n            .catch(function (error) {\n                if (fn_fail) {\n                    if (error.response === undefined) {\n                        fn_fail('Servers not responding or cannot contact Servers');\n                    } else {\n                        fn_fail(SimsageSearch.get_error(error));\n                    }\n                }\n            });\n    };\n\n    doSearch() {\n        // check about and help - special cases\n        const self = this;\n        if (!self.state.busy) {\n            if (this.state.searchText.length > 0) {\n                self.setState({busy: true});\n                const data = {\n                    organisationId: this.props.organisationId,\n                    kbList: [this.props.kbId],\n                    scoreThreshold: scoreThreshold,\n                    clientId: this.props.clientId,\n                    semanticSearch: true,\n                    query: \"(\" + this.state.searchText + \")\",\n                    queryText: this.state.searchText,\n                    numResults: numBotResults,\n                    page: this.state.page,\n                    pageSize: pageSize,\n                    shardSizeList: this.state.shard_list,\n                    fragmentCount: fragmentCount,\n                    maxWordDistance: maxWordDistance,\n                    spellingSuggest: false,\n                    contextLabel: '',\n                    contextMatchBoost: 0.01,\n                    sourceId: '',\n                };\n                SimsageSearch.http_post('/ops/query', data,\n                    (result) => {\n                        if (result && result.data && result.data.messageType === 'message') {\n                            const data = result.data;\n                            const shard_list = (data.shardSizeList) ? data.shardSizeList : [];\n                            const result_list = (data.resultList) ? data.resultList : [];\n                            const bot_response = (data.text) ? data.text : '';\n                            const bot_links = (data.urlList) ? data.urlList : [];\n                            self.setState({shard_list: shard_list,\n                                                 search_result_list: result_list,\n                                                 has_searched: true,\n                                                 bot_response: bot_response,\n                                                 bot_links: bot_links,\n                                                 busy: false});\n                        } else {\n                            self.setState({busy: false});\n                        }\n                    },\n                    (error) => {\n                        self.setState({busy: false});\n                        if (self.props.onError)\n                            self.props.onError('Error', error);\n                    }\n                )\n            }\n        }\n    }\n    openDocument(url) {\n        alert(\"open document \" + url);\n    }\n    render() {\n        if (this.state.has_error) {\n            return <h1>simsage-search.js: Something went wrong.</h1>;\n        }\n        return (\n            <div style={styles.searchPage}>\n\n                {/* search bar */}\n                <div style={styles.searchBar}>\n                    <div style={styles.busyBox}>\n                        <span style={{'display': this.state.busy ? '' : 'none', width: '32px'}}>&#8987;</span>\n                    </div>\n                    <div style={styles.searchTextBox}>\n                        <TextField\n                            autoFocus={true}\n                            onChange={(event) => this.setState({searchText: event.target.value})}\n                            onKeyPress={(event) => this.handleSearchTextKeydown(event)}\n                            label=\"search\"\n                            disabled={this.state.busy}\n                            style={styles.searchText}\n                            value={this.state.searchText}\n                        />\n                    </div>\n                    <div style={styles.searchButtonBox}>\n                        <Button variant=\"contained\"\n                            color=\"secondary\"\n                            disabled={this.state.busy}\n                            onClick={() => this.doSearch()}>\n                            Search\n                        </Button>\n                    </div>\n                </div>\n\n\n                {/* bot response display */}\n                {this.state.bot_response !== '' &&\n                    <div style={styles.botResponseBubble}>\n\n                        <div>{this.state.bot_response}</div>\n\n                        <div style={styles.urlList}>\n                            {\n                                this.state.bot_links.map((url, index) => {\n                                    return (<div key={index} style={styles.url} onClick={() => this.openDocument(url)}>{url}</div>)\n                                })\n                            }\n                        </div>\n\n                    </div>\n                }\n\n                {/* search result display */}\n\n                {this.state.search_result_list && this.state.search_result_list.length > 0 &&\n                <div>\n                    <div style={styles.searchResultsBox}>\n                        {\n                            this.state.search_result_list.map((item, index) => {\n                                return (<SingleSearchResult key={index}\n                                                            item={item}\n                                                            organisationId={this.props.organisationId}\n                                                            kbId={this.props.kbId}\n                                                            clientId={this.props.clientId}\n                                                            openDocument={(url) => this.openDocument(url)} />)\n                            })\n                        }\n                    </div>\n                </div>\n                }\n\n                {\n                    this.state.search_result_list && this.state.search_result_list.length === 0 &&\n                    this.state.has_searched && this.state.bot_response === '' &&\n                    <div>no results</div>\n                }\n\n\n            </div>\n        );\n    }\n}\n\nexport default SimsageSearch;\n","import React, {Component} from 'react';\nimport SimsageSearch from \"./simsage-search\";\n\n\nexport class SearchPage extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n        }\n    }\n    componentDidCatch(error, info) {\n        this.props.setError(error, info);\n        console.log(error, info);\n    }\n    componentDidMount() {\n    }\n    render() {\n        {/* clientId below is a random GUID that uniquely identifies a single client for keeping state inside SimSage */}\n        return (\n             <div>\n                 <SimsageSearch\n                     organisationId=\"c276f883-e0c8-43ae-9119-df8b7df9c574\"\n                     kbId=\"46ff0c75-7938-492c-ab50-442496f5de51\"\n                     clientId=\"37542428-7bf3-45a0-beb4-5179e6931379\"\n                     onError={ (title, message) => alert(title + ':' + message) }\n                 />\n             </div>\n        )\n    }\n}\n\nexport default SearchPage;\n","import React, {Component} from 'react';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Button from '@material-ui/core/Button';\n\n\nexport class MessageDialog extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            open: false,\n            title: props.title,\n            message: props.message,\n            callback: props.callback,\n            has_error: false,\n        };\n    }\n    componentDidCatch(error, info) {\n        this.setState({ has_error: true });\n        console.log(error, info);\n    }\n    handleOk() {\n        this.setState({open: false});\n        if (this.state.callback) {\n            this.state.callback(true);\n        }\n    }\n    UNSAFE_componentWillReceiveProps(props) {\n        // see if we have data to start this dialog\n        this.setState({\n            open: (props.message.length > 0),\n            message: props.message,\n            callback: props.callback,\n            title: props.title\n        })\n    }\n    cancel() {\n        if (this.state.callback) {\n            this.state.callback(false);\n        }\n    }\n    ok() {\n        if (this.state.callback) {\n            this.state.callback(true);\n        }\n    }\n    render() {\n        if (this.state.has_error) {\n            return <h1>message-dialog.js: Something went wrong.</h1>;\n        }\n        return (\n            <Dialog aria-labelledby=\"alert-dialog-title\"\n                    aria-describedby=\"alert-dialog-description\"\n                    open={this.state.open}\n                    fullWidth={true}\n                    maxWidth=\"md\"\n                    onClose={() => this.cancel()} >\n\n                <DialogTitle id=\"alert-dialog-title\" className={this.props.theme}>{this.state.title}</DialogTitle>\n                <DialogContent className={this.props.theme}>\n                    <div>\n                        <div dangerouslySetInnerHTML={{__html: this.state.message}} />\n                    </div>\n                </DialogContent>\n                <DialogActions className={this.props.theme}>\n                    <Button color=\"primary\" onClick={() => this.cancel()}>Cancel</Button>\n                    <Button variant=\"contained\" color=\"secondary\" onClick={() => this.ok()}>OK</Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nexport default MessageDialog;\n","import React, {Component} from 'react';\n\nimport Downshift from 'downshift';\nimport Paper from '@material-ui/core/Paper';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport TextField from '@material-ui/core/TextField';\nimport Api from \"./api\";\n\n// how many characters before we start calling back\nconst controlWidth = '500px';\n\nconst styles = {\n    control: {\n        float: 'left',\n        width: 'calc(controlWidth - 20px)',\n    },\n    downShift: {\n        marginTop: '-15px',\n        float: 'left',\n        width: controlWidth,\n    },\n    popover: {\n        width: controlWidth,\n    },\n    pullDownBox: {\n        float: 'right',\n        marginTop: '10px',\n        marginRight: '-22px',\n    },\n    pullDownImage: {\n        width: '18px',\n    },\n};\n\n// a simple auto-complete box with navigation, data-get calls and onSelect callbacks\n// uses: \"downshift\": \"^3.2.7\"\n// npm install --save downshift\nexport class AutoComplete extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            has_error: false,\n            id: props.id,\n\n            // the text inside the text box\n            label: props.label ? props.label : '',\n\n            // callback when an item is selected (returns the data part below)\n            onSelect: props.onSelect,\n\n            // callback to get [{ label: 'display', data: {} }, ...]\n            onFilter: props.onFilter,\n\n            // the value to display in the box\n            value: props.value ? props.value : '',\n\n            // popper / menu values displayed y/n\n            isOpen: false,\n\n            // index of item selected in the drop down menu\n            selectedIndex: -1,\n\n            minTextSize: props.minTextSize >= 0 ? props.minTextSize : 2,\n\n            // the list of values set by onFilter()\n            suggestion_list: [],\n        }\n    }\n    componentDidCatch(error, info) {\n        this.setState({ has_error: true });\n        console.log(error, info);\n    }\n    componentDidMount() {\n    }\n    UNSAFE_componentWillReceiveProps(next) {\n        // see if we have data to start this dialog\n        if (next !== null) {\n            this.setState({\n                id: next.id,\n                label: next.label ? next.label : '',\n                value: next.value ? next.value : '',\n                minTextSize: next.minTextSize >= 0 ? next.minTextSize : 2,\n                onSelect: next.onSelect,\n                onFilter: next.onFilter,\n            });\n        }\n    }\n    // get text to display?\n    getLookupData(text) {\n        if (text.length >= this.state.minTextSize && this.state.onFilter) {\n            this.state.onFilter(text, (list) => {\n                this.setState({suggestion_list: list, value: text, isOpen: list.length > 0});\n            });\n        }\n    }\n    // get text to display?\n    showAllData(force) {\n        if (this.state.onFilter) {\n            if (this.state.isOpen && !force) {\n                this.closeControl();\n            } else {\n                this.state.onFilter('', (list) => {\n                    this.setState({suggestion_list: list, isOpen: list.length > 0});\n                });\n            }\n        }\n    }\n    closeControl() {\n        // is value valid?\n        const value = this.state.value;\n        let exists = false;\n        this.state.onFilter('', (list) => {\n            for (const i in list) {\n                if (list[i].label === value) {\n                    exists = true;\n                }\n            }\n        });\n        if (!exists) {\n            this.setState({suggestion_list: [], isOpen: false, value: ''});\n            if (this.state.onSelect) {\n                this.state.onSelect('', '');\n            }\n        } else {\n            this.setState({suggestion_list: [], isOpen: false});\n        }\n    }\n    static renderSuggestion({ suggestion, index, itemProps, highlightedIndex, selectedItem }) {\n        const isHighlighted = highlightedIndex === index;\n        const isSelected = (selectedItem || '').indexOf(suggestion.label) > -1;\n        return (\n            <MenuItem\n                {...itemProps}\n                key={suggestion.label}\n                selected={isHighlighted}\n                component=\"div\"\n                style={{\n                    height: '22px',\n                    fontSize: '16px',\n                    fontWeight: isSelected ? 500 : 400,\n                }}\n            >\n                {suggestion.label}\n            </MenuItem>\n        );\n    }\n    select(selectedItem) {\n        const list = this.state.suggestion_list;\n        if (list && list.length > 0 && this.state.onSelect) {\n            for (let i = 0; i < list.length; i++) {\n                if (list[i].label === selectedItem) {\n                    this.state.onSelect(selectedItem, list[i].data);\n                    this.setState({isOpen: false, selection_list: [], value: selectedItem})\n                }\n            }\n        }\n    }\n    // keyboard handler for drop down menu list (cursor up/down controls + enter)\n    handleKey(event) {\n        const si = this.state.selectedIndex;\n        const list = this.state.suggestion_list;\n        if (list.length === 0) {\n            this.setState({selectedIndex: -1})\n        } else {\n            if (event.keyCode === 13) {  // select\n                if (si >= 0 && si < list.length) {\n                    this.select(list[si].label);\n                }\n            } else if (event.keyCode === 38) { // arrow up\n                if (si > 0) {\n                    this.setState({selectedIndex: si - 1});\n                } else {\n                    this.setState({selectedIndex: 0});\n                }\n            } else if (event.keyCode === 40) { // arrow down\n                if (si < 0) {\n                    this.setState({selectedIndex: 0});\n                } else {\n                    if (si + 1 >= list.length) {\n                        this.setState({selectedIndex: list.length - 1});\n                    } else {\n                        this.setState({selectedIndex: si + 1});\n                    }\n                }\n            }\n        }\n    }\n    render() {\n        if (this.state.has_error) {\n            return (<h1>auto-complete.js: Something went wrong.</h1>);\n        }\n        return (\n            <div style={styles.control}>\n\n                <div style={styles.downShift}>\n                    <Downshift id={this.state.id}\n                               onSelect={(data) => this.select(data)} >\n                        {({\n                              getItemProps,\n                              selectedItem,\n                          }) => (\n                            <div>\n                                <TextField\n                                    placeholder={this.state.label}\n                                    inputProps={{fontSize: '30px'}}\n                                    value={this.state.value}\n                                    onClick={() => this.showAllData(true)}\n                                    onBlur={() => this.closeControl()}\n                                    spellCheck={false}\n                                    onKeyDown={(event) => {\n                                        if (this.state.isOpen)\n                                            this.handleKey(event);\n                                        else\n                                            this.showAllData(true);\n                                    }}\n                                    onChange={(event) => {  this.setState({value: event.target.value});\n                                        this.getLookupData(event.target.value);\n                                    }}\n                                    fullWidth={true}\n                                />\n                                {\n                                    !this.state.isOpen &&\n                                    <div style={styles.pullDownBox}>\n                                        <img src=\"../images/pulldown.svg\" style={styles.pullDownImage} onClick={() => this.showAllData(false)} alt=\"auto complete\" />\n                                    </div>\n                                }\n                                {\n                                    this.state.isOpen &&\n                                    <div style={styles.pullDownBox}>\n                                        <img src=\"../images/pulldown-rotated.svg\" style={styles.pullDownImage} onClick={() => this.showAllData(false)} alt=\"auto complete\" />\n                                    </div>\n                                }\n                                {this.state.isOpen &&\n                                <Paper\n                                    square\n                                    style={{\n                                        position: \"absolute\",\n                                        zIndex: \"999\",\n                                        marginTop: 8,\n                                        paddingBottom: \"20px\",\n                                        width: '500px',\n                                        color: Api.getThemeColour(this.props.theme),\n                                        background: Api.getThemeBackground(this.props.theme),\n                                        minHeight: '30px',\n                                        maxHeight: '300px',\n                                        overflowX: 'auto',\n                                        overflowY: 'auto',\n                                    }}\n                                >\n                                    {this.state.suggestion_list.map((suggestion, index) =>\n                                        AutoComplete.renderSuggestion({\n                                            suggestion,\n                                            index,\n                                            itemProps: getItemProps({\n                                                item: suggestion.label,\n                                                value: suggestion.label,\n                                                data: suggestion.data\n                                            }),\n                                            highlightedIndex: this.state.selectedIndex,\n                                            selectedItem,\n                                        }),\n                                    )}\n                                </Paper>\n                                }\n                            </div>\n                        )}\n                    </Downshift>\n                </div>\n\n            </div>\n        )\n    }\n}\n\nexport default AutoComplete;\n","import React, {Component} from 'react';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Button from '@material-ui/core/Button';\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\n\n\nexport class OrganisationEdit extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            has_error: false,\n            open: props.open,\n            onSave: props.onSave,\n            onError: props.onError,\n\n            id: this.props.id,\n            name: this.props.name,\n            enabled: this.props.enabled,\n        };\n    }\n    componentDidCatch(error, info) {\n        this.setState({ has_error: true });\n        console.log(error, info);\n    }\n    handleSave() {\n        if (this.state.onSave) {\n            this.state.onSave({\n                id: this.state.id,\n                name: this.state.name,\n                enabled: this.state.enabled,\n            });\n        }\n    }\n    handleCancel() {\n        if (this.state.onSave) {\n            this.state.onSave(null);\n        }\n    }\n    UNSAFE_componentWillReceiveProps(props) {\n        this.setState({\n            open: props.open,\n            onSave: props.onSave,\n            onError: props.onError,\n\n            id: props.id,\n            name: props.name,\n            enabled: props.enabled,\n        })\n    }\n    render() {\n        if (this.state.has_error) {\n            return <h1>organisation-edit.js: Something went wrong.</h1>;\n        }\n        const theme = this.props.theme;\n        return (\n            <Dialog aria-labelledby=\"alert-dialog-title\"\n                    aria-describedby=\"alert-dialog-description\"\n                    disableBackdropClick={true}\n                    disableEscapeKeyDown={true}\n                    open={this.state.open}\n                    maxWidth=\"lg\"\n                    onClose={() => this.handleCancel()} >\n\n                <DialogTitle id=\"alert-dialog-title\" className={theme}>Edit Organisation</DialogTitle>\n                <DialogContent className={theme}>\n                    <Grid container spacing={2}>\n\n                        <Grid item xs={1} />\n                        <Grid item xs={2}>\n                            <div>name</div>\n                        </Grid>\n                        <Grid item xs={7}>\n                            <TextField\n                                autoFocus={true}\n                                onChange={(event) => this.setState({name: event.target.value})}\n                                placeholder=\"name\"\n                                variant=\"standard\"\n                                fullWidth={true}\n                                value={this.state.name}\n                            />\n                        </Grid>\n                        <Grid item xs={2} />\n\n\n                        <Grid item xs={4} />\n                        <Grid item xs={6}>\n                            <Checkbox\n                                checked={this.state.enabled}\n                                onChange={(event) => { this.setState({enabled: event.target.checked}); }}\n                                value=\"enable this organisation?\"\n                                inputProps={{\n                                    'aria-label': 'primary checkbox',\n                                }}\n                            />\n                            organisation enabled?\n                        </Grid>\n                        <Grid item xs={2} />\n\n\n                    </Grid>\n                </DialogContent>\n                <DialogActions className={theme}>\n                    <Button color=\"primary\" onClick={() => this.handleCancel()}>Cancel</Button>\n                    <Button variant=\"contained\" color=\"secondary\" onClick={() => this.handleSave()}>Save</Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nexport default OrganisationEdit;\n","import React from 'react';\n\nconst styles = {\n    uploadContainer: {\n        float: 'left',\n        width: '400px',\n        minWidth: '400px',\n        // border: '1px solid lightgray',\n        padding: '1px',\n        marginLeft: '10px',\n        fontWeight: 700,\n        fontSize: '10pt',\n        cursor: 'pointer',\n    },\n    formWidth: {\n        marginTop: '-20px',\n    },\n    uploadControl: {\n        marginTop: '10px',\n    },\n    imageButton: {\n        float: 'left',\n        marginRight: '20px',\n        paddingTop: '10px',\n        cursor: 'pointer',\n    },\n    restoreImage: {\n        width: '25px',\n    },\n    busyImage: {\n        width: '28px',\n        height: '28px',\n        marginTop: '-10px',\n        float: 'left',\n    },\n    uploadInput: {\n        float: 'left',\n    },\n    uploadWheel: {\n        marginLeft: '5px',\n        marginTop: '14px',\n        height: '28px',\n        float: 'left',\n    },\n};\n\nexport class RestoreUpload extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            filename: '',\n            fileType: '',\n            data: '',\n            organisationId: props.organisationId,\n            onError: props.onError,\n        };\n    }\n\n    UNSAFE_componentWillReceiveProps(nextProps) {\n        this.setState({\n            organisationId: nextProps.organisationId,\n            onError: nextProps.onError,\n        });\n    }\n\n    _handleImageChange(e) {\n        e.preventDefault();\n\n        const self = this;\n        const reader = new FileReader();\n        const file = e.target.files[0];\n        const filename = file['name'];\n        const fileType = file['type'];\n\n        reader.onloadend = () => {\n            self.setState({\n                filename: filename,\n                fileType: fileType,\n                data: reader.result\n            });\n        };\n        reader.readAsDataURL(file)\n    }\n\n    upload() {\n        if (this.state.data) {\n            const payload = {\n                organisationId: this.state.organisationId,\n                data: this.state.data,\n            };\n            if (this.props.doUpload) {\n                this.props.doUpload(payload);\n            }\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <form onSubmit={(e) => this._handleSubmit(e)} style={styles.uploadContainer}>\n                    <div style={styles.formWidth}>\n                        {\n                            this.state.data && this.state.data.length > 0 && this.state.fileType === \"text/plain\" &&\n                            <div style={styles.imageButton} onClick={() => this.upload()}><img\n                                style={styles.restoreImage} src=\"../images/restore.svg\"\n                                title={\"Click here to restore data from \\\"\" + this.state.filename + \"\\\"\"}\n                                alt=\"restore data from file\"/></div>\n                        }\n                        <input style={styles.uploadControl}\n                               type=\"file\"\n                               onChange={(e) => this._handleImageChange(e)}/>\n                    </div>\n                </form>\n            </div>\n        )\n    }\n}\n\nexport default RestoreUpload;\n","import React from 'react';\n\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport TablePagination from '@material-ui/core/TablePagination';\n\nimport {Api} from '../common/api'\n\nimport {connect} from \"react-redux\";\nimport {bindActionCreators} from \"redux\";\nimport {appCreators} from \"../actions/appActions\";\nimport Comms from \"../common/comms\";\nimport {Home} from \"../home\";\nimport {OrganisationEdit} from \"./organisation-edit\"\nimport Grid from \"@material-ui/core/Grid\";\nimport RestoreUpload from \"../common/restore-upload\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport Button from \"@material-ui/core/Button\";\n\n\nconst styles = {\n    pageWidth: {\n        width: '900px'\n    },\n    text: {\n        border: '1px solid #808080',\n        borderRadius: '4px',\n        padding: '4px',\n    },\n    label: {\n        color: '#555',\n    },\n    tableHeaderStyle: {\n        background: '#51B274',\n        fontSize: '0.95em',\n        color: '#fff',\n    },\n    tableLight: {\n    },\n    tableDark: {\n        background: '#d0d0d0',\n    },\n    linkButton: {\n        float: 'left',\n        padding: '10px',\n        color: '#888',\n        cursor: 'pointer',\n    },\n    imageButton: {\n        float: 'right',\n        padding: '10px',\n        color: '#888',\n        cursor: 'pointer',\n    },\n    editBox: {\n        width: '500px',\n        marginBottom: '15px',\n    },\n    roleBlock: {\n        padding: '5px',\n        marginTop: '20px',\n        float: 'left',\n        width: '400px',\n        border: '1px solid #888',\n        borderRadius: '4px',\n        marginLeft: '10px',\n    },\n    roleLabel: {\n        fontSize: '0.8em',\n        color: '#aaa',\n    },\n    roleArea: {\n        padding: '20px',\n    },\n    roleChip: {\n        margin: '2px',\n    },\n    addImage: {\n        width: '25px',\n    },\n    textFieldBox: {\n        float: 'left',\n    },\n    imageBox: {\n        float: 'left',\n    },\n    imageSize: {\n        marginTop: '20px',\n        width: '20px',\n    },\n    dlImageSize: {\n        width: '24px',\n    },\n\n    searchBox: {\n        boxShadow: 'none',\n    },\n    floatLeftLabel: {\n        float: 'left',\n        marginRight: '6px',\n        marginTop: '4px',\n        fontSize: '0.9em',\n        fontWeight: '500',\n    },\n    floatLeft: {\n        float: 'left',\n    },\n    searchFloatLeft: {\n        float: 'left',\n    },\n    findBox: {\n        padding: '10px',\n        marginBottom: '5px',\n        float: 'right',\n    },\n    search: {\n        marginTop: '2px',\n        marginLeft: '15px',\n        width: '18px',\n        color: '#000',\n    },\n    copiedStyle: {\n        fontSize: '10px',\n        marginLeft: '25px',\n        marginTop: '-22px',\n        position: 'absolute',\n        float: 'left',\n        zIndex: '99',\n    },\n    organisationIdLabel: {width: '170px', float: 'left', height: '24px'},\n    copyImageSpan: {float: 'left', marginTop: '-5px', marginLeft: '10px'},\n    clipboardImage: {width: '24px', height: '24px;'},\n};\n\n\nexport class Organisations extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            edit_organisation: false,\n\n            edit_organisation_id: \"\",\n            name: \"\",\n            max_tpm: 0,\n            analytics_window_size_in_months: 12,\n            enabled: true,\n            bot_enabled: true,\n            analytics_enabled: true,\n            operator_enabled: true,\n            language_enabled: true,\n\n            // organisation id view dialog\n            copied_visible: '',\n            view_organisation_id: false,\n\n            organisation: null,\n\n            // pagination\n            page_size: 5,\n            page: 0,\n        };\n    }\n    componentDidCatch(error, info) {\n        this.props.setError(error, info);\n        console.log(error, info);\n    }\n    addNewOrganisation() {\n        this.setState({edit_organisation: true,\n                             organisation: null,\n                             id: \"\",\n                             name: \"\",\n                             enabled: true,\n        })\n    }\n    refreshSecurityId() {\n        this.setState({edit_security_id: Api.createGuid()})\n    }\n    editOrganisation(organisation) {\n        if (organisation) {\n            this.setState({edit_organisation: true,\n                                 organisation: organisation,\n                                 id: organisation.id,\n                                 name: organisation.name,\n                                 enabled: Api.defined(organisation.enabled) ? organisation.enabled : true,\n            })\n        }\n    }\n    deleteOrganisationAsk(organisation) {\n        if (organisation && this.props.openDialog) {\n            this.props.openDialog(\"are you sure you want to remove \\\"\" + organisation.name + \"\\\" ?\",\n                                  \"Remove Organisation\", (action) => { this.deleteOrganisation(action) });\n            this.setState({organisation: organisation})\n        }\n    }\n    deleteOrganisation(action) {\n        if (action) {\n            this.props.deleteOrganisation(this.state.organisation.id);\n        }\n        if (this.props.closeDialog) {\n            this.props.closeDialog();\n        }\n    }\n    changePage(page) {\n        this.setState({page: page});\n    }\n    changePageSize(page_size) {\n        this.setState({page_size: page_size});\n    }\n    handleSearchTextKeydown(event) {\n        if (event.key === \"Enter\") {\n            this.props.getOrganisationList();\n        }\n    }\n    getOrganisations() {\n        const paginated_list = [];\n        const first = this.state.page * this.state.page_size;\n        const last = first + this.state.page_size;\n        for (const i in this.props.organisation_list) {\n            if (i >= first && i < last) {\n                if (this.props.organisation_list.hasOwnProperty(i))\n                    paginated_list.push(this.props.organisation_list[i]);\n            }\n        }\n        return paginated_list;\n    }\n    save(organisation) {\n        if (organisation) {\n            if (organisation.name.length > 0) {\n                this.props.updateOrganisation({\n                    id: Api.defined(organisation.id) ? organisation.id : '',\n                    name: organisation.name,\n                    enabled: organisation.enabled,\n                });\n                this.setState({edit_organisation: false, organisation: null});\n            } else {\n                this.props.setError(\"Incomplete Data\", \"Please complete all fields.  Must have a name.\");\n            }\n        } else {\n            this.setState({edit_organisation: false, organisation: null});\n        }\n    }\n    backupAll() {\n        window.open(Comms.get_backup_url(this.props.selected_organisation_id, 'all'), '_blank');\n    }\n    backup(organisationId) {\n        window.open(Comms.get_backup_url(organisationId, 'specific'), '_blank');\n    }\n    restore(data) {\n        if (data && data.data && data.data.length > 0) {\n            this.props.restore(data.data);\n        }\n    }\n    downloadHtml(html, organisation) {\n        window.open(Comms.get_html_url(html, organisation.id), '_blank');\n    }\n    viewIds(organisation) {\n        this.setState({view_organisation_id: true, organisation: organisation});\n    }\n    startCopiedVisible(org_id) {\n        this.setState({copied_visible: org_id});\n        window.setTimeout(() => { this.setState({copied_visible: \"\"})}, 1000);\n    }\n    render() {\n        const theme = this.props.theme;\n        const isAdmin = Home.hasRole(this.props.user, ['admin']);\n        return (\n            <div>\n                <OrganisationEdit open={this.state.edit_organisation}\n                                  id={this.state.id}\n                                  theme={theme}\n                                  name={this.state.name}\n                                  enabled={this.state.enabled}\n                                  onError={(title, err) => this.props.showError(title, err)}\n                                  onSave={(data) => this.save(data)} />\n\n                <div style={styles.searchBox}>\n                    <Grid item xs={12}>\n                        <div style={styles.findBox}>\n                            <div style={styles.floatLeftLabel}>filter</div>\n                            <div style={styles.searchFloatLeft}>\n                                <input type=\"text\" value={this.props.user_filter} autoFocus={true} style={styles.text} className={theme}\n                                       onKeyPress={(event) => this.handleSearchTextKeydown(event)}\n                                       onChange={(event) => {\n                                           this.props.setOrganisationFilter(event.target.value)\n                                       }}/>\n                            </div>\n                            <div style={styles.floatLeft}>\n                                <img style={styles.search}\n                                     onClick={() => this.props.getOrganisationList()}\n                                     src=\"../images/dark-magnifying-glass.svg\" title=\"filter\" alt=\"filter\"/>\n                            </div>\n                        </div>\n                    </Grid>\n                </div>\n\n                <br clear=\"both\" />\n\n                <Paper style={styles.pageWidth}>\n                    <Table>\n                        <TableHead>\n                            <TableRow className='table-header'>\n                                <TableCell className='table-header table-width-70'>organisation</TableCell>\n                                <TableCell className='table-header'>actions</TableCell>\n                            </TableRow>\n                        </TableHead>\n                        <TableBody style={theme === 'light' ? styles.tableLight : styles.tableDark}>\n                            {\n                                this.getOrganisations().map((organisation) => {\n                                    return (\n                                        <TableRow key={organisation.id}>\n                                            <TableCell>\n                                                <div style={styles.label}>{organisation.name}</div>\n                                            </TableCell>\n                                            <TableCell>\n                                                <div style={styles.linkButton}\n                                                     onClick={() => { this.viewIds(organisation); }}>\n                                                    <img src=\"../images/id.svg\" style={styles.dlImageSize}\n                                                         title=\"view knowledge base ids\" alt=\"ids\"/>\n                                                </div>\n                                                <div style={styles.linkButton} onClick={() => this.editOrganisation(organisation)}>\n                                                    <img src=\"../images/edit.svg\" style={styles.dlImageSize} title=\"edit organisation\" alt=\"edit\"/>\n                                                </div>\n                                                <div style={styles.linkButton} onClick={() => this.deleteOrganisationAsk(organisation)}>\n                                                    <img src=\"../images/delete.svg\" style={styles.dlImageSize} title=\"remove organisation\" alt=\"remove\"/>\n                                                </div>\n                                                {isAdmin &&\n                                                <div style={styles.linkButton} onClick={() => this.backup(organisation.id)}>\n                                                    <img src=\"../images/backup.svg\" style={styles.dlImageSize} title={\"backup this organisation\"}\n                                                         alt={\"backup \" + organisation.name} />\n                                                </div>\n                                                }\n                                            </TableCell>\n                                        </TableRow>\n                                    )\n                                })\n                            }\n                            <TableRow>\n                                <TableCell colSpan={2}>\n                                    {isAdmin &&\n                                    <div style={styles.imageButton} onClick={() => this.backupAll()}><img\n                                        style={styles.addImage} src=\"../images/backup.svg\"\n                                        title=\"backup all organisations\"\n                                        alt=\"backup all organisations\"/></div>\n                                    }\n                                    <div style={styles.imageButton} onClick={() => this.addNewOrganisation()}><img\n                                        style={styles.addImage} src=\"../images/add.svg\" title=\"add new organisation\"\n                                        alt=\"add new organisation\"/></div>\n                                    <br />\n                                    {isAdmin &&\n                                    <RestoreUpload doUpload={(data) => this.restore(data)}\n                                                   organisationId={this.props.selected_organisation_id}\n                                                   onError={(err) => this.props.setError(\"Error\", err)} />\n                                    }\n                                </TableCell>\n                            </TableRow>\n                        </TableBody>\n                    </Table>\n\n                    <TablePagination\n                        rowsPerPageOptions={[5, 10, 25]}\n                        component=\"div\"\n                        count={this.props.organisation_list.length}\n                        rowsPerPage={this.state.page_size}\n                        page={this.state.page}\n                        style={theme === 'light' ? styles.tableLight : styles.tableDark}\n                        backIconButtonProps={{\n                            'aria-label': 'Previous Page',\n                        }}\n                        nextIconButtonProps={{\n                            'aria-label': 'Next Page',\n                        }}\n                        onChangePage={(event, page) => this.changePage(page)}\n                        onChangeRowsPerPage={(event) => this.changePageSize(event.target.value)}\n                    />\n\n                </Paper>\n\n\n                <Dialog aria-labelledby=\"alert-dialog-title\"\n                        aria-describedby=\"alert-dialog-description\"\n                        open={this.state.view_organisation_id}\n                        disableBackdropClick={true}\n                        disableEscapeKeyDown={true}\n                        fullWidth={true}\n                        maxWidth=\"md\"\n                        onClose={() => this.setState({view_details: false})} >\n                    <DialogTitle className={theme}>{this.state.organisation != null ? this.state.organisation.name : \"\"} organisation-id</DialogTitle>\n                    <DialogContent className={theme}>\n                        <div>\n                            <div style={styles.organisationIdLabel}>\n                                organisation id\n                            </div>\n                            <div style={styles.floatLeft}>{this.state.organisation ? this.state.organisation.id : \"\"}</div>\n                            <span style={styles.copyImageSpan} title={'copy organisation id'}>\n                                <img src={theme === 'light' ? '../images/clipboard-copy.svg' : '../images/clipboard-copy-dark.svg'} style={styles.clipboardImage} alt={'copy'}\n                                     onClick={() => { if (Api.writeToClipboard(this.state.organisation ? this.state.organisation.id : \"\"))\n                                                        this.startCopiedVisible(this.state.organisation.id);\n                                     }}/>\n                                {this.state.organisation != null && this.state.copied_visible === this.state.organisation.id &&\n                                    <div style={styles.copiedStyle}>copied</div>\n                                }\n                            </span>\n                            <br clear='both' />\n                        </div>\n                    </DialogContent>\n                    <DialogActions className={theme}>\n                        <Button variant=\"contained\" color=\"secondary\" onClick={() => this.setState({view_organisation_id: false})}>Close</Button>\n                    </DialogActions>\n                </Dialog>\n\n\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = function(state) {\n    return {\n        error: state.appReducer.error,\n        error_title: state.appReducer.error_title,\n        user: state.appReducer.user,\n        theme: state.appReducer.theme,\n\n        organisation_list: state.appReducer.organisation_list,\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    dispatch => bindActionCreators(appCreators, dispatch)\n)(Organisations);\n\n","import React from 'react';\n\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from '@material-ui/core/TextField';\nimport Chip from '@material-ui/core/Chip';\nimport TablePagination from '@material-ui/core/TablePagination';\n\nimport {Home} from '../home';\nimport {connect} from \"react-redux\";\nimport {bindActionCreators} from \"redux\";\nimport {appCreators} from \"../actions/appActions\";\nimport Grid from \"@material-ui/core/Grid\";\n\n\nconst styles = {\n    pageWidth: {\n        width: '900px',\n    },\n    label: {\n        color: '#555',\n    },\n    tableLight: {\n    },\n    tableDark: {\n        background: '#d0d0d0',\n    },\n    text: {\n        border: '1px solid #808080',\n        borderRadius: '4px',\n        padding: '4px',\n    },\n    tableHeaderStyle: {\n        background: '#555',\n        fontSize: '0.95em',\n        color: '#fff',\n    },\n    linkButton: {\n        float: 'left',\n        padding: '10px',\n        color: '#888',\n        cursor: 'pointer',\n    },\n    disabledLinkButton: {\n        float: 'left',\n        padding: '10px',\n        color: '#eee',\n    },\n    imageButton: {\n        float: 'right',\n        padding: '10px',\n        color: '#888',\n        cursor: 'pointer',\n    },\n    editBox: {\n        width: '500px',\n    },\n    roleBlock: {\n        padding: '5px',\n        marginTop: '20px',\n        float: 'left',\n        width: '400px',\n        border: '1px solid #888',\n        borderRadius: '4px',\n        marginLeft: '10px',\n    },\n    roleLabel: {\n        fontSize: '0.8em',\n        color: '#aaa',\n    },\n    roleArea: {\n        padding: '20px',\n    },\n    roleChip: {\n        margin: '2px',\n    },\n    addImage: {\n        width: '25px',\n    },\n    dlImageSize: {\n        width: '24px',\n    },\n    dlImageSizeDisabled: {\n        width: '24px',\n        opacity: '0.2'\n    },\n    searchBox: {\n        boxShadow: 'none',\n    },\n    floatLeftLabel: {\n        float: 'left',\n        marginRight: '6px',\n        marginTop: '4px',\n        fontSize: '0.9em',\n        fontWeight: '500',\n    },\n    floatLeft: {\n        float: 'left',\n    },\n    searchFloatLeft: {\n        float: 'left',\n    },\n    findBox: {\n        padding: '10px',\n        marginBottom: '5px',\n        float: 'right',\n    },\n    search: {\n        marginTop: '2px',\n        marginLeft: '15px',\n        width: '18px',\n        color: '#000',\n    },\n};\n\nconst roles = ['admin', 'operator', 'crawler', 'manager']; // reporter has been removed temporarily\n\nexport class UserManager extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            edit_user: false,\n            user: null,\n            edit_user_id: \"\",\n            edit_first_name: \"\",\n            edit_surname: \"\",\n            edit_email: \"\",\n            edit_password: \"\",\n            edit_roles: [],\n            edit_kb_list: [],\n            // pagination\n            page_size: 5,\n            page: 0,\n        };\n    }\n    componentDidCatch(error, info) {\n        this.props.setError(error, info);\n        console.log(error, info);\n    }\n    numUsers(organisation_id, isAdmin) {\n        let count = 0;\n        for (const i in this.props.user_list) {\n            const user = this.props.user_list[i];\n            const roleStr = UserManager.formatRoles(this.props.selected_organisation_id, user.roles);\n            if (isAdmin || roleStr.length > 0) { // has a role or isAdmin?\n                count += 1;\n            }\n        }\n        return count;\n    }\n    getUsers(isAdmin) {\n        const paginated_list = [];\n        const first = this.state.page * this.state.page_size;\n        const last = first + this.state.page_size;\n        let index = 0;\n        for (const i in this.props.user_list) {\n            // paginate all users - but only those that have roles in this organisation\n            const user = this.props.user_list[i];\n            const roleStr = UserManager.formatRoles(this.props.selected_organisation_id, user.roles);\n            if (isAdmin || roleStr.length > 0) { // has a role or is admin?\n                if (index >= first && index < last) {\n                    paginated_list.push(user);\n                }\n                index += 1; // one more user in this set of roles\n            }\n        }\n        return paginated_list;\n    }\n    changePage(page) {\n        this.setState({page: page});\n    }\n    changePageSize(page_size) {\n        this.setState({page_size: page_size});\n    }\n    static formatRoles(organisationId, roles) {\n        let roles_str = \"\";\n        for (const role of roles) {\n            // admin always displays\n            if (role.organisationId === organisationId || role.role === \"admin\") {\n                // make sure we add the admin role only once\n                if (role.role === \"admin\" && roles_str.indexOf(\"admin\") === -1) {\n                    if (roles_str.length > 0) {\n                        roles_str += \", \";\n                    }\n                    roles_str += role.role;\n                } else if (role.role !== \"admin\") {  // any other role just add\n                    if (roles_str.length > 0) {\n                        roles_str += \", \";\n                    }\n                    roles_str += role.role;\n                }\n            }\n        }\n        return roles_str;\n    }\n    getAvailableRoles() {\n        const list = [];\n        const isAdmin = Home.hasRole(this.props.user, ['admin']);\n        for (const available_role of roles) {\n            let found = false;\n            for (const role of this.state.edit_roles) {\n                if (available_role === role) {\n                    found = true;\n                }\n            }\n            if (!found) {\n                if (available_role === 'admin' && isAdmin) {\n                    list.push(available_role);\n                } else if (available_role !== 'admin') {\n                    list.push(available_role);\n                }\n            }\n        }\n        return list;\n    }\n    addNewUser() {\n        this.setState({edit_user: true, user: null,\n                            edit_user_id: \"\", edit_first_name: \"\",\n                            edit_surname: \"\", edit_email: \"\",\n                            edit_password: \"\",\n                            edit_roles: [],\n                            edit_kb_list: [],\n                        })\n    }\n    editUser(user) {\n        if (user) {\n            const filtered_roles = user.roles.filter(x => x.organisationId === this.props.selected_organisation_id);\n            const role_list = [];\n            for (const role of filtered_roles) {\n                role_list.push(role.role);\n            }\n            const kb_list = [];\n            if (user.operatorKBList) {\n                for (const operatorKB of user.operatorKBList) {\n                    for (const available_kb of this.props.knowledge_base_list) {\n                        if (available_kb.kbId === operatorKB.kbId) {\n                            kb_list.push(available_kb);\n                        }\n                    }\n                }\n            }\n            this.setState({edit_user: true, user: user,\n                edit_user_id: user.id,\n                edit_first_name: user.firstName,\n                edit_surname: user.surname,\n                edit_email: user.email,\n                edit_password: \"\",\n                edit_roles: role_list,\n                edit_kb_list: kb_list,\n            })\n        }\n    }\n    fillNames() {\n        function capitalizeFirstLetter(string) {\n            if (string.length > 0) {\n                return string.slice(0, 1).toUpperCase() + string.slice(1);\n            }\n            return string;\n        }        // if there is an email address and there is no first-surname - try and use the email address to complete\n        if (this.state.edit_email.length > 0 && this.state.edit_email.indexOf('@') > 0) {\n            const firstPart = this.state.edit_email.split('@')[0];\n            const firstNameSurname = firstPart.split('.');\n            let newFirst = \"\";\n            let newSur = \"\";\n            if (this.state.edit_first_name.length === 0) {\n                newFirst = capitalizeFirstLetter(firstNameSurname[0]);\n            }\n            if (this.state.edit_surname.length === 0 && firstNameSurname.length > 1) {\n                newSur = capitalizeFirstLetter(firstNameSurname[1]);\n            }\n            if (newFirst.length > 0 && newSur.length > 0) {\n                this.setState({edit_first_name: newFirst, edit_surname: newSur});\n\n            } else if (newFirst.length > 0) {\n                this.setState({edit_first_name: newFirst});\n\n            } else if (newSur.length > 0) {\n                this.setState({edit_surname: newSur});\n            }\n        }\n    }\n    removeRoleFromUser(role) {\n        const new_roles = [];\n        for (const erole of this.state.edit_roles) {\n            if (role !== erole) {\n                new_roles.push(erole);\n            }\n        }\n        this.setState({edit_roles: new_roles});\n    }\n    addRoleToUser(role) {\n        const roles = JSON.parse(JSON.stringify(this.state.edit_roles));\n        roles.push(role);\n        this.setState({edit_roles: roles});\n    }\n    deleteUserAsk(user, isAdmin) {\n        if (user && this.props.selected_organisation_id && this.props.selected_organisation_id.length > 0) {\n            this.props.openDialog(\"are you sure you want to remove \" + user.firstName + \" \" + user.surname + \"?\",\n                \"Remove User\", (action) => {\n                    this.deleteUser(action)\n                });\n            this.setState({user: user});\n        } else {\n            this.props.setError('No Organisation', 'Please select an organisation from the drop-down box.')\n        }\n    }\n    deleteUser(action) {\n        if (action) {\n            this.props.deleteUser(this.props.selected_organisation_id, this.state.user.id);\n        }\n        if (this.props.closeDialog) {\n            this.props.closeDialog();\n        }\n    }\n    editCancel() {\n        this.setState({edit_user: false, user: null});\n        if (this.state.closeDialog) {\n            this.state.closeDialog();\n        }\n    }\n    editOk() {\n        if (this.state.edit_first_name.length > 0 &&\n            this.state.edit_surname.length > 0 &&\n            this.state.edit_email.length > 0 &&\n            (this.state.edit_user_id.length > 0 || this.state.edit_password.length > 0)) {\n\n            // do we have an operator and knowledge bases?\n            if (UserManager.hasOperatorRole(this.state.edit_roles) && this.state.edit_kb_list.length === 0) {\n                this.props.setError(\"Incomplete Data\", \"An operator must have at least one knowledge base associated with it.\");\n            } else {\n                // organisation_id, user_id, name, surname, email, password, role_list, kb_list\n                this.props.updateUser(this.props.selected_organisation_id, this.state.edit_user_id,\n                                      this.state.edit_first_name, this.state.edit_surname, this.state.edit_email,\n                                      this.state.edit_password, this.state.edit_roles, this.state.edit_kb_list);\n                this.setState({edit_user: false, user: null});\n            }\n        } else {\n            this.props.setError(\"Incomplete Data\", \"Please complete all fields.  \" +\n                \"Must have email-address, first-name, surname, and at least one role.  \" +\n                \"New Accounts must have a password.\");\n        }\n    }\n    static hasOperatorRole(edit_roles) {\n        if (edit_roles) {\n            for (const role of edit_roles) {\n                if (role === \"operator\") {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n    handleSearchTextKeydown(event) {\n        if (event.key === \"Enter\") {\n            this.props.getUsers();\n        }\n    }\n    removeKBFromUser(kb) {\n        const new_kbs = [];\n        for (const ekb of this.state.edit_kb_list) {\n            if (kb.kbId !== ekb.kbId) {\n                new_kbs.push(ekb);\n            }\n        }\n        this.setState({edit_kb_list: new_kbs});\n    }\n    addKBToUser(kb) {\n        const kbs = JSON.parse(JSON.stringify(this.state.edit_kb_list));\n        kbs.push(kb);\n        this.setState({edit_kb_list: kbs});\n    }\n    getAvailableKnowledgeBases() {\n        const list = [];\n        for (const available_kb of this.props.knowledge_base_list) {\n            let found = false;\n            for (const kb of this.state.edit_kb_list) {\n                if (available_kb.kbId === kb.kbId) {\n                    found = true;\n                }\n            }\n            if (!found) {\n                list.push(available_kb);\n            }\n        }\n        return list;\n    }\n    isVisible() {\n        return this.props.selected_organisation_id && this.props.selected_organisation_id.length > 0 &&\n            this.props.selected_organisation && this.props.selected_organisation.length > 0;\n    }\n    render() {\n        const theme = this.props.theme;\n        const isAdmin = Home.hasRole(this.props.user, ['admin']);\n        const isManager = Home.hasRole(this.props.user, ['manager']);\n        return (\n            <div>\n                { this.isVisible() &&\n                <div>\n                <div style={styles.searchBox}>\n                    <Grid item xs={12}>\n                        <div style={styles.findBox}>\n                            <div style={styles.floatLeftLabel}>filter</div>\n                            <div style={styles.searchFloatLeft}>\n                                <input type=\"text\" value={this.props.user_filter} autoFocus={true} style={styles.text} className={theme}\n                                       onKeyPress={(event) => this.handleSearchTextKeydown(event)}\n                                       onChange={(event) => {\n                                           this.props.setUserFilter(event.target.value)\n                                       }}/>\n                            </div>\n                            <div style={styles.floatLeft}>\n                                <img style={styles.search}\n                                     onClick={() => this.props.getUsers()}\n                                     src=\"../images/dark-magnifying-glass.svg\" title=\"filter\" alt=\"filter\"/>\n                            </div>\n                        </div>\n                    </Grid>\n                </div>\n\n                <br clear=\"both\" />\n\n                <Paper style={styles.pageWidth}>\n                    <Table>\n                        <TableHead>\n                            <TableRow className='table-header'>\n                                <TableCell className='table-header'>user name</TableCell>\n                                <TableCell className='table-header'>first name</TableCell>\n                                <TableCell className='table-header'>surname</TableCell>\n                                <TableCell className='table-header'>roles</TableCell>\n                                <TableCell className='table-header'>actions</TableCell>\n                            </TableRow>\n                        </TableHead>\n                        <TableBody style={theme === 'light' ? styles.tableLight : styles.tableDark}>\n                            {\n                                this.getUsers(isAdmin).map((user) => {\n                                    const canEdit = Home.canEdit(user, isAdmin, isManager);\n                                    const canDelete = Home.canDelete(user, this.props.user, isAdmin, isManager);\n                                    return (\n                                        <TableRow key={user.id}>\n                                            <TableCell>\n                                                <div style={styles.label}>{user.email}</div>\n                                            </TableCell>\n                                            <TableCell>\n                                                <div style={styles.label}>{user.firstName}</div>\n                                            </TableCell>\n                                            <TableCell>\n                                                <div style={styles.label}>{user.surname}</div>\n                                            </TableCell>\n                                            <TableCell>\n                                                <div style={styles.label}>{UserManager.formatRoles(this.props.selected_organisation_id, user.roles)}</div>\n                                            </TableCell>\n                                            <TableCell>\n                                                { !canEdit &&\n                                                    <div style={styles.disabledLinkButton} title=\"cannot edit this user\">\n                                                        <img src=\"../images/edit.svg\" style={styles.dlImageSizeDisabled}\n                                                             title=\"cannot edit this user\" alt=\"cannot edit this user\"/>\n                                                    </div>\n                                                }\n                                                { canEdit &&\n                                                    <div style={styles.linkButton} title=\"Edit this user\"\n                                                         onClick={() => this.editUser(user)}>\n                                                        <img src=\"../images/edit.svg\" style={styles.dlImageSize}\n                                                             title=\"edit user\" alt=\"edit\"/>\n                                                    </div>\n                                                }\n                                                {\n                                                    !canDelete &&\n                                                    <div style={styles.disabledLinkButton} title=\"cannot remove this user\">\n                                                        <img src=\"../images/delete.svg\" style={styles.dlImageSizeDisabled}\n                                                             title=\"cannot remove this user\" alt=\"cannot remove this user\"/>\n                                                    </div>\n                                                }\n                                                {\n                                                    canDelete &&\n                                                    <div style={styles.linkButton} title=\"Remove this user\"\n                                                         onClick={() => this.deleteUserAsk(user, isAdmin)}>\n                                                        <img src=\"../images/delete.svg\" style={styles.dlImageSize}\n                                                             title={isAdmin ? \"remove user\" : \"remove user roles\"} alt=\"remove\"/>\n                                                    </div>\n                                                }\n                                            </TableCell>\n                                        </TableRow>\n                                    )\n                                })\n                            }\n                            <TableRow>\n                                <TableCell />\n                                <TableCell />\n                                <TableCell />\n                                <TableCell />\n                                <TableCell>\n                                    {this.props.selected_organisation_id.length > 0 && (isAdmin || isManager) &&\n                                    <div style={styles.imageButton} onClick={() => this.addNewUser()}><img\n                                        style={styles.addImage} src=\"../images/add.svg\" title=\"add new user\"\n                                        alt=\"add new user\"/></div>\n                                    }\n                                </TableCell>\n                            </TableRow>\n                            <TableRow>\n                                <TableCell colSpan={5}>\n                                    <TablePagination\n                                        rowsPerPageOptions={[5, 10, 25]}\n                                        component=\"div\"\n                                        count={this.numUsers(this.props.selected_organisation_id, isAdmin)}\n                                        rowsPerPage={this.state.page_size}\n                                        page={this.state.page}\n                                        backIconButtonProps={{\n                                            'aria-label': 'Previous Page',\n                                        }}\n                                        nextIconButtonProps={{\n                                            'aria-label': 'Next Page',\n                                        }}\n                                        onChangePage={(event, page) => this.changePage(page)}\n                                        onChangeRowsPerPage={(event) => this.changePageSize(event.target.value)}\n                                    />\n                                </TableCell>\n                            </TableRow>\n                        </TableBody>\n                    </Table>\n\n                </Paper>\n\n\n                <Dialog aria-labelledby=\"alert-dialog-title\"\n                        aria-describedby=\"alert-dialog-description\"\n                        open={this.state.edit_user}\n                        disableBackdropClick={true}\n                        disableEscapeKeyDown={true}\n                        fullWidth={true}\n                        maxWidth=\"md\"\n                        onClose={() => this.setState({edit_user: false, user: null})} >\n                    <DialogTitle className={this.props.theme}>{this.state.edit_user_id ? \"Edit User\" : \"Add New User\"}</DialogTitle>\n                    <DialogContent className={this.props.theme}>\n                        <TextField\n                            autoFocus={true}\n                            style={styles.editBox}\n                            placeholder=\"email\"\n                            label=\"email\"\n                            value={this.state.edit_email}\n                            onBlur={() => this.fillNames()}\n                            onChange = {(event) => this.setState({edit_email: event.target.value})}\n                        />\n                        <TextField\n                            style={styles.editBox}\n                            placeholder=\"first name\"\n                            label=\"first name\"\n                            value={this.state.edit_first_name}\n                            onChange = {(event) => this.setState({edit_first_name: event.target.value})}\n                        />\n                        <TextField\n                            style={styles.editBox}\n                            placeholder=\"surname\"\n                            label=\"surname\"\n                            value={this.state.edit_surname}\n                            onChange = {(event) => this.setState({edit_surname: event.target.value})}\n                        />\n                        <TextField\n                            style={styles.editBox}\n                            placeholder=\"password\"\n                            label=\"password\"\n                            type=\"password\"\n                            value={this.state.edit_password}\n                            onChange = {(event) => this.setState({edit_password: event.target.value})}\n                        />\n                        <div>\n                            <div style={styles.roleBlock}>\n                                <div style={styles.roleLabel}>user roles</div>\n                                <div style={styles.roleArea}>\n                                {\n                                    this.state.edit_roles.map((role) => {\n                                        return (<Chip key={role} color=\"secondary\"\n                                                      style={styles.roleChip}\n                                                      onClick={() => this.removeRoleFromUser(role)}\n                                                      label={role} variant=\"outlined\" />)\n                                    })\n                                }\n                                </div>\n                            </div>\n                            <div style={styles.roleBlock}>\n                                <div style={styles.roleLabel}>available roles</div>\n                                <div style={styles.roleArea}>\n                                    {\n                                        this.getAvailableRoles().map((role) => {\n                                            return (<Chip key={role} color=\"primary\"\n                                                          style={styles.roleChip}\n                                                          onClick={() => this.addRoleToUser(role)}\n                                                          label={role} variant=\"outlined\" />)\n                                        })\n                                    }\n                                </div>\n                            </div>\n                        </div>\n                        { UserManager.hasOperatorRole(this.state.edit_roles) &&\n                            <div>\n                                <div style={styles.roleBlock}>\n                                    <div style={styles.roleLabel}>operator's knowledge bases</div>\n                                    <div style={styles.roleArea}>\n                                        {\n                                            this.state.edit_kb_list.map((kb) => {\n                                                return (<Chip key={kb.kbId} color=\"secondary\"\n                                                              style={styles.roleChip}\n                                                              onClick={() => this.removeKBFromUser(kb)}\n                                                              label={kb.name} variant=\"outlined\"/>)\n                                            })\n                                        }\n                                    </div>\n                                </div>\n                                <div style={styles.roleBlock}>\n                                    <div style={styles.roleLabel}>operator available knowledge bases</div>\n                                    <div style={styles.roleArea}>\n                                        {\n                                            this.getAvailableKnowledgeBases().map((kb) => {\n                                                return (<Chip key={kb.kbId} color=\"primary\"\n                                                              style={styles.roleChip}\n                                                              onClick={() => this.addKBToUser(kb)}\n                                                              label={kb.name} variant=\"outlined\"/>)\n                                            })\n                                        }\n                                    </div>\n                                </div>\n                            </div>\n                        }\n                    </DialogContent>\n                    <DialogActions className={this.props.theme}>\n                        <Button color=\"primary\" onClick={() => this.editCancel()}>Cancel</Button>\n                        <Button variant=\"contained\" color=\"secondary\" onClick={() => this.editOk()}>Save</Button>\n                    </DialogActions>\n                </Dialog>\n\n                </div>\n                }\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = function(state) {\n    return {\n        error: state.appReducer.error,\n        error_title: state.appReducer.error_title,\n        theme: state.appReducer.theme,\n\n        user_list: state.appReducer.user_list,\n        user_filter: state.appReducer.user_filter,\n        selected_organisation_id: state.appReducer.selected_organisation_id,\n        selected_organisation: state.appReducer.selected_organisation,\n        knowledge_base_list: state.appReducer.knowledge_base_list,\n        user: state.appReducer.user,\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    dispatch => bindActionCreators(appCreators, dispatch)\n)(UserManager);\n\n","import React, {Component} from 'react';\nimport Button from \"@material-ui/core/Button\";\n\nconst active_colour = '#eed000';\nconst inactive_colour = '#c0c0c0';\n\nconst styles = {\n    tableStyle: {\n        marginTop: '10px',\n        fontFamily: 'Open Sans, sans-serif',\n        fontSize: '12px',\n        width: '90%',\n    },\n    tHeader: {\n        height: '22px',\n        marginBottom: '5px',\n    },\n    tCol: {\n        height: '22px',\n        marginBottom: '5px',\n    },\n    tCell: {\n        backgroundColor: '#c0c0c0'\n    },\n    legenda: {\n        float: 'left',\n        marginTop: '20px',\n    },\n    activeText: {\n        backgroundColor: active_colour,\n        color: '#444',\n        float: 'left',\n        width: '100px',\n        fontFamily: 'Open Sans, sans-serif',\n        fontSize: '12px',\n        fontWeight: '900',\n        borderRadius: '2px',\n        textAlign: 'center',\n        padding: '5px',\n    },\n    inactiveText: {\n        backgroundColor: inactive_colour,\n        color: '#444',\n        float: 'left',\n        width: '100px',\n        fontFamily: 'Open Sans, sans-serif',\n        fontSize: '12px',\n        fontWeight: '900',\n        borderRadius: '2px',\n        textAlign: 'center',\n        padding: '5px',\n        marginLeft: '10px',\n    },\n    button1: {\n        float: 'left',\n        padding: '5px',\n        marginLeft: '100px',\n        marginTop: '-10px',\n    },\n    button2: {\n        float: 'left',\n        padding: '5px',\n        marginLeft: '10px',\n        marginTop: '-10px',\n    },\n    labelTop: {\n        marginTop: '10px',\n        fontSize: '0.9em',\n        fontWeight: '600',\n    }\n};\n\n\nconst time_list = ['00:00','01:00','02:00','03:00','04:00','05:00','06:00','07:00','08:00','09:00','10:00','11:00',\n                   '12:00','13:00','14:00','15:00','16:00','17:00','18:00','19:00','20:00','21:00','22:00','23:00'];\n\nconst day_list = ['mon', 'tue', 'wed', 'thu', 'fri', 'sat', 'sun'];\n\n// time schedule all selected\nconst defaultAllTimesSelected = 'mon-0,tue-0,wed-0,thu-0,fri-0,sat-0,sun-0,mon-1,tue-1,wed-1,thu-1,fri-1,sat-1,sun-1,mon-2,tue-2,wed-2,thu-2,fri-2,sat-2,sun-2,mon-3,tue-3,wed-3,thu-3,fri-3,sat-3,sun-3,mon-4,tue-4,wed-4,thu-4,fri-4,sat-4,sun-4,mon-5,tue-5,wed-5,thu-5,fri-5,sat-5,sun-5,mon-6,tue-6,wed-6,thu-6,fri-6,sat-6,sun-6,mon-7,tue-7,wed-7,thu-7,fri-7,sat-7,sun-7,mon-8,tue-8,wed-8,thu-8,fri-8,sat-8,sun-8,mon-9,tue-9,wed-9,thu-9,fri-9,sat-9,sun-9,mon-10,tue-10,wed-10,thu-10,fri-10,sat-10,sun-10,mon-11,tue-11,wed-11,thu-11,fri-11,sat-11,sun-11,mon-12,tue-12,wed-12,thu-12,fri-12,sat-12,sun-12,mon-13,tue-13,wed-13,thu-13,fri-13,sat-13,sun-13,mon-14,tue-14,wed-14,thu-14,fri-14,sat-14,sun-14,mon-15,tue-15,wed-15,thu-15,fri-15,sat-15,sun-15,mon-16,tue-16,wed-16,thu-16,fri-16,sat-16,sun-16,mon-17,tue-17,wed-17,thu-17,fri-17,sat-17,sun-17,mon-18,tue-18,wed-18,thu-18,fri-18,sat-18,sun-18,mon-19,tue-19,wed-19,thu-19,fri-19,sat-19,sun-19,mon-20,tue-20,wed-20,thu-20,fri-20,sat-20,sun-20,mon-21,tue-21,wed-21,thu-21,fri-21,sat-21,sun-21,mon-22,tue-22,wed-22,thu-22,fri-22,sat-22,sun-22,mon-23,tue-23,wed-23,thu-23,fri-23,sat-23,sun-23';\n\n// display error dialog\nexport class TimeSelect extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            onSave: props.onSave,  // save callback\n            time: props.time,\n            time_map: this.setupTimeMap(props.time),\n            has_error: false,\n        };\n    }\n    componentDidCatch(error, info) {\n        this.setState({ has_error: true });\n        console.log(error, info);\n    }\n    handleSave() {\n        let time = '';\n        for (let key in this.state.time_map) {\n            if (this.state.time_map[key] === 1) {\n                if (time.length > 0) {\n                    time += ',';\n                }\n                time += key;\n            }\n        }\n        if (this.state.onSave) {\n            this.state.onSave(time);\n        }\n    }\n    handleCancel() {\n        if (this.state.onSave) {\n            this.state.onSave(null);\n        }\n    }\n    UNSAFE_componentWillReceiveProps(nextProps) {\n        // see if we have data to start this dialog\n        if (nextProps !== null) {\n            const time_map = this.setupTimeMap(nextProps.time);\n            this.setState({\n                time: nextProps.time,\n                onSave: nextProps.onSave,\n                time_map: time_map,\n            })\n        }\n    }\n    setupTimeMap(time_str) {\n        // \"mon-1,tue-3\" etc.\n        let time_map = {};\n        if (time_str)\n            time_str.split(',').map((item) => {time_map[item] = 1; return time_map[item];});\n        return time_map;\n    }\n    gs(cell) {\n        if (this.state.time_map[cell] === 1) {\n            return {backgroundColor: active_colour}\n        } else {\n            return {backgroundColor: inactive_colour}\n        }\n    }\n    clearAll() {\n        this.setState({time_map: this.setupTimeMap(''), time: ''});\n        if (this.state.onSave) {\n            this.state.onSave('');\n        }\n    }\n    selectAll() {\n        this.setState({time_map: this.setupTimeMap(defaultAllTimesSelected), time: defaultAllTimesSelected});\n        if (this.state.onSave) {\n            this.state.onSave(defaultAllTimesSelected);\n        }\n    }\n    select(item) {\n        let tm = this.state.time_map;\n        if (item === \"all\") {\n            // invert all\n            for (let i = 0; i < 24; i++) {\n                day_list.map( (dow) => {\n                    const str = dow + '-' + i;\n                    if (tm[str] === 1) {\n                        tm[str] = 0;\n                    } else {\n                        tm[str] = 1;\n                    }\n                    return tm[str];\n                });\n            }\n        } else if (item.indexOf('-') > 0) {\n            // single cell selector\n            if (tm[item] === 1) {\n                tm[item] = 0;\n            } else {\n                tm[item] = 1;\n            }\n\n        } else if (day_list.indexOf(item) >= 0) {\n            // 24 hour selector\n            for (let i = 0; i < 24; i++) {\n                const str = item + '-' + i;\n                if (tm[str] === 1) {\n                    tm[str] = 0;\n                } else {\n                    tm[str] = 1;\n                }\n            }\n        } else {\n            // day of week selector\n            day_list.map( (dow) => {\n                const str = dow + '-' + item;\n                if (tm[str] === 1) {\n                    tm[str] = 0;\n                } else {\n                    tm[str] = 1;\n                }\n                return tm[str];\n            });\n        }\n        this.setState({time_map: tm});\n        this.handleSave();\n    }\n    // return a pretty version of GMT time (eg. Tue, 10:21)\n    timeStr() {\n        const gmtTime = new Date().toGMTString();\n        const day = gmtTime.split(\",\")[0];\n        const time = gmtTime.split(\" \")[4].split(\":\");\n        const time_no_seconds = time[0] + \":\" + time[1];\n        return day + \", \" + time_no_seconds;\n    }\n    render() {\n        if (this.state.has_error) {\n            return <h1>time-select.js: Something went wrong.</h1>;\n        }\n        return (\n            <div>\n                <div style={styles.labelTop}>all times in GMT (now {this.timeStr()})</div>\n                <table style={styles.tableStyle}>\n                    <tbody>\n                    <tr>\n                        <td onClick={() => this.select('all')}/>\n                        { time_list.map((str, value) => {\n                            return (<td key={\"time-\"+value} onClick={() => this.select('' + value)} style={styles.tHeader}>{str}</td>)\n                        })}\n                    </tr>\n                    <tr>\n                        <td onClick={() => this.select('mon')} style={styles.tCol}>Monday</td>\n                        { time_list.map((str, value) => {\n                             return (<td key={\"mon-\"+value} onClick={() => this.select('mon-'+value)} style={this.gs('mon-'+value)} />)\n                        })}\n                    </tr>\n                    <tr>\n                        <td onClick={() => this.select('tue')} style={styles.tCol}>Tuesday</td>\n                        { time_list.map((str, value) => {\n                            return (<td key={\"tue-\"+value} onClick={() => this.select('tue-'+value)} style={this.gs('tue-'+value)} />)\n                        })}\n                    </tr>\n                    <tr>\n                        <td onClick={() => this.select('wed')} style={styles.tCol}>Wednesday</td>\n                        { time_list.map((str, value) => {\n                            return (<td key={\"wed-\"+value} onClick={() => this.select('wed-'+value)} style={this.gs('wed-'+value)}/>)\n                        })}\n                    </tr>\n                    <tr>\n                        <td onClick={() => this.select('thu')} style={styles.tCol}>Thursday</td>\n                        { time_list.map((str, value) => {\n                            return (<td key={\"thu-\"+value} onClick={() => this.select('thu-'+value)} style={this.gs('thu-'+value)}/>)\n                        })}\n                    </tr>\n                    <tr>\n                        <td onClick={() => this.select('fri')} style={styles.tCol}>Friday</td>\n                        { time_list.map((str, value) => {\n                            return (<td key={\"fri-\"+value} onClick={() => this.select('fri-'+value)} style={this.gs('fri-'+value)}/>)\n                        })}\n                    </tr>\n                    <tr>\n                        <td onClick={() => this.select('sat')} style={styles.tCol}>Saturday</td>\n                        { time_list.map((str, value) => {\n                            return (<td key={\"sat-\"+value} onClick={() => this.select('sat-'+value)} style={this.gs('sat-'+value)}/>)\n                        })}\n                    </tr>\n                    <tr>\n                        <td onClick={() => this.select('sun')} style={styles.tCol}>Sunday</td>\n                        { time_list.map((str, value) => {\n                            return (<td key={\"sun-\"+value} onClick={() => this.select('sun-'+value)} style={this.gs('sun-'+value)}/>)\n                        })}\n                    </tr>\n                    </tbody>\n                </table>\n\n                <br />\n                <div style={styles.legenda}>\n                    <div style={styles.activeText}>active</div>\n                    <div style={styles.inactiveText}>inactive</div>\n                    <div style={styles.button1}>\n                        <Button variant=\"contained\"\n                                color=\"secondary\"\n                                onClick={() => this.clearAll()}>\n                            clear all\n                        </Button>\n                    </div>\n                    <div style={styles.button2}>\n                        <Button variant=\"contained\"\n                                color=\"secondary\"\n                                onClick={() => this.selectAll()}>\n                            select all\n                        </Button>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default TimeSelect;\n","import React, {Component} from 'react';\n\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from '@material-ui/core/TextField';\nimport TablePagination from '@material-ui/core/TablePagination';\n\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\n\nimport {Api} from '../common/api'\nimport {Comms} from \"../common/comms\";\n\nimport {connect} from \"react-redux\";\nimport {bindActionCreators} from \"redux\";\nimport {appCreators} from \"../actions/appActions\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport TimeSelect from \"../common/time-select\";\nimport {Home} from \"../home\";\n\n\nconst defaultIndexSchedule = 'mon-0,tue-0,wed-0,thu-0,fri-0,sat-0,sun-0,mon-1,tue-1,wed-1,thu-1,fri-1,sat-1,sun-1,mon-2,tue-2,wed-2,thu-2,fri-2,sat-2,sun-2,mon-3,tue-3,wed-3,thu-3,fri-3,sat-3,sun-3';\n\n\nconst styles = {\n    pageWidth: {\n        width: '900px',\n    },\n    tableLight: {\n    },\n    tableDark: {\n        background: '#d0d0d0',\n    },\n    label: {\n        color: '#555',\n    },\n    tableHeaderStyle: {\n        background: '#555',\n        fontSize: '0.95em',\n        color: '#fff',\n    },\n    linkButton: {\n        float: 'left',\n        padding: '10px',\n        color: '#888',\n        cursor: 'pointer',\n    },\n    imageButton: {\n        float: 'right',\n        padding: '10px',\n        color: '#888',\n        cursor: 'pointer',\n    },\n    editBox: {\n        width: '500px',\n        marginBottom: '15px',\n    },\n    sidBox: {\n        width: '350px',\n        marginBottom: '15px',\n    },\n    roleBlock: {\n        padding: '5px',\n        marginTop: '20px',\n        float: 'left',\n        width: '400px',\n        border: '1px solid #888',\n        borderRadius: '4px',\n        marginLeft: '10px',\n    },\n    roleLabel: {\n        fontSize: '0.8em',\n        color: '#aaa',\n    },\n    roleArea: {\n        padding: '20px',\n    },\n    roleChip: {\n        margin: '2px',\n    },\n    addImage: {\n        width: '25px',\n    },\n    textFieldBox: {\n        float: 'left',\n    },\n    imageBox: {\n        float: 'left',\n    },\n    imageSize: {\n        marginTop: '20px',\n        width: '20px',\n    },\n    dlImageSize: {\n        width: '24px',\n    },\n    timeTabContent: {\n        marginLeft: '40px',\n    },\n    paddingBottom: {\n        display: 'inline-block',\n        marginBottom: '130px',\n    },\n    floatLeft: {\n        float: 'left',\n    },\n    copiedStyle: {\n        fontSize: '10px',\n        marginLeft: '25px',\n        marginTop: '-22px',\n        position: 'absolute',\n        float: 'left',\n        zIndex: '99',\n    },\n    lineHeight: {height: '30px'},\n    organisationIdLabel: {width: '170px', float: 'left', height: '24px'},\n    copyImageSpan: {float: 'left', marginTop: '-5px', marginLeft: '10px'},\n    clipboardImage: {width: '24px', height: '24px;'},\n};\n\n\nexport class KnowledgeBases extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            selectedTab: 'general',\n\n            edit_knowledgebase: false,\n            edit_knowledgebase_id: \"\",\n            knowledgeBase: null,\n\n            edit_kb_id: \"\",\n            edit_name: \"\",\n            edit_email: \"\",\n            edit_security_id: \"\",\n            edit_enabled: true,\n            edit_max_queries_per_day: \"0\",\n            edit_analytics_window_size_in_months: \"0\",\n            edit_operator_enabled: true,\n            edit_capacity_warnings: true,\n            edit_created: 0,\n            edit_index_optimization_schedule: defaultIndexSchedule,\n\n            // view ids\n            view_ids: false,\n            copied_visible: '',\n            kb: null,\n\n            // pagination\n            page_size: 5,\n            page: 0,\n        };\n    }\n    componentDidCatch(error, info) {\n        this.props.setError(error, info);\n        console.log(error, info);\n    }\n    changePage(page) {\n        this.setState({page: page});\n    }\n    changePageSize(page_size) {\n        this.setState({page_size: page_size});\n    }\n    addNewKnowledgeBase() {\n        this.setState({edit_knowledgebase: true, knowledgeBase: null,\n            edit_knowledgebase_id: \"\",\n            edit_name: \"\",\n            edit_email: \"\",\n            edit_enabled: true,\n            edit_max_queries_per_day: \"0\",\n            edit_analytics_window_size_in_months: \"0\",\n            edit_operator_enabled: true,\n            edit_capacity_warnings: true,\n            edit_created: 0,\n            edit_security_id: Api.createGuid(),\n            edit_index_optimization_schedule: defaultIndexSchedule,\n        })\n    }\n    refreshSecurityId() {\n        this.setState({edit_security_id: Api.createGuid()})\n    }\n    editKnowledgeBase(knowledgeBase) {\n        if (knowledgeBase) {\n            this.setState({edit_knowledgebase: true, knowledgeBase: knowledgeBase,\n                edit_knowledgebase_id: knowledgeBase.kbId,\n                edit_name: knowledgeBase.name,\n                edit_email: knowledgeBase.email,\n                edit_security_id: knowledgeBase.securityId,\n                edit_enabled: knowledgeBase.enabled,\n                edit_max_queries_per_day: knowledgeBase.maxQueriesPerDay,\n                edit_analytics_window_size_in_months: knowledgeBase.analyticsWindowInMonths,\n                edit_operator_enabled: knowledgeBase.operatorEnabled,\n                edit_capacity_warnings: knowledgeBase.capacityWarnings,\n                edit_index_optimization_schedule: knowledgeBase.indexOptimizationSchedule,\n                edit_created: knowledgeBase.created,\n            })\n        }\n    }\n    optimizeIndexesAsk(knowledgeBase) {\n        if (knowledgeBase) {\n            this.props.openDialog(\"are you sure you want to optimize the indexes for \\\"\" + knowledgeBase.name + \"\\\" ?\", \"Optimize Knowledge base\", (action) => { this.optimizeIndexes(action) });\n            this.setState({knowledgeBase: knowledgeBase});\n        }\n    }\n    optimizeIndexes(action) {\n        if (action) {\n            this.props.optimizeIndexes(this.props.selected_organisation_id, this.state.knowledgeBase.kbId);\n        }\n        if (this.props.closeDialog) {\n            this.props.closeDialog();\n        }\n    }\n    reIndexAsk(knowledgeBase) {\n        if (knowledgeBase) {\n            this.props.openDialog(\"are you sure you want to re-index \\\"\" + knowledgeBase.name + \"\\\" ?\", \"re-index Knowledge base\", (action) => { this.reIndex(action) });\n            this.setState({knowledgeBase: knowledgeBase});\n        }\n    }\n    reIndex(action) {\n        if (action) {\n            this.props.reIndex(this.props.selected_organisation_id, this.state.knowledgeBase.kbId);\n        }\n        if (this.props.closeDialog) {\n            this.props.closeDialog();\n        }\n    }\n    deleteKnowledgeBaseAsk(knowledgeBase) {\n        if (knowledgeBase) {\n            this.props.openDialog(\"are you sure you want to remove \\\"\" + knowledgeBase.name + \"\\\" ?\", \"Remove Knowledge base\", (action) => { this.deleteKnowledgeBase(action) });\n            this.setState({knowledgeBase: knowledgeBase});\n        }\n    }\n    deleteKnowledgeBase(action) {\n        if (action) {\n            this.props.deleteKnowledgeBase(this.props.selected_organisation_id, this.state.knowledgeBase.kbId);\n        }\n        if (this.props.closeDialog) {\n            this.props.closeDialog();\n        }\n    }\n    editCancel() {\n        this.setState({edit_knowledgebase: false, knowledgeBase: null});\n    }\n    editOk() {\n        if (this.state.edit_name.length > 0) {\n            this.props.updateKnowledgeBase(this.props.selected_organisation_id, this.state.edit_knowledgebase_id,\n                                           this.state.edit_name, this.state.edit_email, this.state.edit_security_id,\n                                           this.state.edit_enabled, this.state.edit_max_queries_per_day,\n                                           this.state.edit_analytics_window_size_in_months, this.state.edit_operator_enabled,\n                                           this.state.edit_capacity_warnings, this.state.edit_created,\n                                           this.state.edit_index_optimization_schedule);\n            this.setState({edit_knowledgebase: false, knowledgeBase: null});\n        } else {\n            this.props.setError(\"Incomplete Data\", \"Please complete all fields.\");\n        }\n    }\n    viewIds(knowledge_base) {\n        this.setState({view_ids: true, kb: knowledge_base});\n    }\n    downloadHtml(html, kb) {\n        window.open(Comms.get_html_url(html, this.props.selected_organisation_id, kb.kbId), '_blank');\n    }\n    getKnowledgeBases() {\n        const paginated_list = [];\n        const first = this.state.page * this.state.page_size;\n        const last = first + this.state.page_size;\n        for (const i in this.props.knowledge_base_list) {\n            if (i >= first && i < last) {\n                paginated_list.push(this.props.knowledge_base_list[i]);\n            }\n        }\n        return paginated_list;\n    }\n    updateSchedule(time) {\n        if (time !== null) {\n            this.setState({edit_index_optimization_schedule: time});\n        }\n    }\n    isVisible() {\n        return this.props.selected_organisation_id && this.props.selected_organisation_id.length > 0 &&\n            this.props.selected_organisation && this.props.selected_organisation.length > 0;\n    }\n    startCopiedVisible(org_id) {\n        this.setState({copied_visible: org_id});\n        window.setTimeout(() => { this.setState({copied_visible: \"\"})}, 1000);\n    }\n    indexOptimizationClass(kb) {\n        if (kb) {\n            if (kb.needsIndexOptimization || kb.indexOptimizationTime === 0) {\n                return \"indexes-out-of-date\";\n            } else {\n                return \"indexes-up-to-date\";\n            }\n        }\n        return \"\";\n    }\n    indexOptimizationText(kb) {\n        if (kb) {\n            if (kb.needsIndexOptimization || kb.indexOptimizationTime === 0) {\n                return \"the indexes for \\\"\" + kb.name + \"\\\" are out of date.\";\n            } else {\n                return \"the indexes for \\\"\" + kb.name + \"\\\" are up to date.\";\n            }\n        }\n        return \"\";\n    }\n    indexOptimizationStatus(kb) {\n        if (kb) {\n            var time = \"not optimized\";\n            if (kb.indexOptimizationTime > 0) {\n                time = Api.unixTimeConvert(kb.indexOptimizationTime);\n            }\n            return time;\n        }\n        return \"\";\n    }\n    render() {\n        const theme = this.props.theme;\n        const t_value = this.state.selectedTab;\n        const isAdmin = Home.hasRole(this.props.user, ['admin']);\n        return (\n                <div>\n                    { this.isVisible() &&\n\n                    <div>\n\n                        <Paper style={styles.pageWidth}>\n                            <Table>\n                                <TableHead>\n                                    <TableRow className='table-header'>\n                                        <TableCell className='table-header table-width-20'>knowledge base</TableCell>\n                                        <TableCell className='table-header table-width-20'>email queries to</TableCell>\n                                        <TableCell className='table-header table-width-20'>last index optimization</TableCell>\n                                        <TableCell className='table-header'>actions</TableCell>\n                                    </TableRow>\n                                </TableHead>\n                                <TableBody style={theme === 'light' ? styles.tableLight : styles.tableDark}>\n                                    {\n                                        this.getKnowledgeBases().map((knowledge_base) => {\n                                            return (\n                                                <TableRow key={knowledge_base.kbId}>\n                                                    <TableCell>\n                                                        <div style={styles.label}>{knowledge_base.name}</div>\n                                                    </TableCell>\n                                                    <TableCell>\n                                                        <div style={styles.label}>{knowledge_base.email}</div>\n                                                    </TableCell>\n                                                    <TableCell>\n                                                        <div style={styles.label} className={this.indexOptimizationClass(knowledge_base)}\n                                                                title={this.indexOptimizationText(knowledge_base)}>\n                                                            {this.indexOptimizationStatus(knowledge_base)}</div>\n                                                    </TableCell>\n                                                    <TableCell>\n                                                        <div style={styles.linkButton}\n                                                             onClick={() => this.viewIds(knowledge_base)}>\n                                                            <img src=\"../images/id.svg\" style={styles.dlImageSize}\n                                                                 title=\"view knowledge base ids\" alt=\"ids\"/>\n                                                        </div>\n                                                        <div style={styles.linkButton}\n                                                             onClick={() => this.editKnowledgeBase(knowledge_base)}>\n                                                            <img src=\"../images/edit.svg\" style={styles.dlImageSize}\n                                                                 title=\"edit knowledge base\" alt=\"edit\"/>\n                                                        </div>\n                                                        {isAdmin &&\n                                                        <div style={styles.linkButton}\n                                                             onClick={() => this.reIndexAsk(knowledge_base)}>\n                                                            <img src=\"../images/re-index.png\" style={styles.dlImageSize}\n                                                                 title=\"re-index all documents\" alt=\"re-index\"/>\n                                                        </div>\n                                                        }\n                                                        <div style={styles.linkButton}\n                                                             onClick={() => this.optimizeIndexesAsk(knowledge_base)}>\n                                                            <img src=\"../images/optimize.svg\" style={styles.dlImageSize}\n                                                                 title=\"optimize indexes now\" alt=\"optimize\"/>\n                                                        </div>\n                                                        <div style={styles.linkButton}\n                                                             onClick={() => this.deleteKnowledgeBaseAsk(knowledge_base)}>\n                                                            <img src=\"../images/delete.svg\" style={styles.dlImageSize}\n                                                                 title=\"remove knowledge base\" alt=\"remove\"/>\n                                                        </div>\n                                                    </TableCell>\n                                                </TableRow>\n                                            )\n                                        })\n                                    }\n                                    <TableRow>\n                                        <TableCell/>\n                                        <TableCell/>\n                                        <TableCell/>\n                                        <TableCell>\n                                            {this.props.selected_organisation_id.length > 0 &&\n                                            <div style={styles.imageButton} onClick={() => this.addNewKnowledgeBase()}>\n                                                <img\n                                                    style={styles.addImage} src=\"../images/add.svg\" title=\"add new user\"\n                                                    alt=\"add new user\"/></div>\n                                            }\n                                        </TableCell>\n                                    </TableRow>\n                                </TableBody>\n                            </Table>\n\n                            <TablePagination\n                                rowsPerPageOptions={[5, 10, 25]}\n                                style={theme === 'light' ? styles.tableLight : styles.tableDark}\n                                component=\"div\"\n                                count={this.props.knowledge_base_list.length}\n                                rowsPerPage={this.state.page_size}\n                                page={this.state.page}\n                                backIconButtonProps={{\n                                    'aria-label': 'Previous Page',\n                                }}\n                                nextIconButtonProps={{\n                                    'aria-label': 'Next Page',\n                                }}\n                                onChangePage={(event, page) => this.changePage(page)}\n                                onChangeRowsPerPage={(event) => this.changePageSize(event.target.value)}\n                            />\n\n                        </Paper>\n\n\n                        <Dialog aria-labelledby=\"alert-dialog-title\"\n                                aria-describedby=\"alert-dialog-description\"\n                                open={this.state.edit_knowledgebase}\n                                disableBackdropClick={true}\n                                disableEscapeKeyDown={true}\n                                fullWidth={true}\n                                maxWidth=\"lg\"\n                                onClose={() => this.setState({edit_knowledgebase: false, knowledgeBase: null})}>\n                            <DialogTitle className={this.props.theme}>{this.state.edit_knowledgebase_id ? \"Edit Knowledge Base\" : \"Add New Knowledge Base\"}</DialogTitle>\n                            <DialogContent className={this.props.theme}>\n\n                                <Tabs value={this.state.selectedTab} onChange={(event, value)=> this.setState({selectedTab: value})}>\n                                    <Tab label=\"general\" value=\"general\" style={styles.tab} />\n                                    <Tab label=\"index optimization schedule\" value=\"schedule\" style={styles.tab} />\n                                </Tabs>\n\n                                <br />\n\n                                {t_value === 'general' &&\n                                <Grid container spacing={2}>\n\n                                    <Grid item xs={1}/>\n                                    <Grid item xs={3}>\n                                        <div>name</div>\n                                    </Grid>\n                                    <Grid item xs={6}>\n                                        <TextField\n                                            autoFocus={true}\n                                            style={styles.editBox}\n                                            placeholder=\"knowledge base name\"\n                                            value={this.state.edit_name}\n                                            onChange={(event) => this.setState({edit_name: event.target.value})}\n                                        />\n                                    </Grid>\n                                    <Grid item xs={2}/>\n\n\n                                    <Grid item xs={1}/>\n                                    <Grid item xs={3}>\n                                        <div>email questions to</div>\n                                    </Grid>\n                                    <Grid item xs={6}>\n                                        <TextField\n                                            style={styles.editBox}\n                                            placeholder=\"email questions to\"\n                                            value={this.state.edit_email}\n                                            onChange={(event) => this.setState({edit_email: event.target.value})}\n                                        />\n                                    </Grid>\n                                    <Grid item xs={2}/>\n\n\n                                    <Grid item xs={1}/>\n                                    <Grid item xs={3}>\n                                        <div>security id</div>\n                                    </Grid>\n                                    <Grid item xs={6}>\n                                        <TextField\n                                            style={styles.sidBox}\n                                            disabled={true}\n                                            placeholder=\"security id\"\n                                            label=\"security id\"\n                                            value={this.state.edit_security_id}\n                                            onChange={(event) => this.setState({edit_security_id: event.target.value})}\n                                        />\n                                    </Grid>\n                                    <Grid item xs={2}>\n                                        <div style={styles.imageBox}>\n                                            <img title=\"generate new security id\" alt=\"refresh\"\n                                                 src={theme === 'light' ? \"../images/refresh.svg\": \"../images/refresh-dark.svg\"}\n                                                 onClick={() => this.refreshSecurityId()}\n                                                 style={styles.imageSize}/>\n                                        </div>\n                                    </Grid>\n\n\n                                    <Grid item xs={2}/>\n                                    <Grid item xs={5}>\n                                        <Checkbox\n                                            checked={this.state.edit_enabled}\n                                            onChange={(event) => {\n                                                this.setState({edit_enabled: event.target.checked});\n                                            }}\n                                            value=\"enable this knowledge-base?\"\n                                            inputProps={{\n                                                'aria-label': 'primary checkbox',\n                                            }}\n                                        />\n                                        knowledge-base enabled?\n                                    </Grid>\n                                    <Grid item xs={5}>\n                                        <Checkbox\n                                            checked={this.state.edit_operator_enabled}\n                                            onChange={(event) => {\n                                                this.setState({edit_operator_enabled: event.target.checked});\n                                            }}\n                                            value=\"enable operator access?\"\n                                            inputProps={{\n                                                'aria-label': 'primary checkbox',\n                                            }}\n                                        />\n                                        operator enabled?\n                                    </Grid>\n\n\n                                    <Grid item xs={2}/>\n                                    <Grid item xs={5}>\n                                        <Checkbox\n                                            checked={this.state.edit_capacity_warnings}\n                                            onChange={(event) => {\n                                                this.setState({edit_capacity_warnings: event.target.checked});\n                                            }}\n                                            value=\"enable capacity warnings?\"\n                                            inputProps={{\n                                                'aria-label': 'primary checkbox',\n                                            }}\n                                        />\n                                        capacity-warnings on?\n                                    </Grid>\n                                    <Grid item xs={5}/>\n\n\n                                    <Grid item xs={2}/>\n                                    <Grid item xs={7}>\n                                        <div>maximum number of queries per day (0 is no limits)</div>\n                                    </Grid>\n                                    <Grid item xs={2}>\n                                        <TextField\n                                            onChange={(event) => this.setState({edit_max_queries_per_day: event.target.value})}\n                                            placeholder=\"max transactions per month\"\n                                            variant=\"standard\"\n                                            fullWidth={true}\n                                            value={this.state.edit_max_queries_per_day}\n                                        />\n                                    </Grid>\n                                    <Grid item xs={1}/>\n\n\n                                    <Grid item xs={2}/>\n                                    <Grid item xs={7}>\n                                        <div>maximum analytics retention period in months (0 is no limits)</div>\n                                    </Grid>\n                                    <Grid item xs={2}>\n                                        <TextField\n                                            onChange={(event) => this.setState({edit_analytics_window_size_in_months: event.target.value})}\n                                            placeholder=\"max analytics retention period in months\"\n                                            variant=\"standard\"\n                                            fullWidth={true}\n                                            value={this.state.edit_analytics_window_size_in_months}\n                                        />\n                                    </Grid>\n                                    <Grid item xs={1}/>\n\n\n                                </Grid>\n                                }\n\n                                {t_value === 'schedule' &&\n                                <div style={styles.timeTabContent}>\n                                    <TimeSelect time={this.state.edit_index_optimization_schedule}\n                                                onSave={(time) => this.updateSchedule(time)}/>\n                                    <div style={styles.paddingBottom}></div>\n                                </div>\n                                }\n\n                            </DialogContent>\n                            <DialogActions className={this.props.theme}>\n                                <Button color=\"primary\" onClick={() => this.editCancel()}>Cancel</Button>\n                                <Button variant=\"contained\" color=\"secondary\" onClick={() => this.editOk()}>Save</Button>\n                            </DialogActions>\n                        </Dialog>\n\n                    </div>\n                }\n\n\n                    <Dialog aria-labelledby=\"alert-dialog-title\"\n                            aria-describedby=\"alert-dialog-description\"\n                            open={this.state.view_ids}\n                            disableBackdropClick={true}\n                            disableEscapeKeyDown={true}\n                            fullWidth={true}\n                            maxWidth=\"md\"\n                            onClose={() => this.setState({view_ids: false})} >\n                        <DialogTitle className={this.props.theme}>{this.state.kb != null ? this.state.kb.name : \"\"} IDS</DialogTitle>\n                        <DialogContent className={this.props.theme}>\n                            <div>\n                                <div style={styles.lineHeight}>\n                                    <div style={styles.organisationIdLabel}>\n                                        organisation id\n                                    </div>\n                                    <div style={styles.floatLeft}>{this.props.selected_organisation_id ? this.props.selected_organisation_id : \"\"}</div>\n                                    <span style={styles.copyImageSpan} title={'copy organisation id'}>\n                                    <img src={theme === 'light' ? '../images/clipboard-copy.svg' : '../images/clipboard-copy-dark.svg'} style={styles.clipboardImage} alt={'copy'}\n                                         onClick={() => { if (Api.writeToClipboard(this.props.selected_organisation_id ? this.props.selected_organisation_id : \"\"))\n                                             this.startCopiedVisible(this.props.selected_organisation_id);\n                                         }}/>\n                                        {this.props.selected_organisation_id && this.state.copied_visible === this.props.selected_organisation_id &&\n                                        <div style={styles.copiedStyle}>copied</div>\n                                        }\n                                </span>\n                                    <br clear='both' />\n                                </div>\n\n                                <div style={styles.lineHeight}>\n                                    <div style={styles.organisationIdLabel}>\n                                        knowledge base id\n                                    </div>\n                                    <div style={styles.floatLeft}>{this.state.kb ? this.state.kb.kbId : \"\"}</div>\n                                    <span style={styles.copyImageSpan} title={'copy knowledge base id'}>\n                                    <img src={theme === 'light' ? '../images/clipboard-copy.svg' : '../images/clipboard-copy-dark.svg'} style={styles.clipboardImage} alt={'copy'}\n                                         onClick={() => { if (Api.writeToClipboard(this.state.kb ? this.state.kb.kbId : \"\"))\n                                             this.startCopiedVisible(this.state.kb.kbId);\n                                         }}/>\n                                        {this.state.kb && this.state.copied_visible === this.state.kb.kbId &&\n                                        <div style={styles.copiedStyle}>copied</div>\n                                        }\n                                </span>\n                                    <br clear='both' />\n                                </div>\n\n                                <div style={styles.lineHeight}>\n                                    <div style={styles.organisationIdLabel}>\n                                        security id\n                                    </div>\n                                    <div style={styles.floatLeft}>{this.state.kb ? this.state.kb.securityId : \"\"}</div>\n                                    <span style={styles.copyImageSpan} title={'copy security id'}>\n                                    <img src={theme === 'light' ? '../images/clipboard-copy.svg' : '../images/clipboard-copy-dark.svg'} style={styles.clipboardImage} alt={'copy'}\n                                         onClick={() => { if (Api.writeToClipboard(this.state.kb ? this.state.kb.securityId : \"\"))\n                                             this.startCopiedVisible(this.state.kb.securityId);\n                                         }}/>\n                                        {this.state.kb && this.state.copied_visible === this.state.kb.securityId &&\n                                        <div style={styles.copiedStyle}>copied</div>\n                                        }\n                                </span>\n                                    <br clear='both' />\n                                </div>\n\n                            </div>\n                        </DialogContent>\n                        <DialogActions className={this.props.theme}>\n                            <Button variant=\"contained\" color=\"secondary\" onClick={() => this.setState({view_ids: false})}>Close</Button>\n                        </DialogActions>\n                    </Dialog>\n\n\n\n                </div>\n        )\n    }\n}\n\n\nconst mapStateToProps = function(state) {\n    return {\n        error: state.appReducer.error,\n        error_title: state.appReducer.error_title,\n        theme: state.appReducer.theme,\n\n        selected_organisation_id: state.appReducer.selected_organisation_id,\n        selected_organisation: state.appReducer.selected_organisation,\n        knowledge_base_list: state.appReducer.knowledge_base_list,\n        user: state.appReducer.user,\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    dispatch => bindActionCreators(appCreators, dispatch)\n)(KnowledgeBases);\n","import React, {Component} from 'react';\n\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from '@material-ui/core/TextField';\nimport TablePagination from '@material-ui/core/TablePagination';\n\nimport {connect} from \"react-redux\";\nimport {bindActionCreators} from \"redux\";\nimport {appCreators} from \"../actions/appActions\";\nimport Grid from \"@material-ui/core/Grid\";\n\nimport Api from '../common/api'\n\n\n\nconst styles = {\n    pageWidth: {\n        width: '900px',\n    },\n    tableLight: {\n    },\n    tableDark: {\n        background: '#d0d0d0',\n    },\n    label: {\n        color: '#555',\n    },\n    tableHeaderStyle: {\n        background: '#555',\n        fontSize: '0.95em',\n        color: '#fff',\n    },\n    linkButton: {\n        float: 'left',\n        padding: '10px',\n        color: '#888',\n        cursor: 'pointer',\n    },\n    imageButton: {\n        float: 'right',\n        padding: '10px',\n        color: '#888',\n        cursor: 'pointer',\n    },\n    editBox: {\n        width: '500px',\n        marginBottom: '15px',\n    },\n    addImage: {\n        width: '25px',\n    },\n    dlImageSize: {\n        width: '24px',\n    },\n    floatLeft: {\n        float: 'left',\n    },\n    copiedStyle: {\n        fontSize: '10px',\n        marginLeft: '25px',\n        marginTop: '-22px',\n        position: 'absolute',\n        float: 'left',\n        zIndex: '99',\n    },\n    lineHeight: {height: '30px'},\n    organisationIdLabel: {width: '170px', float: 'left', height: '24px'},\n    copyImageSpan: {float: 'left', marginTop: '-5px', marginLeft: '10px'},\n    clipboardImage: {width: '24px', height: '24px;'},\n};\n\n\nexport class EdgeDevices extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            edit_edge_device: false,\n            edgeDevice: null,\n\n            // edit / create device\n            edit_edge_id: \"\",\n            edit_name: \"\",\n            edit_created: 0,\n\n            // viewing ids\n            view_ids: false,\n            view_ids_edge_device: null,\n            copied_visible: '',\n            view_ids_edge_map: {},\n\n            // pagination\n            page_size: 5,\n            page: 0,\n        };\n    }\n    componentDidCatch(error, info) {\n        this.props.setError(error, info);\n        console.log(error, info);\n    }\n    changePage(page) {\n        this.setState({page: page});\n    }\n    changePageSize(page_size) {\n        this.setState({page_size: page_size});\n    }\n    addEdgeDevice() {\n        this.setState({edit_edge_device: true, edgeDevice: null,\n            edit_edge_id: \"\",\n            edit_name: \"\",\n            edit_created: 0,\n        })\n    }\n    editEdgeDevice(edgeDevice) {\n        if (edgeDevice) {\n            this.setState({edit_edge_device: true, edgeDevice: edgeDevice,\n                edit_edge_id: edgeDevice.edgeId,\n                edit_name: edgeDevice.name,\n                edit_created: edgeDevice.created,\n            })\n        }\n    }\n    deleteEdgeDeviceAsk(edgeDevice) {\n        if (edgeDevice) {\n            this.props.openDialog(\"are you sure you want to remove \\\"\" + edgeDevice.name + \"\\\" ?\", \"Remove Edge device?\", (action) => { this.deleteEdgeDevice(action) });\n            this.setState({edgeDevice: edgeDevice});\n        }\n    }\n    deleteEdgeDevice(action) {\n        if (action) {\n            this.props.deleteEdgeDevice(this.props.selected_organisation_id, this.state.edgeDevice.edgeId);\n        }\n        if (this.props.closeDialog) {\n            this.props.closeDialog();\n        }\n    }\n    editCancel() {\n        this.setState({edit_edge_device: false, edgeDevice: null});\n    }\n    editOk() {\n        if (this.state.edit_name.length > 0) {\n            this.props.updateEdgeDevice(this.props.selected_organisation_id, this.state.edit_edge_id,\n                                           this.state.edit_name, this.state.edit_created);\n            this.setState({edit_edge_device: false, edgeDevice: null});\n        } else {\n            this.props.setError(\"Incomplete Data\", \"Please complete all fields.\");\n        }\n    }\n    viewIds(edge_device) {\n        let edge_details = {};\n        if (edge_device.details && edge_device.details.length > 2) {\n            edge_details = JSON.parse(edge_device.details);\n        }\n        this.setState({view_ids: true, view_ids_edge_device: edge_device,\n                             view_ids_edge_map: edge_details});\n    }\n    startCopiedVisible(edge_id) {\n        this.setState({copied_visible: edge_id});\n        window.setTimeout(() => { this.setState({copied_visible: \"\"})}, 1000);\n    }\n    getEdgeDevices() {\n        const paginated_list = [];\n        const first = this.state.page * this.state.page_size;\n        const last = first + this.state.page_size;\n        if (this.props.edge_device_list) {\n            for (const i in this.props.edge_device_list) {\n                if (i >= first && i < last) {\n                    paginated_list.push(this.props.edge_device_list[i]);\n                }\n            }\n        }\n        return paginated_list;\n    }\n    get_edge_details(edge_device) {\n        let str = \"\";\n        if (edge_device) {\n            if (edge_device.details && edge_device.details.length > 2) {\n                const edge_details = JSON.parse(edge_device.details);\n                if (edge_details[\"ipv4\"]) {\n                    str += \"ip v4: \" + edge_details[\"ipv4\"];\n                }\n            }\n            if (edge_device.lastModified !== 0) {\n                if (str.length > 0) str += \", \";\n                str += \"last seen: \" + Api.unixTimeConvert(edge_device.lastModified);\n            }\n        }\n        if (str === \"\") {\n            return \"device not active\";\n        }\n        return str;\n    }\n    pretty_key(key) {\n        if (key) {\n            if (key === 'date') {\n                return \"last seen\";\n            } else if (key.indexOf('_k') > 0) {\n                return key.replace('_k', ' size').replace(/_/g, ' ');\n            } else if (key.indexOf('v4') > 0) {\n                return key.replace('v4', ' v4').replace(/_/g, ' ');\n            } else if (key.indexOf('v6') > 0) {\n                return key.replace('v6', ' v6').replace(/_/g, ' ');\n            }\n        }\n        return key.replace(/_/g, ' ');\n    }\n    pretty_value(key, value) {\n        if (key && value) {\n            if (key === 'date') {\n                return Api.unixTimeConvert(value * 1000);\n            }\n            if (key.indexOf('_k') > 0) {\n                return Api.formatSizeUnits(parseInt(value) * 1000);\n            }\n        }\n        return value;\n    }\n    isVisible() {\n        return this.props.selected_organisation_id && this.props.selected_organisation_id.length > 0 &&\n               this.props.selected_organisation && this.props.selected_organisation.length > 0;\n    }\n    render() {\n        const theme = this.props.theme;\n        return (\n                <div>\n                    { this.isVisible() &&\n\n                    <div>\n\n                        <Paper style={styles.pageWidth}>\n                            <Table>\n                                <TableHead>\n                                    <TableRow style={styles.tableHeaderStyle}>\n                                        <TableCell style={styles.tableHeaderStyle}>Edge device</TableCell>\n                                        <TableCell style={styles.tableHeaderStyle}>remote details</TableCell>\n                                        <TableCell style={styles.tableHeaderStyle}>actions</TableCell>\n                                    </TableRow>\n                                </TableHead>\n                                <TableBody style={theme === 'light' ? styles.tableLight : styles.tableDark}>\n                                    {\n                                        this.getEdgeDevices().map((edge_device) => {\n                                            return (\n                                                <TableRow key={edge_device.edgeId}>\n                                                    <TableCell>\n                                                        <div style={styles.label}>{edge_device.name}</div>\n                                                    </TableCell>\n                                                    <TableCell>\n                                                        <div style={styles.label}>{this.get_edge_details(edge_device)}</div>\n                                                    </TableCell>\n                                                    <TableCell>\n                                                        <div style={styles.linkButton}\n                                                             onClick={() => this.viewIds(edge_device)}>\n                                                            <img src=\"../images/id.svg\" style={styles.dlImageSize}\n                                                                 title=\"view Edge device ids and details\" alt=\"ids\"/>\n                                                        </div>\n                                                        <div style={styles.linkButton}\n                                                             onClick={() => this.editEdgeDevice(edge_device)}>\n                                                            <img src=\"../images/edit.svg\" style={styles.dlImageSize}\n                                                                 title=\"edit Edge device\" alt=\"edit\"/>\n                                                        </div>\n                                                        <div style={styles.linkButton}\n                                                             onClick={() => this.deleteEdgeDeviceAsk(edge_device)}>\n                                                            <img src=\"../images/delete.svg\" style={styles.dlImageSize}\n                                                                 title=\"remove Edge device\" alt=\"remove\"/>\n                                                        </div>\n                                                    </TableCell>\n                                                </TableRow>\n                                            )\n                                        })\n                                    }\n                                    <TableRow>\n                                        <TableCell/>\n                                        <TableCell/>\n                                        <TableCell>\n                                            {this.props.selected_organisation_id.length > 0 &&\n                                            <div style={styles.imageButton} onClick={() => this.addEdgeDevice()}>\n                                                <img\n                                                    style={styles.addImage} src=\"../images/add.svg\" title=\"add new Edge device\"\n                                                    alt=\"add new Edge device\"/></div>\n                                            }\n                                        </TableCell>\n                                    </TableRow>\n                                </TableBody>\n                            </Table>\n\n                            <TablePagination\n                                rowsPerPageOptions={[5, 10, 25]}\n                                style={theme === 'light' ? styles.tableLight : styles.tableDark}\n                                component=\"div\"\n                                count={this.props.edge_device_list ? this.props.edge_device_list.length : 0}\n                                rowsPerPage={this.state.page_size}\n                                page={this.state.page}\n                                backIconButtonProps={{\n                                    'aria-label': 'Previous Page',\n                                }}\n                                nextIconButtonProps={{\n                                    'aria-label': 'Next Page',\n                                }}\n                                onChangePage={(event, page) => this.changePage(page)}\n                                onChangeRowsPerPage={(event) => this.changePageSize(event.target.value)}\n                            />\n\n                        </Paper>\n\n\n                        <Dialog aria-labelledby=\"alert-dialog-title\"\n                                aria-describedby=\"alert-dialog-description\"\n                                open={this.state.edit_edge_device}\n                                disableBackdropClick={true}\n                                disableEscapeKeyDown={true}\n                                fullWidth={true}\n                                maxWidth=\"lg\"\n                                onClose={() => this.setState({edit_edge_device: false, edgeDevice: null})}>\n                            <DialogTitle className={this.props.theme}>{this.state.edit_edge_id ? \"Edit Edge device\" : \"Add New Edge device\"}</DialogTitle>\n                            <DialogContent className={this.props.theme}>\n\n                                <Grid container spacing={2}>\n\n                                    <Grid item xs={1}/>\n                                    <Grid item xs={3}>\n                                        <div>name</div>\n                                    </Grid>\n                                    <Grid item xs={6}>\n                                        <TextField\n                                            autoFocus={true}\n                                            style={styles.editBox}\n                                            placeholder=\"Edge device name\"\n                                            value={this.state.edit_name}\n                                            onChange={(event) => this.setState({edit_name: event.target.value})}\n                                        />\n                                    </Grid>\n                                    <Grid item xs={2}/>\n\n                                </Grid>\n\n                            </DialogContent>\n                            <DialogActions className={this.props.theme}>\n                                <Button color=\"primary\" onClick={() => this.editCancel()}>Cancel</Button>\n                                <Button variant=\"outlined\" color=\"secondary\" onClick={() => this.editOk()}>Save</Button>\n                            </DialogActions>\n                        </Dialog>\n\n\n                        <Dialog aria-labelledby=\"alert-dialog-title\"\n                                aria-describedby=\"alert-dialog-description\"\n                                open={this.state.view_ids}\n                                disableBackdropClick={true}\n                                disableEscapeKeyDown={true}\n                                fullWidth={true}\n                                maxWidth=\"md\"\n                                onClose={() => this.setState({view_ids: false})} >\n                            <DialogTitle className={this.props.theme}>{this.state.view_ids_edge_device != null ? this.state.view_ids_edge_device.name : \"\"} details</DialogTitle>\n                            <DialogContent className={this.props.theme}>\n                                <div>\n                                    <div style={styles.lineHeight}>\n                                        <div style={styles.organisationIdLabel}>\n                                            organisation id\n                                        </div>\n                                        <div style={styles.floatLeft}>{this.props.selected_organisation_id ? this.props.selected_organisation_id : \"\"}</div>\n                                        <span style={styles.copyImageSpan} title={'copy organisation id'}>\n                                        <img src={theme === 'light' ? '../images/clipboard-copy.svg' : '../images/clipboard-copy-dark.svg'} style={styles.clipboardImage} alt={'copy'}\n                                                 onClick={() => { if (Api.writeToClipboard(this.props.selected_organisation_id ? this.props.selected_organisation_id : \"\"))\n                                                     this.startCopiedVisible(this.props.selected_organisation_id);\n                                                 }}/>\n                                                    {this.props.selected_organisation_id && this.state.copied_visible === this.props.selected_organisation_id &&\n                                                    <div style={styles.copiedStyle}>copied</div>\n                                                    }\n                                        </span>\n                                        <br clear='both' />\n                                    </div>\n\n                                    <div style={styles.lineHeight}>\n                                        <div style={styles.organisationIdLabel}>\n                                            Edge device id\n                                        </div>\n                                        <div style={styles.floatLeft}>{this.state.view_ids_edge_device ? this.state.view_ids_edge_device.edgeId : \"\"}</div>\n                                        <span style={styles.copyImageSpan} title={'copy Edge device id'}>\n                                            <img src={theme === 'light' ? '../images/clipboard-copy.svg' : '../images/clipboard-copy-dark.svg'} style={styles.clipboardImage} alt={'copy'}\n                                                 onClick={() => { if (Api.writeToClipboard(this.state.view_ids_edge_device ? this.state.view_ids_edge_device.edgeId : \"\"))\n                                                     this.startCopiedVisible(this.state.view_ids_edge_device.edgeId);\n                                                 }}/>\n                                                    {this.state.view_ids_edge_device && this.state.copied_visible === this.state.view_ids_edge_device.edgeId &&\n                                                    <div style={styles.copiedStyle}>copied</div>\n                                                    }\n                                        </span>\n                                        <br clear='both' />\n                                    </div>\n\n                                    {\n                                        Object.keys(this.state.view_ids_edge_map).map((key) => {\n                                            return (<div style={styles.lineHeight} key={key}>\n                                                        <div style={styles.organisationIdLabel}>{this.pretty_key(key)}</div>\n                                                        <div style={styles.floatLeft}>{this.pretty_value(key, this.state.view_ids_edge_map[key])}</div>\n                                                    </div>);\n                                        })\n                                    }\n\n                                </div>\n                            </DialogContent>\n                            <DialogActions className={this.props.theme}>\n                                <Button variant=\"outlined\" color=\"secondary\" onClick={() => this.setState({view_ids: false})}>Close</Button>\n                            </DialogActions>\n                        </Dialog>\n\n\n                    </div>\n                }\n\n            </div>\n        )\n    }\n}\n\n\nconst mapStateToProps = function(state) {\n    return {\n        error: state.appReducer.error,\n        error_title: state.appReducer.error_title,\n        theme: state.appReducer.theme,\n\n        selected_organisation_id: state.appReducer.selected_organisation_id,\n        selected_organisation: state.appReducer.selected_organisation,\n        edge_device_list: state.appReducer.edge_device_list,\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    dispatch => bindActionCreators(appCreators, dispatch)\n)(EdgeDevices);\n","import React, {Component} from 'react';\n\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from '@material-ui/core/TextField';\nimport TablePagination from '@material-ui/core/TablePagination';\n\nimport {connect} from \"react-redux\";\nimport {bindActionCreators} from \"redux\";\nimport {appCreators} from \"../actions/appActions\";\nimport Grid from \"@material-ui/core/Grid\";\n\nimport Api from '../common/api'\n\n\n\nconst styles = {\n    pageWidth: {\n        width: '900px',\n    },\n    tableLight: {\n    },\n    tableDark: {\n        background: '#d0d0d0',\n    },\n    label: {\n        color: '#555',\n    },\n    tableHeaderStyle: {\n        background: '#555',\n        fontSize: '0.95em',\n        color: '#fff',\n    },\n    linkButton: {\n        float: 'left',\n        padding: '10px',\n        color: '#888',\n        cursor: 'pointer',\n    },\n    imageButton: {\n        float: 'right',\n        padding: '10px',\n        color: '#888',\n        cursor: 'pointer',\n    },\n    editBox: {\n        width: '100%',\n        marginBottom: '15px',\n    },\n    addImage: {\n        width: '25px',\n    },\n    dlImageSize: {\n        width: '24px',\n    },\n    commandItem: {\n        fontWeight: '600',\n        marginBottom: '20px',\n    },\n    resultItem: {\n        fontSize: '10px',\n    }\n};\n\n\nexport class EdgeDeviceCommands extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            // edit / create device\n            edit_edge_device_cmd: false,\n            created: 0,\n            edit_command: \"\",\n            edit_parameters: \"\",\n            edc: null,\n\n            // result viewer for commands\n            view_results: false,\n            command: \"\",\n            results: [],\n\n            // pagination\n            page_size: 5,\n            page: 0,\n        };\n    }\n    componentDidCatch(error, info) {\n        this.props.setError(error, info);\n        console.log(error, info);\n    }\n    changePage(page) {\n        this.setState({page: page});\n    }\n    changePageSize(page_size) {\n        this.setState({page_size: page_size});\n    }\n    addEdgeDeviceCommand() {\n        this.setState({edit_edge_device_cmd: true, edc: null,\n            created: 0,\n            edit_command: \"\",\n            edit_parameters: \"\",\n        })\n    }\n    editEdgeDeviceCommand(edc) {\n        if (edc) {\n            this.setState({edit_edge_device_cmd: true, edgeDeviceCommand: edc,\n                created: edc.created,\n                edit_command: edc.command,\n                edit_parameters: edc.parameters,\n            })\n        }\n    }\n    deleteEdgeDeviceCommandAsk(edc) {\n        if (edc) {\n            this.props.openDialog(\"are you sure you want to remove \\\"\" + edc.command + \"\\\" ?\", \"Remove Edge device command?\",\n                                    (action) => { this.deleteEdgeDeviceCommand(action) });\n            this.setState({edc: edc});\n        }\n    }\n    deleteEdgeDeviceCommand(action) {\n        if (action && this.state.edc) {\n            this.props.deleteEdgeDeviceCommand(this.props.selected_organisation_id, this.props.selected_edge_device_id,\n                                               this.state.edc.created);\n        }\n        if (this.props.closeDialog) {\n            this.props.closeDialog();\n        }\n    }\n    editCancel() {\n        this.setState({edit_edge_device_cmd: false, edc: null});\n    }\n    editOk() {\n        if (this.state.edit_command.trim().length > 0) {\n            this.props.updateEdgeDeviceCommand(this.props.selected_organisation_id, this.props.selected_edge_device_id,\n                                               this.state.edit_command, this.state.edit_parameters, this.state.created);\n            this.setState({edit_edge_device_cmd: false, edc: null, created: 0, edit_command: '', edit_parameters: ''});\n        } else {\n            this.props.setError(\"Incomplete Data\", \"Please complete all fields.\");\n        }\n    }\n    getEdgeDeviceCommands() {\n        const paginated_list = [];\n        const first = this.state.page * this.state.page_size;\n        const last = first + this.state.page_size;\n        if (this.props.edge_device_command_list) {\n            for (const i in this.props.edge_device_command_list) {\n                if (i >= first && i < last) {\n                    paginated_list.push(this.props.edge_device_command_list[i]);\n                }\n            }\n        }\n        return paginated_list;\n    }\n    getExecutedStatus(executed) {\n        if (executed > 0) {\n            return Api.unixTimeConvert(executed);\n        }\n        return \"queued\";\n    }\n    isVisible() {\n        return this.props.selected_edge_device_id && this.props.selected_edge_device_id.length > 0 &&\n               this.props.selected_edge_device && this.props.selected_edge_device.length > 0;\n    }\n    viewResult(edc) {\n        if (edc && edc.result) {\n            this.setState({view_results: true, results: edc.result.split(\"\\n\"), command: edc.command + \" \" + edc.parameters});\n        }\n    }\n    render() {\n        const theme = this.props.theme;\n        return (\n                <div>\n                    { this.isVisible() &&\n\n                    <div>\n\n                        <Paper style={styles.pageWidth}>\n                            <Table>\n                                <TableHead>\n                                    <TableRow style={styles.tableHeaderStyle}>\n                                        <TableCell style={styles.tableHeaderStyle}>Edge command</TableCell>\n                                        <TableCell style={styles.tableHeaderStyle}>created</TableCell>\n                                        <TableCell style={styles.tableHeaderStyle}>executed</TableCell>\n                                        <TableCell style={styles.tableHeaderStyle}>actions</TableCell>\n                                    </TableRow>\n                                </TableHead>\n                                <TableBody style={theme === 'light' ? styles.tableLight : styles.tableDark}>\n                                    {\n                                        this.getEdgeDeviceCommands().map((edc) => {\n                                            return (\n                                                <TableRow key={edc.created}>\n                                                    <TableCell>\n                                                        <div style={styles.label}>{edc.command}</div>\n                                                    </TableCell>\n                                                    <TableCell>\n                                                        <div style={styles.label}>{Api.unixTimeConvert(edc.created)}</div>\n                                                    </TableCell>\n                                                    <TableCell>\n                                                        <div style={styles.label}>{this.getExecutedStatus(edc.executed)}</div>\n                                                    </TableCell>\n                                                    <TableCell>\n                                                        { edc.executed === 0 &&\n                                                            <div style={styles.linkButton}\n                                                                 onClick={() => this.editEdgeDeviceCommand(edc)}>\n                                                                <img src=\"../images/edit.svg\" style={styles.dlImageSize}\n                                                                     title=\"edit Edge device\" alt=\"edit\"/>\n                                                            </div>\n                                                        }\n                                                        { edc.executed === 0 &&\n                                                            <div style={styles.linkButton}\n                                                                 onClick={() => this.deleteEdgeDeviceCommandAsk(edc)}>\n                                                                <img src=\"../images/delete.svg\" style={styles.dlImageSize}\n                                                                     title=\"remove Edge device\" alt=\"remove\"/>\n                                                            </div>\n                                                        }\n                                                        { edc.executed > 0 &&\n                                                            <div style={styles.linkButton}\n                                                                 onClick={() => this.viewResult(edc)}>\n                                                                <img src=\"../images/edit.svg\" style={styles.dlImageSize}\n                                                                     title=\"view command result\" alt=\"view\"/>\n                                                            </div>\n                                                        }\n                                                    </TableCell>\n                                                </TableRow>\n                                            )\n                                        })\n                                    }\n                                    <TableRow>\n                                        <TableCell/>\n                                        <TableCell/>\n                                        <TableCell/>\n                                        <TableCell>\n                                            {this.props.selected_edge_device_id.length > 0 &&\n                                            <div style={styles.imageButton} onClick={() => this.addEdgeDeviceCommand()}>\n                                                <img\n                                                    style={styles.addImage} src=\"../images/add.svg\" title=\"add new Edge device command\"\n                                                    alt=\"add new Edge device command\"/></div>\n                                            }\n                                        </TableCell>\n                                    </TableRow>\n                                </TableBody>\n                            </Table>\n\n                            <TablePagination\n                                rowsPerPageOptions={[5, 10, 25]}\n                                style={theme === 'light' ? styles.tableLight : styles.tableDark}\n                                component=\"div\"\n                                count={this.props.edge_device_command_list ? this.props.edge_device_command_list.length : 0}\n                                rowsPerPage={this.state.page_size}\n                                page={this.state.page}\n                                backIconButtonProps={{\n                                    'aria-label': 'Previous Page',\n                                }}\n                                nextIconButtonProps={{\n                                    'aria-label': 'Next Page',\n                                }}\n                                onChangePage={(event, page) => this.changePage(page)}\n                                onChangeRowsPerPage={(event) => this.changePageSize(event.target.value)}\n                            />\n\n                        </Paper>\n\n\n                        <Dialog aria-labelledby=\"alert-dialog-title\"\n                                aria-describedby=\"alert-dialog-description\"\n                                open={this.state.edit_edge_device_cmd}\n                                disableBackdropClick={true}\n                                disableEscapeKeyDown={true}\n                                fullWidth={true}\n                                maxWidth=\"lg\"\n                                onClose={() => this.setState({edit_edge_device_cmd: false})}>\n                            <DialogTitle className={this.props.theme}>{this.state.created ? \"Edit Edge device command\" : \"Add New Edge device command\"}</DialogTitle>\n                            <DialogContent className={this.props.theme}>\n\n                                <Grid container spacing={2}>\n\n                                    <Grid item xs={1}/>\n                                    <Grid item xs={1}>\n                                        <div>command</div>\n                                    </Grid>\n                                    <Grid item xs={8}>\n                                        <TextField\n                                            autoFocus={true}\n                                            style={styles.editBox}\n                                            placeholder=\"command\"\n                                            value={this.state.edit_command}\n                                            onChange={(event) => this.setState({edit_command: event.target.value})}\n                                        />\n                                    </Grid>\n                                    <Grid item xs={2}/>\n\n                                    <Grid item xs={1}/>\n                                    <Grid item xs={1}>\n                                        <div>parameters</div>\n                                    </Grid>\n                                    <Grid item xs={8}>\n                                        <TextField\n                                            style={styles.editBox}\n                                            placeholder=\"command parameters\"\n                                            value={this.state.edit_parameters}\n                                            onChange={(event) => this.setState({edit_parameters: event.target.value})}\n                                        />\n                                    </Grid>\n                                    <Grid item xs={2}/>\n\n                                </Grid>\n\n                            </DialogContent>\n                            <DialogActions className={this.props.theme}>\n                                <Button color=\"primary\" onClick={() => this.editCancel()}>Cancel</Button>\n                                <Button variant=\"outlined\" color=\"secondary\" onClick={() => this.editOk()}>Save</Button>\n                            </DialogActions>\n                        </Dialog>\n\n\n\n                        <Dialog aria-labelledby=\"alert-dialog-title\"\n                                aria-describedby=\"alert-dialog-description\"\n                                open={this.state.view_results}\n                                disableBackdropClick={true}\n                                disableEscapeKeyDown={true}\n                                fullWidth={true}\n                                maxWidth=\"md\"\n                                onClose={() => this.setState({view_results: false})} >\n                            <DialogTitle className={this.props.theme}>results</DialogTitle>\n                            <DialogContent className={this.props.theme}>\n                                <div>\n                                    <div style={styles.commandItem}>{this.state.command}</div>\n                                    {\n                                        this.state.results.map((result, index) => {\n                                            return (\n                                                <div key={index} style={styles.resultItem}>\n                                                    {result}\n                                                </div>\n                                            )\n                                        })\n                                    }\n                                    <div style={styles.lineHeight}>\n                                        <br clear='both' />\n                                    </div>\n\n                                </div>\n                            </DialogContent>\n                            <DialogActions className={this.props.theme}>\n                                <Button variant=\"outlined\" color=\"secondary\" onClick={() => this.setState({view_results: false})}>Close</Button>\n                            </DialogActions>\n                        </Dialog>\n\n\n\n                    </div>\n                }\n\n            </div>\n        )\n    }\n}\n\n\nconst mapStateToProps = function(state) {\n    return {\n        error: state.appReducer.error,\n        error_title: state.appReducer.error_title,\n        theme: state.appReducer.theme,\n\n        selected_organisation_id: state.appReducer.selected_organisation_id,\n        selected_organisation: state.appReducer.selected_organisation,\n\n        selected_edge_device_id: state.appReducer.selected_edge_device_id,\n        selected_edge_device: state.appReducer.selected_edge_device,\n\n        edge_device_list: state.appReducer.edge_device_list,\n        edge_device_command_list: state.appReducer.edge_device_command_list,\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    dispatch => bindActionCreators(appCreators, dispatch)\n)(EdgeDeviceCommands);\n","import React from 'react';\n\nimport Grid from '@material-ui/core/Grid';\n\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from \"@material-ui/core/Paper\";\n\nimport Comms from '../common/comms';\nimport Api from '../common/api';\n\nimport {connect} from \"react-redux\";\nimport {bindActionCreators} from \"redux\";\nimport {appCreators} from \"../actions/appActions\";\n\n\nconst styles = {\n    label: {\n        marginTop: '20px',\n        marginBottom: '20px',\n    },\n    tableLight: {\n    },\n    tableDark: {\n        background: '#d0d0d0',\n    },\n    gridWidth: {\n        width: '900px',\n    },\n    hr: {\n        border: '0.5px solid #f0f0f0',\n        width: '100%',\n    },\n    hr_dark: {\n        border: '0.5px solid #444',\n        width: '100%',\n    },\n    snapshotItem: {\n        marginBottom: '5px',\n    },\n    refreshImage: {\n        float: 'right',\n        width: '24px',\n        cursor: 'pointer',\n    },\n    addImage: {\n        float: 'right',\n        marginTop: '-8px',\n        width: '24px',\n        cursor: 'pointer',\n    },\n    addImageDisabled: {\n        float: 'right',\n        marginTop: '-8px',\n        width: '24px',\n        backgroundColor: '#aaaaaa',\n        borderRadius: '12px',\n        cursor: 'pointer',\n    },\n    tableHeaderStyle: {\n        background: '#555',\n        fontSize: '0.95em',\n        color: '#fff',\n    },\n    linkButton: {\n        float: 'left',\n        padding: '10px',\n        color: '#888',\n        cursor: 'pointer',\n    },\n    imageButton: {\n        float: 'right',\n        padding: '10px',\n        color: '#888',\n        cursor: 'pointer',\n    },\n    downloadImage: {\n        width: '24px',\n    },\n    tableWidth: {\n        width: '100%',\n    }\n};\n\n\nexport class Inventory extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            date_time: 0,\n        };\n    }\n    componentDidCatch(error, info) {\n        this.props.setError(error, info);\n        console.log(error, info);\n    }\n    componentDidMount() {\n    }\n    programUploaded() {\n    }\n    programConverted(program) {\n        if (program) {\n            window.open().document.body.innerHTML += program.replace(/\\n/g, \"<br />\");\n        }\n    }\n    inventorizeDump(dateTime) {\n        window.open(Comms.get_inventorize_dump_url(this.props.selected_organisation_id, this.props.selected_knowledgebase_id, dateTime), '_blank');\n    }\n    inventorizeDumpSpreadsheet(dateTime) {\n        window.open(Comms.get_inventorize_dump_spreadhseet_url(this.props.selected_organisation_id, this.props.selected_knowledgebase_id, dateTime), '_blank');\n    }\n    deleteInventorizeAsk(dateTime) {\n        this.setState({date_time: dateTime});\n        this.props.openDialog(\"are you sure you want to remove the report dated <b>\" + Api.unixTimeConvert(dateTime) + \"</b>?\",\n            \"Remove Inventory Report\", (action) => { this.deleteReport(action) });\n    }\n    deleteReport(action) {\n        if (action) {\n            this.props.deleteInventoryItem(this.state.date_time);\n        }\n        if (this.props.closeDialog) {\n            this.props.closeDialog();\n        }\n    }\n    mindDump() {\n        window.open(Comms.get_mind_dump_url(this.props.selected_organisation_id, this.props.selected_knowledgebase_id), '_blank');\n    }\n    queryLogDump() {\n        window.open(Comms.get_query_log_url(this.props.selected_organisation_id, this.props.selected_knowledgebase_id), '_blank');\n    }\n    restore(data) {\n        if (data) {\n            this.setState({uploading: true});\n            Api.restore(data,\n                () => {\n                    this.setState({uploading: false,\n                        message_title: \"Success\",\n                        message: \"data restored\",\n                        message_callback: () => { this.setState({message: \"\", message_title: \"\"})}\n                    });\n                },\n                (errStr) => {\n                    this.props.setError(\"Error\", errStr);\n                })\n        }\n    }\n    isVisible() {\n        return this.props.selected_organisation_id && this.props.selected_organisation_id.length > 0 &&\n            this.props.selected_organisation && this.props.selected_organisation.length > 0 &&\n            this.props.selected_knowledgebase_id && this.props.selected_knowledgebase_id.length > 0;\n    }\n    render() {\n        const theme = this.props.theme;\n        return (\n            <div>\n                <Grid container spacing={1} style={styles.gridWidth}>\n\n                    {this.isVisible() &&\n                    <Grid item xs={12}><div style={theme === 'light' ? styles.hr : styles.hr_dark} /></Grid>\n                    }\n\n                    {this.isVisible() &&\n                    <Grid item xs={12}>\n                        <div style={styles.label}>Manage snapshots of your document inventory.\n                            {this.props.inventorize_busy &&\n                                <span>  SimSage is busy creating a new snapshot.</span>\n                            }\n                            {this.props.selected_organisation_id.length > 0 &&\n                            <img src=\"../images/refresh.svg\" alt=\"refresh\"\n                                 title=\"refresh the inventory list\"\n                                 onClick={() => {\n                                     this.props.getInventoryList();\n                                     this.props.getInventoryBusy();\n                                 }}\n                                 style={styles.refreshImage}/>\n                            }\n                        </div>\n                    </Grid>\n                    }\n\n                    {this.isVisible() &&\n                        <Grid item xs={12}>\n\n                                <Paper>\n                                    <Table style={styles.tableWidth}>\n                                        <TableHead>\n                                            <TableRow className='table-header'>\n                                                <TableCell className='table-header table-width-70'>created</TableCell>\n                                                <TableCell className='table-header'>action</TableCell>\n                                            </TableRow>\n                                        </TableHead>\n                                        <TableBody style={theme === 'light' ? styles.tableLight : styles.tableDark}>\n                                            { this.props.inventorize_list && this.props.inventorize_list.timeList && this.props.inventorize_list.timeList.map((item) => {\n                                                return (\n                                                    <TableRow key={item}>\n                                                        <TableCell>\n                                                            <div style={styles.snapshotItem}>\n                                                                content snapshot {Api.unixTimeConvert(item)}\n                                                            </div>\n                                                        </TableCell>\n                                                        <TableCell>\n                                                            <div style={styles.linkButton} onClick={() => this.inventorizeDump(item)}>\n                                                                <img src=\"../images/parquet.png\" style={styles.downloadImage} title=\"download as parquet-file\" alt=\"download parquet\"/>\n                                                            </div>\n                                                            <div style={styles.linkButton} onClick={() => this.inventorizeDumpSpreadsheet(item)}>\n                                                                <img src=\"../images/xlsx.svg\" style={styles.downloadImage} title=\"download as spreadsheet-xlsx\" alt=\"download spreadsheet\"/>\n                                                            </div>\n                                                            <div style={styles.linkButton} onClick={() => this.deleteInventorizeAsk(item)}>\n                                                                <img src=\"../images/delete.svg\" style={styles.downloadImage} title=\"remove report\" alt=\"remove\"/>\n                                                            </div>\n                                                        </TableCell>\n                                                    </TableRow>\n                                                )\n                                            })}\n                                            <TableRow>\n                                                <TableCell/>\n                                                <TableCell>\n                                                    {this.props.selected_organisation_id.length > 0 && !this.props.inventorize_busy &&\n                                                    <div style={styles.imageButton} onClick={() => {\n                                                        this.props.createInventory();\n                                                        this.props.forceInventoryBusy();\n                                                    }}><img\n                                                        style={styles.addImage} src=\"../images/add.svg\" title=\"create a new snapshot\" alt=\"create new snapshot\"/></div>\n                                                    }\n                                                    {this.props.selected_organisation_id.length > 0 && this.props.inventorize_busy &&\n                                                        <div style={styles.imageButton}>\n                                                            <img style={styles.addImageDisabled} src=\"../images/add.svg\" title=\"SimSage is currently busy processing an inventory.  Please try again later.\" alt=\"create new snapshot\"/>\n                                                        </div>\n                                                    }\n                                                </TableCell>\n                                            </TableRow>\n                                        </TableBody>\n                                    </Table>\n\n                                </Paper>\n                        </Grid>\n                    }\n\n\n                </Grid>\n\n\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = function(state) {\n    return {\n        error: state.appReducer.error,\n        error_title: state.appReducer.error_title,\n        theme: state.appReducer.theme,\n\n        selected_organisation_id: state.appReducer.selected_organisation_id,\n        selected_organisation: state.appReducer.selected_organisation,\n        selected_knowledgebase_id: state.appReducer.selected_knowledgebase_id,\n        inventorize_list: state.appReducer.inventorize_list,\n        knowledge_base_list: state.appReducer.knowledge_base_list,\n        inventorize_busy: state.appReducer.inventorize_busy,\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    dispatch => bindActionCreators(appCreators, dispatch)\n)(Inventory);\n\n","import React, {Component} from 'react';\n\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport TextField from '@material-ui/core/TextField';\nimport Button from \"@material-ui/core/Button\";\nimport Checkbox from '@material-ui/core/Checkbox';\nimport MessageDialog from \"../common/message-dialog\";\nimport {Api} from \"../common/api\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Slider from \"@material-ui/core/Slider\";\n\nconst crawler_list = [\n    {\"key\": \"none\", \"value\": \"please select crawler type\"},\n    {\"key\": \"file\", \"value\": \"file crawler\"},\n    {\"key\": \"web\", \"value\": \"web crawler\"},\n    {\"key\": \"office365\", \"value\": \"office 365 crawler\"},\n    {\"key\": \"dropbox\", \"value\": \"dropbox crawler\"},\n    {\"key\": \"wordpress\", \"value\": \"WordPress external crawler\"},\n    {\"key\": \"gdrive\", \"value\": \"Google-drive crawler\"},\n    {\"key\": \"nfs\", \"value\": \"nfs external crawler\"},\n    {\"key\": \"database\", \"value\": \"database crawler\"},\n    {\"key\": \"restfull\", \"value\": \"REST-full crawler\"},\n];\n\n// slider display\nconst marks = [\n    {\n        value: 0,\n        label: 'File list',\n    },\n    {\n        value: 33,\n        label: 'GDPR compliance',\n    },\n    {\n        value: 66,\n        label: 'Semantic Search',\n    },\n    {\n        value: 100,\n        label: 'Language NLU',\n    },\n];\n\nfunction markText(value) {\n    if (value < 10) return \"file\";\n    if (value < 50) return \"gdpr\";\n    if (value < 80) return \"search\";\n    return \"lang\"\n}\n\n\nconst styles = {\n    customWidth: {\n        width: '48%',\n    },\n    textField: {\n        width: '98%',\n    },\n    formContent: {\n        marginTop: '20px',\n        width: '98%',\n    },\n    exportButton: {\n    },\n};\n\nexport class CrawlerGeneral extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            has_error: false,\n\n            onSave: props.onSave,  // save data\n            onError: props.onError,\n\n            // messages\n            message_callback: null,\n            message: '',\n            message_title: '',\n\n            organisation_id: Api.defined(props.organisation_id) ? props.organisation_id : '',\n            kb_id: Api.defined(props.kb_id) ? props.kb_id : '',\n            sourceId: Api.defined(props.sourceId) ? props.sourceId : '0',\n            nodeId: Api.defined(props.nodeId) ? props.nodeId : '0',\n            maxItems: Api.defined(props.maxItems) ? props.maxItems : '0',\n            maxBotItems: Api.defined(props.maxBotItems) ? props.maxBotItems : '0',\n\n            name: Api.defined(props.name) ? props.name : '',\n            filesPerSecond: Api.defined(props.filesPerSecond) ? props.filesPerSecond : '0',\n            crawlerType: Api.defined(props.crawlerType) && props.crawlerType.length > 0 ? props.crawlerType : 'none',\n            deleteFiles: props.deleteFiles,\n            allowAnonymous: props.allowAnonymous,\n            enablePreview: props.enablePreview,\n            processingLevel: props.processingLevel,\n            customRender: props.customRender,\n            edge_device_list: this.props.edge_device_list,\n\n            edgeDeviceId: Api.defined(props.edgeDeviceId) && props.edgeDeviceId.length > 0 ? props.edgeDeviceId : 'none',\n            qaMatchStrength: Api.defined(props.qaMatchStrength) && props.qaMatchStrength ? props.qaMatchStrength : 0.8125,\n            numResults: Api.defined(props.numResults) && props.numResults ? props.numResults : 5,\n            numFragments: Api.defined(props.numFragments) && props.numFragments ? props.numFragments : 3,\n        };\n\n    }\n    componentDidMount() {\n    }\n    componentWillUnmount() {\n    }\n    componentDidCatch(error, info) {\n        this.setState({ has_error: true });\n        console.log(error, info);\n    }\n    UNSAFE_componentWillReceiveProps(nextProps) {\n        // see if we have data to start this dialog\n        if (nextProps !== null) {\n            this.setState(this.construct_data({\n                            filesPerSecond: nextProps.filesPerSecond,\n                            crawlerType: Api.defined(nextProps.crawlerType) ? nextProps.crawlerType : 'none',\n                            deleteFiles: nextProps.deleteFiles,\n                            allowAnonymous: nextProps.allowAnonymous,\n                            enablePreview: nextProps.enablePreview,\n                            organisation_id: nextProps.organisation_id,\n                            kb_id: nextProps.kb_id,\n                            sourceId: nextProps.sourceId,\n                            nodeId: nextProps.nodeId,\n                            maxItems: nextProps.maxItems,\n                            maxBotItems: nextProps.maxBotItems,\n                            processingLevel: nextProps.processingLevel,\n                            customRender: nextProps.customRender,\n                            edgeDeviceId: Api.defined(nextProps.edgeDeviceId) ? nextProps.edgeDeviceId : 'none',\n                            qaMatchStrength: Api.defined(nextProps.qaMatchStrength) ? nextProps.qaMatchStrength : 0.8125,\n                            numResults: Api.defined(nextProps.numResults) ? nextProps.numResults : 5,\n                            numFragments: Api.defined(nextProps.numFragments) ? nextProps.numFragments : 3,\n\n                            name: nextProps.name,\n                            onSave: nextProps.onSave,\n                            edge_device_list: nextProps.edge_device_list,\n\n                            onError: nextProps.onError,\n                        }));\n        }\n    }\n    construct_data(data) {\n        const crawlerType = Api.defined(data.crawlerType) ? data.crawlerType : this.state.crawlerType;\n        const allowAnonymous = (Api.defined(data.allowAnonymous) ? data.allowAnonymous : this.state.allowAnonymous) || (crawlerType === 'web');\n        let edgeDeviceId = Api.defined(data.edgeDeviceId) ? data.edgeDeviceId : this.state.edgeDeviceId;\n        if (edgeDeviceId === 'none' || !this.canHaveEdgeDevice()) edgeDeviceId = '';\n        return {filesPerSecond: Api.defined(data.filesPerSecond) ? data.filesPerSecond : this.state.filesPerSecond,\n                organisationId: Api.defined(data.organisationId) ? data.organisationId : this.state.organisationId,\n                crawlerType: crawlerType,\n                deleteFiles: Api.defined(data.deleteFiles) ? data.deleteFiles : this.state.deleteFiles,\n                allowAnonymous: allowAnonymous,\n                enablePreview: Api.defined(data.enablePreview) ? data.enablePreview : this.state.enablePreview,\n                processingLevel: Api.defined(data.processingLevel) ? data.processingLevel : this.state.processingLevel,\n                name: Api.defined(data.name) ? data.name : this.state.name,\n                sourceId: Api.defined(data.sourceId) ? data.sourceId : this.state.sourceId,\n                nodeId: Api.defined(data.nodeId) ? data.nodeId : this.state.nodeId,\n                maxItems: Api.defined(data.maxItems) ? data.maxItems : this.state.maxItems,\n                maxBotItems: Api.defined(data.maxBotItems) ? data.maxBotItems : this.state.maxBotItems,\n                customRender: Api.defined(data.customRender) ? data.customRender : this.state.customRender,\n                edgeDeviceId: edgeDeviceId,\n                qaMatchStrength: Api.defined(data.qaMatchStrength) ? data.qaMatchStrength : this.state.qaMatchStrength,\n                numResults: Api.defined(data.numResults) ? data.numResults : this.state.numResults,\n                numFragments: Api.defined(data.numFragments) ? data.numFragments : this.state.numFragments,\n            };\n    }\n    setError(title, error_msg) {\n        if (this.props.onError) {\n            this.props.onError(title, error_msg);\n        }\n    }\n    change_callback(data) {\n        this.setState(data);\n        if (this.state.onSave) {\n            this.state.onSave(this.construct_data(data));\n        }\n    }\n    testCrawler() {\n        const name = this.state.name;\n        Api.testCrawler(this.state.organisation_id, this.state.kb_id, this.state.sourceId,\n            () => {\n                this.setState({\n                    message_callback: () => { this.setState({message_title: '', message: ''})},\n                    message_title: 'Crawler Test',\n                    message: 'Success!  crawler \"' + name + '\" can communicate with its intended end-point.'\n                });\n            },\n            (err) => {\n                console.log(err);\n                this.setError(\"Error Testing Crawler\", err);\n            });\n    }\n    canHaveEdgeDevice() {\n        const crawlerType = this.state.crawlerType;\n        return crawlerType !== 'office365' && crawlerType !== 'wordpress' && crawlerType !== 'gdrive';\n    }\n    processingLevelToMark() {\n        if (this.state.processingLevel === \"FILES\") return 0;\n        if (this.state.processingLevel === \"GDPR\") return 33;\n        if (this.state.processingLevel === \"SEARCH\") return 66;\n        return 100;\n    }\n    setProcessingLevelFromMark(value) {\n        let processingLevel = \"NLU\";\n        if (value === 0) processingLevel = \"FILES\";\n        else if (value === 33) processingLevel = \"GDPR\";\n        else if (value === 66) processingLevel = \"SEARCH\";\n        if (this.state.onSave) {\n            this.state.onSave(this.construct_data({\"processingLevel\": processingLevel}));\n        }\n    }\n    filteredEdgeDevices() {\n        let list = [{\"key\": \"none\", \"value\": \"n/a\"}];\n        if (this.props.edge_device_list) {\n            for (let edge_device of this.props.edge_device_list) {\n                if (edge_device.organisationId === this.state.organisation_id && edge_device.edgeId) {\n                    list.push({\"key\": edge_device.edgeId, \"value\": edge_device.name});\n                }\n            }\n        }\n        return list;\n    }\n    render() {\n        if (this.state.has_error) {\n            return <h1>crawler-general.js: Something went wrong.</h1>;\n        }\n        return (\n            <div style={styles.formContent}>\n\n                <MessageDialog callback={(action) => this.state.message_callback(action)}\n                               open={this.state.message.length > 0}\n                               theme={this.props.theme}\n                               message={this.state.message}\n                               title={this.state.message_title} />\n\n                <Grid container spacing={2}>\n\n                    <Grid item xs={1} />\n                    <Grid item xs={10}>\n                        <Select\n                            disableUnderline\n                            value={this.state.crawlerType}\n                            disabled={(\"\" + this.state.sourceId) !== \"0\"}\n                            style={styles.customWidth}\n                            onChange={(event) => {this.change_callback({crawlerType: event.target.value})}}>\n                            {\n                                crawler_list.map((value) => {\n                                    return (<MenuItem key={value.key} value={value.key}>{value.value}</MenuItem>)\n                                })\n                            }\n                        </Select>\n                    </Grid>\n                    <Grid item xs={1} />\n\n\n                    <Grid item xs={1} />\n                    <Grid item xs={5}>\n                        <TextField\n                            placeholder=\"Crawler Name\"\n                            autoFocus\n                            label=\"Crawler Name\"\n                            value={this.state.name}\n                            style={styles.textField}\n                            onChange={(event) => {this.change_callback({name: event.target.value})}}\n                        />\n                    </Grid>\n                    <Grid item xs={5}>\n                        <TextField\n                            placeholder=\"files per second throttle\"\n                            label=\"files per second throttle\"\n                            value={this.state.filesPerSecond}\n                            style={styles.textField}\n                            onChange={(event) => {this.change_callback({filesPerSecond: event.target.value})}}\n                        />\n                    </Grid>\n                    <Grid item xs={1} />\n\n\n                    <Grid item xs={1} />\n                    <Grid item xs={5}>\n                        <TextField\n                            placeholder=\"Maximum number of files (0 for no limits)\"\n                            label=\"Maximum number of files (0 for no limits)\"\n                            value={this.state.maxItems}\n                            style={styles.textField}\n                            onChange={(event) => {this.change_callback({maxItems: event.target.value})}}\n                        />\n                    </Grid>\n                    <Grid item xs={5}>\n                        <TextField\n                            placeholder=\"Maximum number of QA (Bot) entries (0 for no limits)\"\n                            label=\"Maximum number of QA (Bot) entries (0 for no limits)\"\n                            value={this.state.maxBotItems}\n                            style={styles.textField}\n                            onChange={(event) => {this.change_callback({maxBotItems: event.target.value})}}\n                        />\n                    </Grid>\n                    <Grid item xs={1} />\n\n\n                    <Grid item xs={1} />\n                    <Grid item xs={5}>\n                        <TextField\n                            placeholder=\"node-id (0 for single node systems)\"\n                            label=\"node-id (0 for single node systems)\"\n                            value={this.state.nodeId}\n                            style={styles.textField}\n                            onChange={(event) => {this.change_callback({nodeId: event.target.value})}}\n                        />\n                    </Grid>\n                    {(this.state.crawlerType === 'database' || this.state.crawlerType === 'restfull') &&\n                    <Grid item xs={5}>\n                        <div style={{float: 'left'}}\n                             title=\"Restful and DB crawlers have optional custom-rendering flags.\">\n                            <Checkbox\n                                checked={this.state.customRender && (this.state.crawlerType === 'database' || this.state.crawlerType === 'restfull')}\n                                onChange={(event) => {\n                                    this.change_callback({customRender: event.target.checked && (this.state.crawlerType === 'database' || this.state.crawlerType === 'restfull')});\n                                }}\n                                value=\"custom render?\"\n                                inputProps={{\n                                    'aria-label': 'primary checkbox',\n                                }}\n                            />\n                            custom render?\n                        </div>\n                    </Grid>\n                    }\n                    {(this.state.crawlerType !== 'database' && this.state.crawlerType !== 'restfull') &&\n                    <Grid item xs={5} />\n                    }\n                    <Grid item xs={1} />\n\n                    <Grid item xs={1} />\n                    <Grid item xs={5}>\n                        <div style={{float: 'left'}} title=\"At the end of a run through your data we can optionally check if files have been removed by seeing which files weren't seen during a run.  Check this option if you want files that no longer exist removed automatically from SimSage.\">\n                            <Checkbox\n                                checked={this.state.deleteFiles}\n                                onChange={(event) => { this.change_callback({deleteFiles: event.target.checked}); }}\n                                value=\"delete files?\"\n                                inputProps={{\n                                    'aria-label': 'primary checkbox',\n                                }}\n                            />\n                            remove un-seen files?\n                        </div>\n                    </Grid>\n                    <Grid item xs={5}>\n                        <div style={{float: 'left'}} title=\"Our default web-search and bot-interfaces require anonymous access to the data gathered by this source.  Check this box if you want anonymous users to view the data in it. (always enabled for web-sources).\">\n                            <Checkbox\n                                checked={this.state.allowAnonymous || this.state.crawlerType === 'web'}\n                                disabled={this.state.crawlerType === 'web'}\n                                onChange={(event) => { this.change_callback({allowAnonymous: event.target.checked}); }}\n                                value=\"allow anonymous access to these files?\"\n                                inputProps={{\n                                    'aria-label': 'primary checkbox',\n                                }}\n                            />\n                            allow anonymous access to these files?\n                        </div>\n                    </Grid>\n                    <Grid item xs={1} />\n\n\n                        <Grid item xs={1} />\n                        <Grid item xs={5}>\n                            <div style={{float: 'left', width: '80%'}} title=\"Select what kind of processing you want done to these files\">\n                                <Slider\n                                    defaultValue={this.processingLevelToMark()}\n                                    valueLabelFormat={markText}\n                                    getAriaValueText={markText}\n                                    aria-labelledby=\"crawler-level\"\n                                    onChange={(event, newValue) => this.setProcessingLevelFromMark(newValue)}\n                                    step={null}\n                                    valueLabelDisplay=\"auto\"\n                                    marks={marks}\n                                />\n                            </div>\n                        </Grid>\n                        <Grid item xs={5}>\n                            <div style={{float: 'left'}} title=\"Check this box if you preview images generated for each document.  Document search must be enabled for this to work.\">\n                                <Checkbox\n                                    checked={this.state.enablePreview && (this.state.processingLevel === \"SEARCH\" || this.state.processingLevel === \"NLU\")}\n                                    disabled={this.state.processingLevel !== \"SEARCH\" && this.state.processingLevel !== \"NLU\"}\n                                    onChange={(event) => { this.change_callback({enablePreview: event.target.checked}); }}\n                                    value=\"enable document image previews?\"\n                                    inputProps={{\n                                        'aria-label': 'primary checkbox',\n                                    }}\n                                />\n                                enable document image previews?\n                            </div>\n                        </ Grid>\n                        <Grid item xs={1} />\n\n                    <Grid item xs={12} />\n                    <Grid item xs={12}/>\n\n                    <Grid item xs={1} />\n                    <Grid item xs={5}>\n                        <TextField\n                            placeholder=\"number of search results\"\n                            label=\"number of search results\"\n                            value={this.state.numResults}\n                            style={styles.textField}\n                            onChange={(event) => {this.change_callback({numResults: event.target.value})}}\n                        />\n                    </Grid>\n                    <Grid item xs={5}>\n                        <TextField\n                            placeholder=\"number of fragments per search result\"\n                            label=\"number of fragments per search result\"\n                            value={this.state.numFragments}\n                            style={styles.textField}\n                            onChange={(event) => {this.change_callback({numFragments: event.target.value})}}\n                        />\n                    </Grid>\n                    <Grid item xs={1} />\n\n                    <Grid item xs={1} />\n                    <Grid item xs={5}>\n                        <TextField\n                            placeholder=\"Q&A threshold (0.8125 default)\"\n                            label=\"Q&A threshold (0.8125 default)\"\n                            value={this.state.qaMatchStrength}\n                            style={styles.textField}\n                            onChange={(event) => {this.change_callback({qaMatchStrength: event.target.value})}}\n                        />\n                    </Grid>\n                    {this.canHaveEdgeDevice() &&\n                    <Grid item xs={1}>\n                        <div style={{cursor: 'default', marginTop: '14px'}}\n                             title=\"you can connect this source to a SimSage Edge device if you have one.  Select it here.\">\n                            Edge device\n                        </div>\n                    </Grid>\n                    }\n                    {this.canHaveEdgeDevice() &&\n                    <Grid item xs={4}>\n                        <div style={{marginTop: '10px'}}>\n                        <Select\n                            disableUnderline\n                            value={this.state.edgeDeviceId !== '' ? this.state.edgeDeviceId : 'none'}\n                            onChange={(event) => {\n                                this.change_callback({edgeDeviceId: event.target.value})\n                            }}>\n                            {\n                                this.filteredEdgeDevices().map((value) => {\n                                    return (<MenuItem key={value.key} value={value.key}>{value.value}</MenuItem>)\n                                })\n                            }\n                        </Select>\n                        </div>\n                    </Grid>\n                    }\n                    {!this.canHaveEdgeDevice() &&\n                        <Grid item xs={5} />\n                    }\n                    <Grid item xs={1} />\n\n\n                    <Grid item xs={1} />\n                    <Grid item xs={5}>\n                        {this.state.sourceId && this.state.sourceId > 0 && this.state.crawlerType !== 'nfs' &&\n                            this.state.crawlerType !== 'database' && this.state.crawlerType !== 'restfull' &&\n                            this.state.crawlerType !== 'gdrive' &&\n                        <div>\n                            <Button variant=\"contained\" color=\"secondary\" style={styles.exportButton}\n                                    onClick={() => this.testCrawler()}>Test Connection</Button>\n                        </div>\n                        }\n                    </Grid>\n                    <Grid item xs={6} />\n\n\n\n                    </Grid>\n            </div>\n        );\n    }\n}\n\nexport default CrawlerGeneral;\n","import React, {Component} from 'react';\n\nimport TextField from '@material-ui/core/TextField';\nimport Api from '../common/api'\n\nconst styles = {\n    formContent: {\n        marginTop: '20px',\n        marginLeft: '20px',\n    },\n    textField: {\n        marginRight: '10px',\n        width: '670px',\n    },\n};\n\n\nexport class CrawlerFile extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            has_error: false,\n\n            onSave: props.onSave,\n            onError: props.onError,\n\n            // file specific\n            username: Api.defined(props.username) ? props.username : '',\n            password: Api.defined(props.password) ? props.password : '',\n            server: Api.defined(props.server) ? props.server : '',\n            domain: Api.defined(props.domain) ? props.domain : '',\n            fqdn: Api.defined(props.fqdn) ? props.fqdn : '',\n            shareName: Api.defined(props.shareName) ? props.shareName : '',\n            sharePath: Api.defined(props.sharePath) ? props.sharePath : '',\n            specific_json: props.specific_json,\n        };\n\n    }\n    componentDidMount() {\n    }\n    componentWillUnmount() {\n    }\n    componentDidCatch(error, info) {\n        this.setState({ has_error: true });\n        console.log(error, info);\n    }\n    UNSAFE_componentWillReceiveProps(nextProps) {\n        // see if we have data to start this dialog\n        if (nextProps !== null) {\n            this.setState(this.construct_data({username: nextProps.username,\n                password: nextProps.password,\n                domain: nextProps.domain,\n                fqdn: nextProps.fqdn,\n                server: nextProps.server,\n                shareName: nextProps.shareName,\n                sharePath: nextProps.sharePath,\n                specific_json: nextProps.specific_json,\n                onSave: nextProps.onSave,\n                onError: nextProps.onError,\n            }));\n        }\n    }\n    construct_data(data) {\n        return {\n            ...this.state.specific_json,\n            username: Api.defined(data.username) ? data.username : this.state.username,\n            password: Api.defined(data.password) ? data.password : this.state.password,\n            domain: Api.defined(data.domain) ? data.domain : this.state.domain,\n            fqdn: Api.defined(data.fqdn) ? data.fqdn : this.state.fqdn,\n            server: Api.defined(data.server) ? data.server : this.state.server,\n            shareName: Api.defined(data.shareName) ? data.shareName : this.state.shareName,\n            sharePath: Api.defined(data.sharePath) ? data.sharePath : this.state.sharePath,\n        };\n    }\n    change_callback(data) {\n        this.setState(data);\n        if (this.state.onSave) {\n            this.state.onSave(this.construct_data(data));\n        }\n    }\n    render() {\n        if (this.state.has_error) {\n            return <h1>crawler-file.js: Something went wrong.</h1>;\n        }\n        return (\n            <div style={styles.formContent}>\n                <TextField\n                    placeholder=\"user name\"\n                    label=\"user name\"\n                    value={this.state.username}\n                    onChange={(event) => {this.change_callback({username: event.target.value})}}\n                    style={styles.textField}\n                />\n                <br />\n                <br />\n\n                <TextField\n                    placeholder=\"password\"\n                    label=\"password\"\n                    type=\"password\"\n                    value={this.state.password}\n                    onChange={(event) => {this.change_callback({password: event.target.value})}}\n                    style={styles.textField}\n                />\n                <br />\n                <br />\n\n                <TextField\n                    label=\"domain (leave blank for default or no domain)\"\n                    placeholder=\"domain name\"\n                    value={this.state.domain}\n                    onChange={(event) => {this.change_callback({domain: event.target.value})}}\n                    style={styles.textField}\n                />\n                <br />\n                <br />\n\n                <TextField\n                    label=\"Fully Qualified Domain Name\"\n                    placeholder=\"e.g.  simsage.ai  (this will form your user's email addresses, eg. account-name@simsage.ai)\"\n                    value={this.state.fqdn}\n                    onChange={(event) => {this.change_callback({fqdn: event.target.value})}}\n                    style={styles.textField}\n                />\n                <br />\n                <br />\n\n                <TextField\n                    placeholder=\"server (hostname or ip-address)\"\n                    label=\"server\"\n                    value={this.state.server}\n                    onChange={(event) => {this.change_callback({server: event.target.value})}}\n                    style={styles.textField}\n                />\n                <br />\n                <br />\n\n                <TextField\n                    placeholder=\"share name\"\n                    label=\"share name\"\n                    value={this.state.shareName}\n                    onChange={(event) => {this.change_callback({shareName: event.target.value})}}\n                    style={styles.textField}\n                />\n                <br />\n                <br />\n\n                <TextField\n                    placeholder=\"path inside share (optional)\"\n                    label=\"path inside share\"\n                    value={this.state.sharePath}\n                    onChange={(event) => {this.change_callback({sharePath: event.target.value})}}\n                    style={styles.textField}\n                />\n                <br />\n\n\n            </div>\n        );\n    }\n}\n\nexport default CrawlerFile;\n","import React, {Component} from 'react';\n\nimport TextField from '@material-ui/core/TextField';\nimport Api from '../common/api';\nimport Grid from \"@material-ui/core/Grid\";\n\n\nconst styles = {\n    formContent: {\n        marginTop: '20px',\n        width: '98%',\n    },\n    textField: {\n        width: '98%',\n    },\n};\n\n\nexport class CrawlerWeb extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            has_error: false,\n\n            onError: props.onError,\n            onSave: props.onSave,\n\n            // web specific\n            baseUrlList: Api.defined(props.baseUrlList) ? props.baseUrlList : '',\n            webCss: Api.defined(props.webCss) ? props.webCss : '',\n            webCssIgnore: Api.defined(props.webCssIgnore) ? props.webCssIgnore : '',\n            validExtensions: Api.defined(props.validExtensions) ? props.validExtensions : '',\n            validExtensionsIgnore: Api.defined(props.validExtensionsIgnore) ? props.validExtensionsIgnore : '',\n            articleIncludeWordsCsv: Api.defined(props.articleIncludeWordsCsv) ? props.articleIncludeWordsCsv : '',\n            articleExcludeWordsCsv: Api.defined(props.articleExcludeWordsCsv) ? props.articleExcludeWordsCsv : '',\n            specific_json: props.specific_json,\n        };\n\n    }\n    componentDidMount() {\n    }\n    componentWillUnmount() {\n    }\n    componentDidCatch(error, info) {\n        this.setState({ has_error: true });\n        console.log(error, info);\n    }\n    UNSAFE_componentWillReceiveProps(nextProps) {\n        // see if we have data to start this dialog\n        if (nextProps !== null) {\n            this.setState(this.construct_data({baseUrlList: nextProps.baseUrlList,\n                webCss: Api.defined(nextProps.webCss) ? nextProps.webCss : '',\n                validExtensions: Api.defined(nextProps.validExtensions) ? nextProps.validExtensions : '',\n                webCssIgnore: Api.defined(nextProps.webCssIgnore) ? nextProps.webCssIgnore : '',\n                validExtensionsIgnore: Api.defined(nextProps.validExtensionsIgnore) ? nextProps.validExtensionsIgnore : '',\n                articleIncludeWordsCsv: Api.defined(nextProps.articleIncludeWordsCsv) ? nextProps.articleIncludeWordsCsv : '',\n                articleExcludeWordsCsv: Api.defined(nextProps.articleExcludeWordsCsv) ? nextProps.articleExcludeWordsCsv : '',\n                specific_json: nextProps.specific_json,\n                onSave: nextProps.onSave,\n                onError: nextProps.onError,\n            }));\n        }\n    }\n    construct_data(data) {\n        return {\n            ...this.state.specific_json,\n            baseUrlList: Api.defined(data.baseUrlList) ? data.baseUrlList : this.state.baseUrlList,\n            webCss: Api.defined(data.webCss) ? data.webCss : this.state.webCss,\n            webCssIgnore: Api.defined(data.webCssIgnore) ? data.webCssIgnore : this.state.webCssIgnore,\n            validExtensions: Api.defined(data.validExtensions) ? data.validExtensions : this.state.validExtensions,\n            validExtensionsIgnore: Api.defined(data.validExtensionsIgnore) ? data.validExtensionsIgnore : this.state.validExtensionsIgnore ,\n            articleIncludeWordsCsv: Api.defined(data.articleIncludeWordsCsv) ? data.articleIncludeWordsCsv : this.state.articleIncludeWordsCsv ,\n            articleExcludeWordsCsv: Api.defined(data.articleExcludeWordsCsv) ? data.articleExcludeWordsCsv : this.state.articleExcludeWordsCsv ,\n        };\n    }\n    change_callback(data) {\n        this.setState(data);\n        if (this.state.onSave) {\n            this.state.onSave(this.construct_data(data));\n        }\n    }\n    render() {\n        if (this.state.has_error) {\n            return <h1>crawler-web.js: Something went wrong.</h1>;\n        }\n        return (\n            <div style={styles.formContent}>\n\n                <Grid container spacing={2}>\n\n                    <Grid item xs={1} />\n                    <Grid item xs={10}>\n                        <TextField\n                            placeholder=\"http/s base name list (preferably https), one per line\"\n                            multiline={true}\n                            autoFocus={true}\n                            variant=\"outlined\"\n                            rows=\"3\"\n                            label=\"http/s base name list (preferably https), one per line\"\n                            value={this.state.baseUrlList}\n                            onChange={(event) => {this.change_callback({baseUrlList: event.target.value})}}\n                            style={styles.textField}\n                        />\n                    </Grid>\n                    <Grid item xs={1} />\n\n                    <Grid item xs={1} />\n                    <Grid item xs={5}>\n                        <TextField\n                            label=\"file extensions to include (csv list)\"\n                            variant=\"outlined\"\n                            value={this.state.validExtensions}\n                            onChange={(event) => {this.change_callback({validExtensions: event.target.value})}}\n                            style={styles.textField}\n                        />\n                    </Grid>\n                    <Grid item xs={5}>\n                        <TextField\n                            label=\"file extensions to exclude (csv list)\"\n                            variant=\"outlined\"\n                            value={this.state.validExtensionsIgnore}\n                            onChange={(event) => {this.change_callback({validExtensionsIgnore: event.target.value})}}\n                            style={styles.textField}\n                        />\n                    </Grid>\n                    <Grid item xs={1} />\n\n                    <Grid item xs={1} />\n                    <Grid item xs={5}>\n                        <TextField\n                            placeholder=\"css/html root fragments to include csv\"\n                            multiline={true}\n                            variant=\"outlined\"\n                            rows=\"3\"\n                            label=\"css/html root fragments to include csv (e.g. div.class or id)\"\n                            value={this.state.webCss}\n                            onChange={(event) => {this.change_callback({webCss: event.target.value})}}\n                            style={styles.textField}\n                        />\n                    </Grid>\n                    <Grid item xs={5}>\n                        <TextField\n                            placeholder=\"css/html root fragments to exclude csv\"\n                            multiline={true}\n                            variant=\"outlined\"\n                            rows=\"3\"\n                            label=\"css/html root fragments to exclude csv (e.g. div.class or id)\"\n                            value={this.state.webCssIgnore}\n                            onChange={(event) => {this.change_callback({webCssIgnore: event.target.value})}}\n                            style={styles.textField}\n                        />\n                    </Grid>\n                    <Grid item xs={1} />\n\n                    <Grid item xs={1} />\n                    <Grid item xs={5}>\n                        <TextField\n                            placeholder=\"csv words, include articles by words [optional]\"\n                            multiline={true}\n                            variant=\"outlined\"\n                            rows=\"3\"\n                            label=\"csv words, include articles by words [optional]\"\n                            value={this.state.articleIncludeWordsCsv}\n                            onChange={(event) => {this.change_callback({articleIncludeWordsCsv: event.target.value})}}\n                            style={styles.textField}\n                        />\n                    </Grid>\n                    <Grid item xs={5}>\n                        <TextField\n                            placeholder=\"csv words, exclude articles by words [optional]\"\n                            multiline={true}\n                            variant=\"outlined\"\n                            rows=\"3\"\n                            label=\"csv words, exclude articles by words [optional]\"\n                            value={this.state.articleExcludeWordsCsv}\n                            onChange={(event) => {this.change_callback({articleExcludeWordsCsv: event.target.value})}}\n                            style={styles.textField}\n                        />\n                    </Grid>\n                    <Grid item xs={1} />\n\n                </Grid>\n\n            </div>\n        );\n    }\n}\n\nexport default CrawlerWeb;\n","import React, {Component} from 'react';\n\nimport TextField from '@material-ui/core/TextField';\nimport Grid from \"@material-ui/core/Grid\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport {Api} from \"../common/api\";\n\nconst type_list = [\n    {\"key\": \"none\", \"value\": \"please select database type\"},\n    {\"key\": \"mysql\", \"value\": \"MySQL\"},\n    {\"key\": \"postgresql\", \"value\": \"Postgresql\"},\n    {\"key\": \"microsoftsql\", \"value\": \"Microsoft SQL\"},\n];\n\n\nconst styles = {\n    formContent: {\n        marginTop: '20px',\n        width: '98%',\n    },\n    fieldWidth: {\n        width: '100%',\n    },\n    dbType: {\n        float: 'right',\n        marginTop: '6px',\n        marginRight: '10px',\n    }\n};\n\n\nexport class CrawlerDatabase extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            has_error: false,\n\n            onSave: props.onSave,\n            onError: props.onError,\n\n            // database specific\n            username: props.username ? props.username : '',\n            password: props.password ? props.password : '',\n            jdbc: props.jdbc ? props.jdbc : '',\n            type: Api.defined(props.type) ? props.type : 'none',\n            query: props.query ? props.query : '',\n            pk: props.pk ? props.pk : '',\n            template: props.template ? props.template : '',\n            text: props.text ? props.text : '',\n            content_url: props.content_url ? props.content_url : '',\n            customRender: props.customRender,\n\n            specific_json: props.specific_json,\n        };\n\n    }\n    componentDidMount() {\n    }\n    componentWillUnmount() {\n    }\n    componentDidCatch(error, info) {\n        this.setState({ has_error: true });\n        console.log(error, info);\n    }\n    UNSAFE_componentWillReceiveProps(nextProps) {\n        // see if we have data to start this dialog\n        if (nextProps !== null) {\n            this.setState(this.construct_data({\n                username: nextProps.username,\n                password: nextProps.password,\n                jdbc: nextProps.jdbc,\n                type: Api.defined(nextProps.type) ? nextProps.type : 'none',\n                query: nextProps.query,\n                pk: nextProps.pk,\n                template: nextProps.template,\n                text: nextProps.text,\n                content_url: nextProps.content_url,\n                customRender: nextProps.customRender,\n\n                specific_json: nextProps.specific_json,\n\n                onSave: nextProps.onSave,\n                onError: nextProps.onError,\n            }));\n        }\n    }\n    construct_data(data) {\n        return {\n            ...this.state.specific_json,\n            username: Api.defined(data.username) ? data.username : this.state.username,\n            password: Api.defined(data.password) ? data.password : this.state.password,\n            jdbc: Api.defined(data.jdbc) ? data.jdbc : this.state.jdbc,\n            type: Api.defined(data.type) ? data.type : this.state.type,\n            query: Api.defined(data.query) ? data.query : this.state.query,\n            pk: Api.defined(data.pk) ? data.pk : this.state.pk,\n            template: Api.defined(data.template) ? data.template : this.state.template,\n            text: Api.defined(data.text) ? data.text : this.state.text,\n            content_url: Api.defined(data.content_url) ? data.content_url : this.state.content_url,\n        };\n    }\n    change_callback(data) {\n        this.setState(data);\n        if (this.state.onSave) {\n            this.state.onSave(this.construct_data(data));\n        }\n    }\n    render() {\n        if (this.state.has_error) {\n            return <h1>crawler-database.js: Something went wrong.</h1>;\n        }\n        return (\n            <div style={styles.formContent}>\n\n                <Grid container spacing={1}>\n\n                    <Grid item xs={1} />\n                    <Grid item xs={5}>\n                        <TextField\n                            placeholder=\"the user name for accessing this database\"\n                            label=\"user name\"\n                            variant=\"outlined\"\n                            value={this.state.username}\n                            onChange={(event) => {this.change_callback({username: event.target.value})}}\n                            style={styles.fieldWidth}\n                        />\n                    </Grid>\n                    <Grid item xs={5}>\n                        <TextField\n                            placeholder=\"password\"\n                            label=\"password (enter a value to change it)\"\n                            type=\"password\"\n                            variant=\"outlined\"\n                            value={this.state.password}\n                            onChange={(event) => {this.change_callback({password: event.target.value})}}\n                            style={styles.fieldWidth}\n                        />\n                    </Grid>\n                    <Grid item xs={1} />\n\n                    <Grid item xs={1} />\n                    <Grid item xs={10}>\n                        <TextField\n                            placeholder=\"jdbc connection string, e.g. jdbc:microsoft:sqlserver://HOST:1433;DatabaseName=DATABASE\"\n                            label=\"jdbc connection string\"\n                            variant=\"outlined\"\n                            value={this.state.jdbc}\n                            onChange={(event) => {this.change_callback({jdbc: event.target.value})}}\n                            style={styles.fieldWidth}\n                        />\n                    </Grid>\n                    <Grid item xs={1} />\n\n                    <Grid item xs={1} />\n                    <Grid item xs={1}>\n                        <div style={styles.dbType}>Database</div>\n                    </Grid>\n                    <Grid item xs={3}>\n                        <Select\n                            disableUnderline\n                            value={this.state.type}\n                            style={styles.fieldWidth}\n                            onChange={(event) => {this.change_callback({type: event.target.value})}}>\n                            {\n                                type_list.map((value) => {\n                                    return (<MenuItem key={value.key} value={value.key}>{value.value}</MenuItem>)\n                                })\n                            }\n                        </Select>\n                    </Grid>\n                    <Grid item xs={1} />\n                    <Grid item xs={5}>\n                        <TextField\n                            placeholder=\"the name of the primary key field for this SELECT\"\n                            label=\"primary key name\"\n                            variant=\"outlined\"\n                            value={this.state.pk}\n                            onChange={(event) => {this.change_callback({pk: event.target.value})}}\n                            style={styles.fieldWidth}\n                        />\n                    </Grid>\n                    <Grid item xs={1} />\n\n                    <Grid item xs={1} />\n                    <Grid item xs={10}>\n                        <TextField\n                            placeholder=\"SQL query, a valid SELECT statement, no other allowed\"\n                            label=\"sql query\"\n                            variant=\"outlined\"\n                            multiline={true}\n                            rows={3}\n                            value={this.state.query}\n                            onChange={(event) => {this.change_callback({query: event.target.value})}}\n                            style={styles.fieldWidth}\n                        />\n                    </Grid>\n                    <Grid item xs={1} />\n\n                    <Grid item xs={1} />\n                    <Grid item xs={10}>\n                        <TextField\n                            placeholder=\"document http/https reference SQL fields in square brackets [FIELD-NAME]\"\n                            label=\"document http/https reference (non custom-renders)\"\n                            variant=\"outlined\"\n                            multiline={false}\n                            disabled={this.state.customRender}\n                            value={this.state.content_url}\n                            onChange={(event) => {this.change_callback({content_url: event.target.value})}}\n                            style={styles.fieldWidth}\n                        />\n                    </Grid>\n                    <Grid item xs={1} />\n\n                    <Grid item xs={1} />\n                    <Grid item xs={10}>\n                        <TextField\n                            placeholder=\"sql text index template, an text template referencing SQL fields in square brackets [FIELD-NAME]\"\n                            label=\"sql text index template (custom-render only)\"\n                            variant=\"outlined\"\n                            multiline={true}\n                            disabled={!this.state.customRender}\n                            rows={7}\n                            value={this.state.text}\n                            onChange={(event) => {this.change_callback({text: event.target.value})}}\n                            style={styles.fieldWidth}\n                        />\n                    </Grid>\n                    <Grid item xs={1} />\n\n                    <Grid item xs={1} />\n                    <Grid item xs={10}>\n                        <TextField\n                            placeholder=\"sql html render template, an html template referencing SQL fields in square brackets [FIELD-NAME]\"\n                            label=\"sql html render template (custom-render only)\"\n                            variant=\"outlined\"\n                            multiline={true}\n                            disabled={!this.state.customRender}\n                            rows={7}\n                            value={this.state.template}\n                            onChange={(event) => {this.change_callback({template: event.target.value})}}\n                            style={styles.fieldWidth}\n                        />\n                    </Grid>\n                    <Grid item xs={1} />\n\n                </Grid>\n            </div>\n        );\n    }\n}\n\nexport default CrawlerDatabase;\n","import React, {Component} from 'react';\n\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport {Api} from \"../common/api\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\n\n// valid metadata drop-down values\nconst metadata_list = [\n    {\"key\": \"none\", \"display\": null, \"field1\": \"\", \"db1\": \"\", \"db2\":\"\", \"sort\": \"\", \"sort_default\": \"\", \"sort_asc\": \"\", \"sort_desc\": \"\"},\n    {\"key\": \"author\", \"display\": null, \"field1\": \"{author}\", \"db1\": \"\", \"db2\":\"\", \"sort\": \"\", \"sort_default\": \"\", \"sort_asc\": \"\", \"sort_desc\": \"\"},\n    {\"key\": \"created\", \"display\": null, \"field1\": \"{created}\", \"db1\": \"\", \"db2\":\"\", \"sort\": \"\", \"sort_default\": \"\", \"sort_asc\": \"\", \"sort_desc\": \"\"},\n    {\"key\": \"last modified\", \"display\": null, \"field1\": \"{lastmod}\", \"db1\": \"\", \"db2\":\"\", \"sort\": \"\", \"sort_default\": \"\", \"sort_asc\": \"\", \"sort_desc\": \"\"},\n    {\"key\": \"title\", \"display\": null, \"field1\": \"{title}\", \"db1\": \"\", \"db2\":\"\", \"sort\": \"\", \"sort_default\": \"\", \"sort_asc\": \"\", \"sort_desc\": \"\"},\n    {\"key\": \"image from binary-blob\", \"display\": null, \"field1\": \"binary-blob-image\", \"db1\": \"\", \"db2\":\"\", \"sort\": \"\", \"sort_default\": \"\", \"sort_asc\": \"\", \"sort_desc\": \"\"},\n    {\"key\": \"image from base64\", \"display\": null, \"field1\": \"base64-image\", \"db1\": \"\", \"db2\":\"\", \"sort\": \"\", \"sort_default\": \"\", \"sort_asc\": \"\", \"sort_desc\": \"\"},\n    {\"key\": \"image from url\", \"display\": null, \"field1\": \"url-image\", \"db1\": \"\", \"db2\":\"\", \"sort\": \"\", \"sort_default\": \"\", \"sort_asc\": \"\", \"sort_desc\": \"\"},\n    {\"key\": \"category\", \"display\": \"\", \"field1\": \"\", \"db1\": \"\", \"db2\":\"\", \"sort\": \"\", \"sort_default\": \"\", \"sort_asc\": \"\", \"sort_desc\": \"\"},\n    {\"key\": \"two level category\", \"display\": \"\", \"field1\": \"\", \"db1\": \"\", \"db2\":\"\", \"sort\": \"\", \"sort_default\": \"\", \"sort_asc\": \"\", \"sort_desc\": \"\"},\n    {\"key\": \"number range\", \"display\": \"\", \"field1\": \"\", \"db1\": \"\", \"db2\":\"\", \"sort\": \"false\", \"sort_default\": \"\", \"sort_asc\": \"\", \"sort_desc\": \"\"},\n    {\"key\": \"monetary x 100 range\", \"display\": \"\", \"field1\": \"\", \"db1\": \"\", \"db2\":\"\", \"sort\": \"false\", \"sort_default\": \"\", \"sort_asc\": \"\", \"sort_desc\": \"\"},\n    {\"key\": \"monetary range\", \"display\": \"\", \"field1\": \"\", \"db1\": \"\", \"db2\":\"\", \"sort\": \"false\", \"sort_default\": \"\", \"sort_asc\": \"\", \"sort_desc\": \"\"},\n    {\"key\": \"star rating\", \"display\": \"\", \"field1\": \"\", \"db1\": \"\", \"db2\":\"\", \"sort\": \"false\", \"sort_default\": \"\", \"sort_asc\": \"\", \"sort_desc\": \"\"},\n    {\"key\": \"select if true\", \"display\": \"\", \"field1\": \"\", \"db1\": \"\", \"db2\":\"\", \"sort\": \"\", \"sort_default\": \"\", \"sort_asc\": \"\", \"sort_desc\": \"\"},\n    {\"key\": \"created date range\", \"display\": \"\", \"field1\": \"\", \"db1\": \"\", \"db2\":\"\", \"sort\": \"false\", \"sort_default\": \"\", \"sort_asc\": \"\", \"sort_desc\": \"\"},\n    {\"key\": \"last modified date ranges\", \"display\": \"\", \"field1\": \"\", \"db1\": \"\", \"db2\":\"\", \"sort\": \"false\", \"sort_default\": \"\", \"sort_asc\": \"\", \"sort_desc\": \"\"},\n    {\"key\": \"csv string\", \"display\": \"\", \"field1\": \"\", \"db1\": \"\", \"db2\":\"\", \"sort\": \"\", \"sort_default\": \"\", \"sort_asc\": \"\", \"sort_desc\": \"\"},\n];\n\n\nconst styles = {\n    formContent: {\n        marginTop: '20px',\n        width: '98%',\n    },\n    text: {\n        border: '1px solid #808080',\n        borderRadius: '4px',\n        height: '32px',\n        padding: '4px',\n    },\n    instructionLabel: {\n        fontSize: '10px',\n        marginLeft: '20px',\n    },\n    table: {\n        marginTop: '10px',\n        marginLeft: '20px',\n        borderSpacing: '0',\n        border: '1px solid #aaaaaa',\n        borderRadius: '5px',\n    },\n    tableHead: {\n        backgroundColor: '#aaaaaa',\n        color: '#ffffff',\n    },\n    db_field: {\n        verticalAlign: 'top',\n        width: '250px',\n    },\n    display: {\n        width: '250px',\n    },\n    displayFieldWidth: {\n    },\n    tdDisplayFieldWidth: {\n        verticalAlign: 'top',\n        width: '200px',\n    },\n    tdSort: {\n        verticalAlign: 'top',\n    },\n    sortLabel: {\n        fontSize: '10px',\n    },\n    tdSort2: {\n        float: 'left',\n        height: '32px',\n        marginLeft: '15px',\n    },\n    metadata_dropdown_box: {\n        marginLeft: '10px',\n        width: '220px',\n        padding: '5px',\n        verticalAlign: 'top',\n        marginTop: '8px',\n    },\n    mdDropbox: {\n        float: 'left',\n        marginLeft: '10px',\n        width: '220px',\n        padding: '5px',\n        verticalAlign: 'top',\n    },\n    metadata_field: {\n        width: '200px',\n        padding: '5px',\n    },\n    sort_field: {\n        width: '100px',\n        padding: '5px',\n    },\n    action_field: {\n        width: '100px',\n        padding: '5px',\n    },\n    metadata_dropdown: {\n        marginLeft: '5px',\n        width: '200px',\n    },\n    imageButton: {\n        padding: '10px',\n        color: '#888',\n        cursor: 'pointer',\n    },\n    addImage: {\n        width: '25px',\n        cursor: 'pointer',\n        color: \"green\",\n    },\n    deleteBox: {\n        marginTop: '-14px',\n        color: '#888',\n        float: 'left',\n        cursor: 'pointer',\n    },\n    upDownArrow: {\n        float: 'left',\n        marginTop: '-16px',\n        padding: '2px',\n        fontSize: '26px',\n        cursor: 'pointer',\n    },\n    deleteImage: {\n        width: '24px',\n    },\n    dbFieldWidth: {\n        border: '1px solid #808080',\n        borderRadius: '4px',\n        height: '32px',\n        padding: '4px',\n        width: '250px',\n    },\n    tdMetadataFieldName: {\n        verticalAlign: 'top',\n    },\n    mdFieldWidth: {\n        width: '200px',\n    },\n    tdAction: {\n        float: 'left',\n        marginTop: '8px',\n        verticalAlign: 'top',\n    }\n};\n\n\nexport class CrawlerMetadataMapper extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            has_error: false,\n\n            onSave: props.onSave,\n            onError: props.onError,\n\n            // metadata set\n            specificJson: props.specificJson ? props.specificJson : {},\n        };\n\n    }\n    componentDidCatch(error, info) {\n        this.setState({ has_error: true });\n        console.log(error, info);\n    }\n    UNSAFE_componentWillReceiveProps(nextProps) {\n        // see if we have data to start this dialog\n        if (nextProps !== null) {\n            this.setState(this.construct_data({\n                specificJson: nextProps.specificJson ? nextProps.specificJson : {},\n\n                onSave: nextProps.onSave,\n                onError: nextProps.onError,\n            }));\n        }\n    }\n    get_md_list() {\n        return this.state && this.state.specificJson && this.state.specificJson.metadata_list ?\n            this.state.specificJson.metadata_list : [];\n    }\n    construct_data(md_list) {\n        return {\n            ...this.props.specificJson, metadata_list: Api.defined(md_list) ? md_list : this.get_md_list()\n        };\n    }\n    set_db(record, index, value) {\n        const md_list = this.get_md_list();\n        if (index >= 0 && index < md_list.length) {\n            md_list[index].db1 = value;\n            this.setState({specificJson: this.construct_data(md_list)});\n            if (this.state.onSave) {\n                this.state.onSave(this.construct_data(md_list));\n            }\n        }\n    }\n    set_db_extra(record, index, value) {\n        const md_list = this.get_md_list();\n        if (index >= 0 && index < md_list.length) {\n            md_list[index].db2 = value;\n            this.setState({specificJson: this.construct_data(md_list)});\n            if (this.state.onSave) {\n                this.state.onSave(this.construct_data(md_list));\n            }\n        }\n    }\n    set_md_type(record, index, value) {\n        const md_list = this.get_md_list();\n        if (index >= 0 && index < md_list.length) {\n            // find the right item type in the preset list of items\n            let match_item = null;\n            for (const item of metadata_list) {\n                if (item.key === value) {\n                    match_item = item;\n                    break;\n                }\n            }\n            if (match_item != null) {\n                md_list[index] = JSON.parse(JSON.stringify(match_item));\n                this.setState({specificJson: this.construct_data(md_list)});\n                if (this.state.onSave) {\n                    this.state.onSave(this.construct_data(md_list));\n                }\n            }\n        }\n    }\n    setDisplayName(record, index, value) {\n        const md_list = this.get_md_list();\n        if (index >= 0 && index < md_list.length) {\n            md_list[index].display = value;\n            this.setState({specificJson: this.construct_data(md_list)});\n            if (this.state.onSave) {\n                this.state.onSave(this.construct_data(md_list));\n            }\n        }\n    }\n    setUserMetadataName1(record, index, value) {\n        const md_list = this.get_md_list();\n        if (index >= 0 && index < md_list.length) {\n            md_list[index].field1 = value;\n            this.setState({specificJson: this.construct_data(md_list)});\n            if (this.state.onSave) {\n                this.state.onSave(this.construct_data(md_list));\n            }\n        }\n    }\n    setSort(record, index, value) {\n        const md_list = this.get_md_list();\n        if (index >= 0 && index < md_list.length) {\n            md_list[index].sort = value ? \"true\" : \"false\";\n            this.setState({specificJson: this.construct_data(md_list)});\n            if (this.state.onSave) {\n                this.state.onSave(this.construct_data(md_list));\n            }\n        }\n    }\n    setValue(record, index, field_name, value) {\n        const md_list = this.get_md_list();\n        if (index >= 0 && index < md_list.length) {\n            md_list[index][field_name] = value;\n            this.setState({specificJson: this.construct_data(md_list)});\n            if (this.state.onSave) {\n                this.state.onSave(this.construct_data(md_list));\n            }\n        }\n    }\n    setDefaultSort(record, index, direction, value) {\n        const md_list = this.get_md_list();\n        if (index >= 0 && index < md_list.length) {\n            md_list[index].sort_default = (value ? direction : \"\");\n            for (const i in md_list) {\n                if (\"\"+i !== \"\"+index && md_list.hasOwnProperty(i)) {\n                    md_list[i].sort_default = \"\";\n                }\n            }\n            this.setState({specificJson: this.construct_data(md_list)});\n            if (this.state.onSave) {\n                this.state.onSave(this.construct_data(md_list));\n            }\n        }\n    }\n    deleteMetadataItem(index) {\n        const md_list = [];\n        const i_index = '' + index\n        const old_md_list = this.get_md_list();\n        for (let i in old_md_list) {\n            if (i !== i_index) {\n                md_list.push(old_md_list[i]);\n            }\n        }\n        this.setState({specificJson: this.construct_data(md_list)});\n        if (this.state.onSave) {\n            this.state.onSave(this.construct_data(md_list));\n        }\n    }\n    addNewMetadataMapping() {\n        const md_list = this.get_md_list();\n        md_list.push(JSON.parse(JSON.stringify(metadata_list[0]))); // add a copy of item 0\n        this.setState({specificJson: this.construct_data(md_list)});\n        if (this.state.onSave) {\n            this.state.onSave(this.construct_data(md_list));\n        }\n    }\n    checkMetadataName(event) {\n        // only allow valid characters to propagate for metadata names\n        if ((event.key >= 'a' && event.key <= 'z') ||\n            (event.key >= 'A' && event.key <= 'Z') ||\n            (event.key >= '0' && event.key <= '9') || event.key === '-') {\n            return true;\n        } else {\n            event.preventDefault();\n            event.stopPropagation();\n            return false;\n        }\n    }\n    move_row_up(md, index) {\n        if (index > 0) {\n            const md_list = this.get_md_list();\n            const temp = md_list[index-1];\n            md_list[index-1] = md;\n            md_list[index] = temp;\n            this.setState({specificJson: this.construct_data(md_list)});\n            if (this.state.onSave) {\n                this.state.onSave(this.construct_data(md_list));\n            }\n        }\n    }\n    move_row_down(md, index) {\n        const md_list = this.get_md_list();\n        if (index + 1 < md_list.length) {\n            const temp = md_list[index+1];\n            md_list[index+1] = md;\n            md_list[index] = temp;\n            this.setState({specificJson: this.construct_data(md_list)});\n            if (this.state.onSave) {\n                this.state.onSave(this.construct_data(md_list));\n            }\n        }\n    }\n    needs_metadata_field(md) {\n        return (md.key === \"category\" || md.key === \"number range\" || md.key === \"two level category\" ||\n                md.key === \"monetary x 100 range\" || md.key === \"monetary range\" || md.key === \"star rating\" ||\n                md.key === \"created date range\" || md.key === \"last modified date ranges\" ||\n                md.key === \"select if true\" || md.key === \"csv string\");\n    }\n    render() {\n        if (this.state.has_error) {\n            return <h1>crawler-metadata-mapper.js: Something went wrong.</h1>;\n        }\n        const self = this;\n        const num_rows = this.get_md_list().length;\n        const theme = this.props.theme;\n        return (\n            <div style={styles.formContent}>\n\n                <div style={styles.instructionLabel}>All rows in order of UI.  Use 'actions' arrows to re-arrange existing rows.</div>\n\n                <table style={styles.table}>\n\n                    <thead>\n                        <tr style={styles.tableHead}>\n                            <td style={styles.metadata_dropdown_box}>data-type</td>\n                            <td style={styles.db_field}>source field</td>\n                            <td style={styles.display}>UI display-name</td>\n                            <td style={styles.metadata_field}>metadata name</td>\n                            <td style={styles.sort_field}>sortable</td>\n                            <td style={styles.action_field}>actions</td>\n                        </tr>\n                    </thead>\n\n                    <tbody>\n                    <tr>\n                        <td colSpan={3}>&nbsp;</td>\n                    </tr>\n\n                    {\n                        this.get_md_list().map(function(md, index) {\n                            return (<tr key={index}>\n\n                                <td style={styles.mdDropbox}>\n                                    <Select\n                                        disableUnderline\n                                        value={md.key}\n                                        style={styles.metadata_dropdown}\n                                        title=\"select what kind of metadata field to use\"\n                                        onChange={(event) => { self.set_md_type(md, index, event.target.value) }}>\n                                        {\n                                            metadata_list.map((value, j) => {\n                                                return (<MenuItem key={j} value={value.key}>{value.key}</MenuItem>)\n                                            })\n                                        }\n                                    </Select>\n                                </td>\n\n                                {md.key !== \"two level category\" &&\n                                <td style={styles.db_field}>\n                                    <input type=\"text\"\n                                        className={theme}\n                                        placeholder=\"source [field-name]\"\n                                        title=\"the source-name field to use for this category\"\n                                        value={md.db1}\n                                        onChange={(event) => {\n                                            self.set_db(md, index, event.target.value)\n                                        }}\n                                        style={styles.dbFieldWidth}/>\n                                </td>\n                                }\n\n                                {md.key === \"two level category\" &&\n                                <td style={styles.db_field}>\n                                    <input type=\"text\"\n                                        placeholder=\"level 1 [field-name]\"\n                                        className={theme}\n                                        value={md.db1}\n                                        title=\"the first source field to use for this double category\"\n                                        onChange={(event) => {\n                                            self.set_db(md, index, event.target.value)\n                                        }}\n                                        style={styles.dbFieldWidth}/>\n                                    <input type=\"text\"\n                                        placeholder=\"level 2 [field-name]\"\n                                        className={theme}\n                                        value={md.db2}\n                                        title=\"the second source field to use for this double category\"\n                                        onChange={(event) => {\n                                            self.set_db_extra(md, index, event.target.value)\n                                        }}\n                                        style={styles.dbFieldWidth}/>\n                                </td>\n                                }\n\n\n                                <td style={styles.tdDisplayFieldWidth}>\n                                    {\n                                        md.display !== null &&\n                                        <span>\n                                            <input type=\"text\"\n                                                className={theme}\n                                                style={styles.text}\n                                                placeholder=\"UI display-name\"\n                                                title=\"name displayed in the UI for this item\"\n                                                value={md.display}\n                                                onChange={(event) => {self.setDisplayName(md, index, event.target.value)}}  />\n                                        </span>\n                                    }\n                                </td>\n\n\n                                <td style={styles.tdMetadataFieldName}>\n                                {\n                                    self.needs_metadata_field(md) &&\n                                    <div style={styles.mdFieldWidth}>\n                                        <input type=\"text\"\n                                            className={theme}\n                                            style={styles.text}\n                                            placeholder=\"metadata name\"\n                                            value={md.field1}\n                                            title=\"metadata names should only contain 0..9, a..z, and A..Z\"\n                                            onKeyDown={(event) => {return self.checkMetadataName(event)}}\n                                            onChange={(event) => {self.setUserMetadataName1(md, index, event.target.value)}}  />\n                                    </div>\n                                }\n                                    { md.sort === \"true\" &&\n                                    <div>\n                                        <input type=\"text\"\n                                               className={theme}\n                                               style={styles.text}\n                                               placeholder=\"sort descending UI text\"\n                                               value={md.sort_desc}\n                                               title=\"The text to display for this field if a descending sort is selected of this type\"\n                                               onChange={(event) => {self.setValue(md, index, \"sort_desc\", event.target.value)}}  />\n                                    </div>\n                                    }\n                                    { md.sort === \"true\" &&\n                                     <div>\n                                         <input type=\"text\"\n                                                className={theme}\n                                                style={styles.text}\n                                                placeholder=\"sort ascending UI text\"\n                                                value={md.sort_asc}\n                                                title=\"The text to display for this field if an ascending sort is selected of this type\"\n                                                onChange={(event) => {self.setValue(md, index, \"sort_asc\", event.target.value)}}  />\n                                     </div>\n                                    }\n                                    {md.sort === \"true\" &&\n                                        <br></br>\n                                    }\n                                </td>\n\n                                <td style={styles.tdSort}>\n                                    {md.sort !== \"\" &&\n                                    <div style={styles.tdSort2} title=\"enable this category as an item used for sorting in the UI\">\n                                        <Checkbox\n                                            checked={md.sort === \"true\"}\n                                            onChange={(event) => {\n                                                self.setSort(md, index, event.target.checked);\n                                            }}\n                                            value=\"enable result sorting over this field?\"\n                                            inputProps={{\n                                                'aria-label': 'primary checkbox',\n                                            }}\n                                        />\n                                    </div>\n                                    }\n                                    {md.sort === \"true\" &&\n                                    <div style={styles.tdSort2} title=\"set this descending field as the default sort field for the UI\">\n                                        {'\\u2190'}\n                                        <Checkbox\n                                            checked={md.sort_default === \"desc\"}\n                                            onChange={(event) => {\n                                                self.setDefaultSort(md, index, \"desc\", event.target.checked);\n                                            }}\n                                            inputProps={{\n                                                'aria-label': 'primary checkbox',\n                                            }}\n                                        />\n                                    </div>\n                                    }\n\n                                    {md.sort === \"true\" &&\n                                    <div style={styles.tdSort2} title=\"set this ascending field as the default sort field for the UI\">\n                                        {'\\u2190'}\n                                        <Checkbox\n                                            checked={md.sort_default === \"asc\"}\n                                            onChange={(event) => {\n                                                self.setDefaultSort(md, index, \"asc\", event.target.checked);\n                                            }}\n                                            inputProps={{\n                                                'aria-label': 'primary checkbox',\n                                            }}\n                                        />\n                                    </div>\n                                    }\n                                </td>\n\n                                <td style={styles.tdAction}>\n                                    <span style={styles.deleteBox} onClick={() => self.deleteMetadataItem(index)} title=\"remove this metadata item\">\n                                        <img src={theme === 'light' ? \"../images/delete.svg\" : \"../images/delete-dark.svg\"} style={styles.deleteImage} title=\"remove this metadata mapping\" alt=\"remove this metadata mapping\"/>\n                                    </span>\n                                    {index > 0 &&\n                                    <span style={styles.upDownArrow} title=\"move row up (change UI ordering)\"\n                                          onClick={() => {\n                                              self.move_row_up(md, index)\n                                          }}>&#8679;</span>\n                                    }\n                                    {index + 1 < num_rows &&\n                                    <span style={styles.upDownArrow} title=\"move row down (change UI ordering)\"\n                                          onClick={() => {\n                                              self.move_row_down(md, index)\n                                          }}>&#8681;</span>\n                                    }\n                                </td>\n\n                            </tr>)\n                        })\n                    }\n\n                    <tr>\n                        <td colSpan={5}>&nbsp;</td>\n                    </tr>\n\n                    <tr>\n                        <td colSpan={5} />\n                        <td>\n                            <div style={styles.imageButton} onClick={() => this.addNewMetadataMapping()}><img\n                                style={styles.addImage} src={theme === 'light' ? \"../images/add.svg\" : \"../images/add-dark.svg\"} title=\"add new metadata mapping\"\n                                alt=\"add new metadata mapping\"/></div>\n                        </td>\n                    </tr>\n\n                    <tr>\n                        <td colSpan={5}>&nbsp;</td>\n                    </tr>\n\n                    </tbody>\n\n                </table>\n            </div>\n        );\n    }\n}\n\nexport default CrawlerMetadataMapper;\n","import React, {Component} from 'react';\n\nimport TextField from '@material-ui/core/TextField';\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Api from '../common/api'\nimport Grid from \"@material-ui/core/Grid\";\n\n\nconst styles = {\n    formContent: {\n        marginTop: '20px',\n        width: '98%',\n    },\n    textField: {\n        width: '95%',\n    },\n    dlText: {\n        marginTop: '-2px',\n        width: '150px',\n        float: 'left',\n    },\n    manualBox: {\n        float: 'right',\n        marginRight: '100px',\n    },\n    manualImage: {\n        float: 'left',\n        width: '40px',\n    }\n};\n\n\nexport class CrawlerOffice365 extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            has_error: false,\n\n            onSave: props.onSave,\n            onError: props.onError,\n\n            // office 365 properties\n            tenantId: props.tenantId ? props.tenantId : '',\n            clientId: props.clientId ? props.clientId : '',\n            clientSecret: props.clientSecret ? props.clientSecret : '',\n            redirectUrl: props.redirectUrl ? props.redirectUrl : '',\n\n            crawlOneDrive: Api.defined(props.crawlOneDrive) ? props.crawlOneDrive : false,\n            crawlAllOfOneDrive: Api.defined(props.crawlAllOfOneDrive) ? props.crawlAllOfOneDrive : false,\n            oneDriveUsersToCrawl: props.oneDriveUsersToCrawl ? props.oneDriveUsersToCrawl : '',\n\n            crawlSharePoint: Api.defined(props.crawlSharePoint) ? props.crawlSharePoint : false,\n            crawlRootSite: Api.defined(props.crawlRootSite) ? props.crawlRootSite : false,\n            sharePointSitesToCrawl: props.sharePointSitesToCrawl ? props.sharePointSitesToCrawl : '',\n\n            crawlExchange: Api.defined(props.crawlExchange) ? props.crawlExchange : false,\n            crawlAllOfExchange: Api.defined(props.crawlAllOfExchange) ? props.crawlAllOfExchange : false,\n            exchangeUsersToCrawl: props.exchangeUsersToCrawl ? props.exchangeUsersToCrawl : '',\n\n            specific_json: props.specific_json,\n        };\n\n    }\n    componentDidMount() {\n    }\n    componentWillUnmount() {\n    }\n    componentDidCatch(error, info) {\n        this.setState({ has_error: true });\n        console.log(error, info);\n    }\n    UNSAFE_componentWillReceiveProps(nextProps) {\n        // see if we have data to start this dialog\n        if (nextProps !== null) {\n            this.setState(this.construct_data({\n                tenantId: nextProps.tenantId,\n                clientId: nextProps.clientId,\n                clientSecret: nextProps.clientSecret,\n                redirectUrl: nextProps.redirectUrl,\n\n                crawlOneDrive: nextProps.crawlOneDrive,\n                crawlAllOfOneDrive: nextProps.crawlAllOfOneDrive,\n                oneDriveUsersToCrawl: nextProps.oneDriveUsersToCrawl,\n\n                crawlSharePoint: nextProps.crawlSharePoint,\n                crawlRootSite: nextProps.crawlRootSite,\n                sharePointSitesToCrawl: nextProps.sharePointSitesToCrawl,\n\n                crawlExchange: nextProps.crawlExchange,\n                crawlAllOfExchange: nextProps.crawlAllOfExchange,\n                exchangeUsersToCrawl: nextProps.exchangeUsersToCrawl,\n\n                specific_json: nextProps.specific_json,\n\n                onSave: nextProps.onSave,\n                onError: nextProps.onError,\n            }));\n        }\n    }\n    construct_data(data) {\n        return {\n            ...this.state.specific_json,\n\n            tenantId: Api.defined(data.tenantId) ? data.tenantId : this.state.tenantId,\n            clientId: Api.defined(data.clientId) ? data.clientId : this.state.clientId,\n            clientSecret: Api.defined(data.clientSecret) ? data.clientSecret : this.state.clientSecret,\n            redirectUrl: Api.defined(data.redirectUrl) ? data.redirectUrl : this.state.redirectUrl,\n\n            crawlOneDrive: Api.defined(data.crawlOneDrive) ? data.crawlOneDrive : this.state.crawlOneDrive,\n            crawlAllOfOneDrive: Api.defined(data.crawlAllOfOneDrive) ? data.crawlAllOfOneDrive : this.state.crawlAllOfOneDrive,\n            oneDriveUsersToCrawl: Api.defined(data.oneDriveUsersToCrawl) ? data.oneDriveUsersToCrawl : this.state.oneDriveUsersToCrawl,\n\n            crawlSharePoint: Api.defined(data.crawlSharePoint) ? data.crawlSharePoint : this.state.crawlSharePoint,\n            crawlRootSite: Api.defined(data.crawlRootSite) ? data.crawlRootSite : this.state.crawlRootSite,\n            sharePointSitesToCrawl: Api.defined(data.sharePointSitesToCrawl) ? data.sharePointSitesToCrawl : this.state.sharePointSitesToCrawl,\n\n            crawlExchange: Api.defined(data.crawlExchange) ? data.crawlExchange : this.state.crawlExchange,\n            crawlAllOfExchange: Api.defined(data.crawlAllOfExchange) ? data.crawlAllOfExchange : this.state.crawlAllOfExchange,\n            exchangeUsersToCrawl: Api.defined(data.exchangeUsersToCrawl) ? data.exchangeUsersToCrawl : this.state.exchangeUsersToCrawl,\n        };\n    }\n    change_callback(data) {\n        this.setState(data);\n        if (this.state.onSave) {\n            this.state.onSave(this.construct_data(data));\n        }\n    }\n    render() {\n        if (this.state.has_error) {\n            return <h1>crawler-office365.js: Something went wrong.</h1>;\n        }\n        return (\n            <div style={styles.formContent}>\n\n                <Grid container spacing={1}>\n\n                    <Grid item xs={1} />\n                    <Grid item xs={5}>\n                        <TextField\n                            placeholder=\"tenant id\"\n                            label=\"tenant id\"\n                            autoFocus={true}\n                            value={this.state.tenantId}\n                            onChange={(event) => {this.change_callback({tenantId: event.target.value})}}\n                            style={styles.textField}\n                        />\n                    </Grid>\n                    <Grid item xs={5}>\n                        <div style={styles.manualBox}>\n                            <a href=\"../resources/simsage-office365-setup.pdf\" id=\"dlOffice365\" target=\"_blank\" title=\"download the SimSage Office 365 setup guide\">\n                                <div style={styles.dlText}>download Microsoft Azure configuration instructions</div>\n                                <img src=\"../images/pdf-icon.png\" alt=\"offce 365 setup guide\" style={styles.manualImage}/></a>\n                        </div>\n                    </Grid>\n                    <Grid item xs={1} />\n\n                    <Grid item xs={1} />\n                    <Grid item xs={5}>\n                        <TextField\n                            placeholder=\"client id\"\n                            label=\"client id\"\n                            value={this.state.clientId}\n                            onChange={(event) => {this.change_callback({clientId: event.target.value})}}\n                            style={styles.textField}\n                        />\n                    </Grid>\n                    <Grid item xs={5}>\n                        <TextField\n                            placeholder=\"client secret\"\n                            label=\"client secret\"\n                            value={this.state.clientSecret}\n                            onChange={(event) => {this.change_callback({clientSecret: event.target.value})}}\n                            style={styles.textField}\n                        />\n                    </Grid>\n                    <Grid item xs={1} />\n\n                    <Grid item xs={1} />\n                    <Grid item xs={5}>\n                        <TextField\n                            placeholder=\"redirect url: the SimSage interface url to return-to after MS sign-in completes.\"\n                            label=\"redirect url\"\n                            value={this.state.redirectUrl}\n                            onChange={(event) => {this.change_callback({redirectUrl: event.target.value})}}\n                            style={styles.textField}\n                        />\n                    </Grid>\n                    <Grid item xs={6} />\n\n\n                    <Grid item xs={1} />\n                    <Grid item xs={5}>\n                        <div style={{float: 'left'}} title=\"Check this box if you want OneDrive of your Office365 to be included\">\n                            <Checkbox\n                                checked={this.state.crawlOneDrive}\n                                onChange={(event) => { this.change_callback({crawlOneDrive: event.target.checked}); }}\n                                value=\"enable OneDrive?\"\n                                inputProps={{\n                                    'aria-label': 'primary checkbox',\n                                }}\n                            />\n                            enable OneDrive?\n                        </div>\n                    </Grid>\n                    <Grid item xs={5}>\n                        <div style={{float: 'left'}} title=\"Check this box if you want ALL of OneDrive to be included\">\n                            <Checkbox\n                                checked={this.state.crawlAllOfOneDrive}\n                                disabled={!this.state.crawlOneDrive}\n                                onChange={(event) => { this.change_callback({crawlAllOfOneDrive: event.target.checked}); }}\n                                value=\"crawl all of OneDrive?\"\n                                inputProps={{\n                                    'aria-label': 'primary checkbox',\n                                }}\n                            />\n                            crawl all of OneDrive?\n                        </div>\n                    </Grid>\n                    <Grid item xs={1} />\n\n                    <Grid item xs={1} />\n                    <Grid item xs={10}>\n                        <TextField\n                            placeholder=\"specific one-drive accounts (comma separated email addresses)\"\n                            label=\"specific one-drive accounts (comma separated email addresses)\"\n                            disabled={this.state.crawlAllOfOneDrive || !this.state.crawlOneDrive}\n                            variant=\"outlined\"\n                            multiline={true}\n                            rows={2}\n                            value={this.state.oneDriveUsersToCrawl}\n                            onChange={(event) => {this.change_callback({oneDriveUsersToCrawl: event.target.value})}}\n                            style={styles.textField}\n                        />\n                    </Grid>\n                    <Grid item xs={1} />\n\n\n                    <Grid item xs={1} />\n                    <Grid item xs={5}>\n                        <div style={{float: 'left'}} title=\"Check this box if you want SharePoint of your Office365 to be included\">\n                            <Checkbox\n                                checked={this.state.crawlSharePoint}\n                                onChange={(event) => { this.change_callback({crawlSharePoint: event.target.checked}); }}\n                                value=\"enable SharePoint indexing?\"\n                                inputProps={{\n                                    'aria-label': 'primary checkbox',\n                                }}\n                            />\n                            enable SharePoint indexing?\n                        </div>\n                    </Grid>\n                    <Grid item xs={5}>\n                        <div style={{float: 'left'}} title=\"Check this box if you want the root SharePoint site to be indexed\">\n                            <Checkbox\n                                checked={this.state.crawlRootSite}\n                                disabled={!this.state.crawlSharePoint}\n                                onChange={(event) => { this.change_callback({crawlRootSite: event.target.checked}); }}\n                                value=\"crawl SharePoint root site?\"\n                                inputProps={{\n                                    'aria-label': 'primary checkbox',\n                                }}\n                            />\n                            crawl SharePoint root site?\n                        </div>\n                    </Grid>\n                    <Grid item xs={1} />\n\n                    <Grid item xs={1} />\n                    <Grid item xs={10}>\n                        <TextField\n                            placeholder=\"other SharePoint sites (comma separated ids)\"\n                            label=\"other SharePoint sites (comma separated ids)\"\n                            disabled={!this.state.crawlSharePoint}\n                            variant=\"outlined\"\n                            multiline={true}\n                            rows={2}\n                            value={this.state.sharePointSitesToCrawl}\n                            onChange={(event) => {this.change_callback({sharePointSitesToCrawl: event.target.value})}}\n                            style={styles.textField}\n                        />\n                    </Grid>\n                    <Grid item xs={1} />\n\n                    <Grid item xs={1} />\n                    <Grid item xs={5}>\n                        <div style={{float: 'left'}} title=\"Check this box if you want Exchange of your Office365 to be included\">\n                            <Checkbox\n                                checked={this.state.crawlExchange}\n                                onChange={(event) => { this.change_callback({crawlExchange: event.target.checked}); }}\n                                value=\"enable Exchange?\"\n                                inputProps={{\n                                    'aria-label': 'primary checkbox',\n                                }}\n                            />\n                            enable Exchange?\n                        </div>\n                    </Grid>\n                    <Grid item xs={5}>\n                        <div style={{float: 'left'}} title=\"Check this box if you want ALL of Exchange to be included\">\n                            <Checkbox\n                                checked={this.state.crawlAllOfExchange}\n                                disabled={!this.state.crawlExchange}\n                                onChange={(event) => { this.change_callback({crawlAllOfExchange: event.target.checked}); }}\n                                value=\"crawl all of Exchange?\"\n                                inputProps={{\n                                    'aria-label': 'primary checkbox',\n                                }}\n                            />\n                            crawl all of Exchange?\n                        </div>\n                    </Grid>\n                    <Grid item xs={1} />\n\n                    <Grid item xs={1} />\n                    <Grid item xs={10}>\n                        <TextField\n                            placeholder=\"specific exchange accounts (comma separated email addresses)\"\n                            label=\"specific exchange accounts (comma separated email addresses)\"\n                            disabled={this.state.crawlAllOfExchange || !this.state.crawlExchange}\n                            variant=\"outlined\"\n                            multiline={true}\n                            rows={2}\n                            value={this.state.exchangeUsersToCrawl}\n                            onChange={(event) => {this.change_callback({exchangeUsersToCrawl: event.target.value})}}\n                            style={styles.textField}\n                        />\n                    </Grid>\n                    <Grid item xs={1} />\n\n                </Grid>\n\n            </div>\n        );\n    }\n}\n\nexport default CrawlerOffice365;\n","import React, {Component} from 'react';\n\nimport TextField from '@material-ui/core/TextField';\n\nimport Api from '../common/api';\n\n\nconst styles = {\n    formContent: {\n        marginTop: '20px',\n        marginLeft: '20px',\n    },\n    textField: {\n        marginRight: '10px',\n        width: '700px',\n    },\n    dlText: {\n        marginTop: '-2px',\n        width: '150px',\n        float: 'left',\n    },\n    manualBox: {\n        float: 'right',\n        marginRight: '100px',\n    },\n    manualImage: {\n        float: 'left',\n        width: '40px',\n    },\n};\n\n\nexport class CrawlerDropbox extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            has_error: false,\n\n            onSave: props.onSave,\n            onError: props.onError,\n\n            // dropbox properties\n            clientToken: props.clientToken ? props.clientToken : '',\n            folderList: props.folderList ? props.folderList : '',\n            specific_json: props.specific_json,\n        };\n\n    }\n    componentWillUnmount() {\n    }\n    componentDidCatch(error, info) {\n        this.setState({ has_error: true });\n        console.log(error, info);\n    }\n    UNSAFE_componentWillReceiveProps(nextProps) {\n        // see if we have data to start this dialog\n        if (nextProps !== null) {\n            this.setState(this.construct_data({tenantId: nextProps.tenantId,\n                clientToken: Api.defined(nextProps.clientToken) ? nextProps.clientToken : '',\n                folderList: Api.defined(nextProps.folderList) ? nextProps.folderList : '',\n                specific_json: nextProps.specific_json,\n                onSave: nextProps.onSave,\n                onError: nextProps.onError,\n            }));\n        }\n    }\n    construct_data(data) {\n        return {\n            ...this.state.specific_json,\n            clientToken: Api.defined(data.clientToken) ? data.clientToken : this.state.clientToken,\n            folderList: Api.defined(data.folderList) ? data.folderList : this.state.folderList,\n        };\n    }\n    change_callback(data) {\n        this.setState(data);\n        if (this.state.onSave) {\n            const c_data = this.construct_data(data);\n            this.state.onSave(c_data);\n        }\n    }\n    render() {\n        if (this.state.has_error) {\n            return <h1>crawler-dropbox.js: Something went wrong.</h1>;\n        }\n        return (\n            <div style={styles.formContent}>\n                <TextField\n                    placeholder=\"client token\"\n                    label=\"client token\"\n                    value={this.state.clientToken}\n                    onChange={(event) => {this.change_callback({clientToken: event.target.value})}}\n                    style={styles.textField}\n                />\n\n                <div style={styles.manualBox}>\n                    <a href=\"../resources/simsage-dropbox-setup.pdf\" id=\"dlDropbox\" target=\"_blank\" title=\"download the SimSage Dropbox setup guide\">\n                        <div style={styles.dlText}>download Dropbox configuration instructions</div>\n                        <img src=\"../images/pdf-icon.png\" alt=\"dropbox setup guide\" style={styles.manualImage}/></a>\n                </div>\n\n                <br />\n                <br />\n\n                <TextField\n                    placeholder=\"specific folders to crawl (separated by commas), leave empty to crawl all.\"\n                    label=\"specific folders to crawl (separated by commas), leave empty to crawl all.\"\n                    multiline={true}\n                    rows={5}\n                    value={this.state.folderList}\n                    onChange={(event) => {this.change_callback({folderList: event.target.value})}}\n                    style={styles.textField}\n                />\n                <br />\n\n            </div>\n        );\n    }\n}\n\nexport default CrawlerDropbox;\n","import React from 'react';\n\nconst styles = {\n    uploadContainer: {\n        float: 'left',\n        width: '90%',\n        minWidth: '90%',\n        padding: '1px',\n        marginLeft: '10px',\n        background: 'white',\n        display: 'inline-block',\n        fontWeight: 700,\n        fontSize: '10pt',\n        cursor: 'pointer',\n    },\n    formWidth: {\n        marginTop: '-20px',\n        float: 'left',\n    },\n    uploadControl: {\n        marginTop: '10px',\n        float: 'left',\n    },\n    imageButton: {\n        float: 'left',\n        marginLeft: '10px',\n        paddingTop: '10px',\n        color: '#888',\n        cursor: 'pointer',\n    },\n    restoreImage: {\n        width: '25px',\n    },\n    busyImage: {\n        width: '28px',\n        height: '28px',\n        marginTop: '-10px',\n        float: 'left',\n    },\n    uploadInput: {\n        float: 'left',\n    },\n    uploadWheel: {\n        marginLeft: '5px',\n        marginTop: '14px',\n        height: '28px',\n        float: 'left',\n    },\n};\n\nexport class RestoreWPArchive extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            filename: '',\n            fileType: '',\n            data: '',\n            organisationId: props.organisationId,\n            kbId: props.kbId,\n            sourceId: props.sourceId,\n            onError: props.onError,\n        };\n    }\n\n    UNSAFE_componentWillReceiveProps(nextProps) {\n        this.setState({\n            organisationId: nextProps.organisationId,\n            kbId: nextProps.kbId,\n            sourceId: nextProps.sourceId,\n            onError: nextProps.onError,\n        });\n    }\n\n    _handleImageChange(e) {\n        e.preventDefault();\n\n        const self = this;\n        const reader = new FileReader();\n        const file = e.target.files[0];\n        const filename = file['name'];\n        const fileType = file['type'];\n\n        reader.onloadend = () => {\n            self.setState({\n                filename: filename,\n                fileType: fileType,\n                data: reader.result\n            });\n        };\n        reader.readAsDataURL(file)\n    }\n\n    upload() {\n        if (this.state.data) {\n            const payload = {\n                organisationId: this.state.organisationId,\n                kbId: this.state.kbId,\n                sid: \"\",\n                sourceId: this.state.sourceId,\n                data: this.state.data,\n            };\n            if (this.props.doUpload) {\n                this.props.doUpload(payload);\n            }\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <form onSubmit={(e) => this._handleSubmit(e)} style={styles.uploadContainer}>\n                    <div style={styles.formWidth}>\n                        <input style={styles.uploadControl}\n                               type=\"file\"\n                               onChange={(e) => this._handleImageChange(e)}/>\n                        {\n                            this.state.data && this.state.data.length > 0 && this.state.fileType === \"application/zip\" &&\n                            <span style={styles.imageButton} onClick={() => this.upload()}><img\n                                style={styles.restoreImage} src=\"../images/restore.svg\"\n                                title={\"Click here to upload WordPress Archive \\\"\" + this.state.filename + \"\\\"\"}\n                                alt=\"restore data from file\"/></span>\n                        }\n                    </div>\n                </form>\n            </div>\n        )\n    }\n}\n\nexport default RestoreWPArchive;\n","import React, {Component} from 'react';\nimport Button from \"@material-ui/core/Button\";\nimport Comms from \"../common/comms\";\nimport RestoreWPArchive from \"../common/restore-wp-archive\";\n\nconst styles = {\n    formContent: {\n        marginTop: '50px',\n        marginLeft: '50px',\n        fontSize: '0.9em',\n    },\n    exportWP: {\n        marginTop: '50px',\n    },\n    exportButton: {\n        marginTop: '10px',\n    },\n    importWP: {\n        marginTop: '50px',\n        float: 'left',\n    },\n    importText: {\n        marginBottom: '20px',\n    },\n    restoreWP: {\n        marginTop: '50px',\n    }\n};\n\n\nexport class CrawlerWordpress extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            has_error: false,\n            organisation_id: props.organisation_id,\n            kb_id: props.kb_id,\n            source_id: props.source_id,\n            onSave: props.onSave,\n            onError: props.onError,\n        };\n\n    }\n    componentWillUnmount() {\n    }\n    componentDidCatch(error, info) {\n        this.setState({ has_error: true });\n        console.log(error, info);\n    }\n    UNSAFE_componentWillReceiveProps(nextProps) {\n        // see if we have data to start this dialog\n        if (nextProps !== null) {\n            this.setState({\n                onSave: nextProps.onSave,\n                onError: nextProps.onError,\n            });\n        }\n    }\n    change_callback(data) {\n        this.setState(data);\n        if (this.state.onSave) {\n            // dummy value in order to save\n            this.state.onSave({crawlerType: \"wordpress\"});\n        }\n    }\n    exportArchive() {\n        window.open(Comms.get_export_archive_url(this.state.organisation_id, this.state.kb_id, this.state.source_id), '_blank');\n    }\n    restore(data) {\n        if (data && data.data && data.data.length > 0) {\n            // sid will be set by wpUploadArchive\n            this.props.wpUploadArchive({\"organisationId\": this.state.organisation_id,\n                \"kbId\": this.state.kb_id, \"sid\": \"\", \"sourceId\": this.state.source_id, \"data\": data.data});\n        }\n    }\n    render() {\n        if (this.state.has_error) {\n            return <h1>crawler-wordpress.js: Something went wrong.</h1>;\n        }\n        return (\n            <div style={styles.formContent}>\n                The WordPress crawler is an external entity controlled by the SimSage WordPress plugin.<br/>\n                As such there are no properties to configure here, nor is there a schedule for SimSage to work to.<br/><br/>\n\n                {this.state.source_id > 0 &&\n                    <div style={styles.exportWP}>\n                        <div>export the contents of this source as a WordPress GZip Archive</div>\n                        <Button variant=\"contained\" color=\"secondary\" style={styles.exportButton}\n                                onClick={() => this.exportArchive()}>Export WordPress Archive</Button>\n                    </div>\n                }\n\n                {this.state.source_id > 0 &&\n                    <div style={styles.importWP}>\n                        <div style={styles.importText}>import the contents of  WordPress GZip Archive into this source</div>\n                        <RestoreWPArchive doUpload={(data) => this.restore(data)}\n                                          organisationId={this.state.organisation_id}\n                                          kbId={this.state.kb_id}\n                                          sourceId={this.state.source_id}\n                                          onError={(err) => this.props.setError(\"Error\", err)} />\n                    </div>\n                }\n\n            </div>\n        );\n    }\n}\n\nexport default CrawlerWordpress;\n","import React, {Component} from 'react';\n\nimport TextField from '@material-ui/core/TextField';\n\nimport Api from '../common/api';\nimport Grid from \"@material-ui/core/Grid\";\n\n\nconst styles = {\n    formContent: {\n        marginTop: '20px',\n        marginLeft: '20px',\n        width: '95%',\n    },\n    textField: {\n        width: '100%',\n    },\n    dlText: {\n        marginTop: '-2px',\n        width: '250px',\n        float: 'left',\n    },\n    manualBox: {\n        width: '100%',\n    },\n    manualImage: {\n        float: 'left',\n        width: '40px',\n    },\n};\n\n\nexport class CrawlerGDrive extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            has_error: false,\n\n            onSave: props.onSave,\n            onError: props.onError,\n\n            // Google-drive properties\n            gdrive_projectId: props.gdrive_projectId ? props.gdrive_projectId : '',\n            gdrive_clientId: props.gdrive_clientId ? props.gdrive_clientId : '',\n            gdrive_clientSecret: props.gdrive_clientSecret ? props.gdrive_clientSecret : '',\n            gdrive_clientName: props.gdrive_clientName ? props.gdrive_clientName : '',\n            gdrive_clientPort: props.gdrive_clientPort ? props.gdrive_clientPort : '',\n            specific_json: props.specific_json,\n        };\n\n    }\n    componentWillUnmount() {\n    }\n    componentDidCatch(error, info) {\n        this.setState({ has_error: true });\n        console.log(error, info);\n    }\n    UNSAFE_componentWillReceiveProps(nextProps) {\n        // see if we have data to start this dialog\n        if (nextProps !== null) {\n            this.setState(this.construct_data({tenantId: nextProps.tenantId,\n                gdrive_projectId: Api.defined(nextProps.gdrive_projectId) ? nextProps.gdrive_projectId : '',\n                gdrive_clientId: Api.defined(nextProps.gdrive_clientId) ? nextProps.gdrive_clientId : '',\n                gdrive_clientSecret: Api.defined(nextProps.gdrive_clientSecret) ? nextProps.gdrive_clientSecret : '',\n                gdrive_clientName: Api.defined(nextProps.gdrive_clientName) ? nextProps.gdrive_clientName : '',\n                gdrive_clientPort: Api.defined(nextProps.gdrive_clientPort) ? nextProps.gdrive_clientPort : '',\n                specific_json: nextProps.specific_json,\n                onSave: nextProps.onSave,\n                onError: nextProps.onError,\n            }));\n        }\n    }\n    construct_data(data) {\n        return {\n            ...this.state.specific_json,\n            gdrive_projectId: Api.defined(data.gdrive_projectId) ? data.gdrive_projectId : this.state.gdrive_projectId,\n            gdrive_clientId: Api.defined(data.gdrive_clientId) ? data.gdrive_clientId : this.state.gdrive_clientId,\n            gdrive_clientSecret: Api.defined(data.gdrive_clientSecret) ? data.gdrive_clientSecret : this.state.gdrive_clientSecret,\n            gdrive_clientName: Api.defined(data.gdrive_clientName) ? data.gdrive_clientName : this.state.gdrive_clientName,\n            gdrive_clientPort: Api.defined(data.gdrive_clientPort) ? data.gdrive_clientPort : this.state.gdrive_clientPort,\n        };\n    }\n    change_callback(data) {\n        this.setState(data);\n        if (this.state.onSave) {\n            const c_data = this.construct_data(data);\n            this.state.onSave(c_data);\n        }\n    }\n    render() {\n        if (this.state.has_error) {\n            return <h1>crawler-gdrive.js: Something went wrong.</h1>;\n        }\n        return (\n            <div style={styles.formContent}>\n\n                <Grid container spacing={2}>\n\n                    <Grid item xs={1} />\n                    <Grid item xs={7}>\n                        <TextField\n                            placeholder=\"client Id\"\n                            label=\"client Id\"\n                            variant=\"outlined\"\n                            value={this.state.gdrive_clientId}\n                            onChange={(event) => {this.change_callback({gdrive_clientId: event.target.value})}}\n                            style={styles.textField}\n                        />\n                    </Grid>\n                    <Grid item xs={3}>\n                        <div style={styles.manualBox}>\n                            <a href=\"../resources/simsage-google-drive-setup.pdf\" id=\"dlGDrive\" target=\"_blank\" title=\"download the SimSage Google-drive setup guide\">\n                                <div style={styles.dlText}>download Google-drive configuration instructions</div>\n                                <img src=\"../images/pdf-icon.png\" alt=\"google-drive setup guide\" style={styles.manualImage}/>\n                            </a>\n                        </div>\n                    </Grid>\n                    <Grid item xs={1} />\n\n                    <Grid item xs={1} />\n                    <Grid item xs={5}>\n                        <TextField\n                            placeholder=\"client Secret\"\n                            label=\"client Secret\"\n                            variant=\"outlined\"\n                            value={this.state.gdrive_clientSecret}\n                            onChange={(event) => {this.change_callback({gdrive_clientSecret: event.target.value})}}\n                            style={styles.textField}\n                        />\n                    </Grid>\n                    <Grid item xs={5}>\n                        <TextField\n                            placeholder=\"project Id\"\n                            label=\"project Id\"\n                            variant=\"outlined\"\n                            value={this.state.gdrive_projectId}\n                            onChange={(event) => {this.change_callback({gdrive_projectId: event.target.value})}}\n                            style={styles.textField}\n                        />\n                    </Grid>\n                    <Grid item xs={1} />\n\n\n                    <Grid item xs={1} />\n                    <Grid item xs={5}>\n                        <TextField\n                            placeholder=\"client Name\"\n                            label=\"client Name\"\n                            variant=\"outlined\"\n                            value={this.state.gdrive_clientName}\n                            onChange={(event) => {this.change_callback({gdrive_clientName: event.target.value})}}\n                            style={styles.textField}\n                        />\n                    </Grid>\n                    <Grid item xs={5}>\n                        <TextField\n                            placeholder=\"local web port\"\n                            label=\"local web port\"\n                            variant=\"outlined\"\n                            value={this.state.gdrive_clientPort}\n                            onChange={(event) => {this.change_callback({gdrive_clientPort: event.target.value})}}\n                            style={styles.textField}\n                        />\n                    </Grid>\n                    <Grid item xs={1} />\n\n\n                </Grid>\n\n            </div>\n        );\n    }\n}\n\nexport default CrawlerGDrive;\n","import React, {Component} from 'react';\n\nimport TextField from '@material-ui/core/TextField';\n\nimport Api from '../common/api';\nimport Chip from \"@material-ui/core/Chip\";\nimport Grid from \"@material-ui/core/Grid\";\n\n\nconst styles = {\n    formContent: {\n        marginTop: '20px',\n        marginLeft: '20px',\n        width: '90%',\n    },\n    textField: {\n        width: '100%',\n    },\n    dlText: {\n        marginTop: '-2px',\n        width: '250px',\n        float: 'left',\n    },\n    manualBox: {\n        width: '100%',\n    },\n    manualImage: {\n        float: 'left',\n        width: '40px',\n    },\n    roleBlock: {\n        padding: '5px',\n        border: '1px solid #888',\n        borderRadius: '4px',\n    },\n    roleLabel: {\n        fontSize: '0.8em',\n        color: '#aaa',\n    },\n    roleArea: {\n        padding: '20px',\n    },\n    roleChip: {\n        margin: '2px',\n    },\n};\n\n\nexport class CrawlerNFS extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            has_error: false,\n\n            onSave: props.onSave,\n            onError: props.onError,\n\n            // nfs drive properties\n            nfs_local_folder: props.nfs_local_folder ? props.nfs_local_folder : '',\n            nfs_userList: Api.defined(props.nfs_userList) ? props.nfs_userList : '',\n            specific_json: props.specific_json,\n        };\n\n    }\n    componentWillUnmount() {\n    }\n    componentDidCatch(error, info) {\n        this.setState({ has_error: true });\n        console.log(error, info);\n    }\n    UNSAFE_componentWillReceiveProps(nextProps) {\n        // see if we have data to start this dialog\n        if (nextProps !== null) {\n            this.setState({\n                nfs_local_folder: Api.defined(nextProps.nfs_local_folder) ? nextProps.nfs_local_folder : '',\n                nfs_userList: Api.defined(nextProps.nfs_userList) ? nextProps.nfs_userList : '',\n                specific_json: nextProps.specific_json,\n                onSave: nextProps.onSave,\n                onError: nextProps.onError,\n            });\n        }\n    }\n    construct_data(data) {\n        return {\n            ...this.state.specific_json,\n            nfs_local_folder: Api.defined(data.nfs_local_folder) ? data.nfs_local_folder : this.state.nfs_local_folder,\n            nfs_userList: Api.defined(data.nfs_userList) ? data.nfs_userList : this.state.nfs_userList,\n        };\n    }\n    change_callback(data) {\n        this.setState(data);\n        if (this.state.onSave) {\n            const c_data = this.construct_data(data);\n            this.state.onSave(c_data);\n        }\n    }\n    getSelectedUsers() {\n        const selectedUsers = {};\n        for (const user_id of this.state.nfs_userList.split(\",\")) {\n            if (user_id) {\n                selectedUsers[user_id] = true;\n            }\n        }\n        const user_list = [];\n        for (const user of this.props.availableUserList) {\n            if (user.id && selectedUsers[user.id]) {\n                user_list.push(user);\n            }\n        }\n        return user_list;\n    }\n    getAvailableUsers() {\n        const selectedUsers = {};\n        for (const user_id of this.state.nfs_userList.split(\",\")) {\n            if (user_id) {\n                selectedUsers[user_id] = true;\n            }\n        }\n        const user_list = [];\n        for (const user of this.props.availableUserList) {\n            if (user.id && !selectedUsers[user.id]) {\n                user_list.push(user);\n            }\n        }\n        return user_list;\n    }\n    removeUser(removeUser) {\n        const new_list = [];\n        for (const user_id of this.state.nfs_userList.split(\",\")) {\n            if (user_id && user_id !== removeUser.id) {\n                new_list.push(user_id);\n            }\n        }\n        this.change_callback({nfs_userList: new_list.join()});\n    }\n    addUser(user) {\n        let new_list = this.state.nfs_userList;\n        if (new_list.length > 0) {\n            new_list = new_list + ',' + user.id\n        } else {\n            new_list = user.id\n        }\n        this.change_callback({nfs_userList: new_list});\n    }\n    render() {\n        if (this.state.has_error) {\n            return <h1>crawler-nfs.js: Something went wrong.</h1>;\n        }\n        return (\n            <div style={styles.formContent}>\n\n                <Grid container spacing={2}>\n\n                    <Grid item xs={1} />\n                    <Grid item xs={10}>\n                        <TextField\n                            placeholder=\"local folder\"\n                            label=\"Local Folder\"\n                            variant=\"outlined\"\n                            value={this.state.nfs_local_folder}\n                            onChange={(event) => {this.change_callback({nfs_local_folder: event.target.value})}}\n                            style={styles.textField}\n                        />\n                    </Grid>\n                    <Grid item xs={1} />\n\n                    <Grid item xs={1} />\n                    <Grid item xs={5}>\n                        <div style={styles.roleBlock}>\n                            <div style={styles.roleLabel}>users with access</div>\n                            <div style={styles.roleArea}>\n                                {\n                                    this.getSelectedUsers().map((user) => {\n                                        return (<Chip key={user.id} color=\"secondary\"\n                                                      style={styles.roleChip}\n                                                      onClick={() => this.removeUser(user)}\n                                                      label={user.firstName + ' ' + user.surname} variant=\"outlined\" />)\n                                    })\n                                }\n                            </div>\n                        </div>\n                    </Grid>\n                    <Grid item xs={5}>\n                        <div style={styles.roleBlock}>\n                            <div style={styles.roleLabel}>available users</div>\n                            <div style={styles.roleArea}>\n                                {\n                                    this.getAvailableUsers().map((user) => {\n                                        return (<Chip key={user.id} color=\"primary\"\n                                                      style={styles.roleChip}\n                                                      onClick={() => this.addUser(user)}\n                                                      label={user.firstName + ' ' + user.surname} variant=\"outlined\" />)\n                                    })\n                                }\n                            </div>\n                        </div>\n                    </Grid>\n                    <Grid item xs={1} />\n\n                </Grid>\n\n            </div>\n        );\n    }\n}\n\nexport default CrawlerNFS;\n","import React, {Component} from 'react';\n\nimport TextField from '@material-ui/core/TextField';\nimport Grid from \"@material-ui/core/Grid\";\nimport {Api} from \"../common/api\";\n\n\nconst styles = {\n    formContent: {\n        marginTop: '20px',\n        width: '98%',\n    },\n    fieldWidth: {\n        width: '100%',\n    },\n    dbType: {\n        float: 'right',\n        marginTop: '6px',\n        marginRight: '10px',\n    }\n};\n\n\nexport class CrawlerRestFull extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            has_error: false,\n\n            onSave: props.onSave,\n            onError: props.onError,\n\n            // database specific\n            pk: props.pk ? props.pk : '',\n            url: props.url ? props.url : '',\n            template: props.template ? props.template : '',\n            text: props.text ? props.text : '',\n            content_url: props.content_url ? props.content_url : '',\n            customRender: props.customRender ? props.customRender : false,\n\n            specific_json: props.specific_json,\n        };\n\n    }\n    componentDidMount() {\n    }\n    componentWillUnmount() {\n    }\n    componentDidCatch(error, info) {\n        this.setState({ has_error: true });\n        console.log(error, info);\n    }\n    UNSAFE_componentWillReceiveProps(nextProps) {\n        // see if we have data to start this dialog\n        if (nextProps !== null) {\n            this.setState(this.construct_data({\n                pk: nextProps.pk,\n                url: nextProps.url,\n                template: nextProps.template,\n                text: nextProps.text,\n                content_url: nextProps.content_url ? nextProps.content_url : '',\n                customRender: nextProps.customRender ? nextProps.customRender : false,\n\n                specific_json: nextProps.specific_json,\n\n                onSave: nextProps.onSave,\n                onError: nextProps.onError,\n            }));\n        }\n    }\n    construct_data(data) {\n        return {\n            ...this.state.specific_json,\n            url: Api.defined(data.url) ? data.url : this.state.url,\n            template: Api.defined(data.template) ? data.template : this.state.template,\n            text: Api.defined(data.text) ? data.text : this.state.text,\n            content_url: Api.defined(data.content_url) ? data.content_url : this.state.content_url,\n            pk: Api.defined(data.pk) ? data.pk : this.state.pk,\n        };\n    }\n    change_callback(data) {\n        this.setState(data);\n        if (this.state.onSave) {\n            this.state.onSave(this.construct_data(data));\n        }\n    }\n    render() {\n        if (this.state.has_error) {\n            return <h1>crawler-restfull.js: Something went wrong.</h1>;\n        }\n        return (\n            <div style={styles.formContent}>\n\n                <Grid container spacing={1}>\n\n                    <Grid item xs={1} />\n                    <Grid item xs={10}>\n                        <TextField\n                            placeholder=\"url\"\n                            label=\"url\"\n                            variant=\"outlined\"\n                            value={this.state.url}\n                            onChange={(event) => {this.change_callback({url: event.target.value})}}\n                            style={styles.fieldWidth}\n                        />\n                    </Grid>\n                    <Grid item xs={1} />\n\n                    <Grid item xs={1} />\n                    <Grid item xs={5}>\n                        <TextField\n                            placeholder=\"the name of the primary key in the record\"\n                            label=\"primary key name\"\n                            variant=\"outlined\"\n                            value={this.state.pk}\n                            onChange={(event) => {this.change_callback({pk: event.target.value})}}\n                            style={styles.fieldWidth}\n                        />\n                    </Grid>\n                    <Grid item xs={6} />\n\n                    <Grid item xs={1} />\n                    <Grid item xs={10}>\n                        <TextField\n                            placeholder=\"document http/https reference SQL fields in square brackets [FIELD-NAME]\"\n                            label=\"document http/https reference (non custom-renders)\"\n                            variant=\"outlined\"\n                            multiline={false}\n                            disabled={this.state.customRender}\n                            value={this.state.content_url}\n                            onChange={(event) => {this.change_callback({content_url: event.target.value})}}\n                            style={styles.fieldWidth}\n                        />\n                    </Grid>\n                    <Grid item xs={1} />\n\n                    <Grid item xs={1} />\n                    <Grid item xs={10}>\n                        <TextField\n                            placeholder=\"REST text index template, an text template referencing REST fields in square brackets [FIELD-NAME]\"\n                            label=\"REST text index template\"\n                            variant=\"outlined\"\n                            disabled={!this.state.customRender}\n                            multiline={true}\n                            rows={7}\n                            value={this.state.text}\n                            onChange={(event) => {this.change_callback({text: event.target.value})}}\n                            style={styles.fieldWidth}\n                        />\n                    </Grid>\n                    <Grid item xs={1} />\n\n                    <Grid item xs={1} />\n                    <Grid item xs={10}>\n                        <TextField\n                            placeholder=\"REST html render template, an html template referencing REST fields in square brackets [FIELD-NAME]\"\n                            label=\"REST html render template\"\n                            variant=\"outlined\"\n                            disabled={!this.state.customRender}\n                            multiline={true}\n                            rows={7}\n                            value={this.state.template}\n                            onChange={(event) => {this.change_callback({template: event.target.value})}}\n                            style={styles.fieldWidth}\n                        />\n                    </Grid>\n                    <Grid item xs={1} />\n\n                </Grid>\n            </div>\n        );\n    }\n}\n\nexport default CrawlerRestFull;\n","import React, {Component} from 'react';\n\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport {Api} from \"../common/api\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\n\n// valid metadata drop-down values\nconst metadata_list = [\n    {\"key\": \"none\", \"display\": null, \"field1\": null, \"db1\": \"\", \"db2\":\"\", \"sort\": \"\", \"sort_default\": \"\", \"sort_asc\": \"\", \"sort_desc\": \"\"},\n    {\"key\": \"author list\", \"display\": \"\", \"field1\": \"\", \"db1\": \"\", \"db2\":\"\", \"sort\": \"\", \"sort_default\": \"\", \"sort_asc\": \"\", \"sort_desc\": \"\"},\n    {\"key\": \"created date range\", \"display\": \"\", \"field1\": \"\", \"db1\": \"\", \"db2\":\"\", \"sort\": \"false\", \"sort_default\": \"\", \"sort_asc\": \"\", \"sort_desc\": \"\"},\n    {\"key\": \"last modified date ranges\", \"display\": \"\", \"field1\": \"\", \"db1\": \"\", \"db2\":\"\", \"sort\": \"false\", \"sort_default\": \"\", \"sort_asc\": \"\", \"sort_desc\": \"\"},\n    {\"key\": \"document type\", \"display\": \"\", \"field1\": \"\", \"db1\": \"\", \"db2\":\"\", \"sort\": \"\", \"sort_default\": \"\", \"sort_asc\": \"\", \"sort_desc\": \"\"},\n    {\"key\": \"people list\", \"display\": \"\", \"field1\": \"\", \"db1\": \"\", \"db2\":\"\", \"sort\": \"\", \"sort_default\": \"\", \"sort_asc\": \"\", \"sort_desc\": \"\"},\n    {\"key\": \"location list\", \"display\": \"\", \"field1\": \"\", \"db1\": \"\", \"db2\":\"\", \"sort\": \"\", \"sort_default\": \"\", \"sort_asc\": \"\", \"sort_desc\": \"\"},\n    {\"key\": \"money range\", \"display\": \"\", \"field1\": \"\", \"db1\": \"\", \"db2\":\"\", \"sort\": \"false\", \"sort_default\": \"\", \"sort_asc\": \"\", \"sort_desc\": \"\"},\n    {\"key\": \"number range\", \"display\": \"\", \"field1\": \"\", \"db1\": \"\", \"db2\":\"\", \"sort\": \"false\", \"sort_default\": \"\", \"sort_asc\": \"\", \"sort_desc\": \"\"},\n];\n\n\nconst styles = {\n    formContent: {\n        marginTop: '20px',\n        width: '98%',\n    },\n    text: {\n        border: '1px solid #808080',\n        borderRadius: '4px',\n        height: '32px',\n        padding: '4px',\n    },\n    instructionLabel: {\n        fontSize: '10px',\n        marginLeft: '20px',\n    },\n    table: {\n        marginTop: '10px',\n        marginLeft: '20px',\n        borderSpacing: '0',\n        border: '1px solid #aaaaaa',\n        borderRadius: '5px',\n    },\n    tableHead: {\n        backgroundColor: '#aaaaaa',\n        color: '#ffffff',\n    },\n    db_field: {\n        verticalAlign: 'top',\n        width: '250px',\n    },\n    display: {\n        width: '250px',\n    },\n    displayFieldWidth: {\n    },\n    tdDisplayFieldWidth: {\n        verticalAlign: 'top',\n        width: '200px',\n    },\n    tdSort: {\n        verticalAlign: 'top',\n    },\n    sortLabel: {\n        fontSize: '10px',\n    },\n    tdSort2: {\n        float: 'left',\n        height: '32px',\n        marginLeft: '15px',\n    },\n    metadata_dropdown_box: {\n        marginLeft: '10px',\n        width: '220px',\n        padding: '5px',\n        verticalAlign: 'top',\n        marginTop: '8px',\n    },\n    mdDropbox: {\n        float: 'left',\n        marginLeft: '10px',\n        width: '220px',\n        padding: '5px',\n        verticalAlign: 'top',\n    },\n    metadata_field: {\n        width: '200px',\n        padding: '5px',\n    },\n    sort_field: {\n        width: '100px',\n        padding: '5px',\n    },\n    action_field: {\n        width: '100px',\n        padding: '5px',\n    },\n    metadata_dropdown: {\n        marginLeft: '5px',\n        width: '200px',\n    },\n    imageButton: {\n        padding: '10px',\n        color: '#888',\n        cursor: 'pointer',\n    },\n    addImage: {\n        width: '25px',\n        cursor: 'pointer',\n        color: \"green\",\n    },\n    deleteBox: {\n        marginTop: '-14px',\n        color: '#888',\n        float: 'left',\n        cursor: 'pointer',\n    },\n    upDownArrow: {\n        float: 'left',\n        marginTop: '-16px',\n        padding: '2px',\n        fontSize: '26px',\n        cursor: 'pointer',\n    },\n    deleteImage: {\n        width: '24px',\n    },\n    dbFieldWidth: {\n        width: '250px',\n    },\n    tdMetadataFieldName: {\n        verticalAlign: 'top',\n    },\n    mdFieldWidth: {\n        width: '200px',\n    },\n    tdAction: {\n        float: 'left',\n        marginTop: '8px',\n        verticalAlign: 'top',\n    }\n};\n\n\nexport class CrawlerMetadata extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            has_error: false,\n\n            onSave: props.onSave,\n            onError: props.onError,\n\n            // metadata set\n            specific_json: props.specific_json ? props.specific_json : {},\n        };\n\n    }\n    componentDidCatch(error, info) {\n        this.setState({ has_error: true });\n        console.log(error, info);\n    }\n    UNSAFE_componentWillReceiveProps(nextProps) {\n        // see if we have data to start this dialog\n        if (nextProps !== null) {\n            this.setState({\n                specific_json: nextProps.specific_json,\n                onSave: nextProps.onSave,\n                onError: nextProps.onError,\n            });\n        }\n    }\n    construct_data(md_list) {\n        return {\n            ...this.props.specific_json, metadata_list: Api.defined(md_list) ? md_list : this.get_md_list()\n        };\n    }\n    set_db(record, index, value) {\n        const md_list = this.get_md_list();\n        if (index >= 0 && index < md_list.length) {\n            md_list[index].db1 = value;\n            this.setState({specific_json: {...this.props.specific_json, metadata_list: md_list}});\n            if (this.state.onSave) {\n                this.state.onSave(this.construct_data(md_list));\n            }\n        }\n    }\n    set_db_extra(record, index, value) {\n        const md_list = this.get_md_list();\n        if (index >= 0 && index < md_list.length) {\n            md_list[index].db2 = value;\n            this.setState({specific_json: {...this.props.specific_json, metadata_list: md_list}});\n            if (this.state.onSave) {\n                this.state.onSave(this.construct_data(md_list));\n            }\n        }\n    }\n    set_md_type(record, index, value) {\n        const md_list = this.get_md_list();\n        if (index >= 0 && index < md_list.length) {\n            let match_item = null;\n            for (const item of metadata_list) {\n                if (item.key === value) {\n                    match_item = item;\n                    break;\n                }\n            }\n            if (match_item != null) {\n                md_list[index] = JSON.parse(JSON.stringify(match_item));\n                this.setState({specific_json: {...this.props.specific_json, metadata_list: md_list}});\n                if (this.state.onSave) {\n                    this.state.onSave(this.construct_data(md_list));\n                }\n            }\n        }\n    }\n    setDisplayName(record, index, value) {\n        const md_list = this.get_md_list();\n        if (index >= 0 && index < md_list.length) {\n            md_list[index].display = value;\n            this.setState({specific_json: {...this.props.specific_json, metadata_list: md_list}});\n            if (this.state.onSave) {\n                this.state.onSave(this.construct_data(md_list));\n            }\n        }\n    }\n    setUserMetadataName1(record, index, value) {\n        const md_list = this.get_md_list();\n        if (index >= 0 && index < md_list.length) {\n            md_list[index].field1 = value;\n            this.setState({specific_json: {...this.props.specific_json, metadata_list: md_list}});\n            if (this.state.onSave) {\n                this.state.onSave(this.construct_data(md_list));\n            }\n        }\n    }\n    setSort(record, index, value) {\n        const md_list = this.get_md_list();\n        if (index >= 0 && index < md_list.length) {\n            md_list[index].sort = value ? \"true\" : \"false\";\n            this.setState({specific_json: {...this.props.specific_json, metadata_list: md_list}});\n            if (this.state.onSave) {\n                this.state.onSave(this.construct_data(md_list));\n            }\n        }\n    }\n    setValue(record, index, field_name, value) {\n        const md_list = this.get_md_list();\n        if (index >= 0 && index < md_list.length) {\n            md_list[index][field_name] = value;\n            this.setState({specific_json: {...this.props.specific_json, metadata_list: md_list}});\n            if (this.state.onSave) {\n                this.state.onSave(this.construct_data(md_list));\n            }\n        }\n    }\n    setDefaultSort(record, index, direction, value) {\n        const md_list = this.get_md_list();\n        if (index >= 0 && index < md_list.length) {\n            md_list[index].sort_default = (value ? direction : \"\");\n            for (const i in md_list) {\n                if (\"\"+i !== \"\"+index && md_list.hasOwnProperty(i)) {\n                    md_list[i].sort_default = \"\";\n                }\n            }\n            this.setState({specific_json: {...this.props.specific_json, metadata_list: md_list}});\n            if (this.state.onSave) {\n                this.state.onSave(this.construct_data(md_list));\n            }\n        }\n    }\n    deleteMetadataItem(index) {\n        const md_list = [];\n        const i_index = '' + index\n        const existing_md_list = this.get_md_list();\n        for (let i in existing_md_list) {\n            if (i !== i_index) {\n                md_list.push(existing_md_list[i]);\n            }\n        }\n        this.setState({specific_json: {...this.props.specific_json, metadata_list: md_list}});\n        if (this.state.onSave) {\n            this.state.onSave(this.construct_data(md_list));\n        }\n    }\n    addNewMetadataMapping() {\n        const md_list = this.get_md_list();\n        md_list.push(JSON.parse(JSON.stringify(metadata_list[0]))); // add a copy of item 0\n        this.setState({specific_json: {...this.props.specific_json, metadata_list: md_list}});\n        if (this.state.onSave) {\n            this.state.onSave(this.construct_data(md_list));\n        }\n    }\n    checkMetadataName(event) {\n        // only allow valid characters to propagate for metadata names\n        if ((event.key >= 'a' && event.key <= 'z') ||\n            (event.key >= 'A' && event.key <= 'Z') ||\n            (event.key >= '0' && event.key <= '9') || event.key === '-') {\n            return true;\n        } else {\n            event.preventDefault();\n            event.stopPropagation();\n            return false;\n        }\n    }\n    move_row_up(md, index) {\n        if (index > 0) {\n            const md_list = this.get_md_list();\n            const temp = md_list[index-1];\n            md_list[index-1] = md;\n            md_list[index] = temp;\n            this.setState({specific_json: {...this.props.specific_json, metadata_list: md_list}});\n            if (this.state.onSave) {\n                this.state.onSave(this.construct_data(md_list));\n            }\n        }\n    }\n    move_row_down(md, index) {\n        const md_list = this.get_md_list();\n        if (index + 1 < md_list.length) {\n            const temp = md_list[index+1];\n            md_list[index+1] = md;\n            md_list[index] = temp;\n            this.setState({specific_json: {...this.props.specific_json, metadata_list: md_list}});\n            if (this.state.onSave) {\n                this.state.onSave(this.construct_data(md_list));\n            }\n        }\n    }\n    get_md_list() {\n        return this.state && this.state.specific_json && this.state.specific_json.metadata_list ?\n               this.state.specific_json.metadata_list : [];\n    }\n    needs_metadata_field(md) {\n        return (md.field1 !== null);\n    }\n    render() {\n        if (this.state.has_error) {\n            return <h1>crawler-metadata-mapper.js: Something went wrong.</h1>;\n        }\n        const self = this;\n        const theme = this.props.theme;\n        const num_rows = this.get_md_list().length;\n        return (\n            <div style={styles.formContent}>\n\n                <div style={styles.instructionLabel}>All rows in order of UI.  Use 'actions' arrows to re-arrange existing rows.</div>\n\n                <table style={styles.table}>\n\n                    <thead>\n                    <tr style={styles.tableHead}>\n                        <td style={styles.metadata_dropdown_box}>data-type</td>\n                        <td style={styles.display}>UI display-name</td>\n                        <td style={styles.metadata_field}>metadata name</td>\n                        <td style={styles.sort_field}>sortable</td>\n                        <td style={styles.action_field}>actions</td>\n                    </tr>\n                    </thead>\n\n                    <tbody className={this.state.theme}>\n                    <tr>\n                        <td colSpan={3}>&nbsp;</td>\n                    </tr>\n\n                    {\n                        this.get_md_list().map(function(md, index) {\n                            return (<tr key={index}>\n\n                                <td style={styles.mdDropbox}>\n                                    <Select\n                                        disableUnderline\n                                        value={md.key}\n                                        style={styles.metadata_dropdown}\n                                        title=\"select what kind of metadata field to use\"\n                                        onChange={(event) => { self.set_md_type(md, index, event.target.value) }}>\n                                        {\n                                            metadata_list.map((value, j) => {\n                                                return (<MenuItem key={j} value={value.key}>{value.key}</MenuItem>)\n                                            })\n                                        }\n                                    </Select>\n                                </td>\n\n                                <td style={styles.tdDisplayFieldWidth}>\n                                    {\n                                        md.display !== null &&\n                                        <span>\n                                            <input type=\"text\"\n                                                   className={theme}\n                                                   style={styles.text}\n                                                   placeholder=\"UI display-name\"\n                                                   title=\"name displayed in the UI for this item\"\n                                                   value={md.display}\n                                                   onChange={(event) => {self.setDisplayName(md, index, event.target.value)}}  />\n                                        </span>\n                                    }\n                                </td>\n\n\n                                <td style={styles.tdMetadataFieldName}>\n                                    {\n                                        self.needs_metadata_field(md) &&\n                                        <div style={styles.mdFieldWidth}>\n                                            <input type=\"text\"\n                                                   className={theme}\n                                                   style={styles.text}\n                                                   placeholder=\"metadata name\"\n                                                   value={md.field1}\n                                                   title=\"metadata names should only contain 0..9, a..z, and A..Z\"\n                                                   onKeyDown={(event) => {return self.checkMetadataName(event)}}\n                                                   onChange={(event) => {self.setUserMetadataName1(md, index, event.target.value)}}  />\n                                        </div>\n                                    }\n                                    { md.sort === \"true\" &&\n                                    <div>\n                                        <input type=\"text\"\n                                               placeholder=\"sort descending UI text\"\n                                               className={theme}\n                                               style={styles.text}\n                                               value={md.sort_desc}\n                                               title=\"The text to display for this field if a descending sort is selected of this type\"\n                                               onChange={(event) => {self.setValue(md, index, \"sort_desc\", event.target.value)}}  />\n                                    </div>\n                                    }\n                                    { md.sort === \"true\" &&\n                                    <div>\n                                        <input type=\"text\"\n                                               className={theme}\n                                               style={styles.text}\n                                               placeholder=\"sort ascending UI text\"\n                                               value={md.sort_asc}\n                                               title=\"The text to display for this field if an ascending sort is selected of this type\"\n                                               onChange={(event) => {self.setValue(md, index, \"sort_asc\", event.target.value)}}  />\n                                    </div>\n                                    }\n                                    {md.sort === \"true\" &&\n                                    <br></br>\n                                    }\n                                </td>\n\n                                <td style={styles.tdSort}>\n                                    {md.sort !== \"\" &&\n                                    <div style={styles.tdSort2} title=\"enable this category as an item used for sorting in the UI\">\n                                        <Checkbox\n                                            checked={md.sort === \"true\"}\n                                            onChange={(event) => {\n                                                self.setSort(md, index, event.target.checked);\n                                            }}\n                                            value=\"enable result sorting over this field?\"\n                                            inputProps={{\n                                                'aria-label': 'primary checkbox',\n                                            }}\n                                        />\n                                        <span style={styles.sortLabel}>sort</span>\n                                    </div>\n                                    }\n                                    {md.sort === \"true\" &&\n                                    <div style={styles.tdSort2} title=\"set this descending field as the default sort field for the UI\">\n                                        {'\\u2190'}\n                                        <Checkbox\n                                            checked={md.sort_default === \"desc\"}\n                                            onChange={(event) => {\n                                                self.setDefaultSort(md, index, \"desc\", event.target.checked);\n                                            }}\n                                            inputProps={{\n                                                'aria-label': 'primary checkbox',\n                                            }}\n                                        />\n                                    </div>\n                                    }\n\n                                    {md.sort === \"true\" &&\n                                    <div style={styles.tdSort2} title=\"set this ascending field as the default sort field for the UI\">\n                                        {'\\u2190'}\n                                        <Checkbox\n                                            checked={md.sort_default === \"asc\"}\n                                            onChange={(event) => {\n                                                self.setDefaultSort(md, index, \"asc\", event.target.checked);\n                                            }}\n                                            inputProps={{\n                                                'aria-label': 'primary checkbox',\n                                            }}\n                                        />\n                                    </div>\n                                    }\n                                </td>\n\n                                <td style={styles.tdAction}>\n                                    <span style={styles.deleteBox} onClick={() => self.deleteMetadataItem(index)} title=\"remove this metadata item\">\n                                        <img src={theme === 'light' ? \"../images/delete.svg\" : \"../images/delete-dark.svg\"} style={styles.deleteImage} title=\"remove this metadata mapping\" alt=\"remove this metadata mapping\"/>\n                                    </span>\n                                    {index > 0 &&\n                                    <span style={styles.upDownArrow} title=\"move row up (change UI ordering)\"\n                                          onClick={() => {\n                                              self.move_row_up(md, index)\n                                          }}>&#8679;</span>\n                                    }\n                                    {index + 1 < num_rows &&\n                                    <span style={styles.upDownArrow} title=\"move row down (change UI ordering)\"\n                                          onClick={() => {\n                                              self.move_row_down(md, index)\n                                          }}>&#8681;</span>\n                                    }\n                                </td>\n\n                            </tr>)\n                        })\n                    }\n\n                    <tr>\n                        <td colSpan={4}>&nbsp;</td>\n                    </tr>\n\n                    <tr>\n                        <td colSpan={4} />\n                        <td>\n                            <div style={styles.imageButton} onClick={() => this.addNewMetadataMapping()}><img\n                                style={styles.addImage} src={theme === 'light' ? \"../images/add.svg\" : \"../images/add-dark.svg\"} title=\"add new metadata mapping\"\n                                alt=\"add new metadata mapping\"/></div>\n                        </td>\n                    </tr>\n\n                    <tr>\n                        <td colSpan={4}>&nbsp;</td>\n                    </tr>\n\n                    </tbody>\n\n                </table>\n            </div>\n        );\n    }\n}\n\nexport default CrawlerMetadata;\n","import React, {Component} from 'react';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nimport Button from '@material-ui/core/Button';\n\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\n\nimport TimeSelect from '../common/time-select'\n\nimport CrawlerGeneral from './crawler-general'\nimport CrawlerFile from './crawler-file'\nimport CrawlerWeb from \"./crawler-web\";\nimport CrawlerDatabase from \"./crawler-database\";\nimport CrawlerMetadataMapper from \"./crawler-metadata-mapper\";\nimport CrawlerOffice365 from \"./crawler-office365\";\nimport CrawlerDropbox from \"./crawler-dropbox\";\nimport CrawlerWordpress from \"./crawler-wordpress\";\nimport CrawlerGDrive from \"./crawler-gdrive\";\nimport CrawlerNFS from \"./crawler-nfs\";\nimport CrawlerRestFull from \"./crawler-restfull\";\nimport CrawlerMetadata from \"./crawler-metadata\";\nimport Api from \"../common/api\";\n\n\nconst styles = {\n    formContent: {\n        overflowY: 'scroll',\n        height: '550px',\n    },\n    tab: {\n        backgroundColor: '#f8f8f8',\n        color: '#000',\n    },\n    tab_dark: {\n        backgroundColor: '#808080',\n        color: '#f8f8f8',\n    },\n    timeTabContent: {\n        marginLeft: '20px',\n    }\n};\n\nexport class CrawlerDialog extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            open: props.open,\n\n            onSave: props.onSave,  // save callback\n            onUpdate: props.onUpdate, // update callback\n\n            onError: props.onError,\n            error_title: props.error_title,\n            error_msg: props.error_msg,\n\n            selectedTab: 'general',\n\n            // cache\n            schedule: '',\n\n            // organisational details\n            organisation_id: props.organisation_id,\n            kb_id: props.kb_id,\n            crawler: props.crawler,\n\n            has_error: false,\n        }\n    }\n\n    componentDidCatch(error, info) {\n        this.setState({has_error: true});\n        console.log(error, info);\n    }\n\n    UNSAFE_componentWillReceiveProps(nextProps) {\n        if (nextProps !== null) {\n            this.setState({\n                open: nextProps.open,\n                title: nextProps.title,\n\n                onSave: nextProps.onSave,\n                onUpdate: nextProps.onUpdate,\n\n                onError: nextProps.onError,\n                error_title: nextProps.error_title,\n                error_msg: nextProps.error_msg,\n\n                organisation_id: nextProps.organisation_id,\n                kb_id: nextProps.kb_id,\n\n                crawler: nextProps.crawler,\n            });\n        }\n    }\n    setError(title, error_msg) {\n        if (this.props.onError) {\n            this.props.onError(title, error_msg);\n        }\n    }\n    handleCancel() {\n        if (this.state.onSave) {\n            this.state.onSave(null);\n        }\n        this.setState({open: false});\n    }\n    // validate metadata\n    isValidMetadata(list, is_db) {\n        //  \"key\": \"none\", \"display\": null, \"field1\": \"\", \"field2\": \"\", \"db1\": \"\", \"db2\":\"\", \"sort\": \"\"\n        const metadata_name_map = {};\n        let sort_counter = 0;\n        let empty_sort_field_counter = 0;\n        let default_sort_counter = 0;\n        if (!Api.defined(list)) {\n            list = [];\n        }\n        for (const item of list) {\n            const name = item.field1;\n            if (!name || name.length ===0) {\n                this.setError(\"invalid metadata field\", \"metadata field missing metadata-field-name\");\n                return false;\n            }\n            const db_name = item.db1;\n            if (is_db && (!db_name || db_name.length ===0)) {\n                this.setError(\"invalid database field\", \"database field missing for database-field-name \\\"\" + name + \"\\\"\");\n                return false;\n            }\n            if (item.key === \"two level category\") {\n                const db_name2 = item.db2;\n                if (!db_name2 || db_name2.length ===0) {\n                    this.setError(\"invalid database field\", \"database field missing for database-field-name \\\"\" + name + \"\\\"\");\n                    return false;\n                }\n            }\n            const display = item.display;\n            if (display !== null && display.length ===0) {\n                this.setError(\"invalid display-name\", \"database field missing display-name \\\"\" + name + \"\\\"\");\n                return false;\n            }\n            if (!metadata_name_map[name]) {\n                metadata_name_map[name] = 1;\n            } else {\n                metadata_name_map[name] += 1;\n            }\n            // sorting checks\n            if (item.sort === \"true\") {\n                sort_counter += 1;\n                if (item.sort_asc.trim().length === 0) empty_sort_field_counter += 1;\n                if (item.sort_desc.trim().length === 0) empty_sort_field_counter += 1;\n                if (item.sort_default.trim() !== \"\") default_sort_counter += 1;\n            }\n        }\n        for (const key in metadata_name_map) {\n            if (metadata_name_map.hasOwnProperty(key)) {\n                const counter = metadata_name_map[key];\n                if (counter > 1) {\n                    this.setError(\"invalid metadata\", \"metadata name \\\"\" + key + \"\\\" is used more than once.\");\n                    return false;\n                }\n            }\n        }\n        if (sort_counter > 0) { // has sort\n            if (empty_sort_field_counter > 0) {\n                this.setError(\"invalid metadata\", \"sort-by fields cannot be empty\");\n                return false;\n            }\n            if (default_sort_counter !== 1) {\n                this.setError(\"invalid metadata\", \"you must specify the default UI sort field\");\n                return false;\n            }\n        }\n        return true;\n    }\n    validFQDN(fqdn) {\n        if (fqdn && fqdn.length > 0) {\n            // valid characters ., a..z A..Z 0..9\n            for (let i = 0; i < fqdn.length; i++) {\n                const ch = fqdn.charAt(i);\n                if (ch !== '.' && !((ch >='a' && ch<='z') || (ch >='A' && ch<='Z') || (ch >='0' && ch<='9'))) {\n                    return false;\n                }\n            }\n            // must have at least one . in it and it can't be the first or last item in the string\n            return fqdn.indexOf('.') > 0 && (fqdn.indexOf('.') + 1 < fqdn.length);\n        }\n        return false;\n    }\n    handleSave() {\n        const crawler = this.state.crawler;\n        let sj = {};\n        if (crawler && crawler.specificJson && (typeof crawler.specificJson === \"string\" || crawler.specificJson instanceof String)) {\n            sj = JSON.parse(crawler.specificJson);\n        }\n\n        if (crawler.qaMatchStrength < 0.0 || crawler.qaMatchStrength > 1.0) {\n\n            this.setError('invalid parameters', 'Q&A threshold must be between 0.0 and 1.0.');\n\n        } else  if (crawler.name.length === 0) {\n\n            this.setError('invalid parameters', 'you must supply a crawler name.');\n\n        } else if (crawler.crawlerType === 'none') {\n\n            this.setError('invalid parameters', 'you must select a crawler-type.');\n\n        } else if (!sj) {\n\n            this.setError('invalid parameters', 'crawler specific data not set');\n\n        } else if (crawler.crawlerType === 'file' && (\n            (!sj.username || sj.username.length === 0) ||\n            (!sj.server || sj.server.length === 0) ||\n            !this.validFQDN(sj.fqdn) ||\n            (!sj.shareName || sj.shareName.length === 0))) {\n\n            this.setError('invalid parameters', 'you must supply crawler-type, name, username, server and share path as a minimum.');\n\n        } else if (crawler.crawlerType === 'web' && (\n            !sj.baseUrlList || sj.baseUrlList.length === 0 ||\n                (!sj.baseUrlList || (!sj.baseUrlList.startsWith(\"http://\") && !sj.baseUrlList.startsWith(\"https://\"))) )) {\n\n            this.setError('invalid parameters', 'you must supply a base url of type http:// or https://');\n\n        } else if (crawler.crawlerType === 'database' && (\n                    !sj.jdbc || sj.jdbc.length === 0 ||\n                    !sj.type || sj.type.length === 0 || !sj.type || sj.type === 'none' ||\n                    !sj.query || sj.query.length === 0 || !sj.pk || sj.pk.length === 0 ||\n                    !sj.template || sj.template.length === 0 || !sj.text || sj.text.length === 0)) {\n\n            this.setError('invalid parameters', 'you must supply a jdbc connection string, database-type, a query, a primary-key, a text-template, and a SQL-template as a minimum.');\n\n        } else if (crawler.crawlerType === 'restfull' && (\n            !sj.url || sj.url.length === 0 ||\n            !sj.pk || sj.pk.length === 0 ||\n            (crawler.customRender && (!sj.template || sj.template.length === 0 || !sj.text || sj.text.length === 0)) ||\n            (!crawler.customRender && (!sj.content_url || sj.content_url.length ===0)))\n        ) {\n            if (crawler.customRender && (!sj.template || sj.template.length === 0 || !sj.text || sj.text.length === 0))\n                this.setError('invalid parameters', 'you must supply a primary-key, a url, a text-template, and an HTML-template as a minimum.');\n            else\n                this.setError('invalid parameters', 'you must supply a primary-key, a url, and a content-url as a minimum.');\n\n        } else if (crawler.crawlerType === 'database' && sj.metadata_list && sj.metadata_list.length > 0 &&\n                    !this.isValidMetadata(sj.metadata_list, true)) {\n\n            // isValidDBMetadata will set the error\n\n        } else if (crawler.crawlerType === 'office365' && (\n                    !sj.tenantId || sj.tenantId.length === 0 ||\n                    !sj.clientId || sj.clientId.length === 0 ||\n                    !sj.redirectUrl || sj.redirectUrl.length === 0 ||\n                    !sj.clientSecret || sj.clientSecret.length === 0)) {\n\n            this.setError('invalid parameters', 'you must supply tenant-id, client-id, client-secret, and redirect-url as a minimum.');\n\n        } else if (crawler.crawlerType === 'dropbox' && (!sj.clientToken || sj.clientToken.length === 0)) {\n\n            this.setError('invalid parameters', 'you must supply a client-token, and select a user as a minimum.');\n\n        } else if (crawler.crawlerType === 'gdrive' && (!sj.gdrive_clientId || sj.gdrive_clientId.length === 0 ||\n                    !sj.gdrive_projectId || sj.gdrive_projectId.length === 0 ||\n                    !sj.gdrive_clientSecret || sj.gdrive_clientSecret.length === 0 ||\n                    !sj.gdrive_clientName || sj.gdrive_clientName.length === 0 || !sj.gdrive_clientPort || sj.gdrive_clientPort.length ===0)) {\n\n            this.setError('invalid parameters', 'you must supply values for all fields, and select one user as a minimum.');\n\n        } else if (crawler.crawlerType === 'nfs' && (sj.nfs_local_folder.length === 0 || sj.nfs_userList.length === 0)) {\n\n            this.setError('invalid parameters', 'nfs: you must supply values for all fields, and select one user as a minimum.');\n\n        } else if (crawler.crawlerType !== 'web' && crawler.crawlerType !== 'file' && crawler.crawlerType !== 'database' &&\n                   crawler.crawlerType !== 'office365' && crawler.crawlerType !== 'dropbox' && crawler.crawlerType !== 'nfs' &&\n                   crawler.crawlerType !== 'wordpress' && crawler.crawlerType !== 'gdrive' && crawler.crawlerType !== 'restfull') {\n\n            this.setError('invalid parameters', 'you must select a crawler-type first.');\n\n        } else if (isNaN(crawler.filesPerSecond)) {\n\n            this.setError(\"invalid parameters\", \"files-per-second must be a number\");\n\n        } else if (!this.isValidMetadata(sj.metadata_list, false)) {\n            // takes care of itself\n\n        } else {\n            // save setup?\n            if (this.state.onSave) {\n                this.state.onSave(crawler);\n                // and reset the tabs to the first tab\n                this.setState({selectedTab: 'general'});\n            }\n        }\n    };\n    updateSchedule(time) {\n        if (time !== null) {\n            const crawler = this.state.crawler;\n            crawler.schedule = time;\n            this.setState({crawler: crawler});\n            if (this.state.onUpdate) {\n                this.state.onUpdate(crawler);\n            }\n        }\n    }\n    update_general_data(data) {\n        data.specificJson = this.state.crawler.specificJson;\n        data.schedule = this.state.crawler.schedule;\n        this.setState({crawler: data});\n        if (this.state.onUpdate) {\n            this.state.onUpdate(data);\n        }\n    }\n    update_specific_json(specific_json) {\n        const crawler = this.state.crawler;\n        crawler.specificJson = JSON.stringify(specific_json);\n        this.setState({crawler: crawler});\n        if (this.state.onUpdate) {\n            this.state.onUpdate(crawler);\n        }\n    }\n    render() {\n        if (this.state.has_error) {\n            return <h1>crawler-dialog.js: Something went wrong.</h1>;\n        }\n        const theme = this.props.theme;\n        const t_value = this.state.selectedTab;\n        const crawler = this.state.crawler;\n        const c_type = crawler.crawlerType;\n        const sj = JSON.parse(crawler.specificJson ? crawler.specificJson : \"{}\");\n        const tabStyle = (theme === 'light' ? styles.tab : styles.tab_dark);\n        return (\n            <div>\n                <Dialog aria-labelledby=\"alert-dialog-title\"\n                        aria-describedby=\"alert-dialog-description\"\n                        open={this.state.open}\n                        disableBackdropClick={true}\n                        disableEscapeKeyDown={true}\n                        fullWidth={true}\n                        maxWidth=\"lg\"\n                        onClose={this.handleCancel.bind(this)} >\n                    <DialogTitle id=\"alert-dialog-title\" className={this.props.theme}>{this.state.title}</DialogTitle>\n                    <div className={this.props.theme}>\n                        <div>\n                            <Tabs value={this.state.selectedTab} onChange={(event, value)=> this.setState({selectedTab: value})}>\n                                <Tab label=\"general\" value=\"general\" style={tabStyle} />\n                                {c_type === \"file\" && <Tab label=\"file-crawler\" value=\"file crawler\" style={tabStyle} />}\n                                {c_type === \"web\" && <Tab label=\"web-crawler\" value=\"web crawler\" style={tabStyle} />}\n                                {c_type === \"database\" && <Tab label=\"database-crawler\" value=\"database crawler\" style={tabStyle} />}\n                                {c_type === \"restfull\" && <Tab label=\"restful-crawler\" value=\"RESTful crawler\" style={tabStyle} />}\n                                {c_type !== \"wordpress\" && <Tab label=\"metadata\" value=\"metadata\" style={tabStyle} />}\n                                {c_type === \"office365\" && <Tab label=\"office 365-crawler\" value=\"office365 crawler\" style={tabStyle} />}\n                                {c_type === \"dropbox\" && <Tab label=\"dropbox-crawler\" value=\"dropbox crawler\" style={tabStyle} />}\n                                {c_type === \"wordpress\" && <Tab label=\"wordpress-crawler\" value=\"wordpress crawler\" style={tabStyle} />}\n                                {c_type === \"gdrive\" && <Tab label=\"gdrive-crawler\" value=\"google drive crawler\" style={tabStyle} />}\n                                {c_type === \"nfs\" && <Tab label=\"nfs-crawler\" value=\"nfs crawler\" style={tabStyle} />}\n                                {c_type !== \"wordpress\" && <Tab label=\"schedule\" value=\"schedule\" style={tabStyle} />}\n                            </Tabs>\n\n                            <div style={styles.formContent}>\n                                {t_value === 'general' &&\n                                    <CrawlerGeneral\n                                        theme={theme}\n                                        sourceId={crawler.sourceId}\n                                        nodeId={crawler.nodeId}\n                                        organisation_id={crawler.organisationId}\n                                        kb_id={crawler.kbId}\n                                        name={crawler.name}\n                                        filesPerSecond={crawler.filesPerSecond}\n                                        crawlerType={c_type}\n                                        deleteFiles={crawler.deleteFiles}\n                                        allowAnonymous={crawler.allowAnonymous}\n                                        enablePreview={crawler.enablePreview}\n                                        processingLevel={crawler.processingLevel}\n                                        maxItems={crawler.maxItems}\n                                        maxBotItems={crawler.maxBotItems}\n                                        schedule={crawler.schedule}\n                                        customRender={crawler.customRender}\n                                        edgeDeviceId={crawler.edgeDeviceId}\n                                        qaMatchStrength={crawler.qaMatchStrength}\n                                        numResults={crawler.numResults}\n                                        numFragments={crawler.numFragments}\n                                        edge_device_list={this.props.edge_device_list}\n                                        onError={(title, errStr) => this.setError(title, errStr)}\n                                        onSave={(crawler) => this.update_general_data(crawler)}/>\n                                }\n                                {t_value === 'file crawler' &&\n                                    <CrawlerFile\n                                        theme={theme}\n                                        username={sj.username}\n                                        password={sj.password}\n                                        server={sj.server}\n                                        domain={sj.domain}\n                                        fqdn={sj.fqdn}\n                                        shareName={sj.shareName}\n                                        sharePath={sj.sharePath}\n                                        specific_json={sj}\n                                        onError={(title, errStr) => this.setError(title, errStr)}\n                                        onSave={(specific_json) => this.update_specific_json(specific_json)}/>\n                                                            }\n                                {t_value === 'web crawler' &&\n                                    <CrawlerWeb\n                                        theme={theme}\n                                        baseUrlList={sj.baseUrlList}\n                                        webCss={sj.webCss}\n                                        webCssIgnore={sj.webCssIgnore}\n                                        validExtensions={sj.validExtensions}\n                                        validExtensionsIgnore={sj.validExtensionsIgnore}\n                                        articleIncludeWordsCsv={sj.articleIncludeWordsCsv}\n                                        articleExcludeWordsCsv={sj.articleExcludeWordsCsv}\n                                        specific_json={sj}\n                                        onError={(title, errStr) => this.setError(title, errStr)}\n                                        onSave={(specific_json) => this.update_specific_json(specific_json)}/>\n                                }\n                                {t_value === 'database crawler' &&\n                                    <CrawlerDatabase\n                                        theme={theme}\n                                        username={sj.username}\n                                        password={sj.password}\n                                        jdbc={sj.jdbc}\n                                        type={sj.type}\n                                        query={sj.query}\n                                        pk={sj.pk}\n                                        metadata_list={sj.metadata_list}\n                                        template={sj.template}\n                                        text={sj.text}\n                                        content_url={sj.content_url}\n                                        specific_json={sj}\n                                        customRender={crawler.customRender}\n                                        onError={(title, errStr) => this.setError(title, errStr)}\n                                        onSave={(specific_json) => this.update_specific_json(specific_json)}/>\n                                }\n                                {t_value === 'RESTful crawler' &&\n                                    <CrawlerRestFull\n                                        theme={theme}\n                                        pk={sj.pk}\n                                        url={sj.url}\n                                        template={sj.template}\n                                        text={sj.text}\n                                        content_url={sj.content_url}\n                                        specific_json={sj}\n                                        customRender={crawler.customRender}\n                                        onError={(title, errStr) => this.setError(title, errStr)}\n                                        onSave={(specific_json) => this.update_specific_json(specific_json)}/>\n                                }\n                                {t_value === 'metadata' && (c_type === \"database\" || c_type === \"restfull\") &&\n                                    <CrawlerMetadataMapper\n                                        theme={theme}\n                                        specificJson={sj}\n                                        onError={(title, errStr) => this.setError(title, errStr)}\n                                        onSave={(specific_json) => this.update_specific_json(specific_json)}/>\n                                }\n                                {t_value === 'metadata' && c_type !== \"restfull\" && c_type !== \"database\" && c_type !== \"wordpress\" &&\n                                    <CrawlerMetadata\n                                        theme={theme}\n                                        specific_json={sj}\n                                        onError={(title, errStr) => this.setError(title, errStr)}\n                                        onSave={(specific_json) => this.update_specific_json(specific_json)}/>\n                                }\n                                {t_value === 'office365 crawler' &&\n                                    <CrawlerOffice365\n                                        theme={theme}\n                                        tenantId={sj.tenantId}\n                                        clientId={sj.clientId}\n                                        clientSecret={sj.clientSecret}\n                                        redirectUrl={sj.redirectUrl}\n                                        crawlOneDrive={sj.crawlOneDrive}\n                                        crawlAllOfOneDrive={sj.crawlAllOfOneDrive}\n                                        oneDriveUsersToCrawl={sj.oneDriveUsersToCrawl}\n                                        crawlSharePoint={sj.crawlSharePoint}\n                                        crawlRootSite={sj.crawlRootSite}\n                                        sharePointSitesToCrawl={sj.sharePointSitesToCrawl}\n                                        crawlExchange={sj.crawlExchange}\n                                        crawlAllOfExchange={sj.crawlAllOfExchange}\n                                        exchangeUsersToCrawl={sj.exchangeUsersToCrawl}\n                                        specific_json={sj}\n                                        onError={(title, errStr) => this.setError(title, errStr)}\n                                        onSave={(specific_json) => this.update_specific_json(specific_json)}/>\n                                }\n                                {t_value === 'dropbox crawler' &&\n                                    <CrawlerDropbox\n                                        theme={theme}\n                                        clientToken={sj.clientToken}\n                                        folderList={sj.folderList}\n                                        specific_json={sj}\n                                        onError={(title, errStr) => this.setError(title, errStr)}\n                                        onSave={(specific_json) => this.update_specific_json(specific_json)}/>\n                                }\n                                {t_value === 'google drive crawler' &&\n                                    <CrawlerGDrive\n                                        theme={theme}\n                                        gdrive_projectId={sj.gdrive_projectId}\n                                        gdrive_clientId={sj.gdrive_clientId}\n                                        gdrive_clientSecret={sj.gdrive_clientSecret}\n                                        gdrive_clientName={sj.gdrive_clientName}\n                                        gdrive_clientPort={sj.gdrive_clientPort}\n                                        specific_json={sj}\n                                        onError={(title, errStr) => this.setError(title, errStr)}\n                                        onSave={(specific_json) => this.update_specific_json(specific_json)}/>\n                                }\n                                {t_value === 'nfs crawler' &&\n                                    <CrawlerNFS\n                                        theme={theme}\n                                        nfs_local_folder={sj.nfs_local_folder}\n                                        nfs_userList={sj.nfs_userList}\n                                        specific_json={sj}\n                                        availableUserList={this.props.user_list}\n                                        onError={(title, errStr) => this.setError(title, errStr)}\n                                        onSave={(specific_json) => this.update_specific_json(specific_json)}/>\n                                }\n                                {t_value === 'wordpress crawler' &&\n                                    <CrawlerWordpress\n                                        theme={theme}\n                                        source_id={crawler.sourceId}\n                                        organisation_id={this.props.organisation_id}\n                                        kb_id={this.props.kb_id}\n                                        specific_json={sj}\n                                        wpUploadArchive={(data) => this.props.wpUploadArchive(data) }\n                                        onError={(title, errStr) => this.setError(title, errStr)}\n                                        onSave={(specific_json) => this.update_specific_json(specific_json)}/>\n                                }\n                                {t_value === 'schedule' && c_type !== \"wordpress\" &&\n                                    <div style={styles.timeTabContent}>\n                                        <TimeSelect time={crawler.schedule}\n                                                    onSave={(time) => this.updateSchedule(time)}/>\n                                    </div>\n                                }\n                            </div>\n\n\n                            </div>\n                    </div>\n                    <DialogActions className={this.props.theme}>\n                        <Button color={\"primary\"} onClick={() => this.handleCancel()}>cancel</Button>\n                        <Button color={\"secondary\"} onClick={() => this.handleSave()}>save</Button>\n                    </DialogActions>\n\n                </Dialog>\n            </div>\n        );\n    }\n}\n\nexport default CrawlerDialog;\n","import React, {Component} from 'react';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Button from '@material-ui/core/Button';\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\n\n\nexport class CrawlerImportExport extends Component {\n    constructor(props) {\n        super(props);\n        var data = (props.crawler) ? JSON.stringify(props.crawler) : \"\";\n        if (data === \"{}\") {\n            data = \"\";\n        }\n        this.state = {\n            has_error: false,\n            open: props.open,\n            data: data,\n            onSave: props.onSave,\n            onError: props.onError,\n        };\n    }\n    componentDidCatch(error, info) {\n        this.setState({ has_error: true });\n        console.log(error, info);\n    }\n    handleSave() {\n        if (this.state.onSave) {\n            this.state.onSave(this.state.data);\n        }\n    }\n    handleCancel() {\n        if (this.state.onSave) {\n            this.state.onSave(null);\n        }\n    }\n    UNSAFE_componentWillReceiveProps(props) {\n        var data = (props.crawler) ? JSON.stringify(props.crawler) : \"\";\n        if (data === \"{}\") {\n            data = \"\";\n        }\n        this.setState({\n            open: props.open,\n            data: data,\n            onSave: props.onSave,\n            onError: props.onError,\n        })\n    }\n    render() {\n        if (this.state.has_error) {\n            return <h1>mind-edit.js: Something went wrong.</h1>;\n        }\n        return (\n            <Dialog aria-labelledby=\"alert-dialog-title\"\n                    aria-describedby=\"alert-dialog-description\"\n                    disableBackdropClick={true}\n                    disableEscapeKeyDown={true}\n                    open={this.state.open}\n                    fullWidth={true}\n                    maxWidth=\"lg\"\n                    onClose={() => this.handleCancel()} >\n\n                <DialogTitle id=\"alert-dialog-title\" className={this.props.theme}>{this.props.export_upload ? \"Import Crawler\" : \"Export Crawler\"}</DialogTitle>\n                <DialogContent className={this.props.theme}>\n                    <Grid container spacing={1}>\n\n                        <Grid item xs={1} />\n                        <Grid item xs={1}>\n                            <div>data</div>\n                        </Grid>\n                        <Grid item xs={9}>\n                            <TextField\n                                autoFocus={true}\n                                onChange={(event) => this.setState({data: event.target.value})}\n                                placeholder=\"crawler data\"\n                                variant=\"filled\"\n                                spellCheck={false}\n                                fullWidth={true}\n                                multiline={true}\n                                rows={10}\n                                value={this.state.data}\n                            />\n                        </Grid>\n                        <Grid item xs={1} />\n\n                    </Grid>\n                </DialogContent>\n                <DialogActions className={this.props.theme}>\n                    {this.props.export_upload &&\n                    <div>\n                        <Button color=\"primary\" onClick={() => this.handleCancel()}>Cancel</Button>\n                        <Button variant=\"contained\" color=\"secondary\" onClick={() => this.handleSave()}>Import</Button>\n                    </div>\n                    }\n                    {!this.props.export_upload &&\n                    <div>\n                        <Button color=\"primary\" onClick={() => this.handleCancel()}>Close</Button>\n                    </div>\n                    }\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nexport default CrawlerImportExport;\n","import React, {Component} from 'react';\n\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport TablePagination from '@material-ui/core/TablePagination';\n\nimport {CrawlerDialog} from '../crawlers/crawler-dialog'\n\nimport {connect} from \"react-redux\";\nimport {bindActionCreators} from \"redux\";\nimport {appCreators} from \"../actions/appActions\";\nimport MessageDialog from \"../common/message-dialog\";\nimport CrawlerImportExport from \"./crawler-import-export\";\n\nconst empty_crawler= {id: '', sourceId: '0', crawlerType: '', name: '', deleteFiles: true, allowAnonymous: true,\n                      enablePreview: true, schedule: '', filesPerSecond: '0', specificJson: '{}',\n                      processingLevel: 'SEARCH', nodeId: '0', maxItems: '0', maxBotItems: '0', customRender: false};\n\nconst styles = {\n    pageWidth: {\n        width: '900px',\n    },\n    tab: {\n        backgroundColor: '#f8f8f8',\n        color: '#000',\n    },\n    tableLight: {\n    },\n    tableDark: {\n        background: '#d0d0d0',\n    },\n    addImage: {\n        width: '25px',\n        cursor: 'pointer',\n        color: \"green\",\n    },\n    knowledgeSelect: {\n        padding: '5px',\n        marginBottom: '40px',\n    },\n    lhs: {\n        float: 'left',\n        width: '150px',\n        marginTop: '-10px',\n        color: '#aaa',\n    },\n    rhs: {\n        float: 'left',\n    },\n    tableHeaderStyle: {\n        background: '#555',\n        fontSize: '0.95em',\n        color: '#fff',\n    },\n    label: {\n        marginTop: '20px',\n        color: '#555',\n    },\n    linkButton: {\n        float: 'left',\n        padding: '10px',\n        color: '#888',\n        cursor: 'pointer',\n    },\n    linkButtonDisabled: {\n        float: 'left',\n        padding: '10px',\n        color: '#aaa',\n        cursor: 'not-allowed',\n    },\n    imageButton: {\n        float: 'right',\n        padding: '10px',\n        color: '#888',\n        cursor: 'pointer',\n    },\n    download: {\n        cursor: 'pointer',\n        fontSize: '0.9em',\n        fontWeight: '600',\n        height: '24px',\n    },\n    downloadType: {\n        fontSize: '0.9em',\n        height: '24px',\n    },\n    downloadImage: {\n        width: '24px',\n    },\n    labelHeader: {\n        marginTop: '20px',\n        marginBottom: '5px',\n        fontSize: '0.8em',\n    },\n};\n\nexport class DocumentSources extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            // pagination\n            page_size: 5,\n            page: 0,\n            // dialog\n            open: false,\n            export_open: false,\n            export_upload: false,\n            title: '',\n            selected_crawler: {},\n            crawler_ask: null,\n\n            // messages\n            message_callback: null,\n            message: '',\n            message_title: '',\n        };\n    }\n    componentDidCatch(error, info) {\n        this.props.setError(error, info);\n        console.log(error, info);\n    }\n    changePage(page) {\n        this.setState({page: page});\n    }\n    changePageSize(page_size) {\n        this.setState({page_size: page_size});\n    }\n    getCrawlers() {\n        const paginated_list = [];\n        const first = this.state.page * this.state.page_size;\n        const last = first + this.state.page_size;\n        for (const i in this.props.crawler_list) {\n            if (i >= first && i < last) {\n                paginated_list.push(this.props.crawler_list[i]);\n            }\n        }\n        return paginated_list;\n    }\n    addNewCrawler() {\n        this.setState({open: true, selected_crawler: empty_crawler, title: 'Create New Crawler'});\n    }\n    onUpdate(crawler) {\n        this.setState({selected_crawler: crawler});\n    }\n    editCrawler(crawler) {\n        if (crawler) {\n            this.setState({open: true, selected_crawler: { ...empty_crawler, ...crawler}, title: 'Edit Crawler'});\n        }\n    }\n    deleteCrawlerAsk(crawler) {\n        this.setState({crawler_ask: crawler});\n        this.props.openDialog(\"are you sure you want to remove the crawler named <b>\" + crawler.name + \"</b>?\",\n            \"Remove Crawler\", (action) => { this.deleteCrawler(action) });\n    }\n    deleteCrawler(action) {\n        if (action && this.state.crawler_ask && this.state.crawler_ask.sourceId) {\n            this.props.deleteCrawler(this.state.crawler_ask.sourceId);\n        }\n        if (this.props.closeDialog) {\n            this.props.closeDialog();\n        }\n    }\n    saveCrawler(crawler) {\n        if (crawler) {\n            crawler.organisationId = this.props.selected_organisation_id;\n            crawler.kbId = this.props.selected_knowledgebase_id;\n            this.props.updateCrawler(crawler);\n        }\n        this.setState({open: false});\n    }\n    deleteDocuments(crawler) {\n        this.setState({\n            message_callback: (action) => this.confirmDocumentsDelete(action, crawler),\n            message_title: 'remove all documents for \"' + crawler.name + '\"?',\n            message: 'Are you sure you want to remove ALL DOCUMENTS for <b>' + crawler.name + '</b>?'\n        });\n    }\n    confirmDocumentsDelete(action, crawler) {\n        this.setState({message: '', message_title: ''});\n        if (action && crawler) {\n            this.props.deleteCrawlerDocuments(crawler.sourceId);\n        }\n    }\n    canDeleteDocuments(crawler) {\n        return crawler.crawlerType !== 'wordpress';\n    }\n    exportCrawler(crawler) {\n        this.setState({selected_crawler: crawler, export_upload: false, export_open: true})\n    }\n    importCrawler() {\n        this.setState({selected_crawler: {}, export_upload: true, export_open: true})\n    }\n    saveExport(crawler_str) {\n        if (crawler_str && this.state.export_upload) {\n            const crawler = JSON.parse(crawler_str);\n            delete crawler.sourceId;\n            this.saveCrawler(crawler);\n        }\n        this.setState({export_open: false, selected_crawler: {}});\n    }\n    render() {\n        const theme = this.props.theme;\n        return (\n            <div>\n                <CrawlerDialog\n                    open={this.state.open}\n                    title={this.state.title}\n                    theme={theme}\n                    organisation_id={this.props.selected_organisation_id}\n                    kb_id={this.props.selected_knowledgebase_id}\n                    user_list={this.props.user_list}\n                    onSave={(crawler) => this.saveCrawler(crawler)}\n                    onUpdate={(crawler) => this.onUpdate(crawler)}\n                    onError={(title, errStr) => this.props.setError(title, errStr)}\n                    error_title={this.props.error_title}\n                    error_msg={this.props.error}\n                    wpUploadArchive={(data) => this.props.wpUploadArchive(data) }\n                    crawler={this.state.selected_crawler}\n                    edge_device_list={this.props.edge_device_list}\n                />\n\n                <CrawlerImportExport\n                    open={this.state.export_open}\n                    theme={theme}\n                    upload={this.state.export_upload}\n                    crawler={this.state.selected_crawler}\n                    export_upload={this.state.export_upload}\n                    onSave={(crawler) => this.saveExport(crawler) }\n                    onError={(title, errStr) => this.props.setError(title, errStr)}\n                />\n\n                <MessageDialog callback={(action) => this.state.message_callback(action)}\n                               open={this.state.message.length > 0}\n                               theme={this.props.theme}\n                               message={this.state.message}\n                               title={this.state.message_title} />\n\n                {\n                    this.props.selected_knowledgebase_id.length > 0 &&\n                    <Paper style={styles.pageWidth}>\n                        <Table>\n                            <TableHead>\n                                <TableRow className='table-header'>\n                                    <TableCell className='table-header'>name</TableCell>\n                                    <TableCell className='table-header'>type</TableCell>\n                                    <TableCell className='table-header'>status</TableCell>\n                                    <TableCell className='table-header'>crawled / indexed</TableCell>\n                                    <TableCell className='table-header'>actions</TableCell>\n                                </TableRow>\n                            </TableHead>\n                            <TableBody style={theme === 'light' ? styles.tableLight : styles.tableDark}>\n                                {\n                                    this.getCrawlers().map((crawler) => {\n                                        return (\n                                            <TableRow key={crawler.sourceId}>\n                                                <TableCell>\n                                                    <div style={styles.label}>{crawler.name}</div>\n                                                </TableCell>\n                                                <TableCell>\n                                                    <div style={styles.label}>{crawler.crawlerType}</div>\n                                                </TableCell>\n                                                <TableCell>\n                                                    <div style={styles.label}>{crawler.isCrawling ? \"busy\" : \"idle\"}</div>\n                                                </TableCell>\n                                                <TableCell>\n                                                    <div style={styles.label}>{crawler.numCrawledDocuments + \" / \" + crawler.numIndexedDocuments}</div>\n                                                </TableCell>\n                                                <TableCell>\n                                                    <div style={styles.linkButton} onClick={() => this.editCrawler(crawler)}>\n                                                        <img src=\"../images/edit.svg\" style={styles.downloadImage} title=\"edit crawler\" alt=\"edit\"/>\n                                                    </div>\n                                                    <div style={styles.linkButton}\n                                                         onClick={() => this.deleteDocuments(crawler)}>\n                                                        <img src=\"../images/delete-files.svg\"\n                                                             style={styles.downloadImage}\n                                                             title=\"remove a crawler's documents\"\n                                                             alt=\"remove documents\"/>\n                                                    </div>\n                                                    <div style={styles.linkButton} onClick={() => this.deleteCrawlerAsk(crawler)}>\n                                                        <img src=\"../images/delete.svg\" style={styles.downloadImage} title=\"remove crawler\" alt=\"remove\"/>\n                                                    </div>\n                                                    <div style={styles.linkButton} onClick={() => this.exportCrawler(crawler)}>\n                                                        <img src=\"../images/download.svg\" style={styles.downloadImage} title=\"get crawler JSON for export\" alt=\"export\"/>\n                                                    </div>\n                                                </TableCell>\n                                            </TableRow>\n                                        )\n                                    })\n                                }\n                                <TableRow>\n                                    <TableCell/>\n                                    <TableCell/>\n                                    <TableCell/>\n                                    <TableCell/>\n                                    <TableCell>\n                                        {this.props.selected_organisation_id.length > 0 &&\n                                            <div style={styles.imageButton} onClick={() => this.addNewCrawler()}><img\n                                                style={styles.addImage} src=\"../images/add.svg\" title=\"add new crawler\"\n                                                alt=\"add new crawler\"/></div>\n                                        }\n                                        {this.props.selected_organisation_id.length > 0 &&\n                                            <div style={styles.imageButton} onClick={() => this.importCrawler()}><img\n                                                style={styles.addImage} src=\"../images/upload.svg\" title=\"upload crawler JSON\"\n                                                alt=\"import\"/></div>\n                                        }\n                                    </TableCell>\n                                </TableRow>\n                            </TableBody>\n                        </Table>\n\n                        <TablePagination\n                            rowsPerPageOptions={[5, 10, 25]}\n                            style={theme === 'light' ? styles.tableLight : styles.tableDark}\n                            component=\"div\"\n                            count={this.props.crawler_list.length}\n                            rowsPerPage={this.state.page_size}\n                            page={this.state.page}\n                            backIconButtonProps={{\n                                'aria-label': 'Previous Page',\n                            }}\n                            nextIconButtonProps={{\n                                'aria-label': 'Next Page',\n                            }}\n                            onChangePage={(event, page) => this.changePage(page)}\n                            onChangeRowsPerPage={(event) => this.changePageSize(event.target.value)}\n                        />\n\n                    </Paper>\n                }\n\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = function(state) {\n    return {\n        error: state.appReducer.error,\n        error_title: state.appReducer.error_title,\n        theme: state.appReducer.theme,\n\n        selected_organisation_id: state.appReducer.selected_organisation_id,\n        selected_knowledgebase_id: state.appReducer.selected_knowledgebase_id,\n        user_list: state.appReducer.user_list,\n        user_filter: state.appReducer.user_filter,\n        crawler_list: state.appReducer.crawler_list,\n        edge_device_list: state.appReducer.edge_device_list,\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    dispatch => bindActionCreators(appCreators, dispatch)\n)(DocumentSources);\n","import React from 'react';\n\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport TablePagination from '@material-ui/core/TablePagination';\n\nimport {Api} from '../common/api'\n\nimport {connect} from \"react-redux\";\nimport {bindActionCreators} from \"redux\";\nimport {appCreators} from \"../actions/appActions\";\nimport Grid from \"@material-ui/core/Grid\";\nimport {Home} from \"../home\";\n\n// display length of a url\nconst maxUrlDisplayLength = 50;\n\nconst styles = {\n    tableStyle: {\n        width: '900px',\n    },\n    tableLight: {\n    },\n    tableDark: {\n        background: '#d0d0d0',\n    },\n    gridWidth: {\n        width: '900px',\n    },\n    text: {\n        border: '1px solid #808080',\n        borderRadius: '4px',\n        padding: '4px',\n    },\n    tableHeaderStyle: {\n        background: '#555',\n        fontSize: '0.95em',\n        width: '900px',\n        color: '#fff',\n        minWidth: '100px',\n    },\n    tableColumnStyle: {\n        background: '#555',\n        fontSize: '0.95em',\n        color: '#fff',\n        minWidth: '100px',\n    },\n    knowledgeSelect: {\n        padding: '5px',\n        marginBottom: '40px',\n    },\n    lhs: {\n        float: 'left',\n        width: '150px',\n        marginTop: '-10px',\n        color: '#aaa',\n    },\n    rhs: {\n        float: 'left',\n    },\n    urlLabel: {\n        padding: '10px',\n        color: '#555',\n        maxWidth: '200px',\n    },\n    label: {\n        padding: '10px',\n        color: '#555',\n    },\n    statusImage: {\n        width: '16px',\n    },\n    hr: {\n        border: '0.1px solid #f0f0f0',\n        width: '100%',\n    },\n    imageButton: {\n        float: 'right',\n        padding: '10px',\n        color: '#888',\n        cursor: 'pointer',\n    },\n    addImage: {\n        width: '25px',\n    },\n    linkButton: {\n        float: 'left',\n        padding: '10px',\n        cursor: 'pointer',\n    },\n    linkButtonDisabled: {\n        float: 'left',\n        padding: '10px',\n        cursor: 'not-allowed',\n    },\n    dlImageSize: {\n        width: '24px',\n        marginRight: '10px',\n    },\n    search: {\n        marginTop: '2px',\n        marginLeft: '15px',\n        width: '18px',\n        color: '#000',\n    },\n    floatLeftLabel: {\n        float: 'left',\n        marginRight: '6px',\n        marginTop: '4px',\n        fontSize: '0.9em',\n        fontWeight: '500',\n    },\n    floatLeft: {\n        float: 'left',\n    },\n    searchFloatLeft: {\n        float: 'left',\n    },\n    manualUploadSection: {\n        marginTop: '50px',\n    },\n    findBox: {\n        padding: '10px',\n        marginBottom: '5px',\n        float: 'right',\n    },\n};\n\n\nexport class Documents extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            document: null,\n            crawler_map: {},\n        };\n    }\n    componentDidCatch(error, info) {\n        this.props.setError(error, info);\n        console.log(error, info);\n    }\n    componentDidMount() {\n        let crawler_map = {};\n        for (const crawler of this.props.crawler_list) {\n            crawler_map[crawler.sourceId] = crawler.crawlerType;\n        }\n        this.setState({crawler_map: crawler_map});\n    }\n    deleteDocumentAsk(document) {\n        if (document) {\n            this.props.openDialog(\"are you sure you want to remove \\\"\" + document.url + \"\\\" ?\", \"Remove Document\", (action) => { this.deleteDocument(action) });\n            this.setState({document: document});\n        }\n    }\n    deleteDocument(action) {\n        if (action && Api.defined(this.state.document)) {\n            this.props.deleteDocument(this.state.document.url, this.state.document.sourceId);\n        }\n        if (this.props.closeDialog) {\n            this.props.closeDialog();\n        }\n    }\n    handleSearchTextKeydown(event) {\n        if (event.key === \"Enter\") {\n            this.props.getDocuments();\n        }\n    }\n    documentUploaded() {\n        this.setState({message_title: \"done\", message: \"document uploaded\",\n            message_callback: () => { this.setState({message: \"\"})}});\n    }\n    getDocuments() {\n        return this.props.document_list;\n    }\n    static isWeb(url) {\n        return (url.toLowerCase().startsWith(\"http://\") || url.toLowerCase().startsWith(\"https://\"));\n    }\n    static adjustUrl(url) {\n        if (url && url.length > maxUrlDisplayLength) {\n            const half = Math.floor(maxUrlDisplayLength / 2);\n            return url.substring(0, half) + \" ... \" + url.substring(url.length - half);\n        }\n        return url;\n    }\n    // return: 0 => to do, 1 => done, 2 => disabled\n    getActive(document, stage) {\n        if (stage === \"crawled\") {\n            if (document.crawled > 0)\n                return 1;\n        } else if (stage === \"converted\") {\n            if (document.converted > 0)\n                return 1;\n            else if (document.converted < 0)\n                return 2;\n        } else if (stage === \"parsed\") {\n            if (document.converted > 0 && document.converted <= document.parsed)\n                return 1;\n            else if (document.parsed < 0)\n                return 2;\n        } else if (stage === \"indexed\") {\n            if (document.converted > 0 && document.parsed > 0 && document.parsed <= document.indexed)\n                return 1;\n            else if (document.indexed < 0)\n                return 2;\n        } else if (stage === \"previewed\") {\n            if (document.previewed > 0)\n                return 1;\n            else if (document.previewed < 0)\n                return 2;\n        }\n        return 0;\n    }\n    getStatus(document, stage) {\n        const status = this.getActive(document, stage);\n        if (status === 1)\n            return \"../images/dot-green.svg\";\n        else if (status === 0)\n            return \"../images/dot-orange.svg\";\n        else\n            return \"../images/dot-grey.svg\";\n    }\n    getStatusText(document, stage, staging) {\n        const status = this.getActive(document, stage);\n        if (status === 1)\n            return \"document \" + stage;\n        else if (status === 0)\n            return \"document not \" + stage;\n        else\n            return staging + \" disabled for this document-source\";\n    }\n    isVisible() {\n        return this.props.selected_organisation_id && this.props.selected_organisation_id.length > 0 &&\n            this.props.selected_organisation && this.props.selected_organisation.length > 0 &&\n            this.props.selected_knowledgebase_id && this.props.selected_knowledgebase_id.length > 0;\n    }\n    canDeleteDocument(document) {\n        return this.state.crawler_map[document.sourceId] !== 'wordpress';\n    }\n    render() {\n        const theme = this.props.theme;\n        const isAdmin = Home.hasRole(this.props.user, ['admin']);\n        return (\n            <Grid container spacing={1} style={styles.gridWidth}>\n\n                {\n                    this.isVisible() &&\n                    <Grid item xs={12}>\n                        <div style={styles.findBox}>\n                            <div style={styles.floatLeftLabel}>filter</div>\n                            <div style={styles.searchFloatLeft}>\n                                <input type=\"text\" value={this.props.document_filter} autoFocus={true} style={styles.text} className={theme}\n                                       onKeyPress={(event) => this.handleSearchTextKeydown(event)}\n                                       onChange={(event) => {\n                                           this.props.setDocumentFilter(event.target.value)\n                                       }}/>\n                            </div>\n                            <div style={styles.floatLeft}>\n                                <img style={styles.search}\n                                     onClick={() => this.props.getDocuments()}\n                                     src=\"../images/dark-magnifying-glass.svg\" title=\"filter\" alt=\"filter\"/>\n                            </div>\n                        </div>\n                    </Grid>\n                }\n\n\n                {\n                    this.isVisible() &&\n                    <Paper style={styles.tableStyle}>\n                        <Table>\n\n                            <TableHead>\n                                <TableRow className='table-header'>\n                                    <TableCell className='table-header'>url</TableCell>\n                                    <TableCell className='table-header'>source</TableCell>\n                                    <TableCell className='table-header'>last modified</TableCell>\n                                    <TableCell className='table-header'>status</TableCell>\n                                    {isAdmin &&\n                                        <TableCell className='table-header'>actions</TableCell>\n                                    }\n                                </TableRow>\n                            </TableHead>\n\n                            <TableBody style={theme === 'light' ? styles.tableLight : styles.tableDark}>\n                                {\n                                    this.getDocuments().map((document) => {\n                                        return (\n                                                <TableRow key={document.url}>\n                                                    <TableCell>\n                                                        {\n                                                            Documents.isWeb(document.url) &&\n                                                            <div style={styles.urlLabel}>\n                                                                <a href={document.url} title={document.url} rel=\"noopener noreferrer\" target=\"_blank\">{Documents.adjustUrl(document.url)}</a>\n                                                            </div>\n                                                        }\n                                                        {\n                                                            !Documents.isWeb(document.url) &&\n                                                            <div style={styles.label}>{Documents.adjustUrl(document.url)}</div>\n                                                        }\n                                                    </TableCell>\n                                                    <TableCell>\n                                                        <div style={styles.label}>{document.origin}</div>\n                                                    </TableCell>\n                                                    <TableCell>\n                                                        <div style={styles.label}>{Api.unixTimeConvert(document.lastModified)}</div>\n                                                    </TableCell>\n                                                    <TableCell>\n                                                        <div style={styles.label}>\n                                                            <img src={this.getStatus(document, \"crawled\")} style={styles.statusImage} alt=\"crawler\" title={this.getStatusText(document, \"crawled\", \"crawling\")} />\n                                                            <img src={this.getStatus(document, \"converted\")} style={styles.statusImage} alt=\"converted\" title={this.getStatusText(document, \"converted\", \"converting\")} />\n                                                            <img src={this.getStatus(document, \"parsed\")} style={styles.statusImage} alt=\"parsed\" title={this.getStatusText(document, \"parsed\", \"parsing\")} />\n                                                            <img src={this.getStatus(document, \"indexed\")} style={styles.statusImage} alt=\"indexed\" title={this.getStatusText(document, \"indexed\", \"indexing\")} />\n                                                            <img src={this.getStatus(document, \"previewed\")} style={styles.statusImage} alt=\"previewed\" title={this.getStatusText(document, \"previewed\", \"preview generation\")} />\n                                                        </div>\n                                                    </TableCell>\n                                                    {isAdmin &&\n                                                        <TableCell>\n                                                            <div style={styles.linkButton}\n                                                                 onClick={() => this.deleteDocumentAsk(document)}>\n                                                                <img src=\"../images/delete.svg\"\n                                                                     style={styles.dlImageSize} title=\"remove document\"\n                                                                     alt=\"remove\"/>\n                                                            </div>\n                                                            {/*<div style={styles.linkButton} onClick={() => this.props.reprocessDocument(document)}>*/}\n                                                            {/*    <img src=\"../images/refresh.svg\" style={styles.dlImageSize} title=\"reprocess document (remove it, re-parse and re-index the document.\" alt=\"reprocess\"/>*/}\n                                                            {/*</div>*/}\n                                                        </TableCell>\n                                                    }\n                                                </TableRow>\n                                        )\n                                    })\n                                }\n                            </TableBody>\n                        </Table>\n\n                        <TablePagination\n                            style={theme === 'light' ? styles.tableLight : styles.tableDark}\n                            rowsPerPageOptions={[5, 10, 25]}\n                            component=\"div\"\n                            count={this.props.num_documents}\n                            rowsPerPage={this.props.document_page_size}\n                            page={this.props.document_page}\n                            backIconButtonProps={{\n                                'aria-label': 'Previous Page',\n                            }}\n                            nextIconButtonProps={{\n                                'aria-label': 'Next Page',\n                            }}\n                            onChangePage={(event, page) => this.props.setDocumentPage(page)}\n                            onChangeRowsPerPage={(event) => this.props.setDocumentPageSize(event.target.value)}\n                        />\n\n                    </Paper>\n                }\n\n                <br />\n                <br />\n                <br />\n                <br />\n\n                {/*{this.props.selected_knowledgebase_id &&*/}\n                {/*    <div style={styles.manualUploadSection}>*/}\n                {/*        <div>manually upload a document</div>*/}\n                {/*        <div>*/}\n                {/*            <DocumentUpload kbId={this.props.selected_knowledgebase_id}*/}\n                {/*                            organisationId={this.props.selected_organisation_id}*/}\n                {/*                            onUploadDone={() => this.documentUploaded()}*/}\n                {/*                            onError={(errStr) => this.props.setError(\"Error\", errStr)}/>*/}\n                {/*        </div>*/}\n                {/*    </div>*/}\n                {/*}*/}\n\n            </Grid>\n        )\n    }\n};\n\n\nconst mapStateToProps = function(state) {\n    return {\n        error: state.appReducer.error,\n        error_title: state.appReducer.error_title,\n        theme: state.appReducer.theme,\n        user: state.appReducer.user,\n\n        document_list: state.appReducer.document_list,\n        document_filter: state.appReducer.document_filter,\n        document_page: state.appReducer.document_page,\n        document_page_size: state.appReducer.document_page_size,\n        document_nav_list: state.appReducer.document_nav_list,\n        num_documents: state.appReducer.num_documents,\n\n        crawler_list: state.appReducer.crawler_list,\n\n        selected_organisation_id: state.appReducer.selected_organisation_id,\n        selected_organisation: state.appReducer.selected_organisation,\n        selected_knowledgebase_id: state.appReducer.selected_knowledgebase_id,\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    dispatch => bindActionCreators(appCreators, dispatch)\n)(Documents);\n\n","import React, {Component} from 'react';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Button from '@material-ui/core/Button';\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\n\nconst image_types = [\".jpg\", \".jpeg\", \".png\", \".gif\", \".svg\"];\n\nexport class MindEdit extends Component {\n    constructor(props) {\n        super(props);\n        const expression = props.mindItem && props.mindItem.expression ? props.mindItem.expression : \"\";\n        let question1 = \"\";\n        let question2 = \"\";\n        if (expression.indexOf(\"||\") >= 0) {\n            question1 = expression.split(\"||\")[0];\n            question2 = expression.split(\"||\")[1];\n        } else {\n            question1 = expression;\n        }\n        this.state = {\n            has_error: false,\n            open: props.open,\n            mindItem: props.mindItem,\n            onSave: props.onSave,\n            onError: props.onError,\n            question1: question1,\n            question2: question2,\n            answer: MindEdit.getAnswerText(props.mindItem),\n            links: MindEdit.getLinks(props.mindItem),\n        };\n    }\n    componentDidCatch(error, info) {\n        this.setState({ has_error: true });\n        console.log(error, info);\n    }\n    handleSave() {\n        if (this.state.onSave) {\n            const mi = this.state.mindItem;\n            mi.expression = this.state.question1;\n            if (this.state.question2.trim().length > 0) {\n                mi.expression = mi.expression + \" || \" + this.state.question2;\n            }\n            mi.actionList = MindEdit.createActions(this.state.answer, this.state.links);\n            this.state.onSave(mi);\n        }\n    }\n    handleCancel() {\n        if (this.state.onSave) {\n            this.state.onSave(null);\n        }\n    }\n    UNSAFE_componentWillReceiveProps(props) {\n        const expression = props.mindItem && props.mindItem.expression ? props.mindItem.expression : \"\";\n        let question1 = \"\";\n        let question2 = \"\";\n        if (expression.indexOf(\"||\") >= 0) {\n            question1 = expression.split(\"||\")[0];\n            question2 = expression.split(\"||\")[1];\n        } else {\n            question1 = expression;\n        }\n        this.setState({\n            open: props.open,\n            mindItem: props.mindItem,\n            onSave: props.onSave,\n            onError: props.onError,\n            question1: question1,\n            question2: question2,\n            answer: MindEdit.getAnswerText(props.mindItem),\n            links: MindEdit.getLinks(props.mindItem),\n        })\n    }\n    static createActions(answer, links_text) {\n        const actions = [];\n        if (answer.length > 0) {\n            // special user/custom commands?\n            if (answer.trim().indexOf(\"exec \") === 0) {\n                const commands = answer.split(\"\\n\");\n                for (let cmd of commands) {\n                    const parts = cmd.trim().split(\" \");\n                    if (parts.length > 1 && parts[0] === \"exec\") {\n                        const parameters = [];\n                        for (let i = 2; i < parts.length; i += 1) {\n                            if (parts[i].trim().length > 0) {\n                                parameters.push(parts[i].trim());\n                            }\n                        }\n                        actions.push({\"action\": parts[1], parameters: parameters});\n                    }\n                }\n            } else {\n                actions.push({\"action\": \"browser.write\", parameters: [answer.replace(/\\n/g, \"<br />\")]});\n            }\n        }\n        const links = links_text.split(\",\");\n        for (const link of links) {\n            const l = link.trim();\n            if (l.length > 0) {\n                const l_lwr = link.toLowerCase();\n                let is_image = false;\n                for (const extn of image_types) {\n                    if (l_lwr.indexOf(extn) > 0) {\n                        is_image = true;\n                    }\n                }\n                if (is_image) {\n                    actions.push({\"action\": \"browser.image\", parameters: [l]});\n                } else {\n                    actions.push({\"action\": \"browser.url\", parameters: [l]});\n                }\n            }\n        }\n        return actions;\n    }\n    static getAnswerText(mindItem) {\n        let str = \"\";\n        if (mindItem && mindItem.actionList) {\n            // val BROWSER_WRITE = \"browser.write\"\n            // val BROWSER_URL = \"browser.url\"\n            // val BROWSER_IMAGE = \"browser.image\"\n            // val BROWSER_SAY = \"browser.say\"\n            for (const action of mindItem.actionList) {\n                if (action) {\n                    if (action.action === \"browser.write\" && action.parameters) {\n                        for (const param of action.parameters) {\n                            str = str + param.replace(/<br \\/>/g, \"\\n\");\n                        }\n\n                        // user custom command?\n                    } else if (action.action !== \"browser.image\" && action.action !== \"browser.url\" && action.action !== \"browser.say\") {\n                        str = str + \"exec \" + action.action;\n                        for (const param of action.parameters) {\n                            str += \" \";\n                            str += param;\n                        }\n                        str += \"\\n\";\n                    }\n                }\n            }\n        }\n        return str;\n    }\n    static getLinks(mindItem) {\n        let str = \"\";\n        if (mindItem && mindItem.actionList) {\n            for (const action of mindItem.actionList) {\n                if (action && action.action === \"browser.image\" && action.parameters) {\n                    if (str.length > 0) {\n                        str += \",\\n\";\n                    }\n                    for (const param of action.parameters) {\n                        str = str + param.replace(/<br \\/>/g, \"\\n\");\n                    }\n                }\n                if (action && action.action === \"browser.url\" && action.parameters) {\n                    if (str.length > 0) {\n                        str += \",\\n\";\n                    }\n                    for (const param of action.parameters) {\n                        str = str + param.replace(/<br \\/>/g, \"\\n\");\n                    }\n                }\n            }\n        }\n        return str;\n    }\n    render() {\n        if (this.state.has_error) {\n            return <h1>mind-edit.js: Something went wrong.</h1>;\n        }\n        return (\n            <Dialog aria-labelledby=\"alert-dialog-title\"\n                    aria-describedby=\"alert-dialog-description\"\n                    disableBackdropClick={true}\n                    disableEscapeKeyDown={true}\n                    open={this.state.open}\n                    fullWidth={true}\n                    maxWidth=\"lg\"\n                    onClose={() => this.handleCancel()} >\n\n                <DialogTitle id=\"alert-dialog-title\" className={this.props.theme}>Edit Mind Item</DialogTitle>\n                <DialogContent className={this.props.theme}>\n                    <Grid container spacing={1}>\n\n                        <Grid item xs={1} />\n                        <Grid item xs={1}>\n                            <div>question</div>\n                        </Grid>\n                        <Grid item xs={9}>\n                            <TextField\n                                autoFocus={true}\n                                onChange={(event) => this.setState({question1: event.target.value})}\n                                placeholder=\"question\"\n                                variant=\"outlined\"\n                                fullWidth={true}\n                                value={this.state.question1}\n                            />\n                        </Grid>\n                        <Grid item xs={1} />\n\n\n                        <Grid item xs={1} />\n                        <Grid item xs={1}>\n                            <div>alternative</div>\n                        </Grid>\n                        <Grid item xs={9}>\n                            <TextField\n                                onChange={(event) => this.setState({question2: event.target.value})}\n                                placeholder=\"alternative question (optional)\"\n                                variant=\"outlined\"\n                                fullWidth={true}\n                                value={this.state.question2}\n                            />\n                        </Grid>\n                        <Grid item xs={1} />\n\n\n                        <Grid item xs={1} />\n                        <Grid item xs={1}>\n                            <div>answer text</div>\n                        </Grid>\n                        <Grid item xs={9}>\n                            <TextField\n                                onChange={(event) => this.setState({answer: event.target.value})}\n                                placeholder=\"answer, or function (e.g. 'exec show_help person1 person2 date1')\"\n                                multiline={true}\n                                rows={5}\n                                variant=\"outlined\"\n                                fullWidth={true}\n                                value={this.state.answer}\n                            />\n                        </Grid>\n                        <Grid item xs={1} />\n\n\n                        <Grid item xs={1} />\n                        <Grid item xs={1}>\n                            <div>links (csv)</div>\n                        </Grid>\n                        <Grid item xs={9}>\n                            <TextField\n                                onChange={(event) => this.setState({links: event.target.value})}\n                                placeholder=\"links\"\n                                multiline={true}\n                                rows={5}\n                                variant=\"outlined\"\n                                fullWidth={true}\n                                value={this.state.links}\n                            />\n                        </Grid>\n                        <Grid item xs={1} />\n\n\n                    </Grid>\n                </DialogContent>\n                <DialogActions className={this.props.theme}>\n                    <Button color=\"primary\" onClick={() => this.handleCancel()}>Cancel</Button>\n                    <Button variant=\"contained\" color=\"secondary\" onClick={() => this.handleSave()}>Save</Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nexport default MindEdit;\n","import React, {Component} from 'react';\nimport Button from \"@material-ui/core/Button\";\n\nimport {connect} from \"react-redux\";\nimport {bindActionCreators} from \"redux\";\nimport {appCreators} from \"../actions/appActions\";\n\nconst styles = {\n    uploadContainer: {\n        margin: '10px',\n        width: '450px',\n        minWidth: '450px',\n        height: '20px',\n        // border: '1px solid lightgray',\n        borderRadius: '15px',\n        padding: '12px',\n        marginLeft: '10px',\n        fontWeight: 700,\n        fontSize: '10pt',\n        cursor: 'pointer',\n    },\n    formWidth: {\n    },\n    uploadControl: {\n        marginTop: '5px',\n        float: 'left',\n    },\n    uploadButton: {\n        float: 'left',\n        height: '30px',\n    },\n    busyImage: {\n        width: '28px',\n        height: '28px',\n        marginTop: '-10px',\n        float: 'left',\n    },\n    uploadInput: {\n        float: 'left',\n    },\n    uploadWheel: {\n        marginLeft: '5px',\n        marginTop: '14px',\n        height: '28px',\n        float: 'left',\n    },\n};\n\nexport class ProgramUpload extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            filename: '',\n            file_type: '',\n            filter: '',\n            binary_data: null,\n        };\n    }\n\n    _handleImageChange(e) {\n        e.preventDefault();\n\n        const self = this;\n        const reader = new FileReader();\n        const file = e.target.files[0];\n        const filename = file['name'];\n        const file_type = file['type'];\n\n        reader.onloadend = () => {\n            self.setState({\n                filename: filename,\n                file_type: file_type,\n                binary_data: reader.result\n            });\n        };\n        reader.readAsDataURL(file)\n    }\n\n    upload() {\n        if (this.state.binary_data) {\n            const payload = {\n                base64Text: this.state.binary_data,\n                fileType: this.state.file_type,\n                kbId: this.props.selected_knowledgebase_id,\n                organisationId: this.props.selected_organisation_id,\n            };\n            this.props.uploadProgram(payload);\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <form onSubmit={(e) => this._handleSubmit(e)} style={styles.uploadContainer}>\n                    <div style={styles.formWidth}>\n                        <input style={styles.uploadControl}\n                               type=\"file\"\n                               onChange={(e) => this._handleImageChange(e)}/>\n                        <div style={styles.uploadButton}>\n                            <div style={styles.uploadInput}>\n                                <Button variant='contained'\n                                        color='primary'\n                                        style={styles.uploadButton}\n                                        disabled={this.state.binary_data === null || this.props.uploading}\n                                        onClick={this.upload.bind(this)}>upload</Button>\n                                {this.props.uploading &&\n                                <div style={styles.uploadWheel}><img src=\"../images/busy2.gif\" alt=\"busy\" style={styles.busyImage}/></div>\n                                }\n                            </div>\n                        </div>\n                    </div>\n                </form>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = function(state) {\n    return {\n        uploading: state.appReducer.uploading,\n        selected_organisation_id: state.appReducer.selected_organisation_id,\n        selected_knowledgebase_id: state.appReducer.selected_knowledgebase_id,\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    dispatch => bindActionCreators(appCreators, dispatch)\n)(ProgramUpload);\n\n","import React from 'react';\n\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\n\nimport {Api} from '../common/api'\nimport {MindEdit} from \"./mind-edit\";\n\nimport {connect} from \"react-redux\";\nimport {bindActionCreators} from \"redux\";\nimport {appCreators} from \"../actions/appActions\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport ProgramUpload from \"../common/program-upload\";\nimport Button from \"@material-ui/core/Button\";\nimport Comms from \"../common/comms\";\n\n\nconst styles = {\n    tableStyle: {\n        minWidth: '900px',\n        width: '900px',\n    },\n    tableLight: {\n    },\n    text: {\n        border: '1px solid #808080',\n        borderRadius: '4px',\n        padding: '4px',\n        width: '280px',\n    },\n    tableDark: {\n        background: '#d0d0d0',\n    },\n    smallTableHeaderStyle: {\n        background: '#555',\n        fontSize: '0.95em',\n        color: '#fff',\n        minWidth: '20px',\n    },\n    actionTableHeaderStyle: {\n        background: '#555',\n        fontSize: '0.95em',\n        color: '#fff',\n        minWidth: '100px',\n    },\n    tableHeaderStyle: {\n        background: '#555',\n        fontSize: '0.95em',\n        color: '#fff',\n        minWidth: '400px',\n        width: '600px',\n    },\n    searchTableHeaderStyle: {\n        background: '#555',\n        fontSize: '0.95em',\n        color: '#fff',\n        minWidth: '200px',\n        width: '340px',\n    },\n    knowledgeSelect: {\n        padding: '5px',\n        marginBottom: '40px',\n    },\n    lhs: {\n        float: 'left',\n        width: '150px',\n        marginTop: '-10px',\n        color: '#aaa',\n    },\n    rhs: {\n        float: 'left',\n    },\n    label: {\n        padding: '10px',\n        color: '#555',\n    },\n    queryMindLabel: {\n        marginTop: '12px',\n        padding: '10px',\n        color: '#555',\n        float: 'right',\n    },\n    gridWidth: {\n        width: '900px',\n    },\n    hr: {\n        border: '0.1px solid #f0f0f0',\n        width: '100%',\n    },\n    imageButton: {\n        float: 'right',\n        padding: '10px',\n        color: '#888',\n        cursor: 'pointer',\n    },\n    addImage: {\n        width: '25px',\n    },\n    linkButton: {\n        float: 'left',\n        padding: '10px',\n        color: '#888',\n        cursor: 'pointer',\n    },\n    dlImageSize: {\n        width: '24px',\n    },\n    search: {\n        marginTop: '2px',\n        marginLeft: '15px',\n        width: '18px',\n        color: '#000',\n    },\n    floatLeftLabel: {\n        float: 'left',\n        marginRight: '6px',\n        marginTop: '4px',\n        fontSize: '0.9em',\n        fontWeight: '500',\n    },\n    searchFloatLeft: {\n        float: 'left',\n    },\n    floatLeft: {\n        float: 'left',\n    },\n    manualUploadSection: {\n        marginTop: '50px',\n    },\n    findBox: {\n        padding: '10px',\n        marginBottom: '5px',\n        float: 'right',\n    },\n    spacer: {\n        marginTop: '20px',\n    },\n    uploader: {\n        marginTop: '-20px',\n        float: 'left',\n    },\n    export: {\n        float: 'left',\n    }\n};\n\n\nexport class Mind extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            mind_item: null,\n            mind_edit: false,\n        };\n    }\n    componentDidCatch(error, info) {\n        this.props.setError(error, info);\n        console.log(error, info);\n    }\n    componentDidMount() {\n    }\n    deleteMindItemAsk(mindItem) {\n        if (mindItem) {\n            this.props.openDialog(\"are you sure you want to remove id \" + mindItem.id + \"?<br/><br/>(\" + mindItem.expression + \")\",\n                                    \"Remove Mind Entry\", (action) => { this.deleteMindItem(action) });\n            this.setState({mind_item: mindItem});\n        }\n    }\n    deleteMindItem(action) {\n        if (action && Api.defined(this.state.mind_item)) {\n            this.props.deleteMindItem(this.state.mind_item.id);\n        }\n        if (this.props.closeDialog) {\n            this.props.closeDialog();\n        }\n    }\n    deleteAllMindItemsAsk() {\n        this.props.openDialog(\"are you sure you want to remove all mind-items of this knowledge-base?\",\n            \"Remove All Mind Items\", (action) => { this.deleteAllMindItems(action) });\n    }\n    deleteAllMindItems(action) {\n        if (action) {\n            this.props.deleteAllMindItems();\n        }\n        if (this.props.closeDialog) {\n            this.props.closeDialog();\n        }\n    }\n    handleSearchTextKeydown(event) {\n        if (event.key === \"Enter\") {\n            this.props.getMindItems();\n        }\n    }\n    static toAnswer(mindItem) {\n        let str = \"\";\n        if (mindItem && mindItem.actionList) {\n            for (const action of mindItem.actionList) {\n                if (action && action.action === \"browser.write\" && action.parameters) {\n                    for (const param of action.parameters) {\n                        str = str + param.replace(/<br \\/>/g, \"\\n\");\n                    }\n                }\n            }\n        }\n        return str;\n    }\n    editMindItem(mindItem) {\n        this.setState({mind_edit: true, mind_item: mindItem});\n    }\n    newMindItem() {\n        this.setState({mind_edit: true, mind_item: {\n                id: '',\n                preContext: \"\",\n                postContext: \"\",\n                expression: \"\",\n                actionList: [],\n                metadata: \"\"\n            }\n            });\n    }\n    mindDump() {\n        window.open(Comms.get_mind_dump_url(this.props.selected_organisation_id, this.props.selected_knowledgebase_id), '_blank');\n    }\n    save(mindItem) {\n        if (mindItem) {\n            if (mindItem.expression.length > 0 && mindItem.actionList.length > 0) {\n                this.props.saveMindItem(mindItem);\n                this.setState({mind_edit: false});\n            } else {\n                this.props.setError(\"Error Saving Mind Entry\", \"mind-item must have an expression and actions\");\n            }\n        } else {\n            this.setState({mind_edit: false});\n        }\n    }\n    getMindItemList() {\n        if (this.props.mind_item_list) {\n            return this.props.mind_item_list;\n        }\n        return [];\n    }\n    isVisible() {\n        return this.props.selected_organisation_id && this.props.selected_organisation_id.length > 0 &&\n            this.props.selected_organisation && this.props.selected_organisation.length > 0 &&\n            this.props.selected_knowledgebase_id && this.props.selected_knowledgebase_id.length > 0;\n    }\n    render() {\n        const theme = this.props.theme;\n        return (\n            <div>\n               <MindEdit open={this.state.mind_edit}\n                         theme={theme}\n                         mindItem={this.state.mind_item}\n                         onSave={(item) => this.save(item)}\n                         onError={(err) => this.props.setError(\"Error\", err)} />\n\n                {\n                    this.isVisible() &&\n\n                    <div style={styles.findBox}>\n                        <div style={styles.floatLeftLabel}>find items in the mind</div>\n                        <div style={styles.searchFloatLeft}>\n                            <input type=\"text\" value={this.props.mind_item_filter} autoFocus={true} style={styles.text} className={theme}\n                                   onKeyPress={(event) => this.handleSearchTextKeydown(event)}\n                                   onChange={(event) => {\n                                       this.props.setMindItemFilter(event.target.value)\n                                   }}/>\n                        </div>\n                        <div style={styles.floatLeft}>\n                            <img style={styles.search}\n                                 onClick={() => this.props.getMindItems()}\n                                 src=\"../images/dark-magnifying-glass.svg\" title=\"search\" alt=\"search\"/>\n                        </div>\n                    </div>\n                }\n                <br clear=\"both\" />\n\n                {\n                    this.isVisible() &&\n\n                    <Paper>\n                        <Table style={styles.tableStyle}>\n                            <TableHead>\n                                <TableRow>\n                                    <TableCell className='table-header'>id</TableCell>\n                                    <TableCell className='table-header'>expression</TableCell>\n                                    <TableCell className='table-header'>actions</TableCell>\n                                </TableRow>\n                            </TableHead>\n                            <TableBody style={theme === 'light' ? styles.tableLight : styles.tableDark}>\n                                {\n                                    this.getMindItemList().map((mindItem) => {\n                                        return (\n                                            <TableRow key={mindItem.id}>\n                                                <TableCell>\n                                                    <div style={styles.label}>{mindItem.id}</div>\n                                                </TableCell>\n                                                <TableCell>\n                                                    <div style={styles.label} title={Mind.toAnswer(mindItem)}>{mindItem.expression}</div>\n                                                </TableCell>\n                                                <TableCell>\n                                                    <div style={styles.linkButton} onClick={() => this.editMindItem(mindItem)}>\n                                                        <img src=\"../images/edit.svg\" style={styles.dlImageSize} title=\"edit mind-item\" alt=\"edit\"/>\n                                                    </div>\n                                                    <div style={styles.linkButton} onClick={() => this.deleteMindItemAsk(mindItem)}>\n                                                        <img src=\"../images/delete.svg\" style={styles.dlImageSize} title=\"remove mind-item\" alt=\"remove\"/>\n                                                    </div>\n                                                </TableCell>\n                                            </TableRow>\n                                        )\n                                    })\n                                }\n                                <TableRow>\n                                    <TableCell colSpan={3}>\n                                        {this.props.selected_knowledgebase_id.length > 0 &&\n                                            <div style={styles.uploader}>\n                                                <ProgramUpload kbId={this.props.selected_knowledgebase_id}\n                                                               organisationId={this.props.selected_organisation_id}\n                                                               onUploadDone={() => this.programUploaded()}\n                                                               onError={(errStr) => this.props.setError(\"Error\", errStr)}/>\n                                            </div>\n                                        }\n                                        {this.props.selected_knowledgebase_id.length > 0 &&\n                                            <div style={styles.export}>\n                                                <Button variant=\"contained\" color=\"secondary\" style={styles.exportButton}\n                                                        onClick={() => this.mindDump()}>Export</Button>\n\n                                            </div>\n                                        }\n                                        {this.props.selected_knowledgebase_id.length > 0 &&\n                                        <div style={styles.imageButton} onClick={() => this.newMindItem()}><img\n                                            style={styles.addImage} src=\"../images/add.svg\" title=\"new mind item\"\n                                            alt=\"new mind item\"/></div>\n                                        }\n                                        {this.props.selected_knowledgebase_id.length > 0 &&\n                                            <div style={styles.imageButton} onClick={() => this.deleteAllMindItemsAsk()}><img\n                                                style={styles.addImage} src=\"../images/delete.svg\" title=\"remove all mind items of this knowledgebase\"\n                                                alt=\"remove all mind items\"/></div>\n                                        }\n                                    </TableCell>\n                                </TableRow>\n                            </TableBody>\n                        </Table>\n\n                        <TablePagination\n                            style={theme === 'light' ? styles.tableLight : styles.tableDark}\n                            rowsPerPageOptions={[5, 10, 25]}\n                            component=\"div\"\n                            count={this.props.num_mind_items}\n                            rowsPerPage={this.props.mind_item_page_size}\n                            page={this.props.mind_item_page}\n                            backIconButtonProps={{\n                                'aria-label': 'Previous Page',\n                            }}\n                            nextIconButtonProps={{\n                                'aria-label': 'Next Page',\n                            }}\n                            onChangePage={(event, page) => this.props.setMindItemPage(page)}\n                            onChangeRowsPerPage={(event) => this.props.setMindItemPageSize(event.target.value)}\n                        />\n\n                    </Paper>\n                }\n\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = function(state) {\n    return {\n        error: state.appReducer.error,\n        error_title: state.appReducer.error_title,\n        theme: state.appReducer.theme,\n\n        mind_item_list: state.appReducer.mind_item_list,\n        mind_item_filter: state.appReducer.mind_item_filter,\n        mind_item_page: state.appReducer.mind_item_page,\n        mind_item_page_size: state.appReducer.mind_item_page_size,\n        num_mind_items: state.appReducer.num_mind_items,\n\n        bot_query: state.appReducer.bot_query,\n        bot_query_result_list: state.appReducer.bot_query_result_list,\n\n        selected_organisation_id: state.appReducer.selected_organisation_id,\n        selected_organisation: state.appReducer.selected_organisation,\n        selected_knowledgebase_id: state.appReducer.selected_knowledgebase_id,\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    dispatch => bindActionCreators(appCreators, dispatch)\n)(Mind);\n\n","import React from 'react';\n\nimport Grid from '@material-ui/core/Grid';\n\nimport {Api} from './api'\n\nconst styles = {\n    searchResult: {\n        marginLeft: '80px',\n    },\n    searchMessage: {\n    },\n    searchFooter: {\n        float: 'left',\n    },\n    searchInsideNav: {\n        marginTop: '5px',\n        marginLeft: '2px',\n        marginRight: '10px',\n        float: 'left',\n    },\n    insideNavButtonStyle: {\n        width: '16px',\n        float: 'left',\n        backgroundColor: '#d0d0d0',\n        marginRight: '3px',\n        padding: '2px',\n        color: '#808080',\n        borderRadius: '2px',\n        cursor: 'pointer',\n        webkitUserSelect: 'none',\n        mozUserSelect: 'none',\n        msUserSelect: 'none',\n        userSelect: 'none',\n    },\n    insideNavButtonStyleDisabled: {\n        width: '16px',\n        float: 'left',\n        backgroundColor: '#d0d0d030',\n        marginRight: '3px',\n        padding: '2px',\n        color: '#80808030',\n        borderRadius: '2px',\n        cursor: 'arrow',\n        webkitUserSelect: 'none',\n        mozUserSelect: 'none',\n        msUserSelect: 'none',\n        userSelect: 'none',\n    },\n    tinmanContainer: {\n        float: 'left',\n        width: '80%',\n    },\n    tinmanLeft: {\n        float: 'left',\n    },\n    tinmanScore: {\n        fontSize: '0.8em',\n    },\n    tinmanText: {\n        fontSize: '0.9em',\n    },\n    tinmanImageSize: {\n        width: '50px',\n        height: '50px',\n    },\n    imageBox: {\n        float: 'left',\n        marginTop: '20px',\n    },\n    imageHolder: {\n        float: 'left',\n        marginRight: '5px',\n    },\n    imageSize: {\n        maxWidth: '150px',\n        maxHeight: '150px',\n        borderRadius: '5px',\n    },\n    urlBox: {\n        marginTop: '5px',\n        float: 'left',\n    },\n    urlStyle: {\n        float: 'left',\n        fontSize: '0.8em',\n        marginRight: '10px',\n        marginLeft: '70px',\n        cursor: 'pointer',\n    },\n    graph_size: {\n        width: '600px',\n    },\n    spacer: {\n        height: '10px',\n    }\n};\n\n\nexport class BotSingleSearchResult extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            has_error: false,\n            item: props.item,\n            openDocument: props.openDocument,\n        };\n    }\n    UNSAFE_componentWillReceiveProps(nextProps) {\n        // see if we have data to start this dialog\n        if (nextProps) {\n            this.setState({\n                item: nextProps.item,\n                openDocument: nextProps.openDocument,\n            })\n        }\n    }\n    componentDidCatch(error, info) {\n        this.setState({ has_error: true });\n        console.log(error, info);\n    }\n    static highlight(str) {\n        if (str && str.replace) {\n            str = str.replace(/{hl1:}/g, \"<span class='hl1'>\");\n            str = str.replace(/{hl2:}/g, \"<span class='hl2'>\");\n            str = str.replace(/{hl3:}/g, \"<span class='hl3'>\");\n            str = str.replace(/{:hl1}/g, \"</span>\");\n            str = str.replace(/{:hl2}/g, \"</span>\");\n            str = str.replace(/{:hl3}/g, \"</span>\");\n            str = str.replace(/\\n/g, \"<br />\");\n        }\n        return str;\n    }\n\n    static setupGraph(list, x_name, y_name) {\n        if (list && list.length) {\n            let labels = [];\n            let values = [];\n            for (let i = 0; i < list.length; i++) {\n                const item = list[i];\n                if (item[x_name] && item[y_name]) {\n                    labels.push(item[x_name].toFixed(2));\n                    values.push(item[y_name]);\n                }\n            }\n            return {\n                labels: labels,\n                datasets: [\n                    {\n                        label: \"data\",\n                        fill: false,\n                        lineTension: 0.1,\n                        backgroundColor: 'rgba(192,75,75,0.4)',\n                        borderColor: 'rgba(192,75,75,1)',\n                        pointBackgroundColor: '#fff',\n                        pointBorderColor: 'rgba(192,75,75,1)',\n                        pointHoverBackgroundColor: 'rgba(192,75,75,1)',\n                        pointHoverBorderColor: 'rgba(220,220,220,1)',\n                        borderCapStyle: 'butt',\n                        borderDash: [],\n                        borderDashOffset: 0.0,\n                        borderJoinStyle: 'miter',\n                        pointBorderWidth: 1,\n                        pointHoverRadius: 5,\n                        pointHoverBorderWidth: 2,\n                        pointRadius: 1,\n                        pointHitRadius: 10,\n                        data: values\n                    }\n                ]\n            };\n        }\n        return {labels: []};\n    }\n\n    static updateResults(queryResultList) {\n        if (queryResultList) {\n            queryResultList.map((item, i) => {\n                if (item) {\n                    item.imageList = [];\n                    item.urlList = [];\n                    item.sayList = [];\n                    item.graphList = [];\n                    const text_list = [];\n                    if (item.actionList && item.actionList.length > 0) {\n\n                        const actions = item.actionList;\n                        for (let i = 0; i < actions.length; i++) {\n                            const action = actions[i];\n                            if (action['action'] === 'browser.write') {\n                                for (let j = 0; j < action['parameters'].length; j++) {\n                                    const param = action['parameters'][j];\n                                    text_list.push(param);\n                                }\n                            }\n                            else if (action['action'] === 'browser.say') {\n                                for (let j = 0; j < action['parameters'].length; j++) {\n                                    const param = action['parameters'][j];\n                                    item.sayList.push(param);\n                                }\n                            }\n                            else if (action['action'] === 'browser.image') {\n                                for (let j = 0; j < action['parameters'].length; j++) {\n                                    const param = action['parameters'][j];\n                                    item.imageList.push(param);\n                                }\n                            }\n                            else if (action['action'] === 'browser.url') {\n                                for (let j = 0; j < action['parameters'].length; j++) {\n                                    const param = action['parameters'][j];\n                                    item.urlList.push(param);\n                                }\n                            }\n                            else { // custom user command\n                                text_list.push(action['action']);\n                                text_list.push(\"(\");\n                                for (let j = 0; j < action['parameters'].length; j++) {\n                                    if (j > 0) {\n                                        text_list.push(\",\");\n                                    }\n                                    const param = action['parameters'][j];\n                                    if (item.context && item.context[param] !== undefined) {\n                                        text_list.push(item.context[param]);\n                                    } else {\n                                        text_list.push(param);\n                                    }\n                                }\n                                text_list.push(\")\\n\");\n                            }\n                        }\n                        item.display = text_list.join(' ');\n\n                        // context?\n                        if (item.context) {\n                            const list = [];\n                            Object.keys(item.context).forEach(function(key) {\n                                const value = item.context[key];\n                                list.push(key + ' = ' + value);\n                            });\n                            if (list.length > 0) {\n                                item.display += \"context: {\" + list.join(', ') + \"}\"\n                            }\n                        }\n\n                    } else { // nothing?\n                        item.display = '';\n                    }\n                    item.key = Api.createGuid(); // uid\n                    item.index = 0; // index of the text used for multi-text search results\n                }\n                return item;\n            })\n        }\n    }\n    render() {\n        if (this.state.has_error) {\n            return <h1>bot-single-search-result: Something went wrong.</h1>;\n        }\n        const item = this.state.item;\n        return (\n            <Grid container spacing={0} style={styles.gridWidth}>\n                <Grid item xs={1}>\n                    <div style={styles.tinmanScore}>{item.score.toFixed(2)}</div>\n                </Grid>\n                <Grid item xs={11}>\n                    <div style={styles.tinmanText} dangerouslySetInnerHTML={{__html: BotSingleSearchResult.highlight(item.display)}}/>\n                </Grid>\n                <Grid item xs={12}>\n                    {\n                        item.imageList.map((image) => {\n                            return (<div key={image} style={styles.imageHolder}><img alt=\"search result\" src={image} style={styles.imageSize} /></div>);\n                        })\n                    }\n                </Grid>\n                <Grid item xs={12}>\n                    {\n                        item.urlList.map((url) => {\n                            return (<div style={styles.urlStyle} key={url}><a href={url} style={{color: Api.getThemeColour()}} rel=\"noopener noreferrer\" target={\"_blank\"}>{url}</a></div>);\n                        })\n                    }\n                </Grid>\n                <Grid item xs={12}>\n                    <div style={styles.spacer}>&nbsp;</div>\n                </Grid>\n            </Grid>\n        );\n    }\n\n}\n\nexport default BotSingleSearchResult;\n\n","import React, {Component} from 'react';\n\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\n\nimport Comms from '../common/comms'\nimport BotSingleSearchResult from '../common/bot-single-search-result'\n\n// styles of form\nconst styles = {\n    busyBox: {\n        float: 'left',\n        marginLeft: '10px',\n        marginRight: '5px',\n        marginTop: '15px',\n        width: '32px',\n    },\n    searchTextBox: {\n        marginBottom: 16,\n        width: '400px',\n        float: 'left',\n    },\n    searchButtonBox: {\n        marginTop: '20px',\n        marginLeft: '20px',\n        float: 'left',\n    },\n    searchResultsBox: {\n        padding: '10px',\n        borderRadius: '4px',\n        border: '0.5px solid #ccc'\n    }\n};\n\n\nexport class MindSearchComponent extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            onError: props.onError,\n\n            botQuery: props.botQuery, // callback functions\n            setBotQueryString: props.setBotQueryString,\n\n            // search system\n            botQueryString: props.botQueryString,\n            // results\n            queryResultList: props.queryResultList,\n            // a result list if applicable after asking\n            hasSearched: false,\n        };\n\n    }\n    componentDidCatch(error, info) {\n        this.props.onError(error, info);\n        console.log(error, info);\n    }\n    UNSAFE_componentWillReceiveProps(nextProps) {\n        this.setState({\n            botQueryString: nextProps.botQueryString,\n            queryResultList: nextProps.queryResultList,\n            setBotQueryString: nextProps.setBotQueryString,\n            botQuery: nextProps.botQuery,\n            onError: nextProps.onError,\n        })\n    }\n    handleSearchTextKeydown(event) {\n        if (event.key === \"Enter\") {\n            this.doClickSearch();\n        }\n    }\n    doClickSearch() {\n        if (this.props.botQuery) {\n            this.setState({hasSearched: true});\n            this.props.botQuery();\n        }\n    }\n    getResultList() {\n        const copy = JSON.parse(JSON.stringify(this.props.queryResultList));\n        BotSingleSearchResult.updateResults(copy);\n        return copy;\n    }\n    openDocument(url) {\n        const session_id = Comms.getSession();\n        const window_url = Comms.toUrl('/document/' + encodeURIComponent(session_id) + '/' + encodeURIComponent(url));\n        window.open(window_url, \"_blank\");\n    }\n    render() {\n        return (\n            <div>\n                <div style={styles.busyBox}>\n                    <img alt=\"busy\" src=\"../images/busy2.gif\"\n                         style={{'display': this.state.busy ? '' : 'none', width: '32px'}}/>\n                </div>\n                <div style={styles.searchTextBox}>\n                    <TextField\n                        onChange={(event) => this.props.setBotQueryString(event.target.value)}\n                        onKeyPress={(event) => this.handleSearchTextKeydown(event)}\n                        label=\"test the mind by asking it something\"\n                        fullWidth={true}\n                        value={this.props.botQueryString}\n                    />\n                </div>\n                <div style={styles.searchButtonBox}>\n                    <Button variant=\"contained\"\n                        color=\"secondary\"\n                        onClick={() => this.doClickSearch()}>\n                        Ask\n                    </Button>\n                </div>\n\n                <div style={{clear: 'both'}}/>\n                <br/>\n\n                {this.state.queryResultList && this.state.queryResultList.length > 0 &&\n                <div>\n                    <div style={styles.searchResultsBox}>\n                        {\n                            this.getResultList().map((item) => {\n                                return (<BotSingleSearchResult key={item.key} item={item} openDocument={(url) => this.openDocument(url)} />)\n                            })\n                        }\n                    </div>\n\n                </div>\n                }\n\n                {\n                    this.state.queryResultList && this.state.queryResultList.length === 0 && this.state.hasSearched &&\n                    <div>no results</div>\n                }\n\n            </div>\n        );\n    }\n}\n\nexport default MindSearchComponent;\n","import React from 'react';\n\nimport {Api} from '../common/api'\nimport Grid from \"@material-ui/core/Grid\";\nimport {MindSearchComponent} from \"./mind-search-component\";\n\nimport {connect} from \"react-redux\";\nimport {bindActionCreators} from \"redux\";\nimport {appCreators} from \"../actions/appActions\";\nimport Comms from \"../common/comms\";\n\n\nconst styles = {\n    gridWidth: {\n        width: '900px',\n    },\n    queryMindLabel: {\n        marginTop: '12px',\n        padding: '10px',\n        color: '#555',\n        float: 'right',\n    },\n};\n\n\nexport class MindTest extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            mind_item: null,\n            mind_edit: false,\n        };\n    }\n    componentDidCatch(error, info) {\n        this.props.setError(error, info);\n        console.log(error, info);\n    }\n    componentDidMount() {\n    }\n    deleteMindItemAsk(mindItem) {\n        if (mindItem) {\n            this.props.openDialog(\"are you sure you want to remove id \" + mindItem.id + \"?<br/><br/>(\" + mindItem.expression + \")\",\n                                    \"Remove Mind Entry\", (action) => { this.deleteMindItem(action) });\n            this.setState({mind_item: mindItem});\n        }\n    }\n    deleteMindItem(action) {\n        if (action && Api.defined(this.state.mind_item)) {\n            this.props.deleteMindItem(this.state.mind_item.id);\n        }\n        if (this.props.closeDialog) {\n            this.props.closeDialog();\n        }\n    }\n    deleteAllMindItemsAsk() {\n        this.props.openDialog(\"are you sure you want to remove all mind-items of this knowledge-base?\",\n            \"Remove All Mind Items\", (action) => { this.deleteAllMindItems(action) });\n    }\n    deleteAllMindItems(action) {\n        if (action) {\n            this.props.deleteAllMindItems();\n        }\n        if (this.props.closeDialog) {\n            this.props.closeDialog();\n        }\n    }\n    handleSearchTextKeydown(event) {\n        if (event.key === \"Enter\") {\n            this.props.getMindItems();\n        }\n    }\n    static toAnswer(mindItem) {\n        let str = \"\";\n        if (mindItem && mindItem.actionList) {\n            for (const action of mindItem.actionList) {\n                if (action && action.action === \"browser.write\" && action.parameters) {\n                    for (const param of action.parameters) {\n                        str = str + param.replace(/<br \\/>/g, \"\\n\");\n                    }\n                }\n            }\n        }\n        return str;\n    }\n    editMindItem(mindItem) {\n        this.setState({mind_edit: true, mind_item: mindItem});\n    }\n    newMindItem() {\n        this.setState({mind_edit: true, mind_item: {\n                id: Api.createGuid(),\n                preContext: \"\",\n                postContext: \"\",\n                expression: \"\",\n                actionList: [],\n                metadata: \"\"\n            }\n            });\n    }\n    mindDump() {\n        window.open(Comms.get_mind_dump_url(this.props.selected_organisation_id, this.props.selected_knowledgebase_id), '_blank');\n    }\n    save(mindItem) {\n        if (mindItem) {\n            if (mindItem.expression.length > 0 && mindItem.actionList.length > 0) {\n                this.props.saveMindItem(mindItem);\n                this.setState({mind_edit: false});\n            } else {\n                this.props.setError(\"Error Saving Mind Entry\", \"mind-item must have an expression and actions\");\n            }\n        } else {\n            this.setState({mind_edit: false});\n        }\n    }\n    getMindItemList() {\n        if (this.props.mind_item_list) {\n            return this.props.mind_item_list;\n        }\n        return [];\n    }\n    render() {\n        return (\n            <div>\n\n                <Grid container spacing={1} style={styles.gridWidth}>\n\n                    {this.props.selected_knowledgebase_id &&\n                    <Grid item xs={12}>\n                        <MindSearchComponent onError={(title, err) => this.props.setError(title, err)}\n                                             botQuery={this.props.botQuery}\n                                             botQueryString={this.props.bot_query}\n                                             setBotQueryString={this.props.setBotQueryString}\n                                             queryResultList={this.props.bot_query_result_list} />\n                    </Grid>\n                    }\n\n                </Grid>\n\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = function(state) {\n    return {\n        error: state.appReducer.error,\n        error_title: state.appReducer.error_title,\n\n        bot_query: state.appReducer.bot_query,\n        bot_query_result_list: state.appReducer.bot_query_result_list,\n\n        selected_organisation_id: state.appReducer.selected_organisation_id,\n        selected_knowledgebase_id: state.appReducer.selected_knowledgebase_id,\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    dispatch => bindActionCreators(appCreators, dispatch)\n)(MindTest);\n\n","import React, {Component} from 'react';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Button from '@material-ui/core/Button';\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\n\n\nexport class SynonymEdit extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            has_error: false,\n            open: props.open,\n            synonym: props.synonym,\n            onSave: props.onSave,\n            onError: props.onError,\n            words: props.synonym && props.synonym.words ? props.synonym.words : \"\",\n        };\n    }\n    componentDidCatch(error, info) {\n        this.setState({ has_error: true });\n        console.log(error, info);\n    }\n    handleSave() {\n        if (this.state.onSave) {\n            const syn = this.state.synonym;\n            syn.words = this.state.words;\n            this.state.onSave(syn);\n        }\n    }\n    handleCancel() {\n        if (this.state.onSave) {\n            this.state.onSave(null);\n        }\n    }\n    UNSAFE_componentWillReceiveProps(props) {\n        this.setState({\n            open: props.open,\n            synonym: props.synonym,\n            onSave: props.onSave,\n            onError: props.onError,\n            words: props.synonym && props.synonym.words ? props.synonym.words : \"\",\n        })\n    }\n    render() {\n        if (this.state.has_error) {\n            return <h1>synonym-edit.js: Something went wrong.</h1>;\n        }\n        return (\n            <Dialog aria-labelledby=\"alert-dialog-title\"\n                    aria-describedby=\"alert-dialog-description\"\n                    open={this.state.open}\n                    fullWidth={true}\n                    disableBackdropClick={true}\n                    disableEscapeKeyDown={true}\n                    maxWidth=\"lg\"\n                    onClose={() => this.handleCancel()} >\n\n                <DialogTitle id=\"alert-dialog-title\" className={this.props.theme}>Edit Synonym</DialogTitle>\n                <DialogContent className={this.props.theme}>\n                    <Grid container spacing={1}>\n\n                        <Grid item xs={1} />\n                        <Grid item xs={1}>\n                            <div>synonyms</div>\n                        </Grid>\n                        <Grid item xs={9}>\n                            <TextField\n                                autoFocus={true}\n                                onChange={(event) => this.setState({words: event.target.value})}\n                                placeholder=\"words\"\n                                spellCheck={false}\n                                multiline={true}\n                                rows={5}\n                                variant=\"outlined\"\n                                fullWidth={true}\n                                value={this.state.words}\n                            />\n                        </Grid>\n                        <Grid item xs={1} />\n\n                    </Grid>\n                </DialogContent>\n                <DialogActions className={this.props.theme}>\n                    <Button color=\"primary\" onClick={() => this.handleCancel()}>Cancel</Button>\n                    <Button variant=\"contained\" color=\"secondary\" onClick={() => this.handleSave()}>Save</Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nexport default SynonymEdit;\n","import React from 'react';\n\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\n\nimport {Api} from '../common/api'\nimport {SynonymEdit} from \"./synonym-edit\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\n\nimport {connect} from \"react-redux\";\nimport {bindActionCreators} from \"redux\";\nimport {appCreators} from \"../actions/appActions\";\n\n\nconst styles = {\n    tableStyle: {\n        minWidth: '800px',\n        width: '900px',\n    },\n    tableLight: {\n    },\n    tableDark: {\n        background: '#d0d0d0',\n    },\n    smallTableHeaderStyle: {\n        background: '#555',\n        fontSize: '0.95em',\n        color: '#fff',\n        minWidth: '20px',\n    },\n    actionTableHeaderStyle: {\n        background: '#555',\n        fontSize: '0.95em',\n        color: '#fff',\n        minWidth: '100px',\n    },\n    tableHeaderStyle: {\n        background: '#555',\n        fontSize: '0.95em',\n        color: '#fff',\n        minWidth: '400px',\n        width: '600px',\n    },\n    searchTableHeaderStyle: {\n        background: '#555',\n        fontSize: '0.95em',\n        color: '#fff',\n        minWidth: '200px',\n        width: '340px',\n    },\n    knowledgeSelect: {\n        padding: '5px',\n        marginBottom: '40px',\n    },\n    lhs: {\n        float: 'left',\n        width: '150px',\n        marginTop: '-10px',\n        color: '#aaa',\n    },\n    rhs: {\n        float: 'left',\n    },\n    label: {\n        padding: '10px',\n        color: '#555',\n    },\n    gridWidth: {\n        width: '900px',\n    },\n    hr: {\n        border: '0.1px solid #f0f0f0',\n        width: '100%',\n    },\n    imageButton: {\n        float: 'right',\n        padding: '10px',\n        color: '#888',\n        cursor: 'pointer',\n    },\n    addImage: {\n        width: '25px',\n    },\n    linkButton: {\n        float: 'left',\n        padding: '10px',\n        color: '#888',\n        cursor: 'pointer',\n    },\n    dlImageSize: {\n        width: '24px',\n    },\n    search: {\n        marginTop: '2px',\n        marginLeft: '15px',\n        width: '18px',\n        color: '#000',\n    },\n    floatLeftLabel: {\n        float: 'left',\n        marginRight: '6px',\n        marginTop: '4px',\n        fontSize: '0.9em',\n        fontWeight: '500',\n    },\n    searchFloatLeft: {\n        float: 'left',\n    },\n    text: {\n        border: '1px solid #808080',\n        borderRadius: '4px',\n        padding: '4px',\n        width: '280px',\n    },\n    floatLeft: {\n        float: 'left',\n    },\n    manualUploadSection: {\n        marginTop: '50px',\n    },\n    findBox: {\n        padding: '10px',\n        marginBottom: '5px',\n        float: 'right',\n    },\n};\n\n\nexport class Synonyms extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            synonym: {},\n            synonym_edit: false,\n\n            openDialog: props.openDialog,\n            closeDialog: props.closeDialog,\n\n            // pagination\n            page_size: 5,\n            page: 0,\n        };\n    }\n    UNSAFE_componentWillReceiveProps(nextProps) {\n        this.setState({\n            openDialog: nextProps.openDialog,\n            closeDialog: nextProps.closeDialog,\n        });\n    }\n    componentDidCatch(error, info) {\n        this.props.setError(error, info);\n        console.log(error, info);\n    }\n    changePage(page) {\n        this.setState({page: page});\n    }\n    changePageSize(page_size) {\n        this.setState({page_size: page_size});\n    }\n    getSynonymList() {\n        return this.props.synonym_list;\n    }\n    deleteSynonymAsk(synonym) {\n        if (synonym) {\n            this.props.openDialog(\"are you sure you want to remove id \" + synonym.id + \"?<br/><br/>(\" + synonym.words + \")\",\n                                    \"Remove Synonym\", (action) => { this.deleteSynonym(action) });\n            this.setState({synonym: synonym});\n        }\n    }\n    deleteSynonym(action) {\n        if (action && this.state.synonym) {\n            this.props.deleteSynonym(this.state.synonym.id);\n        }\n        if (this.props.closeDialog) {\n            this.props.closeDialog();\n        }\n        this.setState({synonym_edit: false, synonym: {}});\n    }\n    handleSearchTextKeydown(event) {\n        if (event.key === \"Enter\") {\n            this.props.getSynonyms();\n        }\n    }\n    editSynonym(synonym) {\n        this.setState({synonym_edit: true, synonym: synonym});\n    }\n    newSynonym() {\n        this.setState({synonym_edit: true, synonym: {\n                id: Api.createGuid(),\n                words: \"\",\n            }});\n    }\n    save(synonym) {\n        if (synonym) {\n            if (synonym.words.length > 0 && synonym.words.indexOf(\",\") > 0) {\n                this.props.saveSynonym(synonym);\n                this.setState({synonym_edit: false, synonym: {}});\n            } else {\n                this.props.setError(\"Error Saving Synonym\", \"synonym cannot be empty and need more than one item\");\n            }\n        } else {\n            this.setState({synonym_edit: false, synonym: {}});\n        }\n    }\n    isVisible() {\n        return this.props.selected_organisation_id && this.props.selected_organisation_id.length > 0 &&\n            this.props.selected_organisation && this.props.selected_organisation.length > 0 &&\n            this.props.selected_knowledgebase_id && this.props.selected_knowledgebase_id.length > 0;\n    }\n    render() {\n        const theme = this.props.theme;\n        return (\n            <div>\n                <SynonymEdit open={this.state.synonym_edit}\n                             theme={theme}\n                             synonym={this.state.synonym}\n                             onSave={(item) => this.save(item)}\n                             onError={(err) => this.props.setError(\"Error\", err)} />\n\n                {\n                    this.isVisible() &&\n\n                    <div style={styles.findBox}>\n                        <div style={styles.floatLeftLabel}>find synonyms</div>\n                        <div style={styles.searchFloatLeft}>\n                            <input type=\"text\" value={this.props.synonym_filter} autoFocus={true} style={styles.text} className={theme}\n                                   onKeyPress={(event) => this.handleSearchTextKeydown(event)}\n                                   onChange={(event) => {\n                                       this.props.setSynonymFilter(event.target.value)\n                                   }}/>\n                        </div>\n                        <div style={styles.floatLeft}>\n                            <img style={styles.search}\n                                 onClick={() => this.props.getSynonyms()}\n                                 src=\"../images/dark-magnifying-glass.svg\" title=\"search\" alt=\"search\"/>\n                        </div>\n                    </div>\n                }\n\n                <br clear=\"both\" />\n\n                {\n                    this.isVisible() &&\n                    <Paper>\n                        <Table style={styles.tableStyle}>\n                            <TableHead>\n                                <TableRow>\n                                    <TableCell className='table-header'>id</TableCell>\n                                    <TableCell className='table-header'>synonyms</TableCell>\n                                    <TableCell className='table-header'>actions</TableCell>\n                                </TableRow>\n                            </TableHead>\n                            <TableBody style={theme === 'light' ? styles.tableLight : styles.tableDark}>\n                                {\n                                    this.getSynonymList().map((synonym) => {\n                                        return (\n                                            <TableRow key={synonym.id}>\n                                                <TableCell>\n                                                    <div style={styles.label}>{synonym.id}</div>\n                                                </TableCell>\n                                                <TableCell>\n                                                    <div style={styles.label}>{synonym.words}</div>\n                                                </TableCell>\n                                                <TableCell>\n                                                    <div style={styles.linkButton} onClick={() => this.editSynonym(synonym)}>\n                                                        <img src=\"../images/edit.svg\" style={styles.dlImageSize} title=\"edit synonym\" alt=\"edit\"/>\n                                                    </div>\n                                                    <div style={styles.linkButton} onClick={() => this.deleteSynonymAsk(synonym)}>\n                                                        <img src=\"../images/delete.svg\" style={styles.dlImageSize} title=\"remove synonym\" alt=\"remove\"/>\n                                                    </div>\n                                                </TableCell>\n                                            </TableRow>\n                                        )\n                                    })\n                                }\n                                <TableRow>\n                                    <TableCell/>\n                                    <TableCell/>\n                                    <TableCell>\n                                        {this.isVisible() &&\n                                        <div style={styles.imageButton} onClick={() => this.newSynonym()}><img\n                                            style={styles.addImage} src=\"../images/add.svg\" title=\"new synonym\"\n                                            alt=\"new synonym\"/></div>\n                                        }\n                                    </TableCell>\n                                </TableRow>\n\n                            </TableBody>\n\n                        </Table>\n\n                        <TablePagination\n                            style={theme === 'light' ? styles.tableLight : styles.tableDark}\n                            rowsPerPageOptions={[5, 10, 25]}\n                            component=\"div\"\n                            count={this.props.num_synonyms}\n                            rowsPerPage={this.props.synonym_page_size}\n                            page={this.props.synonym_page}\n                            backIconButtonProps={{\n                                'aria-label': 'Previous Page',\n                            }}\n                            nextIconButtonProps={{\n                                'aria-label': 'Next Page',\n                            }}\n                            onChangePage={(event, page) => this.props.setSynonymPage(page)}\n                            onChangeRowsPerPage={(event) => this.props.setSynonymPageSize(event.target.value)}\n                        />\n\n                    </Paper>\n                }\n\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = function(state) {\n    return {\n        error: state.appReducer.error,\n        error_title: state.appReducer.error_title,\n        theme: state.appReducer.theme,\n\n        synonym_list: state.appReducer.synonym_list,\n        synonym_filter: state.appReducer.synonym_filter,\n        synonym_page: state.appReducer.synonym_page,\n        synonym_page_size: state.appReducer.synonym_page_size,\n        num_synonyms: state.appReducer.num_synonyms,\n\n        selected_organisation_id: state.appReducer.selected_organisation_id,\n        selected_organisation: state.appReducer.selected_organisation,\n        selected_knowledgebase_id: state.appReducer.selected_knowledgebase_id,\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    dispatch => bindActionCreators(appCreators, dispatch)\n)(Synonyms);\n\n","import React, {Component} from 'react';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Button from '@material-ui/core/Button';\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\n\n\nconst styles = {\n    labelAdjustment: {\n        marginTop: '17px',\n    }\n};\n\nexport class SemanticEdit extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            has_error: false,\n            open: props.open,\n            semantic: props.semantic,\n            onSave: props.onSave,\n            onError: props.onError,\n            word: props.semantic && props.semantic.word ? props.semantic.word: \"\",\n            semantic_str: props.semantic && props.semantic.semantic ? props.semantic.semantic: \"\",\n        };\n    }\n    componentDidCatch(error, info) {\n        this.setState({ has_error: true });\n        console.log(error, info);\n    }\n    handleSave() {\n        if (this.state.onSave) {\n            this.state.onSave({\"word\": this.state.word, \"prevWord\": \"\", \"semantic\": this.state.semantic_str});\n        }\n    }\n    handleCancel() {\n        if (this.state.onSave) {\n            this.state.onSave(null);\n        }\n    }\n    UNSAFE_componentWillReceiveProps(props) {\n        this.setState({\n            open: props.open,\n            semantic: props.semantic,\n            onSave: props.onSave,\n            onError: props.onError,\n            word: props.semantic && props.semantic.word ? props.semantic.word: \"\",\n            semantic_str: props.semantic && props.semantic.semantic ? props.semantic.semantic: \"\",\n        })\n    }\n    render() {\n        if (this.state.has_error) {\n            return <h1>semantic-edit.js: Something went wrong.</h1>;\n        }\n        const theme = this.props.theme;\n        return (\n            <Dialog aria-labelledby=\"alert-dialog-title\"\n                    aria-describedby=\"alert-dialog-description\"\n                    open={this.state.open}\n                    disableBackdropClick={true}\n                    disableEscapeKeyDown={true}\n                    fullWidth={true}\n                    maxWidth=\"lg\"\n                    onClose={() => this.handleCancel()} >\n\n                <DialogTitle id=\"alert-dialog-title\" className={theme}>Edit Semantic</DialogTitle>\n                <DialogContent className={theme}>\n                    <Grid container spacing={1}>\n\n                        <Grid item xs={1} />\n                        <Grid item xs={1}>\n                            <div style={styles.labelAdjustment}>word</div>\n                        </Grid>\n                        <Grid item xs={9}>\n                            <TextField\n                                autoFocus={true}\n                                onChange={(event) => this.setState({word: event.target.value})}\n                                placeholder=\"word\"\n                                variant=\"outlined\"\n                                fullWidth={true}\n                                value={this.state.word}\n                            />\n                        </Grid>\n                        <Grid item xs={1} />\n\n                        <Grid item xs={1} />\n                        <Grid item xs={1}>\n                            <div style={styles.labelAdjustment}>semantic</div>\n                        </Grid>\n                        <Grid item xs={9}>\n                            <TextField\n                                onChange={(event) => this.setState({semantic_str: event.target.value})}\n                                placeholder=\"semantic\"\n                                variant=\"outlined\"\n                                fullWidth={true}\n                                value={this.state.semantic_str}\n                            />\n                        </Grid>\n                        <Grid item xs={1} />\n\n                    </Grid>\n                </DialogContent>\n                <DialogActions className={theme}>\n                    <Button color=\"primary\" onClick={() => this.handleCancel()}>Cancel</Button>\n                    <Button variant=\"contained\" color=\"secondary\" onClick={() => this.handleSave()}>Save</Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nexport default SemanticEdit;\n","import React from 'react';\n\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\n\nimport {SemanticEdit} from \"./semantic-edit\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\n\nimport {connect} from \"react-redux\";\nimport {bindActionCreators} from \"redux\";\nimport {appCreators} from \"../actions/appActions\";\n\n\n\nconst styles = {\n    tableStyle: {\n        minWidth: '900px',\n        width: '900px',\n    },\n    tableLight: {\n    },\n    tableDark: {\n        background: '#d0d0d0',\n    },\n    smallTableHeaderStyle: {\n        background: '#555',\n        fontSize: '0.95em',\n        color: '#fff',\n        minWidth: '20px',\n    },\n    actionTableHeaderStyle: {\n        background: '#555',\n        fontSize: '0.95em',\n        color: '#fff',\n        minWidth: '100px',\n    },\n    tableHeaderStyle: {\n        background: '#555',\n        fontSize: '0.95em',\n        color: '#fff',\n        minWidth: '400px',\n        width: '600px',\n    },\n    searchTableHeaderStyle: {\n        background: '#555',\n        fontSize: '0.95em',\n        color: '#fff',\n        minWidth: '200px',\n        width: '340px',\n    },\n    knowledgeSelect: {\n        padding: '5px',\n        marginBottom: '40px',\n    },\n    lhs: {\n        float: 'left',\n        width: '150px',\n        marginTop: '-10px',\n        color: '#aaa',\n    },\n    rhs: {\n        float: 'left',\n    },\n    label: {\n        padding: '10px',\n        color: '#555',\n    },\n    gridWidth: {\n        width: '900px',\n    },\n    hr: {\n        border: '0.1px solid #f0f0f0',\n        width: '100%',\n    },\n    imageButton: {\n        float: 'right',\n        padding: '10px',\n        color: '#888',\n        cursor: 'pointer',\n    },\n    addImage: {\n        width: '25px',\n    },\n    linkButton: {\n        float: 'left',\n        padding: '10px',\n        color: '#888',\n        cursor: 'pointer',\n    },\n    dlImageSize: {\n        width: '24px',\n    },\n    search: {\n        marginTop: '2px',\n        marginLeft: '15px',\n        width: '18px',\n        color: '#000',\n    },\n    floatLeftLabel: {\n        float: 'left',\n        marginRight: '6px',\n        marginTop: '4px',\n        fontSize: '0.9em',\n        fontWeight: '500',\n    },\n    searchFloatLeft: {\n        float: 'left',\n    },\n    text: {\n        border: '1px solid #808080',\n        borderRadius: '4px',\n        padding: '4px',\n        width: '280px',\n    },\n    floatLeft: {\n        float: 'left',\n    },\n    manualUploadSection: {\n        marginTop: '50px',\n    },\n    findBox: {\n        padding: '10px',\n        marginBottom: '5px',\n        float: 'right',\n    },\n};\n\n\nexport class Semantics extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            semantic: {},\n            prev_semantic: {word: \"\", semantic: \"\"},\n            semantic_edit: false,\n\n            openDialog: props.openDialog,\n            closeDialog: props.closeDialog,\n\n            // pagination\n            page_size: 5,\n            page: 0,\n        };\n    }\n    UNSAFE_componentWillReceiveProps(nextProps) {\n        this.setState({\n            openDialog: nextProps.openDialog,\n            closeDialog: nextProps.closeDialog,\n        });\n    }\n    componentDidCatch(error, info) {\n        this.props.setError(error, info);\n        console.log(error, info);\n    }\n    changePage(page) {\n        this.setState({page: page});\n    }\n    changePageSize(page_size) {\n        this.setState({page_size: page_size});\n    }\n    getSemanticList() {\n        return this.props.semantic_list;\n    }\n    deleteSemanticAsk(semantic) {\n        if (semantic) {\n            this.props.openDialog(\"are you sure you want to remove \" + semantic.word + \" is a \" + semantic.semantic + \"?\",\n                \"Remove Semantic\", (action) => { this.deleteSemantic(action) });\n            this.setState({semantic: semantic});\n        }\n    }\n    deleteSemantic(action) {\n        if (action && this.state.semantic) {\n            this.props.deleteSemantic(this.state.semantic.word);\n        }\n        if (this.props.closeDialog) {\n            this.props.closeDialog();\n        }\n        this.setState({semantic_edit: false, semantic: {}});\n    }\n    handleSearchTextKeydown(event) {\n        if (event.key === \"Enter\") {\n            this.props.getSemantics();\n        }\n    }\n    editSemantic(semantic) {\n        this.setState({semantic_edit: true,\n            prev_semantic: {\n                word: semantic.word,\n                semantic: semantic.semantic,\n            },\n            semantic: {\n                word: semantic.word,\n                semantic: semantic.semantic,\n            }});\n    }\n    newSemantic() {\n        this.setState({semantic_edit: true,\n            prev_semantic: {\n                word: \"\",\n                semantic: \"\",\n            },\n            semantic: {\n                word: \"\",\n                semantic: \"\",\n            }});\n    }\n    save(semantic) {\n        if (semantic) {\n            if (semantic.word.length > 0 && semantic.semantic.length > 0) {\n                // delete the previous semantic?\n                if (this.state.prev_semantic.word !== \"\" && this.state.prev_semantic.word !== semantic.word) {\n                    semantic.prevWord = this.state.prev_semantic.word;\n                } else {\n                    semantic.prevWord = '';\n                }\n                this.props.saveSemantic(semantic);\n                this.setState({semantic_edit: false, semantic: {}});\n                if (this.state.closeDialog) {\n                    this.state.closeDialog();\n                }\n            } else {\n                this.props.setError(\"Error Saving Semantic\", \"word and semantic must have a value\");\n            }\n        } else {\n            this.setState({semantic_edit: false, semantic: {}});\n        }\n    }\n    isVisible() {\n        return this.props.selected_organisation_id && this.props.selected_organisation_id.length > 0 &&\n            this.props.selected_organisation && this.props.selected_organisation.length > 0 &&\n            this.props.selected_knowledgebase_id && this.props.selected_knowledgebase_id.length > 0;\n    }\n    render() {\n        const theme = this.props.theme;\n        return (\n            <div>\n                <SemanticEdit open={this.state.semantic_edit}\n                              theme={theme}\n                              semantic={this.state.semantic}\n                              onSave={(item) => this.save(item)}\n                              onError={(err) => this.props.setError(\"Error\", err)} />\n\n                {\n                    this.isVisible() &&\n\n                    <div style={styles.findBox}>\n                        <div style={styles.floatLeftLabel}>find semantics</div>\n                        <div style={styles.searchFloatLeft}>\n                            <input type=\"text\" value={this.props.semantic_filter} autoFocus={true} style={styles.text} className={theme}\n                                   onKeyPress={(event) => this.handleSearchTextKeydown(event)}\n                                   onChange={(event) => {\n                                       this.props.setSemanticFilter(event.target.value);\n                                   }}/>\n                        </div>\n                        <div style={styles.floatLeft}>\n                            <img style={styles.search}\n                                 onClick={() => this.props.getSemantics()}\n                                 src=\"../images/dark-magnifying-glass.svg\" title=\"search\" alt=\"search\"/>\n                        </div>\n                    </div>\n                }\n\n                <br clear=\"both\" />\n\n                {\n                    this.isVisible() &&\n                    <Paper>\n                        <Table style={styles.tableStyle}>\n                            <TableHead>\n                                <TableRow>\n                                    <TableCell className='table-header'>word</TableCell>\n                                    <TableCell className='table-header'>semantic</TableCell>\n                                    <TableCell className='table-header'>actions</TableCell>\n                                </TableRow>\n                            </TableHead>\n                            <TableBody style={theme === 'light' ? styles.tableLight : styles.tableDark}>\n                                {\n                                    this.getSemanticList().map((semantic) => {\n                                        return (\n                                            <TableRow key={semantic.word + \":\" + semantic.semantic}>\n                                                <TableCell>\n                                                    <div style={styles.label}>{semantic.word}</div>\n                                                </TableCell>\n                                                <TableCell>\n                                                    <div style={styles.label}>{semantic.semantic}</div>\n                                                </TableCell>\n                                                <TableCell>\n                                                    <div style={styles.linkButton} onClick={() => this.editSemantic(semantic)}>\n                                                        <img src=\"../images/edit.svg\" style={styles.dlImageSize} title=\"edit semantic\" alt=\"edit\"/>\n                                                    </div>\n                                                    <div style={styles.linkButton} onClick={() => this.deleteSemanticAsk(semantic)}>\n                                                        <img src=\"../images/delete.svg\" style={styles.dlImageSize} title=\"remove semantic\" alt=\"remove\"/>\n                                                    </div>\n                                                </TableCell>\n                                            </TableRow>\n                                        )\n                                    })\n                                }\n                                <TableRow>\n                                    <TableCell/>\n                                    <TableCell/>\n                                    <TableCell>\n                                        {this.isVisible() &&\n                                        <div style={styles.imageButton} onClick={() => this.newSemantic()}><img\n                                            style={styles.addImage} src=\"../images/add.svg\" title=\"new semantic\"\n                                            alt=\"new semantic\"/></div>\n                                        }\n                                    </TableCell>\n                                </TableRow>\n                            </TableBody>\n                        </Table>\n\n                        <TablePagination\n                            style={theme === 'light' ? styles.tableLight : styles.tableDark}\n                            rowsPerPageOptions={[5, 10, 25]}\n                            component=\"div\"\n                            count={this.props.num_semantics}\n                            rowsPerPage={this.props.semantic_page_size}\n                            page={this.props.semantic_page}\n                            backIconButtonProps={{\n                                'aria-label': 'Previous Page',\n                            }}\n                            nextIconButtonProps={{\n                                'aria-label': 'Next Page',\n                            }}\n                            onChangePage={(event, page) => this.props.setSemanticPage(page)}\n                            onChangeRowsPerPage={(event) => this.props.setSemanticPageSize(event.target.value)}\n                        />\n\n                    </Paper>\n                }\n\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = function(state) {\n    return {\n        error: state.appReducer.error,\n        error_title: state.appReducer.error_title,\n        theme: state.appReducer.theme,\n\n        semantic_list: state.appReducer.semantic_list,\n        semantic_filter: state.appReducer.semantic_filter,\n        semantic_page: state.appReducer.semantic_page,\n        semantic_page_size: state.appReducer.semantic_page_size,\n        num_semantics: state.appReducer.num_semantics,\n\n        selected_organisation_id: state.appReducer.selected_organisation_id,\n        selected_organisation: state.appReducer.selected_organisation,\n        selected_knowledgebase_id: state.appReducer.selected_knowledgebase_id,\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    dispatch => bindActionCreators(appCreators, dispatch)\n)(Semantics);\n\n","import React, {Component} from 'react';\n\nimport {Api} from '../common/api'\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Button from '@material-ui/core/Button';\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\n\nconst styles = {\n    container: {\n        float: \"left\",\n        marginBottom: \"10px\",\n    },\n    textFieldStyle: {\n        float: \"left\",\n        width: \"700px\",\n    },\n    imageButton: {\n        float: 'right',\n        padding: '10px',\n        color: '#888',\n        cursor: 'pointer',\n    },\n    addImage: {\n        width: '25px',\n    },\n    deleteButton: {\n        float: 'left',\n        padding: '10px',\n        color: '#888',\n        cursor: 'pointer',\n    },\n    deleteImageSize: {\n        width: '24px',\n    },\n};\n\nexport class SynSetEdit extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            has_error: false,\n            open: props.open,\n            synSet: props.synSet,\n            onSave: props.onSave,\n            onError: props.onError,\n            word: Api.defined(props.synSet) && Api.defined(props.synSet.word) ? props.synSet.word : \"\",\n            cloud_list: SynSetEdit.getWordCloudList(props.synSet),\n        };\n    }\n    componentDidCatch(error, info) {\n        this.setState({ has_error: true });\n        console.log(error, info);\n    }\n    static getWordCloudList(synSet) {\n        let list = [];\n        if (Api.defined(synSet) && Api.defined(synSet.wordCloudCsvList)) {\n            list = synSet.wordCloudCsvList;\n        }\n        while (list.length < 2) {\n            list.push(\"\");\n        }\n        return list;\n    }\n    handleSave() {\n        if (this.state.onSave) {\n            const syn = this.state.synSet;\n            syn.word = this.state.word.trim();\n            syn.wordCloudCsvList = this.state.cloud_list;\n\n            const index = syn.word.indexOf(' ');\n            if (index >= 0) {\n                this.state.onError(\"syn-sets must be a single words without spaces.\")\n            } else {\n                this.state.onSave(syn);\n            }\n        }\n    }\n    handleCancel() {\n        if (this.state.onSave) {\n            this.state.onSave(null);\n        }\n    }\n    UNSAFE_componentWillReceiveProps(props) {\n        this.setState({\n            open: props.open,\n            synSet: props.synSet,\n            onSave: props.onSave,\n            onError: props.onError,\n            word: Api.defined(props.synSet) && Api.defined(props.synSet.word) ? props.synSet.word : \"\",\n            cloud_list: SynSetEdit.getWordCloudList(props.synSet),\n        })\n    }\n    updateWC(index, str) {\n        const cl = this.state.cloud_list;\n        cl[index] = str;\n        this.setState({cloud_list: cl});\n    }\n    newSyn() {\n        const cl = this.state.cloud_list;\n        cl.push(\"\");\n        this.setState({cloud_list: cl});\n    }\n    deleteSyn(index) {\n        const newList = [];\n        const cl = this.state.cloud_list;\n        for (let i = 0; i < cl.length; i++) {\n            if (i !== index) {\n                newList.push(cl[i]);\n            }\n        }\n        this.setState({cloud_list: newList});\n    }\n    render() {\n        if (this.state.has_error) {\n            return <h1>synset-edit.js: Something went wrong.</h1>;\n        }\n        return (\n            <Dialog aria-labelledby=\"alert-dialog-title\"\n                    aria-describedby=\"alert-dialog-description\"\n                    open={this.state.open}\n                    fullWidth={true}\n                    disableBackdropClick={true}\n                    disableEscapeKeyDown={true}\n                    maxWidth=\"lg\"\n                    onClose={() => this.handleCancel()} >\n\n                <DialogTitle id=\"alert-dialog-title\" className={this.props.theme}>Edit syn-set \"{this.state.word}\"</DialogTitle>\n                <DialogContent className={this.props.theme}>\n                    <Grid container spacing={1}>\n\n                        <Grid item xs={1} />\n                        <Grid item xs={2}>\n                            <div>syn-set</div>\n                        </Grid>\n                        <Grid item xs={8}>\n                            <TextField\n                                style={styles.textFieldStyle}\n                                onChange={(event) => this.setState({word: event.target.value})}\n                                placeholder={\"syn-set\"}\n                                variant=\"outlined\"\n                                fullWidth={true}\n                                value={this.state.word}\n                            />\n                        </Grid>\n                        <Grid item xs={1} />\n\n                        <Grid item xs={1} />\n                        <Grid item xs={2}>\n                            <div>word-clouds</div>\n                        </Grid>\n                        <Grid item xs={8}>\n                            { this.state.cloud_list.map((item, index) => {\n                            return (<div id={index}>\n                                    <div style={styles.container}>\n                                        <TextField\n                                            style={styles.textFieldStyle}\n                                            onChange={(event) => this.updateWC(index, event.target.value)}\n                                            placeholder={\"word-cloud for syn-set \" + (index + 1)}\n                                            multiline={true}\n                                            rows={2}\n                                            variant=\"outlined\"\n                                            fullWidth={true}\n                                            value={item}\n                                        />\n                                        {\n                                            index > 1 &&\n                                            <div style={styles.deleteButton}\n                                                 onClick={() => this.deleteSyn(index)}>\n                                                <img src={this.props.theme === 'light' ? \"../images/delete.svg\" : \"../images/delete-dark.svg\"} style={styles.deleteImageSize}\n                                                     title=\"remove syn\" alt=\"remove syn\"/>\n                                            </div>\n                                        }\n                                    </div>\n                                    <div style={{clear:'both'}}/>\n                                    </div>)})}\n                        </Grid>\n                        <Grid item xs={1} />\n\n                        <Grid item xs={1} />\n                        <Grid item xs={9} />\n                        <Grid item xs={1}>\n                            <div style={styles.imageButton} onClick={() => this.newSyn()}><img\n                                style={styles.addImage} src={this.props.theme === 'light' ? \"../images/add.svg\" : \"../images/add-dark.svg\"} title=\"add a new syn item\"\n                                alt=\"add a new syn\"/></div>\n                        </Grid>\n                        <Grid item xs={1} />\n\n                    </Grid>\n\n                </DialogContent>\n                <DialogActions className={this.props.theme}>\n                    <Button color=\"primary\" onClick={() => this.handleCancel()}>Cancel</Button>\n                    <Button variant=\"contained\" color=\"secondary\" onClick={() => this.handleSave()}>Save</Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nexport default SynSetEdit;\n","import React from 'react';\n\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\n\nimport {SynSetEdit} from \"./synset-edit\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\n\nimport {connect} from \"react-redux\";\nimport {bindActionCreators} from \"redux\";\nimport {appCreators} from \"../actions/appActions\";\n\n\nconst styles = {\n    tableStyle: {\n        minWidth: '800px',\n        width: '900px',\n    },\n    tableLight: {\n    },\n    tableDark: {\n        background: '#d0d0d0',\n    },\n    smallTableHeaderStyle: {\n        background: '#555',\n        fontSize: '0.95em',\n        color: '#fff',\n        minWidth: '20px',\n    },\n    actionTableHeaderStyle: {\n        background: '#555',\n        fontSize: '0.95em',\n        color: '#fff',\n        minWidth: '100px',\n    },\n    tableHeaderStyle: {\n        background: '#555',\n        fontSize: '0.95em',\n        color: '#fff',\n        minWidth: '400px',\n        width: '600px',\n    },\n    searchTableHeaderStyle: {\n        background: '#555',\n        fontSize: '0.95em',\n        color: '#fff',\n        minWidth: '200px',\n        width: '340px',\n    },\n    knowledgeSelect: {\n        padding: '5px',\n        marginBottom: '40px',\n    },\n    lhs: {\n        float: 'left',\n        width: '150px',\n        marginTop: '-10px',\n        color: '#aaa',\n    },\n    rhs: {\n        float: 'left',\n    },\n    label: {\n        padding: '10px',\n        color: '#555',\n    },\n    gridWidth: {\n        width: '900px',\n    },\n    hr: {\n        border: '0.1px solid #f0f0f0',\n        width: '100%',\n    },\n    imageButton: {\n        float: 'right',\n        padding: '10px',\n        color: '#888',\n        cursor: 'pointer',\n    },\n    addImage: {\n        width: '25px',\n    },\n    linkButton: {\n        float: 'left',\n        padding: '10px',\n        color: '#888',\n        cursor: 'pointer',\n    },\n    dlImageSize: {\n        width: '24px',\n    },\n    search: {\n        marginTop: '2px',\n        marginLeft: '15px',\n        width: '18px',\n        color: '#000',\n    },\n    floatLeftLabel: {\n        float: 'left',\n        marginRight: '6px',\n        marginTop: '4px',\n        fontSize: '0.9em',\n        fontWeight: '500',\n    },\n    searchFloatLeft: {\n        float: 'left',\n    },\n    text: {\n        border: '1px solid #808080',\n        borderRadius: '4px',\n        padding: '4px',\n        width: '280px',\n    },\n    floatLeft: {\n        float: 'left',\n    },\n    manualUploadSection: {\n        marginTop: '50px',\n    },\n    findBox: {\n        padding: '10px',\n        marginBottom: '5px',\n        float: 'right',\n    },\n};\n\n\nexport class SynSets extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            synSet: {},\n            synSet_edit: false,\n\n            openDialog: props.openDialog,\n            closeDialog: props.closeDialog,\n        };\n    }\n    UNSAFE_componentWillReceiveProps(nextProps) {\n        this.setState({\n            openDialog: nextProps.openDialog,\n            closeDialog: nextProps.closeDialog,\n        });\n    }\n    componentDidCatch(error, info) {\n        this.props.setError(error, info);\n        console.log(error, info);\n    }\n    deleteSynSetAsk(synSet) {\n        if (synSet) {\n            this.props.openDialog(\"are you sure you want to remove id \" + synSet.word + \"?\",\n                                    \"Remove SynSet\", (action) => { this.deleteSynSet(action) });\n            this.setState({synSet: synSet});\n        }\n    }\n    deleteSynSet(action) {\n        if (action && this.state.synSet) {\n            this.props.deleteSynSet(this.state.synSet.lemma);\n        }\n        if (this.props.closeDialog) {\n            this.props.closeDialog();\n        }\n        this.setState({synSet_edit: false, synSet: {}});\n    }\n    handleSynSetFilterKeydown(event) {\n        if (event.key === \"Enter\") {\n            this.props.findSynSets();\n        }\n    }\n    editSynSet(synSet) {\n        this.setState({synSet_edit: true, synSet: synSet});\n    }\n    newSynSet() {\n        this.setState({synSet_edit: true, synSet: {\n                word: \"\",\n                lemma: \"\",\n                wordCloudCsvList: [],\n            }});\n    }\n    save(synSet) {\n        if (synSet) {\n            if (synSet.word.trim().length > 0 && synSet.wordCloudCsvList.length > 1) {\n                const list = synSet.wordCloudCsvList;\n                let validList = true;\n                for (const item of list) {\n                    if (item.trim().length === 0) {\n                        validList = false;\n                    }\n                }\n                if (validList) {\n                    this.props.saveSynSet(synSet);\n                    this.setState({synSet_edit: false, synSet: {}});\n                } else {\n                    this.props.setError(\"Error Saving SynSet\", \"syn-set word-cloud items must not be empty.\");\n                }\n            } else {\n                this.props.setError(\"Error Saving SynSet\", \"syn-set cannot be empty and need more than one item\");\n            }\n        } else {\n            this.setState({synSet_edit: false, synSet: {}});\n        }\n    }\n    isVisible() {\n        return this.props.selected_organisation_id && this.props.selected_organisation_id.length > 0 &&\n            this.props.selected_organisation && this.props.selected_organisation.length > 0 &&\n            this.props.selected_knowledgebase_id && this.props.selected_knowledgebase_id.length > 0;\n    }\n    render() {\n        const theme = this.props.theme;\n        return (\n            <div>\n                <SynSetEdit open={this.state.synSet_edit}\n                            theme={theme}\n                            synSet={this.state.synSet}\n                            onSave={(item) => this.save(item)}\n                            onError={(err) => this.props.setError(\"Error\", err)} />\n\n                {\n                    this.isVisible() &&\n\n                    <div style={styles.findBox}>\n                        <div style={styles.floatLeftLabel}>filter syn-sets</div>\n                        <div style={styles.searchFloatLeft}>\n                            <input type=\"text\" value={this.props.synset_filter} autoFocus={true} style={styles.text} className={theme}\n                                   onKeyPress={(event) => this.handleSynSetFilterKeydown(event)}\n                                   onChange={(event) => {\n                                       this.props.setSynSetFilter(event.target.value)\n                                   }}/>\n                        </div>\n                        <div style={styles.floatLeft}>\n                            <img style={styles.search}\n                                 onClick={() => this.props.findSynSets()}\n                                 src=\"../images/dark-magnifying-glass.svg\" title=\"search\" alt=\"search\"/>\n                        </div>\n                    </div>\n                }\n\n                <br clear=\"both\" />\n\n                {\n                    this.isVisible() &&\n                    <Paper>\n                        <Table style={styles.tableStyle}>\n                            <TableHead>\n                                <TableRow>\n                                    <TableCell className='table-header'>syn-set</TableCell>\n                                    <TableCell className='table-header'>actions</TableCell>\n                                </TableRow>\n                            </TableHead>\n                            <TableBody style={theme === 'light' ? styles.tableLight : styles.tableDark}>\n                                {\n                                    this.props.synset_list.map((synSet) => {\n                                        return (\n                                            <TableRow key={synSet.word}>\n                                                <TableCell>\n                                                    <div style={styles.label}>{synSet.word}</div>\n                                                </TableCell>\n                                                <TableCell>\n                                                    <div style={styles.linkButton} onClick={() => this.editSynSet(synSet)}>\n                                                        <img src=\"../images/edit.svg\" style={styles.dlImageSize} title=\"edit syn-set\" alt=\"edit\"/>\n                                                    </div>\n                                                    <div style={styles.linkButton} onClick={() => this.deleteSynSetAsk(synSet)}>\n                                                        <img src=\"../images/delete.svg\" style={styles.dlImageSize} title=\"remove syn-set\" alt=\"remove\"/>\n                                                    </div>\n                                                </TableCell>\n                                            </TableRow>\n                                        )\n                                    })\n                                }\n                                <TableRow>\n                                    <TableCell/>\n                                    <TableCell>\n                                        {this.isVisible() &&\n                                        <div style={styles.imageButton} onClick={() => this.newSynSet()}><img\n                                            style={styles.addImage} src=\"../images/add.svg\" title=\"new syn-set\"\n                                            alt=\"new syn-set\"/></div>\n                                        }\n                                    </TableCell>\n                                </TableRow>\n\n                            </TableBody>\n\n                        </Table>\n\n                        <TablePagination\n                            rowsPerPageOptions={[5, 10, 25]}\n                            style={theme === 'light' ? styles.tableLight : styles.tableDark}\n                            component=\"div\"\n                            count={this.props.synset_total_size}\n                            rowsPerPage={this.props.synset_page_size}\n                            page={this.props.synset_page}\n                            backIconButtonProps={{\n                                'aria-label': 'Previous Page',\n                            }}\n                            nextIconButtonProps={{\n                                'aria-label': 'Next Page',\n                            }}\n                            onChangePage={(event, page) => this.props.setSynSetPage(page)}\n                            onChangeRowsPerPage={(event) => this.props.setSynSetPageSize(event.target.value)}\n                        />\n\n                    </Paper>\n                }\n\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = function(state) {\n    return {\n        error: state.appReducer.error,\n        error_title: state.appReducer.error_title,\n        theme: state.appReducer.theme,\n\n        synset_list: state.appReducer.synset_list,\n        synset_filter: state.appReducer.synset_filter,\n        synset_page: state.appReducer.synset_page,\n        synset_page_size: state.appReducer.synset_page_size,\n        synset_total_size: state.appReducer.synset_total_size,\n\n        selected_organisation_id: state.appReducer.selected_organisation_id,\n        selected_organisation: state.appReducer.selected_organisation,\n        selected_knowledgebase_id: state.appReducer.selected_knowledgebase_id,\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    dispatch => bindActionCreators(appCreators, dispatch)\n)(SynSets);\n\n","import React from 'react';\n\nimport {connect} from \"react-redux\";\nimport {bindActionCreators} from \"redux\";\nimport {appCreators} from \"../actions/appActions\";\n\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport Api from \"../common/api\";\n\n\nconst styles = {\n    page: {\n        float: 'left'\n    },\n    pageWidth: {\n        width: '900px',\n    },\n    logFiles: {\n        marginTop: '20px',\n        maxHeight: '80vh',\n        minWidth: '900px',\n        width: '110%',\n        overflowX: 'auto',\n        overflowY: 'auto',\n        display: 'inline-block',\n        whiteSpace: 'nowrap',\n        resize: 'both',\n    },\n    logLine: {\n        fontSize: '0.65em',\n        marginBottom: '4px',\n    },\n    item: {\n    },\n    selectedItem: {\n        color: '#000',\n    },\n    dateSelect: {\n        width: '200px',\n    }\n};\n\n\nexport class Logs extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            has_error: false,\n            onError : props.onError,\n            openDialog: props.openDialog,\n            closeDialog: props.closeDialog,\n            timer_value: 0,\n        };\n        this.messagesEndRef = React.createRef();\n        this.timer = null;\n    }\n    componentDidCatch(error, info) {\n        this.props.setError(error, info);\n        console.log(error, info);\n    }\n    UNSAFE_componentWillReceiveProps(nextProps) {\n        this.setState({\n            openDialog: nextProps.openDialog,\n            closeDialog: nextProps.closeDialog,\n        });\n    }\n    componentWillUnmount() {\n        if (this.timer != null) {\n            window.clearTimeout(this.timer);\n            this.timer = null;\n        }\n    }\n    componentDidUpdate(prevPops, prevState, snapshot) {\n        this.scrollToBottom()\n        const log_refresh = this.props.log_refresh;\n        if (log_refresh > 0) {\n            if (this.timer == null) {\n                this.timer = window.setTimeout(() => {\n                    this.timer = null; if (this.props.getLogs) this.props.getLogs();\n                }, log_refresh * 1000);\n            }\n        }\n    }\n    scrollToBottom() {\n        this.messagesEndRef.current.scrollIntoView({ behavior: 'smooth' })\n    }\n    getClassForType(type) {\n        if (type === 'Debug') return \"log-type-debug\";\n        else if (type === 'Info') return \"log-type-info\";\n        else if (type === 'Error') return \"log-type-error\";\n        else return \"log-type-warn\";\n    }\n    getSelectedHourStyle(selected) {\n        if (selected) return \"log-hour-selector-selected\"\n         else return \"log-hour-selector\";\n    }\n    getHourTitle(hours) {\n        if (hours === 1) return \"display the next one hour after the selected time\";\n        else if (hours === 2) return \"display the next two hours after the selected time\";\n        else if (hours === 4) return \"display the next four hours after the selected time\";\n        else return \"display the next \" + hours + \" hours after the selected time\";\n    }\n    setLogHours(hours) {\n        this.props.setLogHours(hours);\n        this.props.getLogs();\n    }\n    getSelectedServiceStyle(selected) {\n        if (selected) return \"log-service-selector-selected\"\n        else return \"log-service-selector\";\n    }\n    setLogService(log_service) {\n        this.props.setLogService(log_service);\n        this.props.getLogs();\n    }\n    getSelectedLogStyle(selected) {\n        if (selected) return \"log-type-selector-selected\"\n        else return \"log-type-selector\";\n    }\n    setLogType(log_type) {\n        this.props.setLogType(log_type);\n        this.props.getLogs();\n    }\n    getLogRefreshStyle(selected) {\n        if (selected) return \"log-refresh-selector-selected\"\n        else return \"log-refresh-selector\";\n    }\n    setLogRefresh(log_refresh) {\n        this.props.setLogRefresh(log_refresh);\n        this.props.getLogs();\n    }\n    getLogs() {\n        if (this.props.log_list) {\n            const log_type = this.props.log_type;\n            const log_service = this.props.log_service;\n            const list = [];\n            for (let i = 0; i < this.props.log_list.length; i++) {\n                const item = this.props.log_list[i];\n                if ((log_type === 'All' || item.type === log_type) &&\n                    (log_service === 'All' || item.service === log_service)) {\n                    list.push(item);\n                }\n            }\n            return list;\n        }\n        return [];\n    }\n    render() {\n        let date = new Date();\n        if (this.props.log_date) {\n            date = new Date(this.props.log_date);\n        }\n        const theme = this.props.theme;\n        const hours = this.props.log_hours;\n        const log_type = this.props.log_type;\n        const log_service = this.props.log_service;\n        const log_refresh = this.props.log_refresh;\n        return (\n            <div style={styles.page}>\n\n                <div style={styles.dateSelect}>\n                    <DatePicker\n                        className={theme === \"light\" ? \"wide-date-picker-input\" : \"wide-date-picker-input-dark\"}\n                        selected={date}\n                        dateFormat=\"yyyy/MM/dd HH:mm\"\n                        timeFormat=\"HH:mm\"\n                        showTimeSelect\n                        timeIntervals={60}\n                        todayButton=\"today\"\n                        onChange={date => {\n                            this.props.setLogDate(date);\n                            this.props.getLogs();\n                        }} />\n                </div>\n\n                <div className=\"log-selectors\">\n                    <span title={this.getHourTitle(1)} className={this.getSelectedHourStyle(hours===1)} onClick={() => this.setLogHours(1)}>1 hour</span>\n                    <span title={this.getHourTitle(2)} className={this.getSelectedHourStyle(hours===2)} onClick={() => this.setLogHours(2)}>2 hours</span>\n                    <span title={this.getHourTitle(4)} className={this.getSelectedHourStyle(hours===4)} onClick={() => this.setLogHours(4)}>4 hours</span>\n                    <span title={this.getHourTitle(12)} className={this.getSelectedHourStyle(hours===12)} onClick={() => this.setLogHours(12)}>12 hours</span>\n                    <span title={this.getHourTitle(24)} className={this.getSelectedHourStyle(hours===24)} onClick={() => this.setLogHours(24)}>24 hours</span>\n                    <span title={this.getHourTitle(48)} className={this.getSelectedHourStyle(hours===48)} onClick={() => this.setLogHours(48)}>48 hours</span>\n                    <span className=\"log-spacer\">&nbsp;</span>\n                    <span title=\"display all log-types\" className={this.getSelectedLogStyle(log_type===\"All\")} onClick={() => this.setLogType(\"All\")}>all</span>\n                    <span title=\"display only 'info' log-types\" className={this.getSelectedLogStyle(log_type===\"Info\")} onClick={() => this.setLogType(\"Info\")}>info</span>\n                    <span title=\"display only 'debug' log-types\" className={this.getSelectedLogStyle(log_type===\"Debug\")} onClick={() => this.setLogType(\"Debug\")}>debug</span>\n                    <span title=\"display only 'error' log-types\" className={this.getSelectedLogStyle(log_type===\"Error\")} onClick={() => this.setLogType(\"Error\")}>error</span>\n                    <span title=\"display only 'warning' log-types\" className={this.getSelectedLogStyle(log_type===\"Warn\")} onClick={() => this.setLogType(\"Warn\")}>warn</span>\n                    <span className=\"log-spacer\">&nbsp;</span>\n                    <span title=\"do not automatically refresh the logs\" className={this.getLogRefreshStyle(log_refresh===0)} onClick={() => this.setLogRefresh(0)}>off</span>\n                    <span title=\"automatically refresh this log every five seconds\" className={this.getLogRefreshStyle(log_refresh===5)} onClick={() => this.setLogRefresh(5)}>5 seconds</span>\n                    <span title=\"automatically refresh this log every 10 seconds\" className={this.getLogRefreshStyle(log_refresh===10)} onClick={() => this.setLogRefresh(10)}>10 seconds</span>\n                </div>\n\n                <div className=\"log-selectors\">\n                    <span title=\"display logs from all services\" className={this.getSelectedServiceStyle(log_service==='All')} onClick={() => this.setLogService('All')}>all</span>\n                    <span title=\"only display logs from the Auth service\" className={this.getSelectedServiceStyle(log_service==='Auth')} onClick={() => this.setLogService('Auth')}>auth</span>\n                    <span title=\"only display logs from the Conversion service\" className={this.getSelectedServiceStyle(log_service==='Conversion')} onClick={() => this.setLogService('Conversion')}>conv</span>\n                    <span title=\"only display logs from the Crawler service\" className={this.getSelectedServiceStyle(log_service==='Crawler')} onClick={() => this.setLogService('Crawler')}>crawl</span>\n                    <span title=\"only display logs from the Document service\" className={this.getSelectedServiceStyle(log_service==='Document')} onClick={() => this.setLogService('Document')}>doc</span>\n                    <span title=\"only display logs from the Index service\" className={this.getSelectedServiceStyle(log_service==='Index')} onClick={() => this.setLogService('Index')}>index</span>\n                    <span title=\"only display logs from the Knowledgebase service\" className={this.getSelectedServiceStyle(log_service==='KB')} onClick={() => this.setLogService('KB')}>kb</span>\n                    <span title=\"only display logs from the Language service\" className={this.getSelectedServiceStyle(log_service==='Language')} onClick={() => this.setLogService('Language')}>lang</span>\n                    <span title=\"only display logs from the Mind service\" className={this.getSelectedServiceStyle(log_service==='Mind')} onClick={() => this.setLogService('Mind')}>mind</span>\n                    <span title=\"only display logs from the Operator service\" className={this.getSelectedServiceStyle(log_service==='Operator')} onClick={() => this.setLogService('Operator')}>operator</span>\n                    <span title=\"only display logs from the Search service\" className={this.getSelectedServiceStyle(log_service==='Search')} onClick={() => this.setLogService('Search')}>search</span>\n                    <span title=\"only display logs from the Statistics service\" className={this.getSelectedServiceStyle(log_service==='Stats')} onClick={() => this.setLogService('Stats')}>stats</span>\n                    <span title=\"only display logs from the Web service\" className={this.getSelectedServiceStyle(log_service==='Web')} onClick={() => this.setLogService('Web')}>web</span>\n                </div>\n\n                <div style={styles.logFiles}>\n                    {\n                        this.getLogs().map((line) => {\n                            return (<div style={styles.logLine} id={line.created}>\n                                <span className={'log-type-width ' + this.getClassForType(line.type)}>{line.type}</span>\n                                <span className='log-service-width'>{line.service}</span>\n                                <span className='log-time-width'>{Api.unixTimeConvert(line.created)}</span>\n                                <span>{line.message}</span>\n                            </div>)\n                        })\n                    }\n                    <div ref={this.messagesEndRef} />\n                </div>\n\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = function(state) {\n    return {\n        error: state.appReducer.error,\n        error_title: state.appReducer.error_title,\n\n        theme: state.appReducer.theme,\n\n        selected_knowledgebase_id: state.appReducer.selected_knowledgebase_id,\n        selected_organisation_id: state.appReducer.selected_organisation_id,\n\n        log_date: state.appReducer.log_date,\n        log_list: state.appReducer.log_list,\n        log_hours: state.appReducer.log_hours,\n        log_type: state.appReducer.log_type,\n        log_service: state.appReducer.log_service,\n        log_refresh: state.appReducer.log_refresh,\n\n        user: state.appReducer.user,\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    dispatch => bindActionCreators(appCreators, dispatch)\n)(Logs);\n\n","import React from 'react';\n\nimport Button from '@material-ui/core/Button';\n\nimport {Bar, Line} from 'react-chartjs-2'\n\nimport {GraphHelper} from \"../common/graph-helper\";\n\nimport {connect} from \"react-redux\";\nimport {bindActionCreators} from \"redux\";\nimport {appCreators} from \"../actions/appActions\";\n\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport Comms from \"../common/comms\";\n\nconst graphHeight = 350;\nconst graphWidth = 400;\n\nconst styles = {\n    pageWidth: {\n        width: '900px',\n    },\n    knowledgeSelect: {\n        padding: '5px',\n        marginBottom: '50px',\n    },\n    lhs: {\n        float: 'left',\n        width: '150px',\n        marginTop: '-10px',\n        color: '#aaa',\n    },\n    rhs: {\n        float: 'left',\n    },\n    label: {\n        marginTop: '20px',\n        color: '#555',\n    },\n    barGraphs: {\n        float: 'left',\n        margin: '20px',\n        minWidth: '440px',\n        width: '900px',\n    },\n    barGraph: {\n        float: 'left',\n        width: '410px',\n        height: '450px',\n        margin: '10px',\n    },\n    downloadButton: {\n        float: 'right',\n    },\n    dateSelect: {\n        float: 'right',\n        marginTop: '3px',\n        marginRight: '5px',\n    },\n};\n\n\nexport class Reports extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            has_error: false,\n            onError : props.onError,\n\n            openDialog: props.openDialog,\n            closeDialog: props.closeDialog,\n        };\n    }\n    componentDidCatch(error, info) {\n        this.props.setError(error, info);\n        console.log(error, info);\n    }\n    UNSAFE_componentWillReceiveProps(nextProps) {\n        this.setState({\n            openDialog: nextProps.openDialog,\n            closeDialog: nextProps.closeDialog,\n        });\n    }\n    componentDidMount() {\n    }\n    downloadReport() {\n        const date = new Date(this.props.report_date);\n        const year = date.getFullYear();\n        const month1 = date.getMonth() + 1;\n        const url = Comms.get_query_log_url(this.props.selected_organisation_id, this.props.selected_knowledgebase_id, year, month1);\n        window.open(url, '_blank');\n    }\n    isVisible() {\n        return this.props.selected_organisation_id && this.props.selected_organisation_id.length > 0 &&\n            this.props.selected_organisation && this.props.selected_organisation.length > 0 &&\n            this.props.selected_knowledgebase_id && this.props.selected_knowledgebase_id.length > 0;\n    }\n    render() {\n        const date = new Date(this.props.report_date);\n        const theme = this.props.theme;\n        return (\n            <div style={styles.pageWidth}>\n                { this.isVisible() &&\n                <div>\n                <br clear=\"both\" />\n                <div style={styles.downloadButton}>\n                    <Button variant=\"contained\" color={\"primary\"} onClick={() => this.downloadReport()}>download report</Button>\n                </div>\n                <div style={styles.dateSelect}>\n                    <DatePicker\n                        className={theme === \"light\" ? \"date-picker-input\" : \"date-picker-input-dark\"}\n                        selected={date}\n                        dateFormat=\"yyyy/MM\"\n                        todayButton=\"today\"\n                        showMonthYearPicker\n                        onChange={date => {\n                            this.props.setReportDate(date);\n                            this.props.getReports();\n                        }} />\n                </div>\n                <br clear=\"both\" />\n                </div>\n                }\n\n                <div style={styles.barGraphs}>\n                    {\n                        this.isVisible() && this.props.general_statistics.map( (stats) => {\n                            return (<div key={stats.id} style={styles.barGraph}>\n                                <Bar data={stats} options={GraphHelper.getGraphOptions('')} width={graphWidth} height={graphHeight}/>\n                            </div>)\n                        })\n                    }\n\n                    {\n                        this.isVisible() && this.props.file_type_statistics.map( (stats) => {\n                            return (<div key={stats.id} style={styles.barGraph}>\n                                <Bar data={stats} options={GraphHelper.getGraphOptions('')} width={graphWidth} height={graphHeight}/>\n                            </div>)\n                        })\n                    }\n\n                    {\n                        this.isVisible() && this.props.query_word_frequency.map( (stats) => {\n                            return (<div key={stats.id} style={styles.barGraph}>\n                                <Bar data={stats} options={GraphHelper.getGraphOptions('queries')} width={graphWidth} height={graphHeight}/>\n                            </div>)\n                        })\n                    }\n\n                    {\n                        this.isVisible() && this.props.access_frequency.labels.length > 0 &&\n                        <div style={styles.barGraph}>\n                            <Line data={this.props.access_frequency}\n                                  options={GraphHelper.getGraphOptions('access count')} width={graphWidth}\n                                  height={graphHeight}/>\n                        </div>\n                    }\n\n                </div>\n\n            </div>\n        );\n    }\n};\n\nconst mapStateToProps = function(state) {\n    return {\n        error: state.appReducer.error,\n        error_title: state.appReducer.error_title,\n        theme: state.appReducer.theme,\n\n        selected_knowledgebase_id: state.appReducer.selected_knowledgebase_id,\n        selected_organisation_id: state.appReducer.selected_organisation_id,\n        selected_organisation: state.appReducer.selected_organisation,\n\n        report_date: state.appReducer.report_date,\n        access_frequency: state.appReducer.access_frequency,\n        general_statistics: state.appReducer.general_statistics,\n        query_word_frequency: state.appReducer.query_word_frequency,\n        file_type_statistics: state.appReducer.file_type_statistics,\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    dispatch => bindActionCreators(appCreators, dispatch)\n)(Reports);\n\n","\nimport React, {Component} from 'react';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Button from '@material-ui/core/Button';\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\n\nexport class OperatorTeach extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            has_error: false,\n            links: '',\n        };\n    }\n    componentDidCatch(error, info) {\n        this.setState({ has_error: true });\n        console.log(error, info);\n    }\n    handleSave() {\n        if (this.props.onSave) {\n            let links = this.state.links.replace(/\\n/g, ' ');\n            links = links.replace(/\\r/g, ' ');\n            links = links.replace(/\\t/g, ' ');\n            this.props.onSave(true, links);\n        }\n    }\n    handleCancel() {\n        if (this.props.onSave) {\n            this.props.onSave(false, '');\n        }\n    }\n    render() {\n        if (this.state.has_error) {\n            return <h1>operator-teach.js: Something went wrong.</h1>;\n        }\n        const theme = this.props.theme;\n        return (\n            <Dialog aria-labelledby=\"alert-dialog-title\"\n                    aria-describedby=\"alert-dialog-description\"\n                    disableBackdropClick={true}\n                    disableEscapeKeyDown={true}\n                    open={this.props.open}\n                    fullWidth={true}\n                    maxWidth=\"lg\"\n                    onClose={() => this.handleCancel()} >\n\n                <DialogTitle id=\"alert-dialog-title\" className={theme}>Teach SimSage?</DialogTitle>\n                <DialogContent className={theme}>\n                    <Grid container spacing={1}>\n\n                        <Grid item xs={1} />\n                        <Grid item xs={1}>\n                            <div>question</div>\n                        </Grid>\n                        <Grid item xs={9}>\n                            {this.props.question}\n                        </Grid>\n                        <Grid item xs={1} />\n\n\n                        <Grid item xs={1} />\n                        <Grid item xs={1}>\n                            <div>answer</div>\n                        </Grid>\n                        <Grid item xs={9}>\n                            {this.props.answer}\n                        </Grid>\n                        <Grid item xs={1} />\n\n                        <Grid item xs={1} />\n                        <Grid item xs={1}>\n                            <div>links</div>\n                        </Grid>\n                        <Grid item xs={9}>\n                            <TextField\n                                onChange={(event) => this.setState({links: event.target.value})}\n                                placeholder=\"links (images and page-links, separated by commas or spaces)\"\n                                multiline={true}\n                                rows={5}\n                                variant=\"outlined\"\n                                fullWidth={true}\n                                value={this.state.links}\n                            />\n                        </Grid>\n                        <Grid item xs={1} />\n\n                    </Grid>\n                </DialogContent>\n                <DialogActions className={theme}>\n                    <Button color=\"primary\" onClick={() => this.handleCancel()}>Cancel</Button>\n                    <Button variant=\"contained\" color=\"secondary\" onClick={() => this.handleSave()}>Save</Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nexport default OperatorTeach;\n","import React, {Component} from 'react';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Button from '@material-ui/core/Button';\nimport Grid from \"@material-ui/core/Grid\";\n\nconst styles = {\n    questionStyle: {\n        display: 'inline-block',\n        fontWeight: '600',\n    },\n    answerStyle: {\n        fontSize: '0.95em',\n    }\n};\n\nexport class OperatorPreviousAnswer extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            has_error: false,\n            open: props.open,\n            onSave: props.onSave,\n            onError: props.onError,\n        };\n    }\n    componentDidCatch(error, info) {\n        this.setState({ has_error: true });\n        console.log(error, info);\n    }\n    UNSAFE_componentWillReceiveProps(nextProps) {\n        this.setState({\n            open: nextProps.open,\n        })\n    }\n    handleSave() {\n        if (this.state.onSave) {\n            this.state.onSave(true);\n        }\n    }\n    handleCancel() {\n        if (this.state.onSave) {\n            this.state.onSave(false);\n        }\n    }\n    render() {\n        if (this.state.has_error) {\n            return <h1>operator-previous-answer.js: Something went wrong.</h1>;\n        }\n        const theme = this.props.theme;\n        return (\n            <Dialog aria-labelledby=\"alert-dialog-title\"\n                    aria-describedby=\"alert-dialog-description\"\n                    disableBackdropClick={true}\n                    disableEscapeKeyDown={true}\n                    open={this.state.open}\n                    fullWidth={true}\n                    maxWidth=\"lg\"\n                    onClose={() => this.handleCancel()} >\n\n                <DialogTitle id=\"alert-dialog-title\" className={theme}>Use Previous Answer?</DialogTitle>\n                <DialogContent className={theme}>\n                    <Grid container spacing={1}>\n\n                        <Grid item xs={1} />\n                        <Grid item xs={10}>\n                            <div>SimSage has a previous answer to the question: <div style={styles.questionStyle}>{this.props.question}</div></div>\n                        </Grid>\n                        <Grid item xs={1} />\n\n\n                        <Grid item xs={1} />\n                        <Grid item xs={2}>\n                            <div>SimSage's answer was:</div>\n                        </Grid>\n                        <Grid item xs={8}>\n                            <div style={styles.answerStyle}>{this.props.answer}</div>\n                        </Grid>\n                        <Grid item xs={1} />\n\n                    </Grid>\n                </DialogContent>\n                <DialogActions className={theme}>\n                    <Button color=\"primary\" onClick={() => this.handleCancel()}>Cancel</Button>\n                    <Button variant=\"contained\" color=\"secondary\" onClick={() => this.handleSave()}>Use this Answer</Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nexport default OperatorPreviousAnswer;\n","import React from 'react';\n\nimport KeyboardVoiceIcon from '@material-ui/icons/KeyboardVoice';\nimport FreeBreakfastIcon from '@material-ui/icons/FreeBreakfast';\nimport SupervisedUserCircleIcon from '@material-ui/icons/SupervisedUserCircle';\nimport PersonAddDisabledIcon from '@material-ui/icons/PersonAddDisabled';\n\nimport TextField from \"@material-ui/core/TextField\";\nimport OperatorTeach from \"./operator-teach\";\nimport OperatorPreviousAnswer from './operator-previous-answer'\nimport Home from '../home'\nimport Api from '../common/api'\n\nimport {connect} from \"react-redux\";\nimport {bindActionCreators} from \"redux\";\nimport {appCreators} from \"../actions/appActions\";\n\nconst styles = {\n    topButton: {\n        marginLeft: '10px',\n    },\n    conversations: {\n        marginTop: '10px',\n        backgroundColor: '#fafafa',\n        width: '75vw',\n        height: '500px',\n        borderRadius: '10px',\n        overflowY: 'auto',\n    },\n    avatarBackground: {\n        backgroundColor: '#ccc',\n    },\n    simSageIcon: {\n        color: '#66aa66',\n    },\n    simSageIconSelected: {\n        color: '#dd6666',\n    },\n    personIcon: {\n        color: '#666cc6',\n    },\n    personIconSelected: {\n        color: '#dd6666',\n    },\n    kbName: {\n        float: 'right',\n        marginLeft: '5px',\n        marginTop: '4px',\n        marginRight: '100px',\n        fontSize: '0.9em'\n    },\n    typingDots: {\n        width: '60px',\n    }\n};\n\n\nexport class Operator extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            operator_reply: '', // operator text\n            last_time: 0,\n        };\n        this.messagesEndRef = React.createRef();\n    }\n    componentDidMount() {\n        window.setInterval(() => this.checkClientTyping(), 1000);\n    }\n    componentDidCatch(error, info) {\n        console.log(error, info);\n        this.props.setError(error, info);\n    }\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        this.scrollToBottom();\n    }\n    readyForChat() {\n        const data = {\n            sessionId: this.props.session.id,\n            operatorId: this.props.operator.id,\n            organisationId: this.props.selected_organisation_id,\n            userId: this.props.user.id,\n        };\n        this.props.sendOperatorMessage('/ops/ready', data);\n        this.props.operatorReady(this.props.operator.id, true);\n    }\n    isTyping() {\n        const last_time = this.state.last_time;\n        const curr_time = Api.getSystemTime();\n        if (last_time < curr_time) {\n            this.setState({last_time: curr_time + 2000});\n            if (this.props.operator.client_id && this.props.operator.id) {\n                const data = {\n                    fromId: this.props.operator.id,\n                    toId: this.props.operator.client_id,\n                    isTyping: true\n                };\n                this.props.sendOperatorMessage('/ops/typing', data);\n            }\n        }\n    }\n    checkClientTyping() {\n        // signal the client is no longer typing?  (on a timer, see mounted)\n        if (this.props.operator && this.props.operator.is_typing &&\n            this.props.operator.typing_time < Api.getSystemTime()) {\n            this.props.stopClientTyping(this.props.operator.id);\n        }\n    }\n    takeBreak() {\n        const data = {\n            sessionId: this.props.session.id,\n            operatorId: this.props.operator.id,\n            organisationId: this.props.selected_organisation_id,\n            clientId: this.props.operator.client_id,\n        };\n        this.props.sendOperatorMessage('/ops/take-break', data);\n        this.props.operatorReady(this.props.operator.id, false);\n    }\n    nextUser() {\n        const data = {\n            sessionId: this.props.session.id,\n            operatorId: this.props.operator.id,\n            organisationId: this.props.selected_organisation_id,\n            clientId: this.props.operator.client_id,\n        };\n        this.props.sendOperatorMessage('/ops/next-user', data);\n        this.props.clearUser(this.props.operator.id);\n    }\n    banUserConfirm() {\n        if (this.props.operator.client_id && this.props.operator.client_id.length > 0) {\n            this.props.openDialog(\"are you sure you want to ban this user?\",\n                \"Ban User\", (action) => {\n                    this.banUser(action)\n                });\n        }\n    }\n    banUser(act) {\n        if (act) {\n            const data = {\n                sessionId: this.props.session.id,\n                operatorId: this.props.operator.id,\n                organisationId: this.props.selected_organisation_id,\n                clientId: this.props.operator.client_id,\n            };\n            this.props.sendOperatorMessage('/ops/ban-user', data);\n            this.props.clearUser(this.props.operator.id);\n        }\n        if (this.props.closeDialog) {\n            this.props.closeDialog();\n        }\n    }\n    operatorReply(text) {\n        if (this.props.operator.client_id.length > 0 && text.length > 0) {\n            const data = {\n                sessionId: this.props.session.id,\n                operatorId: this.props.operator.id,\n                organisationId: this.props.selected_organisation_id,\n                clientId: this.props.operator.client_id,\n                kbId: this.props.operator.client_kb_id,\n                text: text,\n            };\n            this.props.sendOperatorMessage('/ops/chat', data);\n\n            // add a new conversation to the list\n            this.props.addConversation(this.props.operator.id, {id: this.props.operator.conversation_list.length + 1, primary: text,\n                                        secondary: \"You\", used: false, is_simsage: true});\n\n            this.setState({operator_reply: ''});\n        }\n    }\n    selectForLearn(item) {\n        if (item && item.is_simsage) {\n            if (item.id === this.props.operator.answer_id)\n                this.props.setOperatorAnswer(this.props.operator.id, '', '');\n            else\n                this.props.setOperatorAnswer(this.props.operator.id, item.id, item.primary);\n        } else if (item) {\n            if (item.id === this.props.operator.question_id)\n                this.props.setOperatorQuestion(this.props.operator.id, '', '');\n            else\n                this.props.setOperatorQuestion(this.props.operator.id, item.id, item.primary);\n        }\n    }\n    teachSimSage(teach, links) {\n        if (teach) {\n            if (this.props.operator.client_id.length > 0 && this.props.operator.question.length > 0 &&\n                this.props.operator.answer.length > 0) {\n                const data = {\n                    sessionId: this.props.session.id,\n                    operatorId: this.props.operator.id,\n                    organisationId: this.props.selected_organisation_id,\n                    clientId: this.props.operator.client_id,\n                    kbId: this.props.operator.client_kb_id,\n                    text: this.props.operator.question,\n                    answer: this.props.operator.answer,\n                    links: links,\n                };\n                this.props.sendOperatorMessage('/ops/teach', data);\n\n                // mark these two items as used\n                const conversation_list = this.props.operator.conversation_list;\n                for (const item of conversation_list) {\n                    if (item.id === this.props.operator.question_id || item.id === this.props.operator.answer_id) {\n                        this.props.markConversationItemUsed(this.props.operator.id, item.id);\n                    }\n                }\n            }\n        }\n        this.props.setOperatorAnswer(this.props.operator.id, '', '');\n        this.props.setOperatorQuestion(this.props.operator.id, '', '');\n    }\n    usePreviousQuestion(use) {\n        if (use && this.props.operator.prev_answer.length > 0) {\n            this.operatorReply(this.props.operator.prev_answer);\n        }\n        this.props.clearPreviousAnswer(this.state.operator.id);\n    }\n    getAvatarStyle(item) {\n        const theme = this.props.theme;\n        var add_text = \"\";\n        if (theme !== 'light') {\n            add_text = \"-dark\";\n        }\n        if (item.is_simsage) {\n            if (item.id === this.props.operator.answer_id || item.used) {\n                return \"operator-text-box-selected\" + add_text;\n            } else {\n                return \"operator-text-box\" + add_text;\n            }\n        } else {\n            if (item.id === this.props.operator.question_id || item.used) {\n                return \"user-text-selected\" + add_text;\n            } else {\n                return \"user-text\" + add_text;\n            }\n        }\n    }\n    scrollToBottom = () => {\n        this.messagesEndRef.current.scrollIntoView({ behavior: 'smooth' })\n    }\n    render() {\n        const isOperator = Home.hasRole(this.props.user, ['operator']);\n        const active = this.props.operator.operator_ready && this.props.operator_connected && isOperator;\n        const isReady = this.props.operator.operator_ready || !this.props.operator_connected;\n        const has_user = this.props.operator.client_id && this.props.operator.client_id.length > 0;\n        const operatorButtonStyle = this.props.theme === 'light' ? \"operator-buttons-top\" : \"operator-buttons-top-dark\";\n        return (\n            <div>\n                <OperatorTeach\n                    open={this.props.operator.question_id !== '' && this.props.operator.answer_id !== ''}\n                    theme={this.props.theme}\n                    question={this.props.operator.question}\n                    onSave={(teach, links) => this.teachSimSage(teach, links)}\n                    answer={this.props.operator.answer}\n                    />\n\n                <OperatorPreviousAnswer\n                    open={this.props.operator.current_question !== '' && this.props.operator.prev_answer !== ''}\n                    theme={this.props.theme}\n                    question={this.props.operator.current_question}\n                    onSave={(use) => this.usePreviousQuestion(use)}\n                    answer={this.props.operator.prev_answer}\n                />\n\n                <div className={operatorButtonStyle}>\n                    <button className=\"operator-button\" disabled={isReady}\n                            title={isReady ? \"Disabled, click 'Break' top stop any conversations.\" : \"Signal that you are ready to go and converse with customers.\"}\n                            onClick={() => this.readyForChat()}>\n                        <KeyboardVoiceIcon className=\"operator-button-icon\" />\n                        <span className=\"operator-button-text\">Ready</span>\n                    </button>\n\n                    <button className=\"operator-button\" disabled={!active}\n                            title={!active ? \"Disabled, click Ready before you take a break.\" : \"take a break, stop participating in conversations while you have a break.\"}\n                            onClick={() => this.takeBreak()}>\n                        <FreeBreakfastIcon className=\"operator-button-icon\" />\n                        <span className=\"operator-button-text\">Break</span>\n                    </button>\n\n                    <button className=\"operator-button operator-button-margin-left\" disabled={!has_user}\n                            title={!has_user ? \"Disabled, you aren't currently connected to any user.\" : \"The current conversation is abusive or bad spirited, ban this user from the system.\"}\n                            onClick={() => this.banUserConfirm()}>\n                        <PersonAddDisabledIcon className=\"operator-button-icon\" />\n                        <span className=\"operator-button-text\">Ban User</span>\n                    </button>\n\n                    <button className=\"operator-button operator-button-margin-left\" disabled={!has_user}\n                            title={!has_user ? \"Disabled, you aren't currently connected to any users.\" : \"We have finished the current conversation and are ready for a next one.\"}\n                            onClick={() => this.nextUser()}>\n                        <SupervisedUserCircleIcon className=\"operator-button-icon\" />\n                        <span className=\"operator-button-text\">End Chat</span>\n                    </button>\n\n                    {\n                        this.props.operator.client_kb_name && this.props.operator.client_kb_name.length > 0 &&\n                        <div style={styles.kbName}>{this.props.operator.client_kb_name}</div>\n                    }\n\n\n                </div>\n\n                <div className=\"operator-conversation-area\">\n                    {this.props.operator.conversation_list.map((item) => {\n                        return (\n                            <div key={item.id} className={item.is_simsage ? \"operator-box\" : \"user-box\"} onClick={() => {if (active) this.selectForLearn(item)}}>\n                                <div className={item.is_simsage ? \"operator-line\" : \"user-line\"}>\n                                    <span className=\"user-label\">{item.is_simsage ? \"You\" : \"User\"}</span>\n                                    <span className=\"hyphen\">-</span>\n                                    <span className=\"time\">{Api.unixTimeConvert(item.created)}</span>\n                                </div>\n                                <div className={this.getAvatarStyle(item)}>{item.primary}</div>\n                            </div>\n                        )\n                    })}\n                    {this.props.operator.is_typing &&\n                        <div>\n                        <img src=\"../images/dots.gif\" style={styles.typingDots} alt=\"typing\" />\n                        </div>\n                    }\n                    <div ref={this.messagesEndRef} />\n                </div>\n\n                <div className=\"operator-reply-area\">\n                    <span className=\"operator-reply-text-box\">\n                        <TextField\n                            title={!has_user ? \"Disabled, you aren't in a chat with a user.\" : \"Type your reply and press enter, or click the 'Reply' button.\"}\n                            className=\"operator-reply-text\"\n                            onChange={(event) => this.setState({operator_reply: event.target.value})}\n                            disabled={!has_user}\n                            onKeyPress={(event) => {\n                                if (event.key === \"Enter\") {\n                                    this.operatorReply(this.state.operator_reply);\n                                }\n                                this.isTyping();\n                            }}\n                            label=\"your reply\"\n                            value={this.state.operator_reply}\n                        />\n                    </span>\n                    <span className=\"operator-reply-button-box\">\n                        <button disabled={!has_user} className=\"operator-button\"\n                                title={!has_user ? \"Disabled, you aren't in a chat with a user.\" : \"Send the text you've typed to the user (or press enter in the reply field).\"}\n                                onClick={() => this.operatorReply(this.state.operator_reply)}>\n                            Reply\n                        </button>\n                    </span>\n                </div>\n\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = function(state) {\n    return {\n        error: state.appReducer.error,\n        error_title: state.appReducer.error_title,\n        theme: state.appReducer.theme,\n\n        session: state.appReducer.session,\n        user: state.appReducer.user,\n\n        operator_connected: state.appReducer.operator_connected,\n        num_active_connections: state.appReducer.num_active_connections,\n\n        selected_organisation_id: state.appReducer.selected_organisation_id,\n    }\n};\n\nexport default connect(\n    mapStateToProps,\n    dispatch => bindActionCreators(appCreators, dispatch)\n)(Operator);\n\n","import React from 'react';\n\nimport Operator from \"./operator\";\n\nimport {MAX_OPERATORS} from '../actions/actions';\n\nimport {connect} from \"react-redux\";\nimport {bindActionCreators} from \"redux\";\nimport {appCreators} from \"../actions/appActions\";\nimport SupervisedUserCircleIcon from \"@material-ui/icons/SupervisedUserCircle\";\nimport {AddBox} from \"@material-ui/icons\";\n\n\nconst styles = {\n    tab: {\n        backgroundColor: '#ebebeb',\n        color: '#000',\n    },\n    add_button: {\n        float: 'right',\n        marginTop: '-40px',\n        marginRight: '200px',\n    },\n    add_button_size: {\n        width: '32px',\n        height: '32px',\n    },\n    add_text: {\n        fontSize: '14px',\n        marginTop: '4px',\n        float: 'right',\n    },\n    max_text: {\n        fontSize: '14px',\n        marginTop: '4px',\n        float: 'right',\n        color: 'darkgray',\n    },\n    kbName: {\n        float: 'right',\n        marginTop: '-36px',\n        right: '30px',\n    },\n    bot_image: {\n        width: '24px',\n        height: '24px',\n    },\n    bot_text: {\n        float: 'right',\n        fontSize: '12px',\n        marginTop: '4px',\n        marginLeft: '10px',\n    }\n};\n\n\nexport class OperatorTabs extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            selectedTab: 1,\n        };\n    }\n    componentDidCatch(error, info) {\n        console.log(error, info);\n        this.props.setError(error, info);\n    }\n    takeBreak(operator) {\n        if (operator && operator.id) {\n            const data = {\n                sessionId: this.props.session.id,\n                operatorId: operator.id,\n                organisationId: this.props.selected_organisation_id,\n                clientId: operator.client_id,\n            };\n            this.props.sendOperatorMessage('/ops/take-break', data);\n            this.props.operatorReady(operator.id, false);\n        }\n    }\n    render() {\n        const dark = this.props.theme === 'light' ? \"\" : \"-dark\";\n        return (\n            <div>\n\n                <div>\n                    {\n                        this.props.operators && this.props.operators.map((operator, index) => {\n                            return (<span key={'tab' + (index + 1)} className={(index+1) === this.state.selectedTab ? \"operator-tab-selected\" + dark : \"operator-tab\" + dark}>\n                                        <span title={'Conversation ' + (index+1)}\n                                              onClick={()=> this.setState({selectedTab: index+1})}>{'Conversation ' + (index + 1)}\n                                        </span>\n                                        {index > 0 &&\n                                        <span key={'tab_close' + (index + 1)} className=\"operator-close-conversation-button\"\n                                              title=\"Close and remove this conversation.\"\n                                              onClick={() => {\n                                                  this.takeBreak(operator);\n                                                  this.setState({selectedTab: 1});\n                                                  this.props.removeOperator(operator.id);\n                                              }}>\n                                                <span className=\"operator-close-conversation-text\">&times;</span>\n                                            </span>\n                                        }\n                                    </span>);\n                        })\n                    }\n                </div>\n                {\n                    this.props.operators && this.props.operators.length < MAX_OPERATORS &&\n                    <div style={styles.add_button} onClick={() => this.props.addOperator()} title=\"add Chat\">\n                        <AddBox className=\"active-users-icon\" />\n                        <span style={styles.max_text}>(Max {MAX_OPERATORS} chats)</span>\n                        <span style={styles.add_text}>Add Chat&nbsp;</span>\n                    </div>\n                }\n\n                <div style={styles.kbName}><SupervisedUserCircleIcon className=\"active-users-icon\" /> <span style={styles.bot_text}>{this.props.num_active_connections} active users</span></div>\n\n\n                {\n                    this.props.operators && this.props.operators.map((operator, index) => {\n                        if ((index + 1) === this.state.selectedTab) {\n                            return (<Operator\n                                    key={'display' + (index + 1)}\n                                    operator={operator}\n                                    isFirst={index === 0}\n                                    onCloseTab={() => this.setState({selectedTab: 1})}\n                                    openDialog={(message, title, callback) => this.props.openDialog(message, title, callback)}\n                                    closeDialog={() => this.props.closeDialog()} />);\n                        } else {\n                            return (<div key={'display' + (index + 1)} />);\n                        }\n                    })\n                }\n\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = function(state) {\n    return {\n        error: state.appReducer.error,\n        error_title: state.appReducer.error_title,\n        theme: state.appReducer.theme,\n\n        session: state.appReducer.session,\n        user: state.appReducer.user,\n        num_active_connections: state.appReducer.num_active_connections,\n        selected_organisation_id: state.appReducer.selected_organisation_id,\n\n        operators: state.appReducer.operators,\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    dispatch => bindActionCreators(appCreators, dispatch)\n)(OperatorTabs);\n\n","import React, {Component} from 'react';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nimport Button from '@material-ui/core/Button';\n\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\n\nimport TimeSelect from '../common/time-select'\nimport TextField from \"@material-ui/core/TextField\";\nimport Api from \"../common/api\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\n\n\nconst styles = {\n    formContent: {\n        overflowY: 'scroll',\n        height: '550px',\n    },\n    tab: {\n        backgroundColor: '#f8f8f8',\n        color: '#000',\n    },\n    tab_dark: {\n        backgroundColor: '#808080',\n        color: '#f8f8f8',\n    },\n    domainPage: {\n        padding: '10px',\n    },\n    textField: {\n        marginLeft: '10px',\n        marginRight: '10px',\n        width: '500px',\n    },\n    timeTabContent: {\n        marginLeft: '20px',\n    },\n    testButton: {\n        marginLeft: '20px',\n        marginTop: '20px',\n        marginRight: '20px',\n    },\n    edgeText: {\n        marginLeft: '20px',\n        marginRight: '10px',\n    }\n};\n\nexport class DomainDialog extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            open: props.open,\n\n            onSave: props.onSave,  // save callback\n            onTest: props.onTest,   // test button callback\n            onUpdate: props.onUpdate, // update callback\n\n            onError: props.onError,\n            error_title: props.error_title,\n            error_msg: props.error_msg,\n\n            selectedTab: 'general',\n\n            // organisational details\n            organisation_id: props.organisation_id,\n            kb_id: props.kb_id,\n            edge_device_list: this.props.edge_device_list,\n\n            ...this.construct_data(props.domain),\n\n            has_error: false,\n        }\n    }\n\n    componentDidCatch(error, info) {\n        this.setState({has_error: true});\n        console.log(error, info);\n    }\n\n    UNSAFE_componentWillReceiveProps(nextProps) {\n        if (nextProps !== null) {\n            if (nextProps.domain) {\n                this.setState({\n                    open: nextProps.open,\n                    title: nextProps.title,\n\n                    onSave: nextProps.onSave,\n                    onUpdate: nextProps.onUpdate,\n                    onTest: nextProps.onTest,\n\n                    onError: nextProps.onError,\n                    error_title: nextProps.error_title,\n                    error_msg: nextProps.error_msg,\n\n                    organisation_id: nextProps.organisation_id,\n                    kb_id: nextProps.kb_id,\n                    edge_device_list: nextProps.edge_device_list,\n\n                    ...this.construct_data(nextProps.domain)\n                });\n\n            } else {\n                this.setState({\n                    open: nextProps.open,\n                    title: nextProps.title,\n\n                    onSave: nextProps.onSave,\n                    onError: nextProps.onError,\n                });\n            }\n        }\n    }\n\n    change_callback(data) {\n        this.setState(data);\n    }\n\n    construct_data(domain) {\n        if (domain) {\n            return {\n                organisationId: '', kbId: '',\n                domainId: Api.defined(domain.domainId) ? domain.domainId : '',\n                domainName: Api.defined(domain.domainName) ? domain.domainName : '',\n                userName: Api.defined(domain.userName) ? domain.userName : '',\n                password: Api.defined(domain.password) ? domain.password : '',\n                serverIp: Api.defined(domain.serverIp) ? domain.serverIp : '',\n                basePath: Api.defined(domain.basePath) ? domain.basePath : '',\n                portNumber: Api.defined(domain.portNumber) ? domain.portNumber : 389,\n                sslOn: Api.defined(domain.sslOn) ? domain.sslOn : false,\n                schedule: Api.defined(domain.schedule) ? domain.schedule : '',\n                edgeDeviceId: Api.defined(domain.edgeDeviceId) ? domain.edgeDeviceId : '',\n            }\n        } else {\n            return {\n                organisationId: '', kbId: '',\n                domainId: '', domainName: '',\n                userName: '', password: '',\n                serverIp: '', basePath: '',\n                portNumber: 389, sslOn: false,\n                schedule: '', edgeDeviceId: '',\n            }\n        }\n    }\n\n    gather_data() {\n        return {\n            organisationId: '', kbId: '',\n            domainId: this.state.domainId,\n            domainName: this.state.domainName,\n            userName: this.state.userName,\n            password: this.state.password,\n            serverIp: this.state.serverIp,\n            basePath: this.state.basePath,\n            portNumber: this.state.portNumber,\n            sslOn: this.state.sslOn,\n            schedule: this.state.schedule,\n            edgeDeviceId: this.state.edgeDeviceId,\n        }\n    }\n\n    setError(title, error_msg) {\n        if (this.props.onError) {\n            this.props.onError(title, error_msg);\n        }\n    }\n\n    handleCancel() {\n        if (this.state.onSave) {\n            this.state.onSave(null);\n        }\n        this.setState({open: false});\n    };\n\n    handleSave() {\n        if (this.state.userName.trim().length === 0 && (\n            this.state.password.trim().length === 0 ||\n            this.state.domainName.trim().length === 0 ||\n            this.state.serverIp.trim().length === 0 ||\n            this.state.portNumber.trim().length === 0 ||\n            this.state.basePath.trim().length === 0)) {\n\n            this.setError('invalid parameters', 'you must supply credentials, and domain details using all fields.');\n\n        } else {\n            if (this.state.onSave) {\n                this.state.onSave(this.gather_data());\n            }\n        }\n    }\n\n    testConnection() {\n        if (this.state.userName.trim().length === 0 && (\n            this.state.password.trim().length === 0 ||\n            this.state.domainName.trim().length === 0 ||\n            this.state.serverIp.trim().length === 0 ||\n            this.state.portNumber.trim().length === 0 ||\n            this.state.basePath.trim().length === 0)) {\n\n            this.setError('invalid parameters', 'you must supply credentials, and domain details using all fields.');\n\n        } else {\n            if (this.state.onTest) {\n                this.state.onTest(this.gather_data());\n            }\n        }\n    }\n\n    updateSchedule(time) {\n        if (time !== null) {\n            this.setState({schedule: time});\n            if (this.state.onUpdate) {\n                this.state.onUpdate({...this.gather_data(), \"schedule\": time});\n            }\n        }\n    }\n\n    filteredEdgeDevices() {\n        let list = [{\"key\": \"none\", \"value\": \"n/a\"}];\n        if (this.props.edge_device_list) {\n            for (let edge_device of this.props.edge_device_list) {\n                if (edge_device.organisationId === this.state.organisation_id && edge_device.edgeId) {\n                    list.push({\"key\": edge_device.edgeId, \"value\": edge_device.name});\n                }\n            }\n        }\n        return list;\n    }\n\n    render() {\n        if (this.state.has_error) {\n            return <h1>domain-dialog.js: Something went wrong.</h1>;\n        }\n        const theme = this.props.theme;\n        const tabStyle = (theme === 'light' ? styles.tab : styles.tab_dark);\n        const t_value = this.state.selectedTab;\n        return (\n            <div>\n                <Dialog aria-labelledby=\"alert-dialog-title\"\n                        aria-describedby=\"alert-dialog-description\"\n                        open={this.state.open}\n                        disableBackdropClick={true}\n                        disableEscapeKeyDown={true}\n                        fullWidth={true}\n                        maxWidth=\"lg\"\n                        onClose={this.handleCancel.bind(this)} >\n                    <DialogTitle id=\"alert-dialog-title\" className={theme}>{this.state.title}</DialogTitle>\n                    <div className={theme}>\n                        <div>\n                            <Tabs value={this.state.selectedTab} onChange={(event, value)=> this.setState({selectedTab: value})}>\n                                <Tab label=\"domain settings\" value=\"general\" style={tabStyle} />\n                                <Tab label=\"schedule\" value=\"schedule\" style={tabStyle} />\n                            </Tabs>\n\n                            <div style={styles.formContent}>\n                                {t_value === 'general' &&\n                                    <div style={styles.domainPage}>\n\n                                        <TextField\n                                            autoFocus={true}\n                                            placeholder=\"domain name\"\n                                            label=\"domain name\"\n                                            value={this.state.domainName}\n                                            onChange={(event) => {this.change_callback({domainName: event.target.value})}}\n                                            style={styles.textField}\n                                        />\n                                        <br />\n                                        <br />\n\n                                        <TextField\n                                            placeholder=\"user-name\"\n                                            label=\"user-name\"\n                                            value={this.state.userName}\n                                            onChange={(event) => {this.change_callback({userName: event.target.value})}}\n                                            style={styles.textField}\n                                        />\n                                        <br />\n                                        <br />\n\n                                        <TextField\n                                            placeholder=\"password (leave blank not to change)\"\n                                            label=\"password (leave blank not to change)\"\n                                            type=\"password\"\n                                            value={this.state.password}\n                                            onChange={(event) => {this.change_callback({password: event.target.value})}}\n                                            style={styles.textField}\n                                        />\n                                        <br />\n                                        <br />\n\n                                        <TextField\n                                            placeholder=\"domain ip-address\"\n                                            label=\"domain ip-address\"\n                                            value={this.state.serverIp}\n                                            onChange={(event) => {this.change_callback({serverIp: event.target.value})}}\n                                            style={styles.textField}\n                                        />\n                                        <br />\n                                        <br />\n\n                                        <TextField\n                                            placeholder=\"domain base-path (e.g. dc=my-domain,dc=co,dc=uk)\"\n                                            label=\"domain base-path (e.g. dc=my-domain,dc=co,dc=uk)\"\n                                            value={this.state.basePath}\n                                            onChange={(event) => {this.change_callback({basePath: event.target.value})}}\n                                            style={styles.textField}\n                                        />\n                                        <br />\n                                        <br />\n\n                                        <TextField\n                                            placeholder=\"Active Directory port-number\"\n                                            label=\"Active Directory port-number\"\n                                            value={this.state.portNumber}\n                                            onChange={(event) => {this.change_callback({portNumber: event.target.value})}}\n                                            style={styles.textField}\n                                        />\n                                        <br />\n                                        <br />\n\n                                        <div>\n                                            <span style={styles.edgeText}>Edge device</span>\n                                            <span>\n                                                <Select\n                                                disableUnderline\n                                                value={this.state.edgeDeviceId !== '' ? this.state.edgeDeviceId : 'none'}\n                                                onChange={(event) => {\n                                                    this.change_callback({edgeDeviceId: event.target.value})\n                                                }}>\n                                                {\n                                                    this.filteredEdgeDevices().map((value) => {\n                                                        return (<MenuItem key={value.key} value={value.key}>{value.value}</MenuItem>)\n                                                    })\n                                                }\n                                                </Select>\n                                            </span>\n                                        </div>\n                                        <br />\n                                        <br />\n\n                                        <div style={{float: 'left'}} title=\"Check this box if you want the enable SSL communications with the Active Directory server.\">\n                                            <Checkbox\n                                                checked={this.state.sslOn}\n                                                onChange={(event) => {\n                                                    if (!event.target.checked) {\n                                                        this.change_callback({sslOn: false});\n                                                    } else {\n                                                        this.change_callback({sslOn: event.target.checked});\n                                                    }\n                                                }}\n                                                value=\"enable Active Directory SSL?\"\n                                                inputProps={{\n                                                    'aria-label': 'primary checkbox',\n                                                }}\n                                            />\n                                            enable Active Directory SSL?\n                                        </div>\n                                        <br clear=\"both\" />\n\n                                        <Button variant=\"contained\" color=\"primary\" style={styles.testButton}\n                                                onClick={() => this.testConnection()}>Test Connection</Button>\n\n\n                                    </div>\n                                }\n                                {t_value === 'schedule' &&\n                                <div style={styles.timeTabContent}>\n                                    <TimeSelect time={this.state.schedule}\n                                                onSave={(time) => this.updateSchedule(time)}/>\n                                </div>\n                                }\n                            </div>\n\n\n                        </div>\n                    </div>\n                    <DialogActions className={theme}>\n                        <Button color={\"primary\"} onClick={() => this.handleCancel()}>cancel</Button>\n                        <Button color={\"secondary\"} onClick={() => this.handleSave()}>save</Button>\n                    </DialogActions>\n\n                </Dialog>\n            </div>\n        );\n    }\n}\n\nexport default DomainDialog;\n","import React, {Component} from 'react';\n\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport TablePagination from '@material-ui/core/TablePagination';\n\nimport {DomainDialog} from './domain_dialog'\n\nimport {connect} from \"react-redux\";\nimport {bindActionCreators} from \"redux\";\nimport {appCreators} from \"../actions/appActions\";\n\nconst empty_domain= {domainId: '', domainName: '', userName: '', password: '', serverIp: '', basePath: '', portNumber: 389, sslOn: false, schedule: '' };\n\nconst styles = {\n    pageWidth: {\n        width: '900px',\n    },\n    tableLight: {\n    },\n    tableDark: {\n        background: '#d0d0d0',\n    },\n    tab: {\n        backgroundColor: '#f8f8f8',\n        color: '#000',\n    },\n    addImage: {\n        width: '25px',\n        cursor: 'pointer',\n        color: \"green\",\n    },\n    knowledgeSelect: {\n        padding: '5px',\n        marginBottom: '40px',\n    },\n    lhs: {\n        float: 'left',\n        width: '150px',\n        marginTop: '-10px',\n        color: '#aaa',\n    },\n    rhs: {\n        float: 'left',\n    },\n    tableHeaderStyle: {\n        background: '#555',\n        fontSize: '0.95em',\n        color: '#fff',\n    },\n    label: {\n        marginTop: '20px',\n        color: '#555',\n    },\n    linkButton: {\n        float: 'left',\n        padding: '10px',\n        color: '#888',\n        cursor: 'pointer',\n    },\n    imageButton: {\n        float: 'right',\n        padding: '10px',\n        color: '#888',\n        cursor: 'pointer',\n    },\n    download: {\n        cursor: 'pointer',\n        fontSize: '0.9em',\n        fontWeight: '600',\n        height: '24px',\n    },\n    downloadType: {\n        fontSize: '0.9em',\n        height: '24px',\n    },\n    downloadImage: {\n        width: '24px',\n    },\n    labelHeader: {\n        marginTop: '20px',\n        marginBottom: '5px',\n        fontSize: '0.8em',\n    },\n};\n\nexport class Domains extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            // pagination\n            page_size: 5,\n            page: 0,\n            // dialog\n            open: false,\n            title: '',\n            selected_domain: {},\n            domain_ask: null,\n        };\n    }\n    componentDidCatch(error, info) {\n        this.props.setError(error, info);\n        console.log(error, info);\n    }\n    changePage(page) {\n        this.setState({page: page});\n    }\n    changePageSize(page_size) {\n        this.setState({page_size: page_size});\n    }\n    getDomains() {\n        const paginated_list = [];\n        const first = this.state.page * this.state.page_size;\n        const last = first + this.state.page_size;\n        for (const i in this.props.domain_list) {\n            if (i >= first && i < last) {\n                paginated_list.push(this.props.domain_list[i]);\n            }\n        }\n        return paginated_list;\n    }\n    addNewDomain() {\n        this.setState({open: true, selected_domain: empty_domain, title: 'Create New Domain'});\n    }\n    onUpdate(domain) {\n        this.setState({selected_domain: domain});\n    }\n    editDomain(domain) {\n        if (domain) {\n            this.setState({open: true, selected_domain: { ...empty_domain, ...domain}, title: 'Edit Domain'});\n        }\n    }\n    deleteDomainAsk(domain) {\n        this.setState({domain_ask: domain});\n        this.props.openDialog(\"are you sure you want to remove the domain named <b>\" + domain.domainName + \"</b>?\",\n            \"Remove Domain\", (action) => { this.deleteDomain(action) });\n    }\n    deleteDomain(action) {\n        if (action && this.state.domain_ask && this.state.domain_ask.domainId) {\n            this.props.deleteDomain(this.state.domain_ask.domainId);\n        }\n        if (this.props.closeDialog) {\n            this.props.closeDialog();\n        }\n    }\n    saveDomain(domain) {\n        if (domain) {\n            domain.organisationId = this.props.selected_organisation_id;\n            domain.kbId = this.props.selected_knowledgebase_id;\n            this.props.updateDomain(domain);\n        }\n        this.setState({open: false});\n    }\n    testDomain(domain) {\n        if (domain) {\n            domain.organisationId = this.props.selected_organisation_id;\n            domain.kbId = this.props.selected_knowledgebase_id;\n            this.setState({selected_domain: domain});\n            this.props.testDomain(domain);\n        }\n    }\n    isVisible() {\n        return this.props.selected_organisation_id && this.props.selected_organisation_id.length > 0 &&\n            this.props.selected_organisation && this.props.selected_organisation.length > 0 &&\n            this.props.selected_knowledgebase_id && this.props.selected_knowledgebase_id.length > 0;\n    }\n    render() {\n        const theme = this.props.theme;\n        return (\n            <div>\n                <DomainDialog\n                    open={this.state.open}\n                    title={this.state.title}\n                    theme={theme}\n                    organisation_id={this.props.selected_organisation_id}\n                    kb_id={this.props.selected_knowledgebase_id}\n                    edge_device_list={this.props.edge_device_list}\n                    onSave={(domain) => this.saveDomain(domain)}\n                    onTest={(domain) => this.testDomain(domain)}\n                    onUpdate={(domain) => this.onUpdate(domain)}\n                    onError={(title, errStr) => this.props.setError(title, errStr)}\n                    error_title={this.props.error_title}\n                    error_msg={this.props.error}\n                    domain={this.state.selected_domain}\n                />\n\n                {\n                    this.isVisible() &&\n\n                    <Paper style={styles.pageWidth}>\n                        <Table>\n                            <TableHead>\n                                <TableRow className='table-header'>\n                                    <TableCell className='table-header'>name</TableCell>\n                                    <TableCell className='table-header'>path</TableCell>\n                                    <TableCell className='table-header'>objects</TableCell>\n                                    <TableCell className='table-header'>actions</TableCell>\n                                </TableRow>\n                            </TableHead>\n                            <TableBody style={theme === 'light' ? styles.tableLight : styles.tableDark}>\n                                {\n                                    this.getDomains().map((domain) => {\n                                        return (\n                                            <TableRow key={domain.domainId}>\n                                                <TableCell>\n                                                    <div style={styles.label}>{domain.domainName}</div>\n                                                </TableCell>\n                                                <TableCell>\n                                                    <div style={styles.label}>{domain.basePath}</div>\n                                                </TableCell>\n                                                <TableCell>\n                                                    <div style={styles.label}>{domain.numObjects}</div>\n                                                </TableCell>\n                                                <TableCell>\n                                                    <div style={styles.linkButton} onClick={() => this.editDomain(domain)}>\n                                                        <img src=\"../images/edit.svg\" style={styles.downloadImage} title=\"edit domain\" alt=\"edit\"/>\n                                                    </div>\n                                                    <div style={styles.linkButton} onClick={() => this.deleteDomainAsk(domain)}>\n                                                        <img src=\"../images/delete.svg\" style={styles.downloadImage} title=\"remove domain\" alt=\"remove\"/>\n                                                    </div>\n                                                </TableCell>\n                                            </TableRow>\n                                        )\n                                    })\n                                }\n                                <TableRow>\n                                    <TableCell/>\n                                    <TableCell/>\n                                    <TableCell/>\n                                    <TableCell>\n                                        {this.props.selected_organisation_id.length > 0 && this.props.selected_knowledgebase_id.length > 0 &&\n                                        <div style={styles.imageButton} onClick={() => this.addNewDomain()}><img\n                                            style={styles.addImage} src=\"../images/add.svg\" title=\"add new domain\"\n                                            alt=\"add new domain\"/></div>\n                                        }\n                                    </TableCell>\n                                </TableRow>\n                            </TableBody>\n                        </Table>\n\n                        <TablePagination\n                            style={theme === 'light' ? styles.tableLight : styles.tableDark}\n                            rowsPerPageOptions={[5, 10, 25]}\n                            component=\"div\"\n                            count={this.props.domain_list.length}\n                            rowsPerPage={this.state.page_size}\n                            page={this.state.page}\n                            backIconButtonProps={{\n                                'aria-label': 'Previous Page',\n                            }}\n                            nextIconButtonProps={{\n                                'aria-label': 'Next Page',\n                            }}\n                            onChangePage={(event, page) => this.changePage(page)}\n                            onChangeRowsPerPage={(event) => this.changePageSize(event.target.value)}\n                        />\n\n                    </Paper>\n                }\n\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = function(state) {\n    return {\n        error: state.appReducer.error,\n        error_title: state.appReducer.error_title,\n\n        selected_organisation_id: state.appReducer.selected_organisation_id,\n        selected_organisation: state.appReducer.selected_organisation,\n        selected_knowledgebase_id: state.appReducer.selected_knowledgebase_id,\n        edge_device_list: state.appReducer.edge_device_list,\n        domain_list: state.appReducer.domain_list,\n        theme: state.appReducer.theme,\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    dispatch => bindActionCreators(appCreators, dispatch)\n)(Domains);\n","import React, {Component} from 'react';\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\n\nimport {MuiThemeProvider} from '@material-ui/core/styles';\nimport {darkTheme, lightTheme} from \"./theme-ui\";\n\nimport AppMenu from './auth/app-menu'\nimport ErrorDialog from './common/error-dialog'\nimport {MessageDialog} from './common/message-dialog'\nimport AutoComplete from './common/autocomplete'\n\nimport Api from './common/api'\nimport Comms from './common/comms'\n\nimport Organisations from \"./organisations/organisations\";\nimport UserManager from \"./users/user-manager\";\nimport KnowledgeBases from \"./kb/knowledge-bases\";\nimport EdgeDevices from \"./edge/edge-devices\";\nimport EdgeDeviceCommands from \"./edge/edge-device-commands\";\nimport Inventory from './inventory/inventory'\nimport DocumentSources from \"./documents/document-sources\";\nimport Documents from \"./documents/documents\";\nimport Mind from \"./mind/mind\";\nimport MindTest from \"./mind/mind-test\";\nimport Synonyms from \"./synonyms/synonyms\";\nimport Semantics from \"./semantics/semantics\";\nimport SynSets from \"./synsets/synsets\";\nimport Logs from \"./reports/logs\";\nimport Reports from \"./reports/reports\";\nimport OperatorTabs from \"./operator/operator_tabs\";\nimport Domains from \"./ad/domains\";\n\nimport SockJsClient from 'react-stomp';\n\nimport {connect} from \"react-redux\";\nimport {bindActionCreators} from \"redux\";\nimport {appCreators} from \"./actions/appActions\";\n\n// if not defined, use this one\nconst default_operator_wait_timeout_in_ms = 10000;\n\n\nconst styles = {\n    page: {\n        float: 'left',\n        minWidth: '1200px',\n    },\n    pageNav: {\n        float: 'left',\n        marginTop: '56px',\n        marginRight: '50px',\n        borderRadius: '10px',\n        padding: '5px',\n    },\n    pageContent: {\n        float: 'left',\n        marginTop: '10px',\n        minWidth: '700px',\n    },\n    selectedNavItem: {\n        marginLeft: '10px',\n        textAlign: 'center',\n        width: '180px',\n        padding: '10px',\n        cursor: 'pointer',\n        background: '#62C2D6',\n        color: '#fff',\n        border: '1px solid #666',\n        borderRadius: '2px',\n        marginBottom: '5px',\n    },\n    navItem: {\n        marginLeft: '10px',\n        textAlign: 'center',\n        width: '180px',\n        padding: '10px',\n        border: '1px solid #bbb',\n        cursor: 'pointer',\n        background: '#f8f8f8',\n        color: '#666',\n        borderRadius: '2px',\n        marginBottom: '5px',\n    },\n    navItemDark: {\n        marginLeft: '10px',\n        textAlign: 'center',\n        width: '180px',\n        padding: '10px',\n        border: '1px solid #bbb',\n        cursor: 'pointer',\n        background: '#666',\n        color: '#f8f8f8',\n        borderRadius: '2px',\n        marginBottom: '5px',\n    },\n    navItemDisabled: {\n        marginLeft: '10px',\n        textAlign: 'center',\n        width: '180px',\n        padding: '10px',\n        border: '1px solid #bbb',\n        background: '#f8f8f8',\n        color: '#e0e0e0',\n        borderRadius: '2px',\n        marginBottom: '5px',\n        cursor: 'not-allowed',\n    },\n    navItemDisabledDark: {\n        marginLeft: '10px',\n        textAlign: 'center',\n        width: '180px',\n        padding: '10px',\n        border: '1px solid #555',\n        background: '#444',\n        color: '#888',\n        borderRadius: '2px',\n        marginBottom: '5px',\n        cursor: 'not-allowed',\n    },\n    organisationSelect: {\n        padding: '5px',\n        marginBottom: '40px',\n    },\n    organisationLabel: {\n        marginTop: '-10px',\n    },\n    knowledgeSelect: {\n        padding: '5px',\n        marginBottom: '50px',\n    },\n    divider: {\n        height: '5px',\n    },\n    lhs: {\n        float: 'left',\n        width: '150px',\n        marginTop: '-10px',\n        color: '#aaa',\n    },\n    rhs: {\n        float: 'left',\n    },\n    notificationParent: {\n        position: 'fixed',\n        left: '4px',\n        right: '1px',\n        bottom: '4px',\n    },\n    notifications: {\n        background: '#fafafa',\n        marginRight: '40px',\n        color: '#333',\n        padding: '16px',\n        zIndex: '101',\n        boxShadow: '0 0 2px 2px',\n        height: '120px',\n        overflowY: 'scroll',\n    },\n    notificationsHidden: {\n        position: 'fixed',\n        left: '0',\n        right: '0',\n        bottom: '2px',\n        padding: '16px',\n        zIndex: '101',\n    },\n    displayAll: {\n        float: 'right',\n        marginRight: '10px',\n    },\n    hideAllImage: {\n        width: '16px',\n    },\n    showAllImage: {\n        width: '16px',\n        marginRight: '-12px',\n    },\n    info: {\n    },\n    infoDate: {\n        display: 'inline-block',\n        width: '200px',\n        marginLeft: '20px',\n        fontSize: '0.8em',\n    },\n    infoType: {\n        display: 'inline-block',\n        width: '100px',\n        fontSize: '0.9em',\n    },\n    infoText: {\n        display: 'inline-block',\n        width: '70%',\n        fontSize: '0.9em',\n    },\n    busy: {\n        display: 'block',\n        position: 'fixed',\n        left: 0,\n        top: 0,\n        width: '100%',\n        height: '100%',\n        zIndex: '9999',\n        borderRadius: '10px',\n        opacity: '0.8',\n        backgroundSize: '100px',\n        background: \"url('../images/busy.gif') 50% 50% no-repeat rgb(255,255,255)\"\n    },\n    busyDark: {\n        display: 'block',\n        position: 'fixed',\n        left: 0,\n        top: 0,\n        width: '100%',\n        height: '100%',\n        zIndex: '9999',\n        borderRadius: '10px',\n        opacity: '0.3',\n        backgroundSize: '100px',\n        background: \"url('../images/busy.gif') 50% 50% no-repeat rgb(1.0,1.0,1.0,0.10)\"\n    },\n};\n\nexport class Home extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            message_callback: null,\n            message: '',\n            message_title: '',\n        }\n    }\n    componentDidCatch(error, info) {\n        this.props.setError(error, info);\n        console.log(error, info);\n    }\n    componentDidMount() {\n        // do we still have a session?\n        if (!Api.defined(Comms.getSession())) {\n            // clearState();\n            window.location = \"/#/\";\n        } else {\n            this.props.getOrganisationList();\n\n            // switch tabs for non admin users to knowledge base default\n            if (!Home.hasRole(this.props.user, ['admin']) && this.props.selected_tab === \"organisations\") {\n                this.props.setupManager();\n            }\n\n            // /ops/refresh every operator_wait_timeout_in_ms interval\n            const isAdminOrManager = Home.hasRole(this.props.user, ['admin', 'manager']);\n            const isOperator = Home.hasRoleInOrganisation(this.props.user, this.props.selected_organisation_id, ['operator']);\n            const self = this;\n            let timeout = (this.props.operator_wait_timeout_in_ms && this.props.operator_wait_timeout_in_ms >= 1000) ?\n                this.props.operator_wait_timeout_in_ms : default_operator_wait_timeout_in_ms;\n            if (isAdminOrManager || isOperator) {\n                // refresh notifications and operator at interval\n                setInterval(() => { self.refreshOperator(self); }, timeout);\n            }\n\n            if (isOperator) {\n                // if this user has an operator role at all - we need to ask for events\n                if (!this.props.html5_notifications || this.props.html5_notifications.length === 0) {\n                    this.props.getHtml5Notifications();\n                }\n            }\n\n        }\n    }\n    refreshOperator(self) {\n        // keep operator alive if they're active and ready\n        if (self.props.selected_organisation_id.length > 0 &&\n            self.props.operators && self.props.operators.length > 0) {\n            const operatorList = [];\n            for (const op of self.props.operators) {\n                if (op.operator_ready) {\n                    operatorList.push({\"operatorId\": op.id, \"isTyping\": op.is_typing, \"clientId\": op.client_id});\n                }\n            }\n            if (operatorList.length > 0) {\n                const data = {\n                    sessionId: self.props.session.id,\n                    organisationId: self.props.selected_organisation_id,\n                    operatorList: operatorList,\n                };\n                this.props.sendOperatorMessage('/ops/refresh', data);\n            }\n        }\n    }\n    getStyle(tab, disabled) {\n        const theme = this.props.theme;\n        if (disabled) {\n            return theme === 'light' ? styles.navItemDisabled : styles.navItemDisabledDark;\n        }\n        return this.props.selected_tab === tab ? styles.selectedNavItem : (theme === 'light' ? styles.navItem : styles.navItemDark);\n    }\n    static getTab(user) {\n        if (Home.hasRole(user, ['admin'])) {\n            return \"organisations\";\n        } else if (Home.hasRole(user, ['manager'])) {\n            return \"users\";\n        } else if (Home.hasRole(user, ['reporter'])) {\n            return \"reports\";\n        } else {\n            return \"invalid\"\n        }\n    }\n    static hasRole(user, role_name_list) {\n        if (user && user.roles) {\n            for (const role of user.roles) {\n                if (role_name_list.indexOf(role.role) >= 0) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n    static hasRoleInOrganisation(user, organisationId, role_name_list) {\n        if (user && user.roles) {\n            for (const role of user.roles) {\n                if (role.organisationId === organisationId && role_name_list.indexOf(role.role) >= 0) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n    // is this user entitle to edit the user passed in?\n    static canEdit(user, isAdmin, isManager) {\n        // admin can edit anyone, always\n        if (isAdmin) return true;\n        // a non admin user can never edit an administrator\n        const userIsAdmin = Home.hasRole(user, ['admin']);\n        if (userIsAdmin) return false;\n        // managers can edit everyone else\n        return isManager;\n    }\n    // is this user entitle to edit the user passed in?\n    static canDelete(user, signedInUser, isAdmin, isManager) {\n        // one cannot delete the signed-in user\n        if (user.email === signedInUser.email) return false;\n        // admin can edit anyone, always\n        if (isAdmin) return true;\n        // a non admin user can never edit an administrator\n        const userIsAdmin = Home.hasRole(user, ['admin']);\n        if (userIsAdmin) return false;\n        // managers can edit everyone else\n        return isManager;\n    }\n    static pad(item) {\n        return (\"\" + item).padStart(2, '0');\n    }\n    static pad2(item) {\n        return (\"\" + item).padStart(3, '0');\n    }\n    getNotifications() {\n        if (this.props.notification_list.length > this.props.notification_list_display_size) {\n            const len = this.props.notification_list.length;\n            const list = JSON.parse(JSON.stringify(this.props.notification_list.slice(len - this.props.notification_list_display_size, len)));\n            return list.reverse()\n        }\n        const list = JSON.parse(JSON.stringify(this.props.notification_list));\n        return list.reverse();\n    }\n    getOrganisationListFiltered(filter_text, callback) {\n        if (filter_text && filter_text.length > 0) {\n            const ft_lower = filter_text.toLowerCase();\n            const filtered_list = [];\n            for (const item of this.props.organisation_list) {\n                if (item.name.toLowerCase().indexOf(ft_lower) >= 0) {\n                    filtered_list.push({'label': item.name, 'data': item.id});\n                }\n            }\n            callback(filtered_list);\n        } else {\n            const filtered_list = [];\n            for (const item of this.props.organisation_list) {\n                filtered_list.push({'label': item.name, 'data': item.id});\n            }\n            callback(filtered_list);\n        }\n    }\n    getKnowledgeBaseListFiltered(filter_text, callback) {\n        if (filter_text && filter_text.length > 0) {\n            const ft_lower = filter_text.toLowerCase();\n            const filtered_list = [];\n            for (const item of this.props.knowledge_base_list) {\n                if (item.name.toLowerCase().indexOf(ft_lower) >= 0) {\n                    filtered_list.push({'label': item.name, 'data': item.kbId});\n                }\n            }\n            callback(filtered_list);\n        } else {\n            const filtered_list = [];\n            for (const item of this.props.knowledge_base_list) {\n                filtered_list.push({'label': item.name, 'data': item.kbId});\n            }\n            callback(filtered_list);\n        }\n    }\n    getEdgeDeviceList(filtered_text, callback) {\n        if (this.props.edge_device_list) {\n            if (filtered_text && filtered_text.length > 0) {\n                const ft_lower = filtered_text.toLowerCase();\n                const filtered_list = [];\n                for (const item of this.props.edge_device_list) {\n                    if (item.name.toLowerCase().indexOf(ft_lower) >= 0) {\n                        filtered_list.push({'label': item.name, 'data': item.edgeId});\n                    }\n                }\n                callback(filtered_list);\n            } else {\n                const filtered_list = [];\n                for (const item of this.props.edge_device_list) {\n                    filtered_list.push({'label': item.name, 'data': item.edgeId});\n                }\n                callback(filtered_list);\n            }\n        }\n    }\n    openDialog(message, message_title, message_callback) {\n        this.setState({dialog_open: true, message: message, message_title: message_title, message_callback: message_callback});\n    }\n    closeDialog() {\n        this.setState({dialog_open: false, message: \"\", message_title: \"\", message_callback: null});\n    }\n    connectionError(error) {\n        this.props.setOperatorConnected(false);\n        this.props.setError(\"Operator Connection\", error);\n    }\n    render() {\n        const isAdmin = Home.hasRole(this.props.user, ['admin']);\n        const isOperator = Home.hasRoleInOrganisation(this.props.user, this.props.selected_organisation_id, ['operator']);\n        const operator_id_list = [];\n        if (this.props.operators) {\n            for (const operator of this.props.operators) {\n                if (operator && operator.id) {\n                    operator_id_list.push('/chat/' + operator.id);\n                }\n            }\n        }\n        const theme = this.props.theme;\n        return (\n            <MuiThemeProvider theme={theme === 'light' ? lightTheme : darkTheme}>\n                <CssBaseline />\n\n                {\n                    this.props.busy &&\n                    <div style={theme === 'light' ? styles.busy : styles.busyDark} />\n                }\n\n                <AppMenu title=\"\" signed_in={true} />\n\n                <ErrorDialog title={this.props.error_title}\n                             theme={theme}\n                             message={this.props.error}\n                             callback={() => this.props.closeError()} />\n\n                <MessageDialog callback={(action) => {if (this.state.message_callback) this.state.message_callback(action)}}\n                               open={this.state.message.length > 0}\n                               theme={this.props.theme}\n                               message={this.state.message}\n                               title={this.state.message_title} />\n\n                <SockJsClient url={window.ENV.ws_base} topics={operator_id_list}\n                              ref={ (client) => { this.clientRef = client }}\n                              onMessage={(msg) => { this.props.processOperatorMessage(msg) }}\n                              onConnect={() => this.props.setOperatorConnected(true)}\n                              onDisconnect={() => this.props.setOperatorConnected(false)}\n                              onError={(error) => this.connectionError(error)} />\n\n                 <div style={styles.page}>\n\n                     <div style={styles.pageNav}>\n                         {\n                             Home.hasRole(this.props.user, ['admin']) &&\n                             <div style={this.getStyle('organisations', false)} className=\"no-select\"\n                                  onClick={() => this.props.selectTab('organisations')}>organisations</div>\n                         }\n                         {\n                             Home.hasRole(this.props.user, ['admin', 'manager']) &&\n                             <div style={this.getStyle('knowledge bases', false)} className=\"no-select\"\n                                  onClick={() => this.props.selectTab('knowledge bases')}>knowledge bases</div>\n                         }\n                         {\n                             Home.hasRole(this.props.user, ['admin', 'manager']) &&\n                             <div style={this.getStyle('edge devices', false)} className=\"no-select\"\n                                  onClick={() => this.props.selectTab('edge devices')}>Edge devices</div>\n                         }\n                         {\n                             Home.hasRole(this.props.user, ['admin', 'manager']) &&\n                             this.props.edge_device_list && this.props.edge_device_list.length > 0 &&\n                             <div style={this.getStyle('edge commands', false)} className=\"no-select\"\n                                  onClick={() => this.props.selectTab('edge commands')}>Edge commands</div>\n                         }\n                         {\n                             Home.hasRole(this.props.user, ['admin', 'manager']) &&\n                             <div style={this.getStyle('users', false)} className=\"no-select\"\n                                  onClick={() => this.props.selectTab('users')}>user manager</div>\n                         }\n                         {\n                             <div style={this.getStyle('operator', !this.props.operator_connected || !isOperator)}\n                                  onClick={() => { if (isOperator) this.props.selectTab('operator')}} className=\"no-select\">operator</div>\n                         }\n                         {\n                             Home.hasRole(this.props.user, ['admin', 'manager']) &&\n                             <div style={this.getStyle('inventory', false)} className=\"no-select\"\n                                  onClick={() => this.props.selectTab('inventory')}>inventory</div>\n                         }\n                         {\n                             Home.hasRole(this.props.user, ['admin', 'manager']) &&\n                             <div style={this.getStyle('document sources', false)} className=\"no-select\"\n                                  onClick={() => this.props.selectTab('document sources')}>document\n                                 sources</div>\n                         }\n                         {\n                             Home.hasRole(this.props.user, ['admin', 'manager']) &&\n                             <div style={this.getStyle('documents', false)} className=\"no-select\"\n                                  onClick={() => this.props.selectTab('documents')}>documents</div>\n                         }\n                         {\n                             Home.hasRole(this.props.user, ['admin', 'manager']) &&\n                             <div style={this.getStyle('active directory', false)} className=\"no-select\"\n                                  onClick={() => this.props.selectTab('active directory')}>active directory</div>\n                         }\n                         {\n                             Home.hasRole(this.props.user, ['admin', 'manager']) &&\n                             <div style={this.getStyle('mind', false)} className=\"no-select\"\n                                  onClick={() => this.props.selectTab('mind')}>the mind</div>\n                         }\n                         {\n                             Home.hasRole(this.props.user, ['admin', 'manager']) &&\n                             <div style={this.getStyle('mind-test', false)} className=\"no-select\"\n                                  onClick={() => this.props.selectTab('mind-test')}>test the mind</div>\n                         }\n                         {\n                             Home.hasRole(this.props.user, ['admin', 'manager']) &&\n                             <div style={this.getStyle('synonyms', false)} className=\"no-select\"\n                                  onClick={() => this.props.selectTab('synonyms')}>synonyms</div>\n                         }\n                         {\n                             Home.hasRole(this.props.user, ['admin', 'manager']) &&\n                             <div style={this.getStyle('semantics')} className=\"no-select\"\n                                  onClick={() => this.props.selectTab('semantics')}>semantics</div>\n                         }\n                         {\n                             Home.hasRole(this.props.user, ['admin', 'manager']) &&\n                             <div style={this.getStyle('syn-sets')} className=\"no-select\"\n                                  onClick={() => this.props.selectTab('syn-sets')}>syn-sets</div>\n                         }\n                         {\n                             Home.hasRole(this.props.user, ['admin', 'manager']) &&\n                             <div style={this.getStyle('reports', false)} className=\"no-select\"\n                                  onClick={() => this.props.selectTab('reports')}>reports</div>\n                         }\n                         {\n                             Home.hasRole(this.props.user, ['admin']) &&\n                             <div style={this.getStyle('logs', false)}\n                                  onClick={() => this.props.selectTab('logs')}>logs</div>\n                         }\n                     </div>\n\n                     <div style={styles.pageContent}>\n\n                         {this.props.selected_tab !== 'organisations' && this.props.selected_tab !== 'os' &&\n                          this.props.selected_tab !== 'logs' &&\n                          this.props.selected_tab !== 'operator' && this.props.selected_tab !== 'license' && isAdmin &&\n                             <div style={styles.organisationSelect}>\n                                 <div style={styles.lhs}>organisation</div>\n                                 <div style={styles.rhs}>\n                                     <AutoComplete\n                                         theme={theme}\n                                         label='organisation'\n                                         value={this.props.selected_organisation}\n                                         onFilter={(text, callback) => this.getOrganisationListFiltered(text, callback)}\n                                         minTextSize={1}\n                                         onSelect={(label, data) => this.props.selectOrganisation(label, data)}\n                                     />\n                                 </div>\n                             </div>\n                         }\n\n                         {this.props.selected_tab !== 'organisations' && this.props.selected_tab !== 'os' &&\n                          this.props.selected_tab !== 'logs' &&\n                          this.props.selected_tab !== 'license' && this.props.selected_tab !== 'operator' && !isAdmin &&\n                             <div style={styles.organisationSelect}>\n                                 <div style={styles.lhs}>organisation</div>\n                                 <div style={styles.rhs}>\n                                     <div style={styles.organisationLabel}>{this.props.selected_organisation}</div>\n                                 </div>\n                             </div>\n                         }\n\n                         {this.props.selected_tab !== 'organisations' && this.props.selected_tab !== 'os' && this.props.selected_tab !== 'users' &&\n                          this.props.selected_tab !== 'operator' && this.props.selected_tab !== 'license' && this.props.selected_tab !== 'knowledge bases' &&\n                          this.props.selected_tab !== 'logs' && this.props.selected_tab !== 'edge devices' && this.props.selected_tab !== 'edge commands' &&\n                             <div style={styles.knowledgeSelect}>\n                                 <div style={styles.lhs}>knowledge base</div>\n                                 <div style={styles.rhs}>\n                                     <AutoComplete\n                                         label='knowledge base'\n                                         theme={theme}\n                                         value={this.props.selected_knowledgebase}\n                                         onFilter={(text, callback) => this.getKnowledgeBaseListFiltered(text, callback)}\n                                         minTextSize={1}\n                                         onSelect={(label, data) => {\n                                             this.props.selectKnowledgeBase(label, data);\n                                         }}\n                                     />\n                                 </div>\n                             </div>\n                         }\n\n                         { this.props.selected_tab === 'edge commands' &&\n                         <div style={styles.knowledgeSelect}>\n                             <div style={styles.lhs}>edge device</div>\n                             <div style={styles.rhs}>\n                                 <AutoComplete\n                                     label='edge device'\n                                     theme={theme}\n                                     value={this.props.selected_edge_device}\n                                     onFilter={(text, callback) => this.getEdgeDeviceList(text, callback)}\n                                     minTextSize={1}\n                                     onSelect={(label, data) => {\n                                         this.props.selectEdgeDevice(label, data);\n                                     }}\n                                 />\n                             </div>\n                         </div>\n                         }\n\n                         { this.props.selected_tab === 'organisations' &&\n                             <Organisations\n                                 openDialog={(message, title, callback) => this.openDialog(message, title, callback)}\n                                 closeDialog={() => this.closeDialog()} />\n                         }\n\n                         { this.props.selected_tab === 'knowledge bases' &&\n                            <KnowledgeBases\n                                openDialog={(message, title, callback) => this.openDialog(message, title, callback)}\n                                closeDialog={() => this.closeDialog()} />\n                         }\n\n                         { this.props.selected_tab === 'edge devices' &&\n                             <EdgeDevices\n                                 openDialog={(message, title, callback) => this.openDialog(message, title, callback)}\n                                 closeDialog={() => this.closeDialog()} />\n                         }\n\n                         { this.props.selected_tab === 'edge commands' &&\n                            <EdgeDeviceCommands\n                             openDialog={(message, title, callback) => this.openDialog(message, title, callback)}\n                             closeDialog={() => this.closeDialog()} />\n                         }\n\n                         { this.props.selected_tab === 'users' &&\n                            <UserManager\n                                openDialog={(message, title, callback) => this.openDialog(message, title, callback)}\n                                closeDialog={() => this.closeDialog()} />\n                         }\n\n                         { this.props.selected_tab === 'operator' &&\n                             <OperatorTabs\n                                 openDialog={(message, title, callback) => this.openDialog(message, title, callback)}\n                                 closeDialog={() => this.closeDialog()} />\n                         }\n\n                         { this.props.selected_tab === 'inventory' &&\n                             <Inventory\n                                 openDialog={(message, title, callback) => this.openDialog(message, title, callback)}\n                                 closeDialog={() => this.closeDialog()} />\n                         }\n\n                         { this.props.selected_tab === 'document sources' &&\n                            <DocumentSources\n                                openDialog={(message, title, callback) => this.openDialog(message, title, callback)}\n                                closeDialog={() => this.closeDialog()} />\n                         }\n\n                         { this.props.selected_tab === 'documents' &&\n                             <Documents\n                                 openDialog={(message, title, callback) => this.openDialog(message, title, callback)}\n                                 closeDialog={() => this.closeDialog()} />\n                         }\n\n                         { this.props.selected_tab === 'active directory' &&\n                             <Domains\n                                 openDialog={(message, title, callback) => this.openDialog(message, title, callback)}\n                                 closeDialog={() => this.closeDialog()} />\n                         }\n\n                         { this.props.selected_tab === 'mind' &&\n                             <Mind\n                                 openDialog={(message, title, callback) => this.openDialog(message, title, callback)}\n                                 closeDialog={() => this.closeDialog()} />\n                         }\n\n                         { this.props.selected_tab === 'mind-test' &&\n                             <MindTest\n                                 openDialog={(message, title, callback) => this.openDialog(message, title, callback)}\n                                 closeDialog={() => this.closeDialog()} />\n                         }\n\n                         { this.props.selected_tab === 'synonyms' &&\n                             <Synonyms\n                                 openDialog={(message, title, callback) => this.openDialog(message, title, callback)}\n                                 closeDialog={() => this.closeDialog()} />\n                         }\n\n                         { this.props.selected_tab === 'semantics' &&\n                             <Semantics\n                                 openDialog={(message, title, callback) => this.openDialog(message, title, callback)}\n                                 closeDialog={() => this.closeDialog()} />\n                         }\n\n                         { this.props.selected_tab === 'syn-sets' &&\n                             <SynSets\n                                 openDialog={(message, title, callback) => this.openDialog(message, title, callback)}\n                                 closeDialog={() => this.closeDialog()} />\n                         }\n\n                         { this.props.selected_tab === 'reports' &&\n                             <Reports\n                                 openDialog={(message, title, callback) => this.openDialog(message, title, callback)}\n                                 closeDialog={() => this.closeDialog()} />\n                         }\n\n                         { this.props.selected_tab === 'logs' &&\n                             <Logs\n                                 openDialog={(message, title, callback) => this.openDialog(message, title, callback)}\n                                 closeDialog={() => this.closeDialog()} />\n                         }\n\n                         {\n                             this.props.selected_tab === 'invalid' &&\n                             <div>You do not have access to this application</div>\n                         }\n\n                     </div>\n\n                 </div>\n\n\n                { this.props.notification_list.length > 0 && this.props.show_notifications &&\n                    <div style={styles.notificationParent}>\n                        <div style={styles.displayAll} onClick={() => { this.props.hideNotifications() }}>\n                            <img src=\"images/double-down-arrow.svg\" style={styles.hideAllImage} alt=\"hide all\" title=\"hide log\" />\n                        </div>\n                        <div style={styles.notifications}>\n                            {\n                                this.getNotifications().map((notification) => {\n                                    return (\n                                        <div key={notification.id} style={styles.info}>\n                                            <div style={styles.infoDate}>{notification.year}/{Home.pad(notification.month)}/{Home.pad(notification.day)}&nbsp;\n                                                {Home.pad(notification.hour)}:{Home.pad(notification.minute)}:\n                                                {Home.pad(parseInt(notification.created / 1000) % 60)}.\n                                                {Home.pad2(notification.created % 1000)}\n                                            </div>\n                                            <div style={styles.infoType}>{notification.service}</div>\n                                            <div style={styles.infoText}>{notification.message}</div>\n                                        </div>\n                                    )\n                                })\n                            }\n                        </div>\n                    </div>\n                }\n\n            </MuiThemeProvider>\n        )\n    }\n}\n\nconst mapStateToProps = function(state) {\n    return {\n        error: state.appReducer.error,\n        error_title: state.appReducer.error_title,\n\n        notification_list: state.appReducer.notification_list,\n        show_notifications: state.appReducer.show_notifications,\n        operator_wait_timeout_in_ms: state.appReducer.operator_wait_timeout_in_ms,\n        notification_list_display_size: state.appReducer.notification_list_display_size,\n\n        busy: state.appReducer.busy,\n        theme: state.appReducer.theme,\n\n        user: state.appReducer.user,\n        selected_tab: state.appReducer.selected_tab,\n        session: state.appReducer.session,\n        operator_connected: state.appReducer.operator_connected,\n        operators: state.appReducer.operators,\n\n        organisation_list: state.appReducer.organisation_list,\n        knowledge_base_list: state.appReducer.knowledge_base_list,\n\n        html5_notifications: state.appReducer.html5_notifications,\n\n        selected_organisation: state.appReducer.selected_organisation,\n        selected_organisation_id: state.appReducer.selected_organisation_id,\n        selected_knowledgebase: state.appReducer.selected_knowledgebase,\n\n        // list of edge devices\n        edge_device_list: state.appReducer.edge_device_list,\n        selected_edge_device: state.appReducer.selected_edge_device,\n        selected_edge_device_id: state.appReducer.selected_edge_device_id,\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    dispatch => bindActionCreators(appCreators, dispatch)\n)(Home);\n\n","import React from 'react';\n// import 'babel-polyfill'\nimport ReactDOM from 'react-dom'\nimport {Provider} from 'react-redux'\nimport {HashRouter} from 'react-router-dom'\nimport {Route} from 'react-router'\n\nimport configureStore from \"./reducers/configureStore\";\nimport {saveState} from \"./reducers/stateLoader\";\n// must not have {} to work\nimport SignIn from './auth/sign_in'\n\nimport ResetPasswordRequest from './auth/reset_password_request'\nimport ResetPasswordResponse from './auth/reset_password_response'\nimport OpenSourceLicenses from './auth/open_source_licenses'\nimport LicenseAgreement from \"./auth/license_agreement\";\nimport SearchPage from \"./search/search-page\";\n\nimport Home from './home'\n\nrequire('typeface-roboto')\n\n\nconst store = configureStore();\nstore.subscribe(() => {\n    saveState(store.getState());\n});\n\n\nReactDOM.render(\n    <Provider store={store}>\n    <div>\n        <HashRouter basename={'/'}>\n            <div>\n                <Route exact path=\"/\" component={SignIn} />\n                <Route exact path=\"/home\" component={Home} />\n                <Route exact path=\"/search\" component={SearchPage} />\n                <Route path=\"/reset-password-request\" component={ResetPasswordRequest} />\n                <Route path=\"/reset-password-response\" component={ResetPasswordResponse} />\n                <Route exact path=\"/foss-license\" component={OpenSourceLicenses} />\n                <Route exact path=\"/license-agreement\" component={LicenseAgreement} />\n            </div>\n        </HashRouter>\n    </div>\n    </Provider>,\n    document.getElementById('content')\n);\n"],"sourceRoot":""}