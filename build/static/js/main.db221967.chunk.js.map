{"version":3,"sources":["reducers/stateLoader.js","common/comms.js","common/api.js","actions/actions.js","reducers/appReducer.js","reducers/configureStore.js","common/graph-helper.js","actions/appActions.js","auth/app-menu.js","common/error-dialog.js","auth/sign_in.js","auth/reset_password_request.js","auth/reset_password_response.js","auth/open_source_licenses.js","auth/license_agreement.js","search/single-search-result.js","search/simsage-search.js","search/search-page.js","common/message-dialog.js","common/autocomplete.js","organisations/organisation-edit.js","common/restore-upload.js","common/pagination.js","organisations/organisations.js","common/chip.js","common/group-selector.js","users/user-edit.js","users/user-manager.js","common/time-select.js","kb/knowledge-bases.js","edge/edge-devices.js","edge/edge-device-commands.js","inventory/inventory.js","crawlers/crawler-general.js","crawlers/crawler-file.js","crawlers/crawler-web.js","crawlers/crawler-database.js","crawlers/crawler-metadata-mapper.js","crawlers/crawler-office365.js","crawlers/crawler-dropbox.js","common/restore-wp-archive.js","crawlers/crawler-wordpress.js","crawlers/crawler-gdrive.js","crawlers/crawler-nfs.js","crawlers/crawler-restfull.js","crawlers/crawler-metadata.js","common/acl-setup.js","crawlers/crawler-dialog.js","documents/crawler-import-export.js","documents/document-sources.js","documents/documents.js","mind/mind-edit.js","common/spreadsheet-upload.js","mind/mind.js","common/bot-single-search-result.js","mind/mind-search-component.js","mind/mind-test.js","synonyms/synonym-edit.js","synonyms/synonyms.js","semantics/semantic-edit.js","semantics/semantics.js","synsets/synset-edit.js","synsets/synsets.js","reports/logs.js","reports/reports.js","operator/operator-teach.js","operator/operator-previous-answer.js","icons/microphone-icon.js","icons/cup-icon.js","icons/person-cross.js","icons/person-icon.js","operator/operator.js","icons/people-icon.js","icons/plus-icon.js","operator/operator_tabs.js","ad/domain_dialog.js","ad/domains.js","common/user-selector.js","users/group-edit.js","users/groups.js","home.js","index.js"],"names":["initializeState","selected_tab","notification_list","show_notifications","operator_wait_timeout_in_ms","notification_list_display_size","selected_organisation_id","selected_organisation","organisation_filter","organisation_list","selected_knowledgebase","selected_knowledgebase_id","knowledge_base_list","edge_device_list","selected_edge_device","selected_edge_device_id","edge_device_command_list","inventorize_list","inventorize_busy","user_list","user_filter","crawler_list","theme","window","ENV","busy","uploading","session","user","license","document_list","document_previous","document_filter","prev_document_filter","document_page","document_page_size","num_documents","document_nav_list","mind_item_list","mind_item_previous","mind_item_filter","mind_item_page","mind_item_page_size","num_mind_items","prev_mind_item_filter","mind_item_nav_list","bot_query","mind_result_list","bot_query_page_size","bot_query_threshold","synonym_list","synonym_prev_id","synonym_filter","synonym_page","synonym_page_size","num_synonyms","prev_synonym_filter","synonym_nav_list","semantic_list","semantic_prev_id","semantic_filter","semantic_page","semantic_page_size","num_semantics","prev_semantic_filter","semantic_nav_list","synset_filter","synset_list","synset_page","synset_page_size","synset_total_size","report_date","Api","toIsoDate","Date","getUTCDate","report_num_items","access_frequency","labels","general_statistics","query_word_frequency","file_type_statistics","operators","createOperator","num_active_connections","operator_connected","html5_notifications","group_list","group_filter","prev_group_filter","group_count","group_page","group_page_size","log_list","log_date","toIsoDateTime","log_hours","log_type","log_service","log_refresh","domain_list","semantic_display_category_list","defined_semantic_list","error_title","error","loadState","serializedState","localStorage","getItem","location","href","endsWith","JSON","parse","err","saveState","state","stringify","setItem","Comms","url","payload","fn_success","fn_fail","api_base","console","log","axios","post","getHeaders","then","response","catch","undefined","get_error","put","result","get","delete","organisation_id","regime","http_put","encodeURIComponent","download_new_window_post","data","kb_id","dateTime","year","month","source_id","str","one_time_token","mapForm","document","createElement","style","target","method","action","mapInput","type","name","value","appendChild","body","submit","indexOf","obj","a","getFullYear","getMonth","getDate","appReducer","id","getSession","headers","api_version","s4","Math","floor","random","toString","substring","createGuid","conversation_list","operator_ready","question_id","question","answer_id","answer","client_id","client_kb_id","client_kb_name","is_typing","typing_time","current_question","prev_answer","bytes","toFixed","timestamp","getUTCFullYear","getUTCMonth","date","hour","getUTCHours","min","getUTCMinutes","sec","getUTCSeconds","pad2","getTime","day","getHours","item","padStart","original","list","seen","new_list","push","hasOwnProperty","email","success","fail","length","http_post","errStr","newPassword","reset_id","startsWith","organisationId","http_get","errorStr","keywords","num_results","score_threshold","kbId","botQuery","superSearch","numResults","scoreThreshold","text","navigator","clipboard","writeText","role","SIGN_IN","SIGN_OUT","SET_THEME","SET_USER_LIST","UPDATE_USER","SET_USER_FILTER","SET_ORGANISATION_LIST","SELECT_ORGANISATION","UPDATE_ORGANISATION","SET_ORGANISATION_FILTER","RESET_SELECTED_KB","GET_KNOWLEDGE_BASES","SELECT_KNOWLEDGE_BASE","SELECT_EDGE_DEVICE","GET_INVENTORIZE_LIST","GET_INVENTORIZE_BUSY","UPLOADING_PROGRAM","UPLOADING_PROGRAM_FINISHED","UPLOADING_WP_ARCHIVE","UPLOADING_WP_ARCHIVE_FINISHED","GET_CRAWLERS","GET_DOMAINS","GET_DOCUMENTS_PAGINATED","SET_DOCUMENT_FILTER","SET_DOCUMENT_PAGE","SET_DOCUMENT_PAGE_SIZE","RESET_DOCUMENT_PAGINATION","SET_MEMORIES_PAGINATED","SET_MEMORIES_PAGE_SIZE","SET_MEMORIES_PAGE","RESET_MEMORIES_PAGINATION","SET_MEMORY_FILTER","SET_MIND_QUERY_LIST","SET_MIND_QUERY_STRING","SET_SYNONYMS_PAGINATED","SET_SYNONYM_PAGE_SIZE","SET_SYNONYM_PAGE","RESET_SYNONYM_PAGINATION","SET_SYNONYM_FILTER","SET_SEMANTICS_PAGINATED","SET_SEMANTIC_PAGE_SIZE","SET_SEMANTIC_PAGE","RESET_SEMANTIC_PAGINATION","SET_SEMANTIC_FILTER","SET_SEMANTIC_DISPLAY_LIST","SET_SYNSET_FILTER","SET_SYNSET_LIST","SET_SYNSET_PAGE","SET_SYNSET_PAGE_SIZE","RESET_SYNSET_PAGINATION","GET_LICENSE","BUSY","ERROR","CLOSE_ERROR","SELECT_TAB","HIDE_NOTIFICATIONS","SHOW_NOTIFICATIONS","SET_NOTIFICATION_LIST","SET_REPORT_DATE","SET_REPORT_GRAPHS","PROCESS_OPERATOR_MESSAGE","SET_OPERATOR_CONNECTED","ADD_CONVERSATION","MARK_CONVERSATION_USED","OPERATOR_READY","SET_OPERATOR_ANSWER","SET_OPERATOR_QUESTION","OPERATOR_CLEAR_USER","CLEAR_PREVIOUS_ANSWER","ADD_OPERATOR","REMOVE_OPERATOR","STOP_CLIENT_TYPING","GET_HTML5_NOTIFICATIONS","SET_LOG_LIST","SET_LOG_DATE","SET_LOG_HOURS","SET_LOG_TYPE","SET_LOG_SERVICE","SET_LOG_REFRESH","GET_EDGE_DEVICES","GET_EDGE_DEVICE_COMMANDS","SET_GROUPS_PAGINATED","SET_GROUP_PAGE_SIZE","SET_GROUP_PAGE","SET_GROUP_FILTER","mt_ActiveConnections","clear_operator","op","reducer","debug","title","roles","filter","organisation","found","org","page","prev_url","page_size","memoryList","numMemories","prev_id","synonymList","numSynonyms","semanticList","numSemantics","prev_word","semantic_prev_word","total_size","operatorId","ready","emptyOperator","operator","operator_id","message","messageType","disconnectedByClient","connectionCount","toId","fromIsTyping","getSystemTime","assignedOperatorId","conversationList","count","index","ci","is_simsage","origin","primary","conversationText","created","secondary","used","Notification","permission","options","onclick","focus","previousAnswer","clientId","kbName","connected","message_list","status","num_groups","loggerMiddleware","createLogger","predicate","getState","GraphHelper","labelList","valueList","datasets","backgroundColor","hoverBackgroundColor","map","description","stat_list","size_list","Set","i","cf","values","key","has","add","label","fill","lineTension","borderColor","pointBackgroundColor","pointBorderColor","pointHoverBackgroundColor","pointHoverBorderColor","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBorderWidth","pointHoverRadius","pointHoverBorderWidth","pointRadius","pointHitRadius","scale","day_map","numGtZero","num_points","values1","values2","listStart","idle","system","responsive","legend","position","hover","mode","scales","xAxes","display","scaleLabel","labelString","yAxes","ticks","beginAtZero","steps","stepValue","main_list","main_set","temp_list","processList","notification_busy","_getOrganisationList","current_org_name","current_org_id","_filter","change_organisation","dispatch","trim","_getKnowledgeBases","_getInventorizeList","_getUsers","_getCrawlers","_getDomains","_getDocuments","documentList","numDocuments","_getMemories","mind_filter","_getSynonyms","_getSemantics","_getSemanticDisplayCategories","semanticDisplayCategoryList","_getSynSets","totalSize","_getReports","top","report","setupList","accessFrequency","setupMap","generalStatistics","queryWordFrequency","fileTypeStatistics","_getLogList","hours","logList","_getHtmlNotifications","requestPermission","_getEdgeDevices","_getEdgeDeviceCommands","edge_id","_getGroups","groupList","_setupPage","mindItemList","numMindItems","appCreators","signIn","password","callback","signOut","setLogRefresh","notBusy","setTheme","passwordResetRequest","resetPassword","getStats","getOSMessages","restoreSystem","getLicense","installLicense","license_str","setError","closeError","selectTab","setupManager","hideNotifications","showNotifications","getNotifications","nl","merge_notifications","notificationList","getOrganisationList","selectOrganisation","setOrganisationFilter","updateOrganisation","deleteOrganisation","http_delete","selectEdgeDevice","selectKnowledgeBase","getKnowledgeBases","optimizeIndexes","removeOptimizedIndexes","removeAllIndexes","deleteKnowledgeBase","updateKnowledgeBase","security_id","enabled","max_queries_per_day","analytics_window_size_in_months","operator_enabled","capacity_warnings","index_optimization_schedule","dms_index_schedule","createInventory","getInventoryList","deleteInventoryItem","full_url","getInventoryBusy","forceInventoryBusy","getUsers","updateUser","user_id","surname","role_list","kb_list","signed_in_user","actual_role_data","roleStr","actual_kb_list_data","kb","had_operator_role","has_operator_role","deleteUser","setUserFilter","uploadProgram","wpUploadArchive","sid","securityId","getCrawlers","updateCrawler","crawler","deleteCrawler","crawler_id","getDomains","updateDomain","domain","testDomain","deleteDomain","domain_id","getDocuments","setDocumentFilter","deleteDocument","btoa","unescape","setDocumentPage","prevPage","setDocumentPageSize","reprocessDocument","getMindItems","setMindItemPage","mi_filter","mi_page_size","setMindItemPageSize","setMindItemFilter","deleteMemory","deleteAllMemories","saveMemory","memory","mindQuery","kbList","query","setBotQueryString","getSynonyms","setSynonymPage","setSynonymPageSize","deleteSynonym","saveSynonym","synonym","setSynonymFilter","getSemantics","setSemanticPage","word","setSemanticPageSize","deleteSemantic","findSemantics","saveSemantic","semantic","setSemanticFilter","getSemanticDisplayCategories","saveSemanticDisplayCategory","prevDisplayName","displayName","deleteSemanticDisplayCategory","deleteSynSet","lemma","findSynSets","saveSynSet","syn_set","setSynSetFilter","setSynSetPage","setSynSetPageSize","setReportDate","getReports","processOperatorMessage","setOperatorConnected","addConversation","markConversationItemUsed","operatorReady","setOperatorAnswer","setOperatorQuestion","clearPreviousAnswer","clearUser","addOperator","removeOperator","stopClientTyping","sendOperatorMessage","getLogs","setLogDate","setLogHours","setLogType","setLogService","restartService","subSystem","getEdgeDevices","deleteEdgeDevice","updateEdgeDevice","updateEdgeDeviceCommand","command","parameters","deleteEdgeDeviceCommand","getHtml5Notifications","restore","base64_text","getGroups","setGroupPage","setGroupPageSize","deleteGroup","saveGroup","user_id_list","userIdList","setGroupFilter","AppMenu","props","signed_in","showDocumentation","this","getElementById","className","web_base","alt","src","getLogo","onClick","goWeb","version","checked","onChange","flipTheme","clear","Component","connect","bindActionCreators","ErrorDialog","open","has_error","info","setState","nextProps","tabIndex","zIndex","handleOk","React","SignIn","clearState","event","handleClick","placeholder","autoFocus","onKeyPress","ResetPasswordRequest","error_msg","self","showError","loggedIn","bind","queryString","require","ResetPasswordResponse","parsed","search","autoComplete","OpenSourceLicenses","LicenseAgreement","close","SingleSearchResult","textIndex","textList","urlId","getPreviewSource","rel","prevFragment","nextFragment","dangerouslySetInnerHTML","__html","highlight","author","openDocument","replace","SimsageSearch","searchText","has_searched","search_result_list","shard_list","bot_response","bot_links","doSearch","semanticSearch","queryText","pageSize","shardSizeList","fragmentCount","maxWordDistance","spellingSuggest","contextLabel","contextMatchBoost","sourceId","result_list","resultList","urlList","onError","alert","width","handleSearchTextKeydown","disabled","SearchPage","MessageDialog","cancel","ok","AutoComplete","onSelect","data_list","select","defaultValue","suggestion","OrganisationEdit","onSave","handleCancel","handleSave","RestoreUpload","filename","fileType","futureProps","e","preventDefault","reader","FileReader","file","files","onloadend","readAsDataURL","doUpload","onSubmit","_handleSubmit","upload","_handleImageChange","Pagination","num_pages","rowsPerPage","parseInt","onChangePage","onChangeRowsPerPage","rowsPerPageOptions","rows","Organisations","edit_organisation","edit_organisation_id","max_tpm","bot_enabled","analytics_enabled","language_enabled","copied_visible","view_organisation_id","edit_security_id","defined","openDialog","closeDialog","paginated_list","first","last","download_backup","org_id","setTimeout","isAdmin","Home","hasRole","save","getOrganisations","viewIds","editOrganisation","deleteOrganisationAsk","backup","colSpan","backupAll","addNewOrganisation","component","changePage","changePageSize","writeToClipboard","startCopiedVisible","Chip","GroupSelector","selected_group_list","selectedFilter","availableFilter","group","new_groups","s_group","update_parent","toLowerCase","getAllGroups","isUser","include_users","getAllUsers","s_user","getSelectedGroups","removeUserOrGroup","selectAll","clearAll","getAvailableGroupsAndUsers","addUserOrGroup","UserEdit","selectedTab","edit_password_2","edit_user_id","edit_email","edit_first_name","edit_surname","edit_password","edit_roles","edit_kb_list","edit_groups","nextContext","do_save","onClose","first_name","groups","capitalizeFirstLetter","string","slice","toUpperCase","firstNameSurname","split","newFirst","newSur","new_roles","e_role","available_role","new_kbs","ekb","kbs","available_kb","onBlur","fillNames","color","removeRoleFromUser","getPrettyRole","variant","getAvailableRoles","addRoleToUser","hasOperatorRole","removeKBFromUser","getAvailableKnowledgeBases","addKBToUser","all_groups","all_users","UserManager","edit_user","formatRoles","filtered_roles","x","operatorKBList","operatorKB","firstName","hasAdministratorRole","isManager","isVisible","canEdit","canDelete","editUser","deleteUserAsk","addNewUser","numUsers","editDone","msg","roles_str","time_list","day_list","defaultAllTimesSelected","TimeSelect","time","time_map","setupTimeMap","time_str","cell","tm","dow","gmtTime","toGMTString","timeStr","gs","defaultOptimizationSchedule","defaultDmsIndexSchedule","KnowledgeBases","edit_knowledgebase","edit_knowledgebase_id","knowledgeBase","edit_kb_id","edit_name","edit_enabled","edit_max_queries_per_day","edit_analytics_window_size_in_months","edit_operator_enabled","edit_capacity_warnings","edit_created","edit_index_optimization_schedule","edit_dms_index_schedule","view_ids","maxQueriesPerDay","analyticsWindowInMonths","operatorEnabled","capacityWarnings","indexOptimizationSchedule","dmsIndexSchedule","knowledge_base","needsIndexOptimization","indexOptimizationTime","unixTimeConvert","t_value","indexOptimizationClass","indexOptimizationText","indexOptimizationStatus","editKnowledgeBase","deleteKnowledgeBaseAsk","marginBottom","optimizeIndexesAsk","removeOptimizedIndexesAsk","removeAllIndexesAsk","addNewKnowledgeBase","backIconButtonProps","nextIconButtonProps","refreshSecurityId","updateIndexOptimizationSchedule","updateDMSIndexSchedule","editCancel","editOk","EdgeDevices","edit_edge_device","edgeDevice","edit_edge_id","view_ids_edge_device","view_ids_edge_map","edgeId","edge_device","edge_details","details","lastModified","formatSizeUnits","get_edge_details","editEdgeDevice","deleteEdgeDeviceAsk","addEdgeDevice","Object","keys","pretty_key","pretty_value","EdgeDeviceCommands","edit_edge_device_cmd","edit_command","edit_parameters","edc","view_results","results","edgeDeviceCommand","executed","getEdgeDeviceCommands","getExecutedStatus","editEdgeDeviceCommand","deleteEdgeDeviceCommandAsk","viewResult","addEdgeDeviceCommand","Inventory","date_time","program","innerHTML","download_inventorize_dump","download_inventorize_dump_spreadhseet","deleteReport","download_mind_dump","download_query_log","message_title","message_callback","timeList","inventorizeDump","inventorizeDumpSpreadsheet","deleteInventorizeAsk","CrawlerGeneral","nodeId","maxItems","maxQNAItems","filesPerSecond","crawlerType","deleteFiles","allowAnonymous","enablePreview","processingLevel","customRender","edgeDeviceId","qaMatchStrength","numFragments","construct_data","canHaveEdgeDevice","testCrawler","change_callback","setProcessingLevelFromMark","htmlFor","float","filteredEdgeDevices","CrawlerFile","username","server","fqdn","shareName","sharePath","specific_json","CrawlerWeb","baseUrlList","webCss","webCssIgnore","validExtensions","validExtensionsIgnore","articleIncludeWordsCsv","articleExcludeWordsCsv","type_list","CrawlerDatabase","jdbc","pk","template","content_url","metadata_list","CrawlerMetadataMapper","specificJson","md_list","get_md_list","record","db1","db2","match_item","field1","sort","field_name","direction","sort_default","i_index","old_md_list","stopPropagation","md","temp","num_rows","set_md_type","j","set_db","set_db_extra","setDisplayName","needs_metadata_field","onKeyDown","checkMetadataName","setUserMetadataName1","sort_desc","setValue","sort_asc","setSort","setDefaultSort","deleteMetadataItem","move_row_up","move_row_down","addNewMetadataMapping","CrawlerOffice365","tenantId","clientSecret","redirectUrl","crawlOneDrive","crawlAllOfOneDrive","oneDriveUsersToCrawl","crawlSharePoint","crawlRootSite","sharePointSitesToCrawl","crawlExchange","crawlAllOfExchange","exchangeUsersToCrawl","CrawlerDropbox","clientToken","folderList","c_data","spellCheck","RestoreWPArchive","CrawlerWordpress","download_export_archive","exportArchive","CrawlerGDrive","gdrive_projectId","gdrive_clientId","gdrive_clientSecret","gdrive_clientName","gdrive_clientPort","CrawlerNFS","nfs_local_folder","CrawlerRestFull","CrawlerMetadata","existing_md_list","AclSetup","acl_list","acl","new_acls","s_acl","exists","user_name","selected_acl_list","seen_set","attribute","access","updated_acl_list","all_acl","getAcls","removeAcl","getAclClassName","getTitle","invertAccess","getAccess","getAvailableGroupsOrUsers","u_group","addAcl","CrawlerDialog","onUpdate","schedule","is_db","metadata_name_map","sort_counter","empty_sort_field_counter","default_sort_counter","db_name","db_name2","ch","charAt","validAcls","acls","sj","String","validFQDN","isValidMetadata","isNaN","c_type","update_general_data","update_specific_json","availableUserList","update_acl_list","updateSchedule","CrawlerImportExport","export_upload","marginRight","empty_crawler","DocumentSources","export_open","selected_crawler","crawler_ask","crawler_str","saveCrawler","saveExport","isCrawling","numCrawledDocuments","numIndexedDocuments","editCrawler","deleteCrawlerAsk","exportCrawler","addNewCrawler","importCrawler","Documents","crawler_map","stage","crawled","converted","indexed","previewed","getActive","staging","isWeb","adjustUrl","getStatus","getStatusText","deleteDocumentAsk","half","maxUrlDisplayLength","image_types","MindEdit","information","questionList","getQuestions","links","linksToText","getLinks","imageList","getImageLinks","l","isImage","link","lastIndexOf","extension","includes","question_list","setQuestion","image","SpreadsheetUpload","file_type","binary_data","base64Text","onUploadDone","Mind","mind_item","mind_edit","programUploadedClose","getMemoryList","getDisplayText","editMemory","deleteMemoryAsk","programUploaded","mindDump","newMemory","deleteAllMemoriesAsk","BotSingleSearchResult","score","toText","MindSearchComponent","botQueryString","queryResultList","hasSearched","doClickSearch","session_id","window_url","toUrl","getResultList","MindTest","mindItem","expression","preContext","postContext","actionList","metadata","saveMindItem","SynonymEdit","words","syn","Synonyms","synonym_edit","getSynonymList","editSynonym","deleteSynonymAsk","newSynonym","SemanticEdit","semantic_str","Semantics","prev_semantic","semantic_edit","prevWord","getSemanticList","editSemantic","deleteSemanticAsk","newSemantic","SynSetEdit","synSet","cloud_list","getWordCloudList","wordCloudCsvList","cl","newList","updateWC","deleteSyn","newSyn","SynSets","synSet_edit","validList","handleSynSetFilterKeydown","editSynSet","deleteSynSetAsk","newSynSet","Logs","timer_value","messagesEndRef","createRef","timer","clearTimeout","prevPops","prevState","snapshot","scrollToBottom","current","scrollIntoView","behavior","selected","service","dateFormat","timeFormat","showTimeSelect","timeIntervals","todayButton","getHourTitle","getSelectedHourStyle","getSelectedLogStyle","getLogRefreshStyle","getSelectedServiceStyle","line","getClassForType","ref","graphHeight","graphWidth","Reports","month1","downloadReport","showMonthYearPicker","stats","getGraphOptions","height","OperatorTeach","OperatorPreviousAnswer","MicrophoneIcon","xmlns","viewBox","d","CupIcon","PersonCrossIcon","fillRule","PersonIcon","Operator","operator_reply","last_time","setInterval","checkClientTyping","prevProps","sessionId","userId","curr_time","fromId","isTyping","banUser","act","teach","use","operatorReply","add_text","isOperator","active","isReady","has_user","operatorButtonStyle","teachSimSage","usePreviousQuestion","readyForChat","takeBreak","banUserConfirm","nextUser","selectForLearn","getAvatarStyle","PeopleIcon","PlusIcon","OperatorTabs","dark","isFirst","onCloseTab","DomainDialog","onTest","domainId","domainName","userName","serverIp","basePath","portNumber","sslOn","gather_data","tabStyle","testConnection","empty_domain","Domains","selected_domain","domain_ask","saveDomain","scope","numObjects","editDomain","deleteDomainAsk","addNewDomain","UserSelector","user_id_List","new_users","e_user_id","getUserFullName","user_map","getUserMap","getSelectedUsers","removeUserFromGroup","getAvailableUsers","addUserToGroup","GroupEdit","final_user_id_list","Groups","group_edit","start","end","final_list","size","getGroupList","editGroup","deleteGroupAsk","newGroup","isAdminOrManager","hasRoleInOrganisation","timeout","refreshOperator","operatorList","tab","filter_text","ft_lower","filtered_list","filtered_text","dialog_open","operator_id_list","ws_base","topics","client","clientRef","onMessage","onConnect","onDisconnect","connectionError","getStyle","convertOrganisationList","convertKbList","convertEdgeList","role_name_list","signedInUser","store","reducers","AppReducer","middleware","thunk","enhancers","rootReducer","combineReducers","routing","routerReducer","createStore","compose","applyMiddleware","configureStore","subscribe","ReactDOM","render","basename","exact","path"],"mappings":"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","file":"static/js/main.db221967.chunk.js","sourcesContent":["import Api from '../common/api'\n\n//\n// this defines the initial state of the entire application - the state store\n//\nexport function initializeState() {\n    return {\n        // which tab is selected in the app\n        selected_tab: 'organisations',\n\n        // notification system\n        notification_list: [],\n        show_notifications: false,\n        operator_wait_timeout_in_ms: 10000,\n        notification_list_display_size: 50,\n\n        // organisational data\n        selected_organisation_id: \"\",\n        selected_organisation: \"\",\n        organisation_filter: \"\",\n        organisation_list: [],\n\n        // kb status\n        selected_knowledgebase: null,\n        selected_knowledgebase_id: \"\",\n        knowledge_base_list: [],\n\n        // edge devices\n        edge_device_list: [],\n        selected_edge_device: null,\n        selected_edge_device_id: \"\",\n        edge_device_command_list: [],\n\n        // inventory items for a given kb\n        inventorize_list: [],\n        inventorize_busy: false,\n\n        // the users\n        user_list: [],\n        user_filter: '',\n\n        // crawlers\n        crawler_list: [],\n        theme: window.ENV.theme,\n\n        // system busy\n        busy: false,\n\n        // program busy uploading\n        uploading: false,\n\n        // session and user objects\n        session: null,\n        user: null,\n\n        // system license\n        license: null,\n\n        // documents\n        document_list: [],\n        document_previous: null,\n        document_filter: '',\n        prev_document_filter: '',   // see what the last filter was (reset pagination if changed)\n        document_page: 0,\n        document_page_size: 5,\n        num_documents: 0,\n        // nav-list with page 0 id\n        document_nav_list: [\"null\"],\n\n        // mind items\n        mind_item_list: [],\n        mind_item_previous: null,\n        mind_item_filter: '',\n        mind_item_page: 0,\n        mind_item_page_size: 5,\n        num_mind_items: 0,\n        prev_mind_item_filter: '',\n        mind_item_nav_list: [\"null\"],\n\n        // mind query (aka. bot query)\n        bot_query: \"\",\n        mind_result_list: [],\n        bot_query_page_size: 10,\n        bot_query_threshold: 0.01,\n\n        // synonyms\n        synonym_list: [],\n        synonym_prev_id: null,\n        synonym_filter: \"\",\n        synonym_page: 0,\n        synonym_page_size: 5,\n        num_synonyms: 0,\n        prev_synonym_filter: '',\n        synonym_nav_list: [\"null\"],\n\n        // semantics\n        semantic_list: [],\n        semantic_prev_id: null,\n        semantic_filter: \"\",\n        semantic_page: 0,\n        semantic_page_size: 5,\n        num_semantics: 0,\n        prev_semantic_filter: '',\n        semantic_nav_list: [\"null\"],\n\n        // syn-sets\n        synset_filter: \"\",\n        synset_list: [],\n        synset_page: 0,\n        synset_page_size: 10,\n        synset_total_size: 0,\n\n        // reports\n        report_date: Api.toIsoDate(new Date().getUTCDate()),\n        report_num_items: 20,\n        access_frequency: {labels: []},\n        general_statistics: [],\n        query_word_frequency: [],\n        file_type_statistics: [],\n\n        // operator\n        operators: [Api.createOperator()],\n        num_active_connections: 0,\n        operator_connected: false,\n\n        // html5 notification permissions asked already?\n        html5_notifications: '',\n\n        // groups\n        group_list: [],\n        group_filter: \"\",\n        prev_group_filter: \"\",\n        group_count: 0,\n        group_page: 0,\n        group_page_size: 5,\n\n        // system logs\n        log_list: [],\n        log_date: Api.toIsoDateTime(new Date()),\n        log_hours: 2,\n        log_type: 'All',\n        log_service: 'All',\n        log_refresh: 0,\n\n        // ad domain manager\n        domain_list: [],\n\n        // semantic display categories for org:kb\n        semantic_display_category_list: [],\n        // list of semantics that are existing / defined for org:kb\n        defined_semantic_list: [],\n\n        // application error messages\n        error_title: \"Error\",\n        error: \"\",\n    }\n}\n\n\nexport function loadState() {\n    try {\n        let serializedState = localStorage.getItem(\"https://simsage.ai/state\");\n        if (serializedState === null || window.location.href.endsWith(\"/#/\")) {\n            return {\"appReducer\": initializeState()};\n        }\n        return JSON.parse(serializedState);\n    } catch (err) {\n        return {\"appReducer\": initializeState()};\n    }\n}\n\n\nexport function saveState(state) {\n    try {\n        let serializedState = JSON.stringify(state);\n        localStorage.setItem(\"https://simsage.ai/state\", serializedState);\n    } catch (err) {\n    }\n}\n\n\nexport function clearState() {\n    try {\n        saveState(initializeState());\n    } catch (err) {\n    }\n}\n\n","import axios from \"axios/index\";\n\nimport {loadState} from '../reducers/stateLoader'\n\n\n// communications common to all components\nexport class Comms {\n\n    static http_post(url, payload, fn_success, fn_fail) {\n        const api_base = window.ENV.api_base;\n        console.log('POST ' + api_base + url);\n        axios.post(api_base + url, payload, Comms.getHeaders())\n            .then(function (response) {\n                if (fn_success) {\n                    fn_success(response);\n                }\n            })\n            .catch(function (error) {\n                if (fn_fail) {\n                    if (error.response === undefined) {\n                        fn_fail('Servers not responding or cannot contact Servers');\n                    } else {\n                        fn_fail(Comms.get_error(error));\n                    }\n                }\n            });\n    };\n\n    static http_put(url, payload, fn_success, fn_fail) {\n        const api_base = window.ENV.api_base;\n        console.log('PUT ' + api_base + url);\n        axios.put(api_base + url, payload, Comms.getHeaders())\n            .then(function (result) {\n                if (fn_success) {\n                    fn_success(result);\n                }\n            })\n            .catch(function (error) {\n                if (fn_fail) {\n                    if (error.response === undefined) {\n                        fn_fail('Servers not responding or cannot contact Servers');\n                    } else {\n                        fn_fail(Comms.get_error(error));\n                    }\n                }\n            });\n    };\n\n    static http_get(url, fn_success, fn_fail) {\n        const api_base = window.ENV.api_base;\n        if (url !== '/stats/stats/os') {\n            console.log('GET ' + api_base + url);\n        }\n        return axios.get(api_base + url, Comms.getHeaders())\n            .then(function (response) {\n                if (fn_success) {\n                    fn_success(response);\n                }\n            })\n            .catch((error) => {\n                if (fn_fail) {\n                    if (error.response === undefined) {\n                        fn_fail('Servers not responding or cannot contact Servers');\n                    } else {\n                        fn_fail(Comms.get_error(error));\n                    }\n                }\n            });\n    };\n\n    static http_delete(url, fn_success, fn_fail) {\n        const api_base = window.ENV.api_base;\n        console.log('DELETE ' + api_base + url);\n        axios.delete(api_base + url, Comms.getHeaders())\n            .then(function (response) {\n                if (fn_success) {\n                    fn_success(response);\n                }\n            })\n            .catch(function (error) {\n                if (fn_fail) {\n                    if (error === undefined || error.response === undefined) {\n                        fn_fail('Servers not responding or cannot contact Servers');\n                    } else {\n                        fn_fail(Comms.get_error(error));\n                    }\n                }\n            });\n    };\n\n    // get a url that can be used to backup the system, regime e {all (backup all orgs), specific (backup specified org)}\n    static download_backup(organisation_id, regime) {\n        Comms.http_put('/auth/ott/' + encodeURIComponent(organisation_id), {}, (response) => {\n            const url = window.ENV.api_base + '/backup/backup/' + encodeURIComponent(organisation_id) + '/' + encodeURIComponent(regime);\n            Comms.download_new_window_post(url, response.data);\n        });\n    };\n\n    // get a url that can be used to backup the system\n    static download_mind_dump(organisation_id, kb_id) {\n        Comms.http_put('/auth/ott/' + encodeURIComponent(organisation_id), {}, (response) => {\n            const url = window.ENV.api_base + '/backup/mind-dump/' + encodeURIComponent(organisation_id) + '/' + encodeURIComponent(kb_id);\n            Comms.download_new_window_post(url, response.data);\n        });\n    };\n\n    // get a url that can be used to summarize the system\n    static download_inventorize_dump(organisation_id, kb_id, dateTime) {\n        Comms.http_put('/auth/ott/' + encodeURIComponent(organisation_id), {}, (response) => {\n            const url = window.ENV.api_base + '/document/parquet/' + encodeURIComponent(organisation_id) + '/' +\n                encodeURIComponent(kb_id) + '/' + encodeURIComponent(dateTime);\n            Comms.download_new_window_post(url, response.data);\n        });\n    };\n\n    // get a url that can be used to summarize the system using a spreadsheet\n    static download_inventorize_dump_spreadhseet(organisation_id, kb_id, dateTime) {\n        Comms.http_put('/auth/ott/' + encodeURIComponent(organisation_id), {}, (response) => {\n            const url = window.ENV.api_base + '/document/spreadsheet/' + encodeURIComponent(organisation_id) + '/' +\n                encodeURIComponent(kb_id) + '/' + encodeURIComponent(dateTime);\n            Comms.download_new_window_post(url, response.data);\n        });\n    };\n\n    // get a url that can be used to get the query-logs\n    static download_query_log(organisation_id, kb_id, year, month) {\n        Comms.http_put('/auth/ott/' + encodeURIComponent(organisation_id), {}, (response) => {\n            const url = window.ENV.api_base + '/stats/query-logs/' + encodeURIComponent(organisation_id) + '/' +\n                encodeURIComponent(kb_id) + '/' + encodeURIComponent(year) + '/' + encodeURIComponent(month);\n            Comms.download_new_window_post(url, response.data);\n        });\n    };\n\n    // get a url that can be used to get a zip archive of a wp export\n    static download_export_archive(organisation_id, kb_id, source_id) {\n        Comms.http_put('/auth/ott/' + encodeURIComponent(organisation_id), {}, (response) => {\n            const url = window.ENV.api_base + '/crawler/wp-archive/download/' + encodeURIComponent(organisation_id) + '/' +\n                encodeURIComponent(kb_id) + '/' + encodeURIComponent(source_id);\n            Comms.download_new_window_post(url, response.data);\n        });\n    };\n\n    static toUrl(str) {\n        return window.ENV.api_base + str;\n    }\n\n    // download the url in a new window, passing SessionId as a query-string parameter (hidden in logs over ssh)\n    static download_new_window_post(url, one_time_token) {\n        // Create a form\n        const mapForm = document.createElement(\"form\");\n        mapForm.style = \"display: none;\";\n        mapForm.target = \"_blank\";\n        mapForm.method = \"POST\";\n        mapForm.action = url + \"?ott=\" + encodeURIComponent(one_time_token);\n        // create a fake element so it posts\n        const mapInput = document.createElement(\"input\");\n        mapInput.type = \"text\";\n        mapInput.name = \"name\";\n        mapInput.value = \"value\";\n        mapForm.appendChild(mapInput);\n        document.body.appendChild(mapForm);\n        mapForm.submit();\n    }\n\n    // convert js response to its error output equivalent\n    static get_error(error) {\n        if (typeof error === \"string\" && error.indexOf(\"{\") === 0) {\n            const obj = JSON.parse(error);\n            if (obj && obj[\"response\"] && obj[\"response\"][\"data\"] && obj[\"response\"][\"data\"][\"error\"]) {\n                return obj[\"response\"][\"data\"][\"error\"];\n            } else {\n                return error;\n            }\n        } else {\n            if (error && error[\"response\"] && error[\"response\"][\"data\"] && error[\"response\"][\"data\"][\"error\"]) {\n                return error[\"response\"][\"data\"][\"error\"];\n            } else {\n                return error;\n            }\n        }\n    }\n\n    // get a pretty formatted ISO date string (date only)\n    static getISODate() {\n        const a = new Date();\n        const year = a.getFullYear();\n        const month = a.getMonth() + 1;\n        const date = a.getDate();\n        return year + '-' + month + '-' + date;\n    };\n\n    static getSession() {\n        const state = loadState();\n        if (state && state.appReducer && state.appReducer.session && state.appReducer.session.id) {\n            return state.appReducer.session;\n        }\n        return null;\n    }\n\n    static getHeaders() {\n        let session = Comms.getSession();\n        if (session && session.id) {\n            return {\n                headers: {\n                    \"API-Version\": window.ENV.api_version,\n                    \"Content-Type\": \"application/json\",\n                    \"Session-Id\": session.id,\n                }\n            }\n        }\n        return {\n            headers: {\n                \"API-Version\": window.ENV.api_version,\n                \"Content-Type\": \"application/json\"\n            }\n        };\n    }\n\n}\n\nexport default Comms;\n","import {Comms} from \"../common/comms\";\n\n// api wrappers\nexport class Api {\n\n    static defined(value) {\n        return (value !== null && value !== undefined);\n    }\n\n    // generate a guid\n    static createGuid() {\n        function s4() {\n            return Math.floor((1 + Math.random()) * 0x10000)\n                .toString(16)\n                .substring(1);\n        }\n        return s4() + s4() + '-' + s4() + '-' + s4() + '-' + s4() + '-' + s4() + s4() + s4();\n    };\n\n    // create an empty operator packet\n    static createOperator() {\n        return {id: Api.createGuid(),\n            conversation_list: [], operator_ready: false,\n            question_id: '', question: '', answer_id: '', answer: '',\n            // operator connected clients\n            client_id: '', client_kb_id: '', client_kb_name: '', is_typing: false, typing_time: 0,\n            // operator previous answer\n            current_question: '', prev_answer: '',\n        }\n    };\n\n    static formatSizeUnits(bytes) {\n        if      (bytes >= 1073741824) { bytes = (bytes / 1073741824).toFixed(2) + \" GB\"; }\n        else if (bytes >= 1048576)    { bytes = (bytes / 1048576).toFixed(2) + \" MB\"; }\n        else if (bytes >= 1024)       { bytes = (bytes / 1024).toFixed(2) + \" KB\"; }\n        else if (bytes > 1)           { bytes = bytes + \" bytes\"; }\n        else if (bytes === 1)          { bytes = bytes + \" byte\"; }\n        else                          { bytes = \"0 bytes\"; }\n        return bytes;\n    };\n\n    // convert unix timestamp to string if it's for a reasonable time in the future\n    static unixTimeConvert(timestamp){\n        if (timestamp > 1000) {\n            const a = new Date(timestamp);\n            const year = a.getUTCFullYear();\n            const month = a.getUTCMonth() + 1;\n            const date = a.getUTCDate();\n            const hour = a.getUTCHours();\n            const min = a.getUTCMinutes();\n            const sec = a.getUTCSeconds();\n            return year + '/' + Api.pad2(month) + '/' + Api.pad2(date) + ' ' + Api.pad2(hour) + ':' + Api.pad2(min) + ':' + Api.pad2(sec);\n        }\n        return \"\";\n    }\n\n    // get current time in milli-seconds\n    static getSystemTime() {\n        return new Date().getTime();\n    }\n\n    // convert a date object to an iso date string\n    static toIsoDate(date) {\n        if (!date || !date.getFullYear) {\n            date = new Date()\n        }\n        const year = date.getFullYear();\n        const month = date.getMonth() + 1;\n        const day = date.getDate();\n        return year + '-' + Api.pad2(month) + '-' + Api.pad2(day) + 'T00:00:00.000';\n    }\n\n    // convert a date object to an iso date string\n    static toIsoDateTime(date) {\n        if (!date || !date.getFullYear) {\n            date = new Date()\n        }\n        const year = date.getFullYear();\n        const month = date.getMonth() + 1;\n        const day = date.getDate();\n        let offset_hours = 0; // date.getTimezoneOffset() / 60;\n        let hour = date.getHours() + offset_hours;\n        if (hour < 0) hour += 24;\n        if (hour >= 24) hour -= 24;\n        return year + '-' + Api.pad2(month) + '-' + Api.pad2(day) + 'T' + Api.pad2(hour) + ':00:00.000';\n    }\n\n    static pad2(item) {\n        return (\"\" + item).padStart(2, '0');\n    }\n\n    // setup the timer\n    static setupTimer() {\n        return true;\n    }\n\n    // merge two notifications lists together and return the resulting unique list of items\n    static merge_notifications(original, list) {\n        const seen = {};\n        const new_list = [];\n        if (original) {\n            for (const item of original) {\n                seen[item.id] = true;\n                new_list.push(item);\n            }\n        }\n        if (list) {\n            for (const item of list) {\n                if (!seen.hasOwnProperty(item.id)) {\n                    seen[item.id] = true;\n                    new_list.push(item);\n                }\n            }\n        }\n        return new_list;\n    }\n\n    // get color component (fg) of the global theme\n    static getThemeColour(theme) {\n        if (theme === 'light')\n            return \"#2a2a2e\";\n        else\n            return \"#e0e0e0\";\n    }\n\n    // get background component (bg) of the global theme\n    static getThemeBackground(theme) {\n        if (theme === 'light')\n            return \"#ffffff\";\n        else\n            return \"#2a2a2e\";\n    }\n\n    // start a password reset request\n    static passwordResetRequest(email, success, fail) {\n        if (email && email.length > 0) {\n            Comms.http_post('/auth/reset-password-request', {\"email\": email},\n                (response) => { success(response.data.session, response.data.user) },\n                (errStr) => { fail(errStr) }\n            )\n        }\n        else{\n            fail('you must provide your SimSage email address');\n        }\n    };\n\n    // reset a password (do it)\n    static resetPassword(email, newPassword, reset_id, success, fail) {\n        if (email && email.length > 0 && newPassword.length > 0) {\n            const payload = {\"email\": email, \"password\": newPassword, \"resetId\": reset_id};\n            Comms.http_post('/auth/reset-password', payload,\n                (response) => { success(response.data.session, response.data.user) },\n                (errStr) => { fail(errStr) }\n            )\n        }\n        else{\n            fail('please complete and check all fields');\n        }\n    };\n\n    // get the user object (or null if dne)\n    static getUser() {\n        var user = localStorage.getItem(\"user\");\n        if (user && user.startsWith(\"{\")) {\n            return JSON.parse(user);\n        }\n        return null;\n    }\n\n    // upload data to the system\n    static uploadDocument(payload, success, fail) {\n        Comms.http_put('/document/upload', payload,\n            (response) => { success(response.data) },\n            (errStr) => { fail(errStr) }\n        )\n    };\n\n    // test a specific crawler's connectivity\n    static testCrawler(organisationId, kb_id, id, success, fail) {\n        Comms.http_get('/crawler/crawler/test/' + encodeURIComponent(organisationId) + '/' +\n            encodeURIComponent(kb_id) + '/' + encodeURIComponent(id),\n            (response) => {\n                if (response.data && response.data.errorStr && response.data.errorStr.length > 0) {\n                    fail(response.data.errorStr);\n                } else {\n                    success(response.data)\n                }\n            },\n            (errStr) => { fail(errStr) }\n        )\n    }\n\n\n    // perform a semantic search\n    static semanticSearch(organisationId, kb_id, keywords, num_results=10, score_threshold=0.1, success, fail) {\n        Comms.http_put('/semantic/search', {\n                organisationId: organisationId,\n                kbId: kb_id,\n                botQuery: keywords,         // raw text\n                superSearch: keywords,      // super search markup\n                numResults: num_results,\n                scoreThreshold: score_threshold,\n            },\n            (response) => { success(response.data) },\n            (errStr) => { fail(errStr) }\n        )\n    }\n\n    // write text to the clipboard, if we can\n    static writeToClipboard(text) {\n        if (navigator && navigator.clipboard && navigator.clipboard.writeText) {\n            navigator.clipboard.writeText(text);\n            return true;\n        }\n        return false;\n    }\n\n\n    // pretty print a role\n    static getPrettyRole(role) {\n        // 'admin', 'operator', 'dms', 'manager'\n        if (role === 'admin') return \"System Administrator\";\n        else if (role === 'operator') return \"Knowledgebase Operator\";\n        else if (role === 'dms') return \"DMS User\";\n        else if (role === 'manager') return \"Organisational Manager\";\n        else return role;\n    }\n\n}\n\nexport default Api;\n","\nexport const SIGN_IN = \"sign in\";\nexport const SIGN_OUT = \"sign out\";\n\nexport const SET_THEME = \"set theme\";\n\nexport const PASSWORD_RESET_REQUEST = \"password reset request\";\nexport const RESET_PASSWORD = \"reset password\";\n\nexport const SET_USER_LIST = \"set user list\";\nexport const UPDATE_USER = \"update user\";\nexport const SET_USER_FILTER = \"set user filter\";\n\nexport const SET_ORGANISATION_LIST = \"get organisation list\";\nexport const SELECT_ORGANISATION = \"select organisation\";\nexport const UPDATE_ORGANISATION = \"update organisation\";\nexport const SET_ORGANISATION_FILTER = \"set organisation filter\";\nexport const RESET_SELECTED_KB = \"reset selected kb\";\n\nexport const GET_KNOWLEDGE_BASES = \"get knowledge bases\";\nexport const SELECT_KNOWLEDGE_BASE = \"selected knowledge base\";\nexport const SELECT_EDGE_DEVICE = \"select edge device\";\nexport const GET_INVENTORIZE_LIST = \"get inventorize list\";\nexport const GET_INVENTORIZE_BUSY = \"get inventorize busy\";\n\nexport const UPLOADING_PROGRAM = \"uploading program\";\nexport const UPLOADING_PROGRAM_FINISHED = \"uploading program finished\";\n\nexport const UPLOADING_WP_ARCHIVE = \"uploading wp archive\";\nexport const UPLOADING_WP_ARCHIVE_FINISHED = \"uploading wp archive finished\";\n\nexport const GET_CRAWLERS = \"get crawlers\";\nexport const GET_DOMAINS = \"get domains\";\n\nexport const GET_DOCUMENTS_PAGINATED = \"get documents paginated\";\nexport const SET_DOCUMENT_FILTER = \"set document filter\";\nexport const SET_DOCUMENT_PAGE = \"set document page\";\nexport const SET_DOCUMENT_PAGE_SIZE = \"set document page size\";\nexport const UPLOAD_DOCUMENT = \"upload document\";\nexport const RESET_DOCUMENT_PAGINATION = \"reset document pagination\";\n\nexport const GET_STATS = \"get stats\";\nexport const GET_OS_MESSAGES = \"get os messages\";\n\nexport const MIND_FIND = \"mind find\";\nexport const SET_MEMORIES_PAGINATED = \"set mind items paginated\";\nexport const SET_MEMORIES_PAGE_SIZE = \"set mind item page size\";\nexport const SET_MEMORIES_PAGE = \"set mind item page\";\nexport const RESET_MEMORIES_PAGINATION = \"reset mind item pagination\";\nexport const SET_MEMORY_FILTER = \"set mind item filter\";\nexport const SET_MIND_QUERY_LIST = \"set bot query list\";\nexport const SET_MIND_QUERY_STRING = \"set bot query string\";\n\nexport const SEMANTIC_SEARCH = \"semantic search\";\n\nexport const SET_SYNONYMS_PAGINATED = \"set synonyms paginated\";\nexport const SET_SYNONYM_PAGE_SIZE = \"set synonym page size\";\nexport const SET_SYNONYM_PAGE = \"set synonym page\";\nexport const RESET_SYNONYM_PAGINATION = \"reset synonym pagination\";\nexport const SET_SYNONYM_FILTER = \"set synonym filter\";\n\nexport const SET_SEMANTICS_PAGINATED = \"set semantics paginated\";\nexport const SET_SEMANTIC_PAGE_SIZE = \"set semantic page size\";\nexport const SET_SEMANTIC_PAGE = \"set semantic page\";\nexport const RESET_SEMANTIC_PAGINATION = \"reset semantic pagination\";\nexport const SET_SEMANTIC_FILTER = \"set semantic filter\";\n\nexport const SET_SEMANTIC_DISPLAY_LIST = \"set semantic display list\";\n\nexport const SET_SYNSET_FILTER = \"set synset filter\";\nexport const SET_SYNSET_LIST = \"set synset list\";\nexport const SET_SYNSET_PAGE = \"set synset page\";\nexport const SET_SYNSET_PAGE_SIZE = \"set synset page size\";\nexport const RESET_SYNSET_PAGINATION = \"reset synset pagination\";\n\nexport const RESTORE_SYSTEM = \"restore system\";\n\nexport const GET_LICENSE = \"get license\";\nexport const INSTALL_LICENCE = \"install license\";\n\nexport const BUSY = \"busy\";\nexport const ERROR = \"error\";\nexport const CLOSE_ERROR = \"close error\";\nexport const SELECT_TAB = \"select tab\";\n\nexport const HIDE_NOTIFICATIONS = \"hide notifications\";\nexport const SHOW_NOTIFICATIONS = \"show notifications\";\nexport const SET_NOTIFICATION_LIST = \"set notification list\";\n\nexport const SET_REPORT_DATE = \"set report date\";\nexport const SET_REPORT_GRAPHS = \"set report graphs\";\n\nexport const PROCESS_OPERATOR_MESSAGE = \"process operator message\";\nexport const SET_OPERATOR_CONNECTED = \"set operator connected\";\nexport const ADD_CONVERSATION = \"add conversation\";\nexport const MARK_CONVERSATION_USED = \"mark conversation used\";\nexport const OPERATOR_READY = \"operator ready\";\nexport const SET_OPERATOR_ANSWER = \"set operator answer\";\nexport const SET_OPERATOR_QUESTION = \"set operator question\";\nexport const OPERATOR_CLEAR_USER = \"operator clear user\";\nexport const CLEAR_PREVIOUS_ANSWER = \"clear previous answer\";\nexport const ADD_OPERATOR = \"add operator\";\nexport const REMOVE_OPERATOR = \"remove operator\";\nexport const STOP_CLIENT_TYPING = \"stop client typing\";\nexport const MAX_OPERATORS = 5;\n\nexport const GET_HTML5_NOTIFICATIONS = \"get html5 notifications\";\n\nexport const SET_LOG_LIST = \"set log list\";\nexport const SET_LOG_DATE = \"set log date\";\nexport const SET_LOG_HOURS = \"set log hours\";\nexport const SET_LOG_TYPE = \"set log type\";\nexport const SET_LOG_SERVICE = \"set log service\";\nexport const SET_LOG_REFRESH = \"set log refresh\";\n\n// edge\nexport const GET_EDGE_DEVICES = \"get edge devices\";\nexport const GET_EDGE_DEVICE_COMMANDS = \"get edge device commands\";\n\n// groups\nexport const SET_GROUPS_PAGINATED = \"set groups paginated\";\nexport const SET_GROUP_PAGE_SIZE = \"set group page size\";\nexport const SET_GROUP_PAGE = \"set group page\";\nexport const SET_GROUP_FILTER = \"set group filter\";\n","import Api from '../common/api'\n\nimport {\n    ADD_CONVERSATION,\n    BUSY,\n    SET_THEME,\n    RESET_SELECTED_KB,\n    CLEAR_PREVIOUS_ANSWER,\n    CLOSE_ERROR,\n    ERROR,\n    GET_CRAWLERS,\n    GET_DOMAINS,\n    GET_DOCUMENTS_PAGINATED,\n    GET_HTML5_NOTIFICATIONS,\n    GET_KNOWLEDGE_BASES,\n    GET_INVENTORIZE_LIST,\n    GET_INVENTORIZE_BUSY,\n    GET_LICENSE,\n    SET_ORGANISATION_LIST,\n    SET_ORGANISATION_FILTER,\n    SET_USER_LIST,\n    SET_USER_FILTER,\n    HIDE_NOTIFICATIONS,\n    MARK_CONVERSATION_USED,\n    MIND_FIND,\n    SET_MEMORIES_PAGINATED,\n    SET_MEMORIES_PAGE_SIZE,\n    SET_MEMORIES_PAGE,\n    RESET_MEMORIES_PAGINATION,\n    OPERATOR_CLEAR_USER,\n    OPERATOR_READY,\n    ADD_OPERATOR,\n    REMOVE_OPERATOR,\n    PROCESS_OPERATOR_MESSAGE,\n    RESET_DOCUMENT_PAGINATION,\n    SELECT_KNOWLEDGE_BASE,\n    SELECT_EDGE_DEVICE,\n    SELECT_ORGANISATION,\n    UPDATE_ORGANISATION,\n    SELECT_TAB,\n    SET_MIND_QUERY_LIST,\n    SET_MIND_QUERY_STRING,\n    SET_DOCUMENT_FILTER,\n    SET_DOCUMENT_PAGE,\n    SET_DOCUMENT_PAGE_SIZE,\n    SET_MEMORY_FILTER,\n    SET_NOTIFICATION_LIST,\n    SET_OPERATOR_ANSWER,\n    SET_OPERATOR_CONNECTED,\n    SET_OPERATOR_QUESTION,\n    STOP_CLIENT_TYPING,\n    SET_REPORT_DATE,\n    SET_REPORT_GRAPHS,\n\n    SET_SEMANTIC_FILTER,\n    SET_SEMANTICS_PAGINATED,\n    RESET_SEMANTIC_PAGINATION,\n    SET_SEMANTIC_PAGE_SIZE,\n    SET_SEMANTIC_PAGE,\n\n    SET_SEMANTIC_DISPLAY_LIST,\n\n    SET_SYNONYM_FILTER,\n    SET_SYNONYMS_PAGINATED,\n    RESET_SYNONYM_PAGINATION,\n    SET_SYNONYM_PAGE_SIZE,\n    SET_SYNONYM_PAGE,\n\n    SET_SYNSET_FILTER,\n    SET_SYNSET_LIST,\n    SET_SYNSET_PAGE,\n    SET_SYNSET_PAGE_SIZE,\n    RESET_SYNSET_PAGINATION,\n    SHOW_NOTIFICATIONS,\n    SIGN_IN,\n    SIGN_OUT,\n    UPDATE_USER,\n    UPLOADING_PROGRAM,\n    UPLOADING_PROGRAM_FINISHED,\n    UPLOADING_WP_ARCHIVE,\n    UPLOADING_WP_ARCHIVE_FINISHED,\n\n    SET_LOG_LIST,\n    SET_LOG_DATE,\n    SET_LOG_HOURS,\n    SET_LOG_TYPE,\n    SET_LOG_SERVICE,\n    SET_LOG_REFRESH,\n\n    GET_EDGE_DEVICES,\n    GET_EDGE_DEVICE_COMMANDS,\n\n    // groups\n    SET_GROUPS_PAGINATED,\n    SET_GROUP_PAGE_SIZE,\n    SET_GROUP_PAGE,\n    SET_GROUP_FILTER,\n\n} from \"../actions/actions\";\nimport {initializeState} from './stateLoader'\n\n// operator message types\nconst mt_ActiveConnections = \"active connections\";\nconst mt_Disconnect = \"disconnect\";\nconst mt_Error = \"error\";\nconst mt_Message = \"message\";\nconst mt_Typing = \"typing\";\nconst mt_TeachingSuccessful = \"teaching success\";\n\n// remove all client attributes from an operator\nfunction clear_operator(op) {\n    if (op) {\n        op.conversation_list = [];\n        op.client_id = '';\n        op.client_kb_id = '';\n        op.client_kb_name = '';\n        op.question_id = '';\n        op.question = '';\n        op.answer_id = '';\n        op.answer = '';\n        op.prev_answer = '';\n        op.current_question = '';\n        op.is_typing = false;\n        op.typing_time = 0;\n    }\n}\n\nexport const reducer = (state, action) => {\n    state = state || initializeState();\n\n    // output what we've received\n    if (window.ENV.debug) {\n        console.debug(\"applicationReducer:\" + action.type);\n    }\n    if (action.type === ERROR) {\n        console.log(\"ERROR: (\" + JSON.stringify(action) + \")\");\n    }\n\n    if (action.type === SIGN_OUT) {\n        state = initializeState();\n        return state;\n    }\n\n    switch (action.type) {\n\n        default: {\n            break;\n        }\n\n        // set an error\n        case ERROR: {\n            // is this an \"invalid session id\"\n            if (action && action.error && action.error.length > 0 && action.error.indexOf(\"invalid session id\") >= 0) {\n                // wipe session and user objects - this is now a logout event\n                window.location = \"/#/\";\n                return {\n                    ...state,\n                    session: null,\n                    user: null,\n                    error_title: '',\n                    error: '',\n                    busy: false,\n                    uploading: false,\n                };\n            } else {\n                return {\n                    ...state,\n                    error_title: action.title,\n                    error: action.error,\n                    busy: false,\n                    uploading: false,\n                }\n            }\n        }\n\n        case RESET_SELECTED_KB: {\n            return {\n                ...state,\n                selected_organisation_id: \"\",\n                selected_organisation: null,\n                selected_knowledgebase_id: \"\",\n                selected_knowledgebase: null,\n            };\n        }\n\n        // close any error messages\n        case CLOSE_ERROR: {\n            return {\n                ...state,\n                error_title: \"\",\n                error: \"\",\n                busy: false,\n            };\n        }\n\n        case BUSY: {\n            return {\n                ...state,\n                busy: action.busy,\n            };\n        }\n\n        case SET_THEME: {\n            return {\n                ...state,\n                theme: action.theme,\n            };\n        }\n\n        // sign-in a user\n        case SIGN_IN: {\n            // if we're an operator - we need to change tabs\n            let selected_tab = 'operator';\n            if (action.user && action.user.roles) {\n                for (const role of action.user.roles) {\n                    if (role.role === 'admin' || role.role === 'manager') {\n                        selected_tab = 'organisations';\n                    }\n                }\n            }\n            // set the selected organisation-id (used by operators\n            let selected_organisation_id = '';\n            let selected_organisation = '';\n            if (action.user && action.user.roles) {\n                for (const role of action.user.roles) {\n                    if (role && role.organisationId && selected_organisation_id === '') {\n                        selected_organisation_id = role.organisationId;\n                    }\n                }\n            }\n            // redirect sign-in to either orgs or operator (depending on access)\n            return {\n                ...state,\n                session: action.session,\n                user: action.user,\n                selected_tab: selected_tab,\n                selected_organisation_id: selected_organisation_id,\n                selected_organisation: selected_organisation,\n                busy: false,\n            };\n        }\n\n        case GET_LICENSE: {\n            return {\n                ...state,\n                license: action.license,\n                busy: false,\n            };\n        }\n\n        case SET_ORGANISATION_LIST: {\n            return {\n                ...state,\n                organisation_list: action.organisation_list,\n                busy: false,\n            };\n        }\n\n        case SET_ORGANISATION_FILTER: {\n            return {\n                ...state,\n                organisation_filter: action.filter,\n            };\n        }\n\n        case GET_KNOWLEDGE_BASES: {\n            return {\n                ...state,\n                knowledge_base_list: action.knowledge_base_list,\n                busy: false,\n            };\n        }\n\n        case GET_INVENTORIZE_LIST: {\n            return {\n                ...state,\n                inventorize_list: action.inventorize_list,\n                busy: false,\n            };\n        }\n\n        case GET_INVENTORIZE_BUSY: {\n            return {\n                ...state,\n                inventorize_busy: action.busy,\n                busy: false,\n            };\n        }\n\n        case SELECT_ORGANISATION: {\n            return {\n                ...state,\n                selected_organisation_id: action.id,\n                selected_organisation: action.name,\n                selected_knowledgebase_id: \"\",\n                selected_knowledgebase: \"\",\n                selected_edge_device_id: \"\",\n                selected_edge_device: \"\",\n                busy: false,\n            }\n        }\n\n        case UPDATE_ORGANISATION: {\n            const new_list = [];\n            const organisation = action.organisation;\n            let found = false;\n            for (const org of state.organisation_list) {\n                if (org.id === organisation.id) {\n                    new_list.push(organisation);\n                    found = true;\n                } else {\n                    new_list.push(org);\n                }\n            }\n            if (!found) {\n                new_list.push(organisation);\n            }\n            return {\n                ...state,\n                organisation_list: new_list,\n                busy: false,\n            }\n        }\n\n        case SELECT_KNOWLEDGE_BASE: {\n            return {\n                ...state,\n                selected_knowledgebase_id: action.id,\n                selected_knowledgebase: action.name,\n                busy: false,\n            }\n        }\n\n        case SELECT_EDGE_DEVICE: {\n            return {\n                ...state,\n                selected_edge_device_id: action.id,\n                selected_edge_device: action.name,\n                busy: false,\n            }\n        }\n\n        // sign-out a user\n        case SIGN_OUT: {\n            return {\n                ...state,\n                session: null,\n                user: null,\n                busy: false,\n            }\n        }\n\n        case SELECT_TAB: {\n            return {\n                ...state,\n                selected_tab: action.selected_tab,\n                log_refresh: 0, // stop refreshing logs\n                busy: false,\n            }\n        }\n\n        case HIDE_NOTIFICATIONS: {\n            return {\n                ...state,\n                show_notifications: false,\n            }\n        }\n\n        case SHOW_NOTIFICATIONS: {\n            return {\n                ...state,\n                show_notifications: true,\n            }\n        }\n\n        case SET_NOTIFICATION_LIST: {\n            return {\n                ...state,\n                notification_list: action.notification_list,\n            }\n        }\n\n        case SET_USER_LIST: {\n            return {\n                ...state,\n                user_list: action.user_list,\n                busy: false,\n            };\n        }\n\n        case SET_USER_FILTER: {\n            return {\n                ...state,\n                user_filter: action.filter,\n            };\n        }\n\n        case UPDATE_USER: {\n            return {\n                ...state,\n                user: action.user,\n                busy: false,\n            };\n        }\n\n        case GET_CRAWLERS: {\n            return {\n                ...state,\n                crawler_list: action.crawler_list,\n                busy: false,\n            };\n        }\n\n        case GET_DOMAINS: {\n            return {\n                ...state,\n                domain_list: action.domain_list,\n                busy: false,\n            };\n        }\n\n        case UPLOADING_PROGRAM: {\n            return {\n                ...state,\n                uploading: true,\n            };\n        }\n\n        case UPLOADING_PROGRAM_FINISHED: {\n            return {\n                ...state,\n                uploading: false,\n                busy: false,\n            };\n        }\n\n        case UPLOADING_WP_ARCHIVE: {\n            return {\n                ...state,\n                uploading: true,\n            };\n        }\n\n        case UPLOADING_WP_ARCHIVE_FINISHED: {\n            return {\n                ...state,\n                uploading: false,\n                busy: false,\n            };\n        }\n\n        case GET_DOCUMENTS_PAGINATED: {\n            return {\n                ...state,\n                document_list: action.document_list,\n                num_documents: action.num_documents,\n                prev_document_filter: action.document_filter,\n                busy: false,\n            };\n        }\n\n        case SET_DOCUMENT_FILTER: {\n            return {\n                ...state,\n                document_page: 0,\n                document_filter: action.filter,\n            };\n        }\n\n        case SET_DOCUMENT_PAGE: {\n            const document_nav_list = state.document_nav_list;\n            if (action.page >= document_nav_list.length) {\n                document_nav_list.push(action.prev_url);\n            }\n            return {\n                ...state,\n                document_page: action.page,\n                document_previous: action.prev_url,\n                document_nav_list: document_nav_list,\n                busy: false,\n            }\n        }\n\n        case SET_DOCUMENT_PAGE_SIZE: {\n            return {\n                ...state,\n                document_page: 0,\n                document_previous: null,\n                document_nav_list: ['null'],\n                document_page_size: action.page_size,\n            }\n        }\n\n        case RESET_DOCUMENT_PAGINATION: {\n            return {\n                ...state,\n                document_page: 0,\n                document_previous: null,\n                document_nav_list: ['null'],\n                busy: false,\n            }\n        }\n\n        case MIND_FIND: {\n            return {\n                ...state,\n                mind_item_list: action.mind_item_list,\n                busy: false,\n            };\n        }\n\n        case SET_MEMORIES_PAGINATED: {\n            return {\n                ...state,\n                mind_item_list: action.data.memoryList,\n                num_mind_items: action.data.numMemories,\n                prev_mind_item_filter: action.data.filter,\n                busy: false,\n            };\n        }\n\n        case SET_MEMORY_FILTER: {\n            return {\n                ...state,\n                mind_item_page: 0,\n                mind_item_filter: action.filter,\n            };\n        }\n\n        case SET_MEMORIES_PAGE: {\n            const mind_item_nav_list = state.mind_item_nav_list;\n            if (action.page >= mind_item_nav_list.length) {\n                mind_item_nav_list.push(action.prev_id);\n            }\n            return {\n                ...state,\n                mind_item_page: action.page,\n                mind_item_previous: action.prev_id,\n                mind_item_nav_list: mind_item_nav_list,\n                busy: false,\n            }\n        }\n\n        case SET_MEMORIES_PAGE_SIZE: {\n            return {\n                ...state,\n                mind_item_page: 0,\n                mind_item_previous: null,\n                mind_item_nav_list: ['null'],\n                mind_item_page_size: action.page_size,\n            }\n        }\n\n        case RESET_MEMORIES_PAGINATION: {\n            return {\n                ...state,\n                mind_item_page: 0,\n                mind_item_previous: null,\n                mind_item_nav_list: ['null'],\n                busy: false,\n            }\n        }\n\n        case SET_MIND_QUERY_LIST: {\n            return {\n                ...state,\n                mind_result_list: action.mind_result_list,\n                busy: false,\n            };\n        }\n\n        case SET_MIND_QUERY_STRING: {\n            return {\n                ...state,\n                bot_query: action.bot_query,\n            };\n        }\n\n        case SET_SYNONYMS_PAGINATED: {\n            return {\n                ...state,\n                synonym_list: action.data.synonymList,\n                num_synonyms: action.data.numSynonyms,\n                prev_synonym_filter: action.data.filter,\n                busy: false,\n            };\n        }\n\n        case SET_SYNONYM_PAGE: {\n            const synonym_nav_list = state.synonym_nav_list;\n            if (action.page >= synonym_nav_list.length) {\n                synonym_nav_list.push(action.prev_id);\n            }\n            return {\n                ...state,\n                synonym_page: action.page,\n                synonym_prev_id: action.prev_id,\n                synonym_nav_list: synonym_nav_list,\n                busy: false,\n            }\n        }\n\n        case SET_SYNONYM_PAGE_SIZE: {\n            return {\n                ...state,\n                synonym_page: 0,\n                synonym_prev_id: null,\n                synonym_nav_list: ['null'],\n                synonym_page_size: action.page_size,\n            }\n        }\n\n        case RESET_SYNONYM_PAGINATION: {\n            return {\n                ...state,\n                synonym_page: 0,\n                synonym_prev_id: null,\n                synonym_nav_list: ['null'],\n                busy: false,\n            }\n        }\n\n        case SET_SYNONYM_FILTER: {\n            return {\n                ...state,\n                synonym_page: 0,\n                synonym_filter: action.synonym_filter,\n            };\n        }\n\n\n        case SET_SEMANTICS_PAGINATED: {\n            return {\n                ...state,\n                semantic_list: action.data.semanticList,\n                num_semantics: action.data.numSemantics,\n                prev_semantic_filter: action.data.filter,\n                busy: false,\n            };\n        }\n\n        case SET_SEMANTIC_PAGE: {\n            const semantic_nav_list = state.semantic_nav_list;\n            if (action.page >= semantic_nav_list.length) {\n                semantic_nav_list.push(action.prev_word);\n            }\n            return {\n                ...state,\n                semantic_page: action.page,\n                semantic_prev_word: action.prev_word,\n                semantic_nav_list: semantic_nav_list,\n                busy: false,\n            }\n        }\n\n        case SET_SEMANTIC_PAGE_SIZE: {\n            return {\n                ...state,\n                semantic_page: 0,\n                semantic_prev_id: null,\n                semantic_nav_list: ['null'],\n                semantic_page_size: action.page_size,\n            }\n        }\n\n        case RESET_SEMANTIC_PAGINATION: {\n            return {\n                ...state,\n                semantic_page: 0,\n                semantic_prev_id: null,\n                semantic_nav_list: ['null'],\n                busy: false,\n            }\n        }\n\n\n        case SET_SEMANTIC_DISPLAY_LIST: {\n            return {\n                ...state,\n                semantic_display_category_list: action.semantic_display_category_list,\n                defined_semantic_list: action.defined_semantic_list,\n                busy: false,\n            };\n        }\n\n        case SET_SEMANTIC_FILTER: {\n            return {\n                ...state,\n                semantic_page: 0,\n                semantic_filter: action.semantic_filter,\n            };\n        }\n\n        case SET_SYNSET_LIST: {\n            return {\n                ...state,\n                synset_list: action.synset_list,\n                synset_total_size: action.total_size,\n                busy: false,\n            };\n        }\n\n        case SET_SYNSET_FILTER: {\n            return {\n                ...state,\n                synset_page: 0,\n                synset_filter: action.synset_filter,\n            };\n        }\n\n        case SET_SYNSET_PAGE: {\n            return {\n                ...state,\n                synset_page: action.page,\n                busy: false,\n            }\n        }\n\n        case SET_SYNSET_PAGE_SIZE: {\n            return {\n                ...state,\n                synset_page: 0,\n                synset_page_size: action.page_size,\n            }\n        }\n\n        case RESET_SYNSET_PAGINATION: {\n            return {\n                ...state,\n                synset_page: 0,\n                busy: false,\n            }\n        }\n\n        case SET_REPORT_DATE: {\n            return {\n                ...state,\n                report_date: Api.toIsoDate(action.report_date),\n            };\n        }\n\n        case SET_REPORT_GRAPHS: {\n            return {\n                ...state,\n                access_frequency: action.access_frequency,\n                general_statistics: action.general_statistics,\n                query_word_frequency: action.query_word_frequency,\n                file_type_statistics: action.file_type_statistics,\n                busy: false,\n            }\n        }\n\n        case SET_OPERATOR_ANSWER: {\n            const new_list = [];\n            for (const op of state.operators) {\n                if (op.id === action.operatorId) {\n                    op.answer_id = action.id;\n                    op.answer = action.answer;\n                }\n                new_list.push(op);\n            }\n            return {\n                ...state,\n                operators: new_list,\n            }\n        }\n\n        case SET_OPERATOR_QUESTION: {\n            const new_list = [];\n            for (const op of state.operators) {\n                if (op.id === action.operatorId) {\n                    op.question_id = action.id;\n                    op.question = action.question;\n                }\n                new_list.push(op);\n            }\n            return {\n                ...state,\n                operators: new_list,\n            }\n        }\n\n        case OPERATOR_READY: {\n            if (action.ready) {\n                const new_list = [];\n                for (const op of state.operators) {\n                    if (op.id === action.operatorId) {\n                        op.operator_ready = true;\n                    }\n                    new_list.push(op);\n                }\n                return {\n                    ...state,\n                    operators: new_list,\n                }\n            } else {\n\n                const new_list = [];\n                for (const op of state.operators) {\n                    if (op.id === action.operatorId) {\n                        const emptyOperator = Api.createOperator();\n                        emptyOperator.id = action.operatorId;\n                        new_list.push(emptyOperator);\n                    } else {\n                        new_list.push(op);\n                    }\n                }\n                return {\n                    ...state,\n                    operators: new_list,\n                }\n            }\n        }\n\n        // next-user / ban-user set\n        case OPERATOR_CLEAR_USER: {\n            const new_list = [];\n            for (const op of state.operators) {\n                if (op.id === action.operatorId) {\n                    const emptyOperator = Api.createOperator();\n                    emptyOperator.id = action.operatorId; // don't wipe these\n                    emptyOperator.operator_ready = op.operator_ready;\n                    new_list.push(emptyOperator);\n                } else {\n                    new_list.push(op);\n                }\n            }\n            return {\n                ...state,\n                operators: new_list,\n            }\n        }\n\n        case ADD_OPERATOR: {\n            const new_list = JSON.parse(JSON.stringify(state.operators));\n            new_list.push(Api.createOperator());\n            return {\n                ...state,\n                operators: new_list,\n            }\n        }\n\n        case REMOVE_OPERATOR: {\n            const new_list = [];\n            for (const operator of state.operators) {\n                if (operator.id !== action.id) {\n                    new_list.push(operator);\n                }\n            }\n            return {\n                ...state,\n                operators: new_list\n            }\n        }\n\n        case STOP_CLIENT_TYPING: {\n            const operator_id = action.operator_id; // client's id\n            const new_list = [];\n            for (const op of state.operators) {\n                if (op.id === operator_id) {\n                    op.is_typing = false;\n                    op.typing_time = 0;\n                }\n                new_list.push(op);\n            }\n            return {\n                ...state,\n                operators: new_list,\n            }\n        }\n\n        // receive a message for the operator - process it\n        case PROCESS_OPERATOR_MESSAGE: {\n            const data = action.message; // the data / message\n\n            // log certain messages\n            if (data.messageType !== mt_ActiveConnections) {\n                // log any message for debugging (except active connection counts)\n                // console.debug('operator received data:' + JSON.stringify(data));\n            }\n            // an error has occurred - show it\n            if (data.messageType === mt_Error && data.error.length > 0) {\n                return {\n                    ...state,\n                    error_title: \"error\",\n                    error: data.error,\n                    busy: false,\n                    uploading: false,\n                }\n            }\n            if (data.messageType === mt_Disconnect) {\n                const new_list = [];\n                for (const op of state.operators) {\n                    if (op.id === data.operatorId) {\n                        clear_operator(op);\n                    }\n                    new_list.push(op);\n                }\n                if (data.disconnectedByClient) {\n                    return {\n                        ...state,\n                        operators: new_list,\n                        error_title: \"Disconnected\",\n                        error: \"the client has terminated this conversation.\",\n                    }\n                } else {\n                    return {\n                        ...state,\n                        operators: new_list,\n                    }\n                }\n            }\n            if (data.messageType === mt_TeachingSuccessful) {\n                // needed by javascript interface - not this app\n                return {\n                    ...state\n                }\n            }\n            if (data.messageType === mt_ActiveConnections) {\n                // set number of active connections as told by platform\n                return {\n                    ...state,\n                    num_active_connections: data.connectionCount,\n                }\n            }\n\n            // an is-typing message arrives\n            if (data.messageType === mt_Typing) {\n                // find the organisation\n                const new_list = [];\n                for (const op of state.operators) {\n                    if (op.id === data.toId) {\n                        op.is_typing = data.fromIsTyping;\n                        op.typing_time = Api.getSystemTime() + 2000;\n                    }\n                    new_list.push(op);\n                }\n                return {\n                    ...state,\n                    operators: new_list,\n                }\n            }\n\n            // a message (response) arrives\n            if (data.messageType === mt_Message) {\n\n                if (!data.kbId || data.kbId.length === 0) {\n                    // bad - must have a knowledgebase id\n                    return {\n                        ...state,\n                        error_title: \"error\",\n                        error: \"message does not include a valid knowledge-base id.\",\n                        busy: false,\n                        uploading: false,\n                    }\n\n                } else if (!data.assignedOperatorId || data.assignedOperatorId.length === 0) {\n                    // bad - must have an operator-id so we can assign it\n                    return {\n                        ...state,\n                        error_title: \"error\",\n                        error:  \"message does not include a valid assigned-operator-id.\",\n                        busy: false,\n                        uploading: false,\n                    }\n\n                } else {\n\n                    // find the organisation\n                    let operator = null;\n                    for (const op of state.operators) {\n                        if (op.id === data.assignedOperatorId) {\n                            operator = op;\n                            break;\n                        }\n                    }\n\n                    if (operator != null) {\n\n                        // get the history list (complete / abs list)\n                        let conversation_list = []; // always change the list (must update!)\n                        if (operator.conversation_list.length === 0 && data.conversationList && data.conversationList.length > 0) {\n                            // does the message come with some of the conversation data of previous attempts\n                            conversation_list = []; // reset the list - we have data\n                            let count = conversation_list.length + 1; // unique ids assigned for REACT\n                            for (const index in data.conversationList) {\n                                if (data.conversationList.hasOwnProperty(index)) {\n                                    let ci = data.conversationList[index];\n                                    const is_simsage = ci.origin !== \"user\";\n                                    conversation_list.push({\n                                        id: count, primary: ci.conversationText, created: ci.created,\n                                        secondary: is_simsage ? \"You\" : \"user\", used: false, is_simsage: is_simsage\n                                    });\n                                    count += 1;\n                                }\n                            }\n\n                        } else if (data.text && data.text.length > 0) {\n                            // otherwise - get the conversation from what just was said by the user\n                            conversation_list = JSON.parse(JSON.stringify(operator.conversation_list)); // copy existing list\n                            // add new item\n                            conversation_list.push({\n                                id: conversation_list.length + 1, primary: data.text,\n                                secondary: \"user\", used: false, is_simsage: false\n                            });\n                        } else {\n                            // the list didn't change\n                            conversation_list = operator.conversation_list;\n                        }\n\n                        // html 5 notifications enabled?\n                        if (data.text && data.text.length > 0 &&\n                            window.Notification && window.Notification.permission === \"granted\") {  // we have notification permission?\n                            const title = \"the Operator needs your Attention\"; // title\n                            const options = {\n                                body: \"A new question just came in.  Click here to open the operator window.  \\\"\" + data.text + \"\\\"\"\n                            };\n                            const notification = new Notification(title, options);  // display notification\n                            notification.onclick = function () {\n                                window.focus();\n                            }\n                        }\n\n                        if (data.previousAnswer && data.previousAnswer.length > 0) {\n                            operator.prev_answer = data.previousAnswer;\n                        }\n\n                        if (data.clientId.length > 5) {\n                            operator.client_id = data.clientId;\n                            operator.client_kb_id = data.kbId;\n                        }\n\n                        // set the name of the knowledge base connected to\n                        if (data.kbName && data.kbName.length > 0) {\n                            operator.client_kb_name = data.kbName;\n                        }\n\n                        // set potentially changed items\n                        operator.conversation_list = conversation_list;\n                        operator.is_typing = false;\n                        operator.typing_time = 0;\n\n                        // create the new organisation list\n                        const new_list = [];\n                        for (const op of state.operators) {\n                            if (op.id !== data.organisationId) {\n                                new_list.push(op);\n                            } else {\n                                new_list.push(operator);\n                            }\n                        }\n\n                        return {\n                            ...state,\n                            operators: new_list,\n                        }\n\n                    } // organisation != null\n                    else {\n                        console.log(\"organisation id not found:\" + data.organisationId);\n                    }\n\n                } // else\n\n            } // if mt_message\n\n            return {\n                ...state,\n            }\n        }\n\n        case SET_OPERATOR_CONNECTED: {\n            const new_list = [];\n            for (const op of state.operators) {\n                op.operator_ready = false;\n                clear_operator(op);\n                new_list.push(op);\n            }\n            return {\n                ...state,\n                operator_connected: action.connected,\n                num_active_connections: 0,\n                operators: new_list,\n            }\n        }\n\n        case CLEAR_PREVIOUS_ANSWER: {\n            const new_list = [];\n            for (const op of state.operators) {\n                if (op.id === action.operatorId) {\n                    op.current_question = '';\n                    op.prev_answer = '';\n                }\n                new_list.push(op);\n            }\n            return {\n                ...state,\n                operators: new_list,\n            }\n        }\n\n        case ADD_CONVERSATION: {\n            const new_list = [];\n            for (const op of state.operators) {\n                if (op.id === action.operatorId) {\n                    op.conversation_list.push(action.item);\n                }\n                new_list.push(op);\n            }\n            return {\n                ...state,\n                operators: new_list,\n            }\n        }\n\n        case MARK_CONVERSATION_USED: {\n            const new_list = [];\n            for (const op of state.operators) {\n                if (op.id === action.operatorId) {\n                    const message_list = op.conversation_list;\n                    for (const message of message_list) {\n                        if (message.id === action.id) {\n                            message.used = true;\n                        }\n                    }\n                    op.conversation_list = message_list;\n                }\n                new_list.push(op);\n            }\n            // copy list to make a new one\n            return {\n                ...state,\n                operators: new_list,\n            }\n        }\n\n\n        case GET_HTML5_NOTIFICATIONS: {\n            return {\n                ...state,\n                html5_notifications: action.status,\n            }\n        }\n\n\n        case SET_LOG_LIST: {\n            return {\n                ...state,\n                log_list: action.log_list,\n                busy: false,\n            }\n        }\n\n        case SET_LOG_DATE: {\n            return {\n                ...state,\n                log_date: Api.toIsoDateTime(action.log_date),\n            };\n        }\n\n        case SET_LOG_HOURS: {\n            return {\n                ...state,\n                log_hours: action.log_hours,\n            };\n        }\n\n        case SET_LOG_TYPE: {\n            return {\n                ...state,\n                log_type: action.log_type,\n            };\n        }\n\n        case SET_LOG_SERVICE: {\n            return {\n                ...state,\n                log_service: action.log_service,\n            };\n        }\n\n        case SET_LOG_REFRESH: {\n            return {\n                ...state,\n                log_refresh: action.log_refresh,\n            };\n        }\n\n        case GET_EDGE_DEVICES: {\n            return {\n                ...state,\n                edge_device_list: action.edge_device_list,\n                busy: false,\n            };\n        }\n\n        case GET_EDGE_DEVICE_COMMANDS: {\n            return {\n                ...state,\n                edge_device_command_list: action.edge_device_command_list,\n                busy: false,\n            };\n        }\n\n        //////////////////////////////////////////////////////////////////////////////////////////\n        // GROUPS\n\n        case SET_GROUPS_PAGINATED: {\n            return {\n                ...state,\n                group_list: action.group_list,\n                group_count: action.num_groups,\n                busy: false,\n            };\n        }\n\n        case SET_GROUP_PAGE: {\n            return {\n                ...state,\n                group_page: action.page,\n                busy: false,\n            }\n        }\n\n        case SET_GROUP_PAGE_SIZE: {\n            return {\n                ...state,\n                group_page: 0,\n                group_page_size: action.page_size,\n                busy: false,\n            }\n        }\n\n        case SET_GROUP_FILTER: {\n            return {\n                ...state,\n                group_page: 0,\n                group_filter: action.group_filter,\n            };\n        }\n\n\n\n    }\n\n    return state;\n};\n\n","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\nimport thunk from \"redux-thunk\";\nimport {createLogger} from \"redux-logger\";\nimport {routerReducer} from \"react-router-redux\";\nimport * as AppReducer from \"./appReducer\";\n\nimport {loadState} from \"./stateLoader\";\n\n// only log when debug = false in settings.js\nconst loggerMiddleware = createLogger({\n    predicate: (getState, action) => window.ENV.debug\n});\n\nexport default function configureStore() {\n    const reducers = {\n        appReducer:  AppReducer.reducer,\n    };\n\n    const middleware = [thunk, loggerMiddleware];\n\n    // In development, use the browser's Redux dev tools extension if installed\n    const enhancers = [];\n    const isDevelopment = process.env.NODE_ENV === \"development\";\n    if (isDevelopment && typeof window !== \"undefined\" && window.devToolsExtension) {\n        enhancers.push(window.devToolsExtension());\n    }\n\n    const rootReducer = combineReducers({\n        ...reducers,\n        routing: routerReducer\n    });\n\n    return createStore(\n        rootReducer,\n        loadState(),\n        compose(\n            applyMiddleware(...middleware),\n            ...enhancers\n        )\n    );\n}\n\n","\nexport class GraphHelper {\n\n    // labelList: array of strings\n    // valueList: array of same size of values (data)\n    static setupDoughnut(labelList, valueList) {\n        return {\n            labels: labelList,\n            datasets: [{\n                data: valueList,\n                backgroundColor: [\n                    '#36A2EB',\n                    '#FF6384',\n                    '#56CE56'\n                ],\n                hoverBackgroundColor: [\n                    '#36A2EB',\n                    '#FF6384',\n                    '#56CE56'\n                ]\n            }]\n        };\n    }\n\n    // setup items in a hash-map separated by frequencies\n    static setupMap(map, description) {\n        if (map) {\n            const stat_list = [];\n            const size_list = [100, 10000, 100000, -1];\n            const seen = new Set();\n            for (const i in size_list) {\n                const cf = size_list[i];\n                let labels = [];\n                let values = [];\n                for (const key in map) {\n\n                    if (map.hasOwnProperty(key)) {\n                        let value = map[key];\n                        if ((value === -1 || value < cf) && !seen.has(key)) {\n                            seen.add(key);\n                            labels.push(key);\n                            values.push(value.toFixed(2));\n                        }\n                    }\n                }\n                if (labels.length > 0) {\n                    stat_list.push({\n                        id: i,\n                        labels: labels,\n                        title: description,\n                        datasets: [\n                            {\n                                label: description,\n                                fill: false,\n                                lineTension: 0.1,\n                                backgroundColor: 'rgba(98,194,214,1)',\n                                borderColor: 'rgba(98,194,214,1)',\n                                pointBackgroundColor: '#fff',\n                                pointBorderColor: 'rgba(98,194,214,1)',\n                                pointHoverBackgroundColor: 'rgba(98,194,214,1)',\n                                pointHoverBorderColor: 'rgba(220,220,220,1)',\n                                borderCapStyle: 'butt',\n                                borderDash: [],\n                                borderDashOffset: 0.0,\n                                borderJoinStyle: 'miter',\n                                pointBorderWidth: 1,\n                                pointHoverRadius: 5,\n                                pointHoverBorderWidth: 2,\n                                pointRadius: 1,\n                                pointHitRadius: 10,\n                                data: values\n                            }\n                        ]\n                    });\n                }\n            }\n            return stat_list\n        }\n        return [];\n    }\n\n    // setup a list of values\n    static setupList(list, label, scale = 1.0) {\n        if (list && list.length) {\n            let labels = [];\n            let values = [];\n            const day_map = {};\n            let numGtZero = 0;\n            for (let i = 0; i <= 30; i++) {\n                day_map[i + 1] = list[i];\n                if (list[i] > 0) {\n                    numGtZero += 1;\n                }\n            }\n            if (numGtZero === 0) {\n                return {labels: []};\n            }\n            for (let i = 1; i <= 31; i++) {\n                labels.push('' + i);\n                if (day_map.hasOwnProperty(i) && day_map[i] > 0) {\n                    values.push(day_map[i] / scale);\n                } else {\n                    values.push(0.0);\n                }\n            }\n            return {\n                labels: labels,\n                datasets: [\n                    {\n                        label: label,\n                        fill: false,\n                        lineTension: 0.4,\n                        backgroundColor: 'rgba(154,202,147,1)',\n                        borderColor: 'rgba(154,202,147,1)',\n                        pointBackgroundColor: '#fff',\n                        pointBorderColor: 'rgba(154,202,147,1)',\n                        pointHoverBackgroundColor: 'rgba(154,202,147,1)',\n                        pointHoverBorderColor: 'rgba(220,220,220,1)',\n                        borderCapStyle: 'butt',\n                        borderDash: [],\n                        borderDashOffset: 0.0,\n                        borderJoinStyle: 'miter',\n                        pointBorderWidth: 1,\n                        pointHoverRadius: 5,\n                        pointHoverBorderWidth: 2,\n                        pointRadius: 1,\n                        pointHitRadius: 10,\n                        data: values\n                    }\n                ]\n            };\n        }\n        return {labels: []};\n    }\n\n    // setup a list of values {user, system, idle}\n    static setupCpuList(list, num_points = 50, scale = 1.0) {\n        if (list && list.length) {\n            let labels = [];\n            let values1 = [];\n            let values2 = [];\n\n            let listStart = 0;\n            if (list.length > num_points) {\n                listStart = list.length - num_points;\n            }\n            for (let i = listStart; i < listStart + num_points; i++) {\n                labels.push('');\n                if (i < list.length) {\n                    values1.push(list[i].idle / scale);\n                    values2.push((list[i].user + list[i].system) / scale);\n                } else {\n                    values1.push(0.0);\n                    values2.push(0.0);\n                }\n            }\n            return {\n                labels: labels,\n                datasets: [\n                    {\n                        label: \"busy\",\n                        fill: true,\n                        lineTension: 0.1,\n                        backgroundColor: 'rgba(192, 75,120,0.7)',\n                        borderColor: 'rgba(192, 75,120,1)',\n                        pointBackgroundColor: '#fff',\n                        pointBorderColor: 'rgba(192, 75, 120,1)',\n                        pointHoverBackgroundColor: 'rgba(192, 75,120,1)',\n                        pointHoverBorderColor: 'rgba(220,220,220,1)',\n                        borderCapStyle: 'butt',\n                        borderDash: [],\n                        borderDashOffset: 0.0,\n                        borderJoinStyle: 'miter',\n                        pointBorderWidth: 1,\n                        pointHoverRadius: 5,\n                        pointHoverBorderWidth: 2,\n                        pointRadius: 1,\n                        pointHitRadius: 10,\n                        data: values2\n                    },\n                    {\n                        label: \"idle\",\n                        fill: true,\n                        lineTension: 0.1,\n                        backgroundColor: 'rgba(75,192,120,0.4)',\n                        borderColor: 'rgba(75,192,120,1)',\n                        pointBackgroundColor: '#fff',\n                        pointBorderColor: 'rgba(75, 192,120,1)',\n                        pointHoverBackgroundColor: 'rgba(75,192,120,1)',\n                        pointHoverBorderColor: 'rgba(220,220,220,1)',\n                        borderCapStyle: 'butt',\n                        borderDash: [],\n                        borderDashOffset: 0.0,\n                        borderJoinStyle: 'miter',\n                        pointBorderWidth: 1,\n                        pointHoverRadius: 5,\n                        pointHoverBorderWidth: 2,\n                        pointRadius: 1,\n                        pointHitRadius: 0,\n                        data: values1\n                    },\n                ]\n            };\n        }\n        return {labels: []};\n    }\n\n    // setup the options for a graph\n    static getGraphOptions(title) {\n        return {\n            responsive: true,\n            legend: {\n                position: 'bottom',\n            },\n            hover: {\n                mode: 'label'\n            },\n            scales: {\n                xAxes: [{\n                    display: true,\n                    scaleLabel: {\n                        display: false,\n                        labelString: ''\n                    }\n                }],\n                yAxes: [{\n                    display: true,\n                    ticks: {\n                        beginAtZero: true,\n                        steps: 10,\n                        stepValue: 5,\n                    }\n                }]\n            },\n            title: {\n                display: true,\n                text: title\n            }\n        };\n    }\n\n    // setup the doughnut options for a graph\n    static getDoughnutOptions(title) {\n        return {\n            responsive: true,\n            legend: {\n                position: 'bottom',\n            },\n            hover: {\n                mode: 'label'\n            },\n            title: {\n                display: true,\n                text: title\n            }\n        };\n    }\n\n    // process a list of data (main_list) and put it into processList()\n    static processList(list, main_list, title) {\n\n        if (main_list && main_list.labels && main_list.datasets &&\n            main_list.datasets.length === 1 && main_list.datasets[0].data) {\n\n            list.push([\"\", \"\"]);\n            list.push([title, \"\"]);\n            for (let i = 0; i < main_list.labels.length; i++) {\n                list.push([\"\" + main_list.labels[i], \"\" + main_list.datasets[0].data[i]]);\n            }\n        }\n    }\n\n    // process a set of data (main_list) and put it into list\n    static processSet(list, main_set, title) {\n        for (const temp_list of main_set) {\n            GraphHelper.processList(list, temp_list, title);\n        }\n    }\n\n}\n\n\nexport default GraphHelper;\n","import GraphHelper from '../common/graph-helper'\nimport Api from '../common/api'\n\nimport {\n    ADD_CONVERSATION,\n    BUSY,\n    SET_THEME,\n    RESET_SELECTED_KB,\n    CLEAR_PREVIOUS_ANSWER,\n    CLOSE_ERROR,\n    ERROR,\n    GET_CRAWLERS,\n    GET_DOMAINS,\n    GET_DOCUMENTS_PAGINATED,\n    GET_HTML5_NOTIFICATIONS,\n    GET_KNOWLEDGE_BASES,\n    GET_INVENTORIZE_LIST,\n    GET_LICENSE,\n    SET_ORGANISATION_LIST,\n    SET_ORGANISATION_FILTER,\n    GET_INVENTORIZE_BUSY,\n    GET_OS_MESSAGES,\n    GET_STATS,\n    SET_USER_LIST,\n    SET_USER_FILTER,\n    HIDE_NOTIFICATIONS,\n    MARK_CONVERSATION_USED,\n\n    OPERATOR_CLEAR_USER,\n    OPERATOR_READY,\n    PASSWORD_RESET_REQUEST,\n    PROCESS_OPERATOR_MESSAGE,\n    RESET_DOCUMENT_PAGINATION,\n    RESET_PASSWORD,\n    SET_SYNSET_PAGE,\n    SET_SYNSET_PAGE_SIZE,\n    RESTORE_SYSTEM,\n    SELECT_KNOWLEDGE_BASE,\n    SELECT_EDGE_DEVICE,\n    SELECT_ORGANISATION,\n    UPDATE_ORGANISATION,\n    SELECT_TAB,\n    SET_MIND_QUERY_LIST,\n    SET_MIND_QUERY_STRING,\n    SET_DOCUMENT_FILTER,\n    SET_DOCUMENT_PAGE,\n    SET_DOCUMENT_PAGE_SIZE,\n\n    SET_MEMORY_FILTER,\n    SET_MEMORIES_PAGINATED,\n    SET_MEMORIES_PAGE_SIZE,\n    SET_MEMORIES_PAGE,\n    RESET_MEMORIES_PAGINATION,\n\n    SET_NOTIFICATION_LIST,\n    SET_OPERATOR_ANSWER,\n    SET_OPERATOR_CONNECTED,\n    SET_OPERATOR_QUESTION,\n    STOP_CLIENT_TYPING,\n    ADD_OPERATOR,\n    REMOVE_OPERATOR,\n    MAX_OPERATORS,\n    SET_REPORT_DATE,\n    SET_REPORT_GRAPHS,\n\n    SET_SEMANTICS_PAGINATED,\n    SET_SEMANTIC_PAGE_SIZE,\n    SET_SEMANTIC_PAGE,\n    RESET_SEMANTIC_PAGINATION,\n    SET_SEMANTIC_FILTER,\n\n    SET_SEMANTIC_DISPLAY_LIST,\n\n    SET_SYNONYM_FILTER,\n    SET_SYNONYMS_PAGINATED,\n    RESET_SYNONYM_PAGINATION,\n    SET_SYNONYM_PAGE_SIZE,\n    SET_SYNONYM_PAGE,\n\n    SET_SYNSET_LIST,\n    SET_SYNSET_FILTER,\n    RESET_SYNSET_PAGINATION,\n    SHOW_NOTIFICATIONS,\n    SIGN_IN,\n    SIGN_OUT,\n    UPDATE_USER,\n    UPLOADING_PROGRAM,\n    UPLOADING_PROGRAM_FINISHED,\n\n    UPLOADING_WP_ARCHIVE,\n    UPLOADING_WP_ARCHIVE_FINISHED,\n\n    SET_LOG_LIST,\n    SET_LOG_DATE,\n    SET_LOG_HOURS,\n    SET_LOG_TYPE,\n    SET_LOG_SERVICE,\n    SET_LOG_REFRESH,\n\n    // the edge\n    GET_EDGE_DEVICES,\n    GET_EDGE_DEVICE_COMMANDS,\n\n    // groups\n    SET_GROUPS_PAGINATED,\n    SET_GROUP_PAGE_SIZE,\n    SET_GROUP_PAGE,\n    SET_GROUP_FILTER,\n\n} from \"./actions\";\n\nimport {Comms} from \"../common/comms\";\n\n// not in state system - bad in the state system\nlet notification_busy = false;\n\nasync function _getOrganisationList(current_org_name, current_org_id, _filter, change_organisation, dispatch) {\n    dispatch({type: BUSY, busy: true});\n    let filter = _filter;\n    if (!_filter || _filter.trim() === \"\") {\n        filter = \"null\";\n    }\n    await Comms.http_get('/auth/user/organisations/' + encodeURIComponent(filter),\n        (response) => {\n            const organisation_list = response.data;\n            dispatch({type: SET_ORGANISATION_LIST, organisation_list: organisation_list});\n            // select an organisation if there is one to select and none yet has been selected\n            if (change_organisation && organisation_list && organisation_list.length > 0 && current_org_id.length === 0) {\n                dispatch({type: SELECT_ORGANISATION, name: organisation_list[0].name, id: organisation_list[0].id});\n                // and get the knowledge bases for this org\n                _getKnowledgeBases(organisation_list[0].id, dispatch);\n            }\n        },\n        (errStr) => { dispatch({type: ERROR, title: \"Error\", error: errStr}) }\n    )\n}\n\nasync function _getKnowledgeBases(organisation_id, dispatch) {\n    dispatch({type: BUSY, busy: true});\n    await Comms.http_get('/knowledgebase/' + encodeURIComponent(organisation_id),\n        (response) => {\n            dispatch({type: GET_KNOWLEDGE_BASES, knowledge_base_list: response.data});\n        },\n        (errStr) => { dispatch({type: ERROR, title: \"Error\", error: errStr}) }\n    )\n}\n\nasync function _getInventorizeList(organisation_id, kb_id, dispatch) {\n    if (organisation_id.length > 0 && kb_id.length > 0) {\n        dispatch({type: BUSY, busy: true});\n        await Comms.http_get('/document/parquets/' + encodeURIComponent(organisation_id) + '/' +\n            encodeURIComponent(kb_id) + '/0/5',\n            (response) => {\n                dispatch({type: GET_INVENTORIZE_LIST, inventorize_list: response.data});\n            },\n            (errStr) => {\n                dispatch({type: ERROR, title: \"Error\", error: errStr})\n            }\n        )\n    }\n}\n\nasync function _getUsers(organisation_id, filter, dispatch) {\n    dispatch({type: BUSY, busy: true});\n    if (!filter || filter.trim() === '') {\n        filter = 'null';\n    }\n    await Comms.http_get('/auth/users/' + encodeURIComponent(organisation_id) + '/' + encodeURIComponent(filter),\n        (response) => {\n            dispatch({type: SET_USER_LIST, user_list: response.data});\n        },\n        (errStr) => { dispatch({type: ERROR, title: \"Error\", error: errStr}) }\n    )\n}\n\nasync function _getCrawlers(organisation_id, kb_id, dispatch) {\n    if (organisation_id.length > 0 && kb_id.length > 0) {\n        dispatch({type: BUSY, busy: true});\n        await Comms.http_get('/crawler/crawlers/' + encodeURIComponent(organisation_id) + '/' + encodeURIComponent(kb_id),\n            (response) => {\n                dispatch({type: GET_CRAWLERS, crawler_list: response.data});\n            },\n            (errStr) => {\n                dispatch({type: ERROR, title: \"Error\", error: errStr})\n            }\n        )\n    }\n}\n\nasync function _getDomains(organisation_id, kb_id, page, page_size, filter, dispatch) {\n    if (organisation_id.length > 0 && kb_id.length > 0) {\n        dispatch({type: BUSY, busy: true});\n        await Comms.http_put('/knowledgebase/domains', {\n                \"organisationId\": organisation_id, \"kbId\": kb_id, \"page\": page, \"pageSize\": page_size, \"filter\": filter\n            },\n            (response) => {\n                dispatch({type: GET_DOMAINS, domain_list: response.data});\n            },\n            (errStr) => {\n                dispatch({type: ERROR, title: \"Error\", error: errStr})\n            }\n        )\n    }\n}\n\nasync function _getDocuments(organisation_id, kb_id, document_previous, document_page_size, document_filter, dispatch) {\n    if (organisation_id.length > 0 && kb_id.length > 0) {\n        dispatch({type: BUSY, busy: true});\n        await Comms.http_post('/document/documents', {\n                \"organisationId\": organisation_id, \"kbId\": kb_id,\n                \"prevUrl\": document_previous ? document_previous : 'null',\n                \"pageSize\": document_page_size,\n                \"filter\": document_filter\n            },\n            (response) => {\n                const document_list = response.data.documentList;\n                const num_documents = response.data.numDocuments;\n                dispatch(({\n                    type: GET_DOCUMENTS_PAGINATED,\n                    document_list: document_list,\n                    num_documents: num_documents,\n                    document_filter: document_filter\n                }));\n            },\n            (errStr) => {\n                dispatch({type: ERROR, title: \"Error\", error: errStr})\n            }\n        )\n    }\n}\n\nasync function _getMemories(organisation_id, kb_id, prev_id, mind_filter, mind_item_page_size, dispatch) {\n    if (organisation_id.length > 0 && kb_id.length > 0) {\n        dispatch({type: BUSY, busy: true});\n        const data = {\n            \"organisationId\": organisation_id, \"kbId\": kb_id, \"prevId\": prev_id ? prev_id : \"null\",\n            \"filter\": mind_filter, \"pageSize\": mind_item_page_size\n        };\n        await Comms.http_put('/mind/memories', data,\n            (response) => {\n                dispatch({type: SET_MEMORIES_PAGINATED, data: response.data});\n            },\n            (errStr) => {\n                dispatch({type: ERROR, title: \"Error\", error: errStr})\n            }\n        )\n    }\n}\n\nasync function _getSynonyms(organisation_id, kb_id, prev_id, synonym_filter, synonym_page_size, dispatch) {\n    if (organisation_id.length > 0 && kb_id.length > 0) {\n        dispatch({type: BUSY, busy: true});\n        const data = {\n            \"organisationId\": organisation_id, \"kbId\": kb_id, \"prevId\": prev_id ? prev_id : \"\",\n            \"filter\": synonym_filter, \"pageSize\": synonym_page_size\n        };\n        await Comms.http_put('/language/synonyms', data,\n            (response) => {\n                dispatch({type: SET_SYNONYMS_PAGINATED, data: response.data});\n            },\n            (errStr) => {\n                dispatch({type: ERROR, title: \"Error\", error: errStr})\n            }\n        )\n    }\n}\n\nasync function _getSemantics(organisation_id, kb_id, prev_word, semantic_filter, semantic_page_size, dispatch) {\n    if (organisation_id.length > 0 && kb_id.length > 0) {\n        dispatch({type: BUSY, busy: true});\n        await Comms.http_put('/language/semantics', {\n                \"organisationId\": organisation_id, \"kbId\": kb_id, \"prevWord\": prev_word ? prev_word : \"\",\n                \"filter\": semantic_filter, \"pageSize\": semantic_page_size\n            },\n            (response) => {\n                dispatch({type: SET_SEMANTICS_PAGINATED, data: response.data});\n            },\n            (errStr) => {\n                dispatch({type: ERROR, title: \"Error\", error: errStr})\n            }\n        )\n    }\n}\n\nasync function _getSemanticDisplayCategories(organisation_id, kb_id, dispatch) {\n    if (organisation_id.length > 0 && kb_id.length > 0) {\n        dispatch({type: BUSY, busy: true});\n        await Comms.http_get('/language/semantic-display-categories/' +\n            encodeURIComponent(organisation_id) + '/' + encodeURIComponent(kb_id),\n            (response) => {\n                dispatch({type: SET_SEMANTIC_DISPLAY_LIST,\n                    semantic_display_category_list: response.data.semanticDisplayCategoryList,\n                    defined_semantic_list: response.data.semanticList\n                });\n            },\n            (errStr) => {\n                dispatch({type: ERROR, title: \"Error\", error: errStr})\n            });\n    } else {\n        dispatch({type: SET_SEMANTIC_DISPLAY_LIST, semantic_display_category_list: [], defined_semantic_list: []});\n    }\n}\n\nasync function _getSynSets(organisation_id, kb_id, page, page_size, filter, dispatch) {\n    if (organisation_id.length > 0 && kb_id.length > 0) {\n        dispatch({type: BUSY, busy: true});\n        await Comms.http_put('/language/find-syn-sets', {\n                \"organisationId\": organisation_id, \"kbId\": kb_id,\n                \"page\": page, \"pageSize\": page_size, \"filter\": filter\n            },\n            (response) => {\n                dispatch({type: SET_SYNSET_LIST, synset_list: response.data.list, total_size: response.data.totalSize});\n            },\n            (errStr) => {\n                dispatch({type: ERROR, title: \"Error\", error: errStr})\n            }\n        )\n    }\n}\n\nasync function _getReports(organisation_id, kb_id, year, month, top, dispatch) {\n    if (organisation_id.length > 0 && kb_id.length > 0) {\n        dispatch({type: BUSY, busy: true});\n        await Comms.http_get('/stats/stats/' + encodeURIComponent(organisation_id) + '/' +\n                                encodeURIComponent(kb_id) + '/' +\n                                encodeURIComponent(year) + '/' +\n                                encodeURIComponent(month) + '/' +\n                                encodeURIComponent(top),\n            (response) => {\n                const report = response.data;\n                const access_frequency = GraphHelper.setupList(report.accessFrequency, \"access\");\n                const general_statistics = GraphHelper.setupMap(report.generalStatistics, \"system\");\n                const query_word_frequency = GraphHelper.setupMap(report.queryWordFrequency, \"queries (top \" + top + \")\");\n                const file_type_statistics = GraphHelper.setupMap(report.fileTypeStatistics, \"file types\");\n                dispatch({type: SET_REPORT_GRAPHS, access_frequency: access_frequency,\n                                    general_statistics: general_statistics,\n                                    query_word_frequency: query_word_frequency,\n                                    file_type_statistics: file_type_statistics\n                });\n            },\n            (errStr) => { dispatch({type: ERROR, title: \"Error\", error: errStr})}\n        )\n    } else {\n        dispatch({type: SET_REPORT_GRAPHS,\n            access_frequency: GraphHelper.setupList([]),\n            general_statistics: GraphHelper.setupMap([]), query_word_frequency: GraphHelper.setupMap([]),\n            file_type_statistics: GraphHelper.setupMap([])});\n    }\n}\n\n// get list of logs\nasync function _getLogList(organisation_id, year, month, day, hour, hours, dispatch) {\n    if (year && month && day && hour && hours) {\n        dispatch({type: BUSY, busy: true});\n        await Comms.http_get('/stats/system-logs/' + encodeURIComponent(organisation_id) + '/' + encodeURIComponent(year) + '/' +\n            encodeURIComponent(month) + '/' + encodeURIComponent(day) + '/' + encodeURIComponent(hour) + '/' + encodeURIComponent(hours),\n            (response) => {\n                const data = response.data;\n                dispatch({\n                    type: SET_LOG_LIST, log_list: data.logList,\n                })\n            },\n            (errStr) => {\n                dispatch({type: ERROR, title: \"Error\", error: errStr})\n            }\n        )\n    }\n}\n\nasync function _getHtmlNotifications(dispatch) {\n    if (window.Notification && window.Notification.permission !== \"granted\" &&\n        window.Notification.requestPermission) {\n        //if it is not supported request permission\n        window.Notification.requestPermission(function (status) {\n            if (Notification.permission !== status) {\n                Notification.permission = status;\n            }\n            dispatch({type: GET_HTML5_NOTIFICATIONS, status: status});\n        })\n    }\n}\n\n\nasync function _getEdgeDevices(organisation_id, dispatch) {\n    dispatch({type: BUSY, busy: true});\n    await Comms.http_get('/edge/' + encodeURIComponent(organisation_id),\n        (response) => {\n            dispatch({type: GET_EDGE_DEVICES, edge_device_list: response.data});\n        },\n        (errStr) => { dispatch({type: ERROR, title: \"Error\", error: errStr}) }\n    )\n}\n\n\nasync function _getEdgeDeviceCommands(organisation_id, edge_id, dispatch) {\n    dispatch({type: BUSY, busy: true});\n    await Comms.http_get('/edge/command/' + encodeURIComponent(organisation_id) + '/' + encodeURIComponent(edge_id),\n        (response) => {\n            dispatch({type: GET_EDGE_DEVICE_COMMANDS, edge_device_command_list: response.data});\n        },\n        (errStr) => { dispatch({type: ERROR, title: \"Error\", error: errStr}) }\n    )\n}\n\n\nasync function _getGroups(organisation_id, dispatch) {\n    if (organisation_id.length > 0) {\n        dispatch({type: BUSY, busy: true});\n        await Comms.http_get('/auth/groups/' + encodeURIComponent(organisation_id),\n            (response) => {\n                dispatch({type: SET_GROUPS_PAGINATED, group_list: response.data.groupList});\n            },\n            (errStr) => {\n                dispatch({type: ERROR, title: \"Error\", error: errStr})\n            }\n        )\n    }\n}\n\n\n\n// setup a page for different tabs\nasync function _setupPage(selected_tab, dispatch, getState) {\n    const organisation_id = getState().appReducer.selected_organisation_id;\n    const organisation = getState().appReducer.selected_organisation;\n    const kb_id = getState().appReducer.selected_knowledgebase_id;\n\n    // don't reset when you're the operator\n    if (selected_tab !== 'operator' &&\n        (!organisation_id || organisation_id.length === 0 || !organisation || organisation.length === 0)) {\n        dispatch({type: RESET_SELECTED_KB});\n    }\n\n    const user_list = getState().appReducer.user_list;\n    const group_list = getState().appReducer.group_list;\n\n    if (selected_tab === 'users' && organisation_id !== '') {\n        const filter = getState().appReducer.user_filter;\n\n        await _getUsers(organisation_id, filter, dispatch);\n        if (!group_list || group_list.length === 0) {\n            await _getGroups(organisation_id, dispatch);\n        }\n\n    } else if (selected_tab === 'groups' && organisation_id !== '') {\n        if (!user_list || user_list.length === 0) {\n            const user_filter = getState().appReducer.user_filter;\n            await _getUsers(organisation_id, user_filter, dispatch);\n        }\n        await _getGroups(organisation_id, dispatch);\n\n    } else if (selected_tab === 'organisations') {\n        const name = getState().appReducer.selected_organisation;\n        const id = getState().appReducer.selected_organisation_id;\n        const filter = getState().appReducer.organisation_filter;\n        await _getOrganisationList(name, id, filter, true, dispatch);\n\n    } else if (selected_tab === 'edge devices' && organisation_id !== '') {\n        await _getEdgeDevices(organisation_id, dispatch);\n\n    } else if (selected_tab === 'edge commands' && organisation_id !== '') {\n        const edge_id = getState().appReducer.selected_edge_device_id;\n        if (edge_id && edge_id !== '') {\n            await _getEdgeDeviceCommands(organisation_id, edge_id, dispatch);\n        }\n\n    } else if (selected_tab === 'knowledge bases') {\n        const id = getState().appReducer.selected_organisation_id;\n        if (id !== '') {\n            await _getKnowledgeBases(id, dispatch);\n        }\n\n    } else if (selected_tab === 'document sources' && organisation_id !== '' && kb_id !== '') {\n        if (!user_list || user_list.length === 0) {\n            const user_filter = getState().appReducer.user_filter;\n            await _getUsers(organisation_id, user_filter, dispatch);\n        }\n\n        if (!group_list || group_list.length === 0) {\n            await _getGroups(organisation_id, dispatch);\n        }\n\n        await _getCrawlers(organisation_id, kb_id, dispatch);\n\n    } else if (selected_tab === 'documents' && organisation_id !== '' && kb_id !== '') {\n        dispatch({type:RESET_DOCUMENT_PAGINATION});\n        dispatch({type: BUSY, busy: true});\n        const document_filter = getState().appReducer.document_filter;\n        const document_previous = 'null'; // reset\n        const document_page_size = getState().appReducer.document_page_size;\n        await _getDocuments(organisation_id, kb_id, document_previous, document_page_size, document_filter, dispatch);\n\n    } else if (selected_tab === 'syn-sets' && organisation_id !== '' && kb_id !== '') {\n        const page = getState().appReducer.synset_page;\n        const page_size = getState().appReducer.synset_page_size;\n        const filter = getState().appReducer.synset_filter;\n        await _getSynSets(organisation_id, kb_id, page, page_size, filter, dispatch);\n        dispatch({type: RESET_SYNSET_PAGINATION});\n\n    } else if (selected_tab === 'inventory' && organisation_id !== '' && kb_id !== '') {\n        await _getInventorizeList(organisation_id, kb_id, dispatch);\n\n    } else if (selected_tab === 'reports' && organisation_id !== '' && kb_id !== '') {\n        const top = getState().appReducer.report_num_items;\n        const date = new Date(getState().appReducer.report_date);\n        const year = date.getFullYear();\n        const month = date.getMonth() + 1;\n        await _getReports(organisation_id, kb_id, year, month, top, dispatch);\n\n    } else if (selected_tab === 'logs' && organisation_id !== '') {\n        const date = new Date(getState().appReducer.log_date);\n        const year = date.getFullYear();\n        const month = date.getMonth() + 1;\n        const day = date.getDate();\n        const hour = date.getHours();\n        const hours = getState().appReducer.log_hours;\n        await _getLogList(organisation_id, year, month, day, hour, hours, dispatch);\n\n    } else if (selected_tab === 'mind') {\n        dispatch({type:RESET_MEMORIES_PAGINATION});\n        dispatch({type: BUSY, busy: true});\n        const mind_item_filter = getState().appReducer.mind_item_filter;\n        const mind_item_page_size = getState().appReducer.mind_item_page_size;\n        if (organisation_id && kb_id) {\n            await _getMemories(organisation_id, kb_id, null, mind_item_filter, mind_item_page_size, dispatch);\n        } else {\n            dispatch({type: SET_MEMORIES_PAGINATED, data: {mindItemList: [], numMindItems: 0, filter: ''} });\n        }\n\n    } else if (selected_tab === 'synonyms') {\n        dispatch({type: RESET_SYNONYM_PAGINATION});\n        dispatch({type: BUSY, busy: true});\n        const synonym_filter = getState().appReducer.synonym_filter;\n        const synonym_page_size = getState().appReducer.synonym_page_size;\n        if (organisation_id && kb_id) {\n            await _getSynonyms(organisation_id, kb_id, \"\", synonym_filter, synonym_page_size, dispatch);\n        } else {\n            dispatch({type: SET_SYNONYMS_PAGINATED, data: {synonymList: [], numSynonyms: 0, filter: \"\"} });\n        }\n\n    } else if (selected_tab === 'semantics') {\n        dispatch({type: RESET_SEMANTIC_PAGINATION});\n        dispatch({type: BUSY, busy: true});\n        const semantic_filter = getState().appReducer.semantic_filter;\n        const semantic_page_size = getState().appReducer.semantic_page_size;\n        if (organisation_id && kb_id) {\n            await _getSemantics(organisation_id, kb_id, \"\", semantic_filter, semantic_page_size, dispatch);\n        } else {\n            dispatch({type: SET_SEMANTICS_PAGINATED, data: {semanticList: [], numSemantics: 0, filter: \"\"} });\n        }\n\n    } else if (selected_tab === 'active directory') {\n        dispatch({type: BUSY, busy: true});\n        if (organisation_id && kb_id) {\n            await _getDomains(organisation_id, kb_id, 0, 10, '', dispatch);\n        } else {\n            dispatch({type: GET_DOMAINS, domain_list: []});\n        }\n    }\n\n}\n\n\n// application creators / actions\nexport const appCreators = {\n\n    // do a sign in\n    signIn: (email, password, callback) => async (dispatch, getState) => {\n        if (email && email.length > 0 && password && password.length > 0) {\n            dispatch({type: BUSY, busy: true});\n            await Comms.http_post('/auth/sign-in', {\"email\": email, \"password\": password},\n                (response) => {\n                    dispatch({type: SIGN_IN, session: response.data.session, user: response.data.user});\n                    if (callback) {\n                        callback();\n                    }\n                },\n                (errStr) => { dispatch({type: ERROR, title: \"Error\", error: errStr}) }\n            )\n        } else {\n            dispatch({type: ERROR, title: \"Error\", error: 'please complete and check all fields'});\n        }\n    },\n\n    signOut: () => async (dispatch, getState) => {\n        appCreators.setLogRefresh(0);   // stop log fetching\n        dispatch({type: SIGN_OUT});\n    },\n\n    notBusy: () => async (dispatch, getState) => {\n        dispatch({type: BUSY, busy: false});\n    },\n\n    setTheme: (theme) => async (dispatch, getState) => {\n        dispatch({type: SET_THEME, theme: theme});\n    },\n\n    passwordResetRequest: (email) => ({type: PASSWORD_RESET_REQUEST}),\n\n    resetPassword: (email, newPassword, reset_id) => ({type: RESET_PASSWORD, email, newPassword, reset_id}),\n\n    getStats: (year, month, top) => ({type: GET_STATS, year, month, top}),\n\n    getOSMessages: () => ({type: GET_OS_MESSAGES}),\n\n    restoreSystem: (data) => ({type: RESTORE_SYSTEM, data}),\n\n    getLicense: () => async (dispatch, getState) => {\n        dispatch({type: BUSY, busy: true});\n        await Comms.http_get('/auth/license',\n            (response) => {\n                dispatch(({type: GET_LICENSE, license: response.data}));\n            },\n            (errStr) => { dispatch({type: ERROR, title: \"Error\", error: errStr}) }\n        )\n    },\n\n    installLicense: (license_str) => async (dispatch, getState) => {\n        dispatch({type: BUSY, busy: true});\n        await Comms.http_post('/auth/license', {\"license\": license_str},\n            (response) => {\n                dispatch(({type: GET_LICENSE, license: response.data}));\n            },\n            (errStr) => { dispatch({type: ERROR, title: \"Error\", error: errStr}) }\n        )\n    },\n\n    setError: (title, error) => ({type: ERROR, title, error}),\n\n    closeError: () => ({type: CLOSE_ERROR}),\n\n    // set the active tab\n    selectTab: (selected_tab) => async (dispatch, getState) => {\n        dispatch(({type: SELECT_TAB, selected_tab}));\n        await _setupPage(selected_tab, dispatch, getState);\n    },\n\n    setupManager: () => async (dispatch, getState) => {\n        dispatch(({type: SELECT_TAB, selected_tab: 'knowledge bases'}));\n        await _getOrganisationList('', '', '', true, dispatch);\n        await _setupPage('knowledge bases', dispatch, getState);\n    },\n\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////\n    // Notification system\n\n    hideNotifications: () => ({type: HIDE_NOTIFICATIONS}),\n\n    showNotifications: () => ({type: SHOW_NOTIFICATIONS}),\n\n    getNotifications: () => async (dispatch, getState) => {\n        if (!notification_busy) {\n            notification_busy = true;\n            const nl = getState().appReducer.notification_list;\n            await Comms.http_get('/stats/stats/os',\n                (response) => {\n                    const notification_list = Api.merge_notifications(nl, response.data.notificationList);\n                    if (notification_list.length !== nl.length) { // update?\n                        dispatch(({type: SET_NOTIFICATION_LIST, notification_list}));\n                    }\n                    notification_busy = false;\n                },\n                (errStr) => {\n                    console.log(\"error getting os-messages:\" + errStr);\n                    notification_busy = false;\n                }\n            )\n        }\n    },\n\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////\n    // Organisations\n\n    // retrieve list of all organisations from server\n    getOrganisationList: () => async (dispatch, getState) => {\n        dispatch({type: BUSY, busy: true});\n        const name = getState().appReducer.selected_organisation;\n        const id = getState().appReducer.selected_organisation_id;\n        const filter = getState().appReducer.organisation_filter;\n        await _getOrganisationList(name, id, filter, true, dispatch);\n    },\n\n    // select an organisation for operational stuff\n    selectOrganisation: (data) => async (dispatch, getState) => {\n        if (data && data.id && data.id.length > 0) {\n            dispatch({type: BUSY, busy: true});\n            dispatch(({type: SELECT_ORGANISATION, name: data.name, id: data.id}));\n            await _getKnowledgeBases(data.id, dispatch);\n\n            const selected_tab = getState().appReducer.selected_tab;\n            await _setupPage(selected_tab, dispatch, getState);\n        } else {\n            dispatch(({type: SELECT_ORGANISATION, name: \"\", id: \"\"}));\n        }\n    },\n\n    setOrganisationFilter: (filter) => ({type: SET_ORGANISATION_FILTER, filter}),\n\n    // organisation save\n    updateOrganisation: (organisation) => async (dispatch, getState) => {\n        dispatch({type: BUSY, busy: true});\n        await Comms.http_put('/auth/organisation',\n            organisation,\n            (response) => {\n                dispatch(({type: UPDATE_ORGANISATION, organisation: response.data}));\n            },\n            (errStr) => { dispatch({type: ERROR, title: \"Error\", error: errStr}) }\n        )\n    },\n\n    // organisation remove\n    deleteOrganisation: (organisation_id) => async (dispatch, getState) => {\n        dispatch({type: BUSY, busy: true});\n        const name = getState().appReducer.selected_organisation;\n        const id = getState().appReducer.selected_organisation_id;\n        const filter = getState().appReducer.organisation_filter;\n        await Comms.http_delete('/auth/organisation/' + encodeURIComponent(organisation_id),\n            (response) => {\n                _getOrganisationList(name, id, filter, false, dispatch);\n                // did we just delete the active organisation?\n                if (id === organisation_id) {\n                    dispatch({type: SELECT_ORGANISATION, name: '', id: ''});\n                    dispatch({type: GET_KNOWLEDGE_BASES, knowledge_base_list: []});\n                }\n            },\n            (errStr) => { dispatch({type: ERROR, title: \"Error\", error: errStr}) }\n        )\n    },\n\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////\n    // Knowledge bases\n\n    // selected a knowledge base for operational stuff\n    selectEdgeDevice: (data) => async (dispatch, getState) => {\n        if (data && data.id && data.id.length > 0) {\n            dispatch({type: BUSY, busy: true});\n            const selected_tab = getState().appReducer.selected_tab;\n            dispatch({type: SELECT_EDGE_DEVICE, name: data.name, id: data.id});\n            await _setupPage(selected_tab, dispatch, getState);\n        } else {\n            dispatch({type: SELECT_EDGE_DEVICE, name: \"\", id: \"\"});\n        }\n    },\n\n    // selected a knowledge base for operational stuff\n    selectKnowledgeBase: (data) => async (dispatch, getState) => {\n        if (data && data.id && data.id.length > 0) {\n            dispatch({type: BUSY, busy: true});\n            const selected_tab = getState().appReducer.selected_tab;\n            dispatch({type: SELECT_KNOWLEDGE_BASE, name: data.name, id: data.id});\n            await _setupPage(selected_tab, dispatch, getState);\n        } else {\n            dispatch({type: SELECT_KNOWLEDGE_BASE, name: \"\", id: \"\"});\n        }\n    },\n\n    // retrieve list of all organisations from server\n    getKnowledgeBases: () => async (dispatch, getState) => {\n        await _getKnowledgeBases(getState().appReducer.selected_organisation_id, dispatch);\n    },\n\n    optimizeIndexes: (organisation_id, kb_id) => async (dispatch, getState) => {\n        dispatch({type: BUSY, busy: true});\n        const data = {'organisationId': organisation_id, 'kbId': kb_id};\n        await Comms.http_put('/language/optimize-indexes', data,\n            (response) => {\n                dispatch({type: BUSY, busy: false});\n            },\n            (errStr) => { dispatch({type: ERROR, title: \"Error\", error: errStr}) }\n        )\n    },\n\n    removeOptimizedIndexes: (organisation_id, kb_id) => async (dispatch, getState) => {\n        dispatch({type: BUSY, busy: true});\n        await Comms.http_delete('/language/optimize-indexes/' + encodeURIComponent(organisation_id) + '/' + encodeURIComponent(kb_id),\n            (response) => {\n                dispatch({type: BUSY, busy: false});\n            },\n            (errStr) => { dispatch({type: ERROR, title: \"Error\", error: errStr}) }\n        )\n    },\n\n    removeAllIndexes: (organisation_id, kb_id) => async (dispatch, getState) => {\n        dispatch({type: BUSY, busy: true});\n        await Comms.http_delete('/language/indexes/' + encodeURIComponent(organisation_id) + '/' + encodeURIComponent(kb_id),\n            (response) => {\n                dispatch({type: BUSY, busy: false});\n            },\n            (errStr) => { dispatch({type: ERROR, title: \"Error\", error: errStr}) }\n        )\n    },\n\n    deleteKnowledgeBase: (organisation_id, kb_id) => async (dispatch, getState) => {\n        dispatch({type: BUSY, busy: true});\n        await Comms.http_delete('/knowledgebase/' + encodeURIComponent(organisation_id) + '/' + encodeURIComponent(kb_id),\n            (response) => {\n                _getKnowledgeBases(organisation_id, dispatch);\n                dispatch({type: SELECT_KNOWLEDGE_BASE, name: '', id: ''});\n            },\n            (errStr) => { dispatch({type: ERROR, title: \"Error\", error: errStr}) }\n        )\n    },\n\n    updateKnowledgeBase: (organisation_id, kb_id, name, email, security_id, enabled, max_queries_per_day,\n                          analytics_window_size_in_months, operator_enabled, capacity_warnings,\n                          created, index_optimization_schedule, dms_index_schedule) => async (dispatch, getState) => {\n        dispatch({type: BUSY, busy: true});\n        const payload = {\"kbId\": kb_id, \"organisationId\": organisation_id, \"name\": name, \"email\": email,\n            \"securityId\": security_id, \"maxQueriesPerDay\": max_queries_per_day, \"enabled\": enabled,\n            \"analyticsWindowInMonths\": analytics_window_size_in_months, \"operatorEnabled\": operator_enabled,\n            \"capacityWarnings\": capacity_warnings, \"created\": created, \"indexOptimizationSchedule\": index_optimization_schedule,\n            \"dmsIndexSchedule\": dms_index_schedule};\n        await Comms.http_put('/knowledgebase/', payload,\n            (response) => {\n                _getKnowledgeBases(organisation_id, dispatch);\n            },\n            (errStr) => { dispatch({type: ERROR, title: \"Error\", error: errStr}) }\n        )\n    },\n\n    createInventory: () => async (dispatch, getState) => {\n        dispatch({type: BUSY, busy: true});\n        const organisation_id = getState().appReducer.selected_organisation_id;\n        const kb_id = getState().appReducer.selected_knowledgebase_id;\n        await Comms.http_post('/document/inventorize',\n            {\"kbId\": kb_id, \"organisationId\": organisation_id},\n            (response) => {\n                _getInventorizeList(organisation_id, kb_id, dispatch);\n            },\n            (errStr) => {\n                dispatch({type: ERROR, title: \"Error\", error: errStr})\n            }\n        )\n    },\n\n    getInventoryList: () => async (dispatch, getState) => {\n        const organisation_id = getState().appReducer.selected_organisation_id;\n        const kb_id = getState().appReducer.selected_knowledgebase_id;\n        await _getInventorizeList(organisation_id, kb_id, dispatch);\n    },\n\n    // remove a document (delete) from the system\n    deleteInventoryItem: (dateTime) => async (dispatch, getState) => {\n        const organisation_id = getState().appReducer.selected_organisation_id;\n        const kb_id = getState().appReducer.selected_knowledgebase_id;\n        if (organisation_id.length > 0 && kb_id.length > 0) {\n            dispatch({type: BUSY, busy: true});\n            const full_url = '/document/parquet/' + encodeURIComponent(organisation_id) + '/' +\n                                encodeURIComponent(kb_id) + '/' + encodeURIComponent(dateTime);\n            await Comms.http_delete(full_url,\n                (response) => {\n                    _getInventorizeList(organisation_id, kb_id, dispatch);\n                },\n                (errStr) => { dispatch({type: ERROR, title: \"Error\", error: errStr}) }\n            )\n        }\n    },\n\n    getInventoryBusy: () => async (dispatch, getState) => {\n        const organisation_id = getState().appReducer.selected_organisation_id;\n        const kb_id = getState().appReducer.selected_knowledgebase_id;\n        if (organisation_id.length > 0 && kb_id.length > 0) {\n            dispatch({type: BUSY, busy: true});\n            await Comms.http_get('/document/inventorize/' + encodeURIComponent(organisation_id),\n                (response) => {\n                    dispatch({type: GET_INVENTORIZE_BUSY, busy: response.data});\n                },\n                (errStr) => {\n                    dispatch({type: ERROR, title: \"Error\", error: errStr})\n                }\n            )\n        }\n    },\n\n    forceInventoryBusy: () => (dispatch, getState) => {\n        dispatch({type: GET_INVENTORIZE_BUSY, busy: true});\n    },\n\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////\n    // Users\n\n    getUsers: (organisation_id) => async (dispatch, getState) => {\n        const filter = getState().appReducer.user_filter;\n        await _getUsers(organisation_id, filter, dispatch)\n    },\n\n    updateUser: (organisation_id, user_id, name, surname, email, password, role_list, kb_list, group_list) => async (dispatch, getState) => {\n        dispatch({type: BUSY, busy: true});\n        const filter = getState().appReducer.user_filter;\n        const signed_in_user = getState().appReducer.user;\n        const actual_role_data = [];\n        for (const roleStr of role_list) {\n            actual_role_data.push({\"userId\": user_id, \"organisationId\": organisation_id, \"role\": roleStr});\n        }\n        const actual_kb_list_data = [];\n        for (const kb of kb_list) {\n            actual_kb_list_data.push({\"userId\": user_id, \"organisationId\": organisation_id, \"kbId\": kb.kbId});\n        }\n        await Comms.http_put('/auth/user/' + encodeURIComponent(organisation_id),\n            {\"id\": user_id,\n                \"password\": password,\n                \"firstName\": name,\n                \"surname\": surname,\n                \"email\": email,\n                \"roles\": actual_role_data,\n                \"operatorKBList\": actual_kb_list_data,\n                \"groupList\": group_list,\n            },\n            (response) => {\n                const user = response.data;\n                let had_operator_role = false;\n                let has_operator_role = false;\n                if (user && signed_in_user && user.id === signed_in_user.id) {\n                    for (const role of signed_in_user.roles) {\n                        if (role && role.role === 'operator') {\n                            had_operator_role = true;\n                        }\n                    }\n                    for (const role of user.roles) {\n                        if (role && role.role === 'operator') {\n                            has_operator_role = true;\n                        }\n                    }\n                    // we need to ask if they want to receive html events!\n                    if (!had_operator_role && has_operator_role) {\n                        _getHtmlNotifications(dispatch);\n                    }\n                    dispatch({type: UPDATE_USER, user: user});\n                }\n                _getUsers(organisation_id, filter, dispatch)\n\n            },\n            (errStr) => { dispatch({type: ERROR, title: \"Error\", error: errStr}) }\n        )\n    },\n\n    deleteUser: (organisation_id, user_id) => async (dispatch, getState) => {\n        dispatch({type: BUSY, busy: true});\n        const filter = getState().appReducer.user_filter;\n        await Comms.http_delete('/auth/organisation/user/' + encodeURIComponent(user_id) + '/' +\n            encodeURIComponent(organisation_id),\n            (response) => {\n                _getUsers(organisation_id, filter, dispatch)\n            },\n            (errStr) => { dispatch({type: ERROR, title: \"Error\", error: errStr}) }\n        )\n    },\n\n    setUserFilter: (filter) => ({type: SET_USER_FILTER, filter}),\n\n    uploadProgram: (payload) => async (dispatch, getState) => {\n        dispatch({type: BUSY, busy: true});\n        dispatch(({type: UPLOADING_PROGRAM}));\n        await Comms.http_put('/knowledgebase/upload', payload,\n            (response) => {\n                dispatch(({type: UPLOADING_PROGRAM_FINISHED}));\n            },\n            (errStr) => { dispatch({type: ERROR, title: \"Error\", error: errStr}) }\n        );\n    },\n\n    // {\"organisationId\": \"\", \"kbId\": \"\", \"sid\": \"\", \"sourceId\": 0, \"data\": \";base64,\" + data}\n    wpUploadArchive: (payload) => async (dispatch, getState) => {\n        dispatch({type: BUSY, busy: true});\n        dispatch(({type: UPLOADING_WP_ARCHIVE}));\n        // get the sid\n        const kb_list = getState().appReducer.knowledge_base_list;\n        let sid = \"\";\n        if (kb_list) {\n            for (const kb of kb_list) {\n                if (kb.kbId === payload.kbId) {\n                    sid = kb.securityId;\n                    break;\n                }\n            }\n        }\n        payload.sid = sid;\n        await Comms.http_post('/crawler/admin/upload/archive', payload,\n            (response) => {\n                dispatch(({type: UPLOADING_WP_ARCHIVE_FINISHED}));\n            },\n            (errStr) => { dispatch({type: ERROR, title: \"Error\", error: errStr}) }\n        );\n    },\n\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////\n    // Crawlers\n\n    getCrawlers: (organisation_id, kb_id) => async (dispatch, getState) => {\n        await _getCrawlers(organisation_id, kb_id, dispatch)\n    },\n\n    updateCrawler: (crawler) => async (dispatch, getState) => {\n        dispatch({type: BUSY, busy: true});\n        const organisation_id = getState().appReducer.selected_organisation_id;\n        const kb_id = getState().appReducer.selected_knowledgebase_id;\n        await Comms.http_post('/crawler/crawler', crawler,\n            (response) => {\n                _getCrawlers(organisation_id, kb_id, dispatch)\n            },\n            (errStr) => { dispatch({type: ERROR, title: \"Error\", error: errStr}) }\n        )\n    },\n\n    deleteCrawler: (crawler_id) => async (dispatch, getState) => {\n        dispatch({type: BUSY, busy: true});\n        const organisation_id = getState().appReducer.selected_organisation_id;\n        const kb_id = getState().appReducer.selected_knowledgebase_id;\n        await Comms.http_delete('/crawler/crawler/' + encodeURIComponent(organisation_id) + '/' +\n                                    encodeURIComponent(kb_id) + '/' + encodeURIComponent(crawler_id),\n            (response) => {\n                _getCrawlers(organisation_id, kb_id, dispatch)\n            },\n            (errStr) => { dispatch({type: ERROR, title: \"Error\", error: errStr}) }\n        )\n    },\n\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////\n    // Active Directory / Domains\n\n    getDomains: (organisation_id, kb_id) => async (dispatch, getState) => {\n        await _getDomains(organisation_id, kb_id, 0, 10, \"\", dispatch);\n    },\n\n    updateDomain: (domain) => async (dispatch, getState) => {\n        dispatch({type: BUSY, busy: true});\n        const organisation_id = getState().appReducer.selected_organisation_id;\n        const kb_id = getState().appReducer.selected_knowledgebase_id;\n        await Comms.http_put('/knowledgebase/domain', domain,\n            (response) => {\n                _getDomains(organisation_id, kb_id, 0, 10, \"\", dispatch);\n            },\n            (errStr) => { dispatch({type: ERROR, title: \"Error\", error: errStr}) }\n        )\n    },\n\n    testDomain: (domain) => async (dispatch, getState) => {\n        dispatch({type: BUSY, busy: true});\n        await Comms.http_put('/knowledgebase/domain/test', domain,\n            (response) => {\n                dispatch({type: ERROR, title: \"Success\", error: \"Connected Successfully\"});\n            },\n            (errStr) => { dispatch({type: ERROR, title: \"Error\", error: errStr}) }\n        )\n    },\n\n\n    deleteDomain: (domain_id) => async (dispatch, getState) => {\n        dispatch({type: BUSY, busy: true});\n        const organisation_id = getState().appReducer.selected_organisation_id;\n        const kb_id = getState().appReducer.selected_knowledgebase_id;\n        await Comms.http_delete('/knowledgebase/domain/' + encodeURIComponent(organisation_id) + '/' +\n            encodeURIComponent(kb_id) + '/' + encodeURIComponent(domain_id),\n            (response) => {\n                _getDomains(organisation_id, kb_id, 0, 10, \"\", dispatch);\n            },\n            (errStr) => { dispatch({type: ERROR, title: \"Error\", error: errStr}) }\n        )\n    },\n\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////\n    // Documents\n\n    getDocuments: () => async (dispatch, getState) => {\n        dispatch({type: BUSY, busy: true});\n        const organisation_id = getState().appReducer.selected_organisation_id;\n        const kb_id = getState().appReducer.selected_knowledgebase_id;\n        const document_filter = getState().appReducer.document_filter;\n        const prev_document_filter = getState().appReducer.prev_document_filter;\n        const document_page_size = getState().appReducer.document_page_size;\n        let document_previous = getState().appReducer.document_previous;\n        // filter criteria changed?\n        if (prev_document_filter !== document_filter) {\n            dispatch({type:RESET_DOCUMENT_PAGINATION});\n            document_previous = null;\n        }\n        if (organisation_id && kb_id) {\n            await _getDocuments(organisation_id, kb_id, document_previous, document_page_size, document_filter, dispatch);\n        }\n    },\n\n    // update the document search filter (document_filter)\n    setDocumentFilter: (filter) => ({type: SET_DOCUMENT_FILTER, filter}),\n\n    // remove a document (delete) from the system\n    deleteDocument: (url, crawler_id) => async (dispatch, getState) => {\n        dispatch({type: BUSY, busy: true});\n        const organisation_id = getState().appReducer.selected_organisation_id;\n        const kb_id = getState().appReducer.selected_knowledgebase_id;\n        const document_filter = getState().appReducer.document_filter;\n        const prev_document_filter = getState().appReducer.prev_document_filter;\n        const document_page_size = getState().appReducer.document_page_size;\n        let document_previous = getState().appReducer.document_previous;\n        if (organisation_id && kb_id && url) {\n            // filter criteria changed?\n            if (prev_document_filter !== document_filter) {\n                dispatch({type:RESET_DOCUMENT_PAGINATION});\n                document_previous = null;\n            }\n            const full_url = '/document/document/' + encodeURIComponent(organisation_id) + '/' +\n                                    encodeURIComponent(kb_id) + '/' + btoa(unescape(encodeURIComponent(url))) + '/' +\n                                    encodeURIComponent(crawler_id);\n            await Comms.http_delete(full_url,\n                (response) => {\n                    _getDocuments(organisation_id, kb_id, document_previous, document_page_size, document_filter, dispatch);\n                },\n                (errStr) => { dispatch({type: ERROR, title: \"Error\", error: errStr}) }\n            )\n        }\n    },\n\n    // update the document paged set\n    setDocumentPage: (page) => async (dispatch, getState) => {\n        dispatch({type: BUSY, busy: true});\n        const organisation_id = getState().appReducer.selected_organisation_id;\n        const kb_id = getState().appReducer.selected_knowledgebase_id;\n        const document_filter = getState().appReducer.document_filter;\n        const document_page_size = getState().appReducer.document_page_size;\n\n        const prevPage = getState().appReducer.document_page;\n        const document_nav_list = getState().appReducer.document_nav_list;\n        const document_list = getState().appReducer.document_list;\n        if (page !== prevPage && page >= 0) {\n            if (page > prevPage) {\n                if (document_list.length > 0) {\n                    const prev_url = document_list[document_list.length - 1].url;\n                    dispatch(({type: SET_DOCUMENT_PAGE, page, prev_url}));\n                    await _getDocuments(organisation_id, kb_id, prev_url, document_page_size, document_filter, dispatch);\n                }\n            } else if (page < document_nav_list.length) {\n                const prev_url = document_nav_list[page];\n                dispatch(({type: SET_DOCUMENT_PAGE, page, prev_url}));\n                await _getDocuments(organisation_id, kb_id, prev_url, document_page_size, document_filter, dispatch);\n            }\n        }\n    },\n\n    // update the document paged set\n    setDocumentPageSize: (page_size) => async (dispatch, getState) => {\n        dispatch({type: BUSY, busy: true});\n        dispatch(({type: SET_DOCUMENT_PAGE_SIZE, page_size}));\n\n        const organisation_id = getState().appReducer.selected_organisation_id;\n        const kb_id = getState().appReducer.selected_knowledgebase_id;\n        const document_filter = getState().appReducer.document_filter;\n        await _getDocuments(organisation_id, kb_id, null, page_size, document_filter, dispatch);\n    },\n\n\n    // refresh / re-parse etc. a document\n    reprocessDocument: (document) => async (dispatch, getState) => {\n        const document_filter = getState().appReducer.document_filter;\n        const document_previous = getState().appReducer.document_previous;\n        const page_size = getState().appReducer.document_page_size;\n        dispatch({type: BUSY, busy: true});\n        await Comms.http_post('/document/reprocess', {\n                \"organisationId\": document.organisationId, \"kbId\": document.kbId, \"url\": document.url\n            },\n            (response) => {\n                _getDocuments(document.organisationId, document.kbId, document_previous, page_size, document_filter, dispatch);\n            },\n            (errStr) => { dispatch({type: ERROR, title: \"Error\", error: errStr}) }\n        )\n    },\n\n\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////\n    // mind items\n\n    getMindItems: () => async (dispatch, getState) => {\n        dispatch({type: BUSY, busy: true});\n        const organisation_id = getState().appReducer.selected_organisation_id;\n        const kb_id = getState().appReducer.selected_knowledgebase_id;\n        const mind_item_filter = getState().appReducer.mind_item_filter;\n        const prev_mind_item_filter = getState().appReducer.prev_mind_item_filter;\n        const mind_item_page_size = getState().appReducer.mind_item_page_size;\n        let prev_id = getState().appReducer.mind_item_previous;\n        // filter criteria changed?\n        if (prev_mind_item_filter !== mind_item_filter) {\n            dispatch({type:RESET_DOCUMENT_PAGINATION});\n            prev_id = null;\n        }\n        if (organisation_id && kb_id) {\n            await _getMemories(organisation_id, kb_id, prev_id, mind_item_filter, mind_item_page_size, dispatch);\n        }\n    },\n\n    // update the mind-item paged set\n    setMindItemPage: (page) => async (dispatch, getState) => {\n        dispatch({type: BUSY, busy: true});\n        const organisation_id = getState().appReducer.selected_organisation_id;\n        const kb_id = getState().appReducer.selected_knowledgebase_id;\n        const mi_filter = getState().appReducer.mind_item_filter;\n        const mi_page_size = getState().appReducer.mind_item_page_size;\n        const prevPage = getState().appReducer.mind_item_page;\n        const mind_item_nav_list = getState().appReducer.mind_item_nav_list;\n        const mind_item_list = getState().appReducer.mind_item_list;\n        if (page !== prevPage && page >= 0) {\n            if (page > prevPage) {\n                if (mind_item_list.length > 0) {\n                    const prev_id = mind_item_list[mind_item_list.length - 1].id;\n                    dispatch(({type: SET_MEMORIES_PAGE, page, prev_id}));\n                    await _getMemories(organisation_id, kb_id, prev_id, mi_filter, mi_page_size, dispatch);\n                }\n            } else if (page < mind_item_nav_list.length) {\n                const prev_id = mind_item_nav_list[page];\n                dispatch(({type: SET_MEMORIES_PAGE, page, prev_id}));\n                await _getMemories(organisation_id, kb_id, prev_id, mi_filter, mi_page_size, dispatch);\n            }\n        }\n    },\n\n    // update the mind-item paged set\n    setMindItemPageSize: (page_size) => async (dispatch, getState) => {\n        dispatch({type: BUSY, busy: true});\n        dispatch(({type: SET_MEMORIES_PAGE_SIZE, page_size}));\n\n        const organisation_id = getState().appReducer.selected_organisation_id;\n        const kb_id = getState().appReducer.selected_knowledgebase_id;\n        const mi_filter = getState().appReducer.mind_item_filter;\n        await _getMemories(organisation_id, kb_id, null, mi_filter, page_size, dispatch);\n    },\n\n\n    // update the mind item search filter\n    setMindItemFilter: (filter) => ({type: SET_MEMORY_FILTER, filter}),\n\n    // remove a mind item by id\n    deleteMemory: (id) => async (dispatch, getState) => {\n        dispatch({type: BUSY, busy: true});\n        const organisation_id = getState().appReducer.selected_organisation_id;\n        const kb_id = getState().appReducer.selected_knowledgebase_id;\n        const mind_item_filter = getState().appReducer.mind_item_filter;\n        const mind_item_page_size = getState().appReducer.mind_item_page_size;\n        const prev_id = getState().appReducer.mind_item_previous;\n        await Comms.http_delete('/mind/memory/' + encodeURIComponent(organisation_id) + '/' +\n            encodeURIComponent(kb_id) + '/' + encodeURIComponent(id),\n            (response) => {\n                _getMemories(organisation_id, kb_id, prev_id, mind_item_filter, mind_item_page_size, dispatch);\n            },\n            (errStr) => { dispatch({type: ERROR, title: \"Error\", error: errStr}) }\n        )\n    },\n\n    // remove a mind item by id\n    deleteAllMemories: () => async (dispatch, getState) => {\n        dispatch({type: BUSY, busy: true});\n        const organisation_id = getState().appReducer.selected_organisation_id;\n        const kb_id = getState().appReducer.selected_knowledgebase_id;\n        const mind_item_filter = getState().appReducer.mind_item_filter;\n        const mind_item_page_size = getState().appReducer.mind_item_page_size;\n        const prev_id = getState().appReducer.mind_item_previous;\n        await Comms.http_delete('/mind/delete-all/' + encodeURIComponent(organisation_id) + '/' + encodeURIComponent(kb_id),\n            (response) => {\n                _getMemories(organisation_id, kb_id, prev_id, mind_item_filter, mind_item_page_size, dispatch);\n            },\n            (errStr) => { dispatch({type: ERROR, title: \"Error\", error: errStr}) }\n        )\n    },\n\n    // save a mind item to simsage\n    saveMemory: (memory) => async (dispatch, getState) => {\n        dispatch({type: BUSY, busy: true});\n        const organisation_id = getState().appReducer.selected_organisation_id;\n        const kb_id = getState().appReducer.selected_knowledgebase_id;\n        const mind_item_filter = getState().appReducer.mind_item_filter;\n        const mind_item_page_size = getState().appReducer.mind_item_page_size;\n        const prev_id = getState().appReducer.mind_item_previous;\n        await Comms.http_put('/mind/memory/' + encodeURIComponent(organisation_id) + '/' +\n            encodeURIComponent(kb_id), memory,\n            (response) => {\n                _getMemories(organisation_id, kb_id, prev_id, mind_item_filter, mind_item_page_size, dispatch);\n            },\n            (errStr) => { dispatch({type: ERROR, title: \"Error\", error: errStr}) }\n        )\n    },\n\n    mindQuery: () => async (dispatch, getState) => {\n        dispatch({type: BUSY, busy: true});\n        const organisation_id = getState().appReducer.selected_organisation_id;\n        const kb_id = getState().appReducer.selected_knowledgebase_id;\n        const bot_query_page_size = getState().appReducer.bot_query_page_size;\n        const bot_query = getState().appReducer.bot_query;\n        if (bot_query.length > 0) {\n            const data = {\n                organisationId: organisation_id,\n                kbList: [{'kbId': kb_id, 'sid': ''}],\n                query: bot_query,\n                numResults: bot_query_page_size,\n                scoreThreshold: 0.01,\n            };\n            await Comms.http_put('/mind/query', data,\n                (response) => {\n                    dispatch({type: SET_MIND_QUERY_LIST, mind_result_list: response.data});\n                },\n                (errStr) => {\n                    dispatch({type: ERROR, title: \"Error\", error: errStr})\n                }\n            );\n        } else {\n            dispatch({type: SET_MIND_QUERY_LIST, mind_result_list: []});\n        }\n    },\n\n    setBotQueryString: (query) => async (dispatch, getState) => {\n        dispatch({type: SET_MIND_QUERY_STRING, bot_query: query});\n    },\n\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////\n    // synonyms\n\n    getSynonyms: () => async (dispatch, getState) => {\n        dispatch({type: BUSY, busy: true});\n        const organisation_id = getState().appReducer.selected_organisation_id;\n        const kb_id = getState().appReducer.selected_knowledgebase_id;\n        const synonym_filter = getState().appReducer.synonym_filter;\n        const prev_synonym_filter = getState().appReducer.prev_synonym_filter;\n        const synonym_page_size = getState().appReducer.synonym_page_size;\n        let prev_id = getState().appReducer.synonym_prev_id;\n        // filter criteria changed?\n        if (prev_synonym_filter !== synonym_filter) {\n            dispatch({type: RESET_SYNONYM_PAGINATION});\n            prev_id = null;\n        }\n        if (organisation_id && kb_id) {\n            await _getSynonyms(organisation_id, kb_id, prev_id, synonym_filter, synonym_page_size, dispatch);\n        }\n    },\n\n    // update the synonym page\n    setSynonymPage: (page) => async (dispatch, getState) => {\n        dispatch({type: BUSY, busy: true});\n        const organisation_id = getState().appReducer.selected_organisation_id;\n        const kb_id = getState().appReducer.selected_knowledgebase_id;\n        const synonym_filter = getState().appReducer.synonym_filter;\n        const synonym_page_size = getState().appReducer.synonym_page_size;\n        const prevPage = getState().appReducer.synonym_page;\n        const synonym_nav_list = getState().appReducer.synonym_nav_list;\n        const synonym_list = getState().appReducer.synonym_list;\n        if (page !== prevPage && page >= 0) {\n            if (page > prevPage) {\n                if (synonym_list.length > 0) {\n                    const prev_id = synonym_list[synonym_list.length - 1].id;\n                    dispatch(({type: SET_SYNONYM_PAGE, page, prev_id}));\n                    await _getSynonyms(organisation_id, kb_id, prev_id, synonym_filter, synonym_page_size, dispatch);\n                }\n            } else if (page < synonym_nav_list.length) {\n                const prev_id = synonym_nav_list[page];\n                dispatch(({type: SET_SYNONYM_PAGE, page, prev_id}));\n                await _getSynonyms(organisation_id, kb_id, prev_id, synonym_filter, synonym_page_size, dispatch);\n            }\n        }\n    },\n\n    // update the synonym list page-size\n    setSynonymPageSize: (page_size) => async (dispatch, getState) => {\n        dispatch({type: BUSY, busy: true});\n        dispatch(({type: SET_SYNONYM_PAGE_SIZE, page_size}));\n\n        const organisation_id = getState().appReducer.selected_organisation_id;\n        const kb_id = getState().appReducer.selected_knowledgebase_id;\n        const synonym_filter = getState().appReducer.synonym_filter;\n        await _getSynonyms(organisation_id, kb_id, null, synonym_filter, page_size, dispatch);\n    },\n\n    deleteSynonym: (id) => async (dispatch, getState) => {\n        dispatch({type: BUSY, busy: true});\n        const organisation_id = getState().appReducer.selected_organisation_id;\n        const kb_id = getState().appReducer.selected_knowledgebase_id;\n        const prev_id = getState().appReducer.synonym_prev_id;\n        const filter = getState().appReducer.synonym_filter;\n        const page_size = getState().appReducer.synonym_page_size;\n        await Comms.http_delete('/language/delete-synonym/' + encodeURIComponent(organisation_id) + '/' +\n                                    encodeURIComponent(kb_id) + '/' + encodeURIComponent(id),\n            (response) => {\n                _getSynonyms(organisation_id, kb_id, prev_id, filter, page_size, dispatch);\n            },\n            (errStr) => { dispatch({type: ERROR, title: \"Error\", error: errStr})}\n        )\n    },\n\n    saveSynonym: (synonym) => async (dispatch, getState) => {\n        dispatch({type: BUSY, busy: true});\n        const organisation_id = getState().appReducer.selected_organisation_id;\n        const kb_id = getState().appReducer.selected_knowledgebase_id;\n        const prev_id = getState().appReducer.synonym_prev_id;\n        const filter = getState().appReducer.synonym_filter;\n        const page_size = getState().appReducer.synonym_page_size;\n        Comms.http_put('/language/save-synonym/' + encodeURIComponent(organisation_id) + '/' +\n                            encodeURIComponent(kb_id), synonym,\n            (response) => {\n                _getSynonyms(organisation_id, kb_id, prev_id, filter, page_size, dispatch);\n            },\n            (errStr) => { dispatch({type: ERROR, title: \"Error\", error: errStr})}\n        )\n    },\n\n    setSynonymFilter: (filter) => async (dispatch, getState) => {\n        dispatch({type: SET_SYNONYM_FILTER, synonym_filter: filter});\n    },\n\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////\n    // semantics\n\n    getSemantics: () => async (dispatch, getState) => {\n        dispatch({type: BUSY, busy: true});\n        const organisation_id = getState().appReducer.selected_organisation_id;\n        const kb_id = getState().appReducer.selected_knowledgebase_id;\n        const semantic_filter = getState().appReducer.semantic_filter;\n        const prev_semantic_filter = getState().appReducer.prev_semantic_filter;\n        const semantic_page_size = getState().appReducer.semantic_page_size;\n        let prev_word = getState().appReducer.semantic_prev_word;\n        // filter criteria changed?\n        if (prev_semantic_filter !== semantic_filter) {\n            dispatch({type: RESET_SEMANTIC_PAGINATION});\n            prev_word = null;\n        }\n        if (organisation_id && kb_id) {\n            await _getSemantics(organisation_id, kb_id, prev_word, semantic_filter, semantic_page_size, dispatch);\n        }\n    },\n\n    // update the semantic page\n    setSemanticPage: (page) => async (dispatch, getState) => {\n        dispatch({type: BUSY, busy: true});\n        const organisation_id = getState().appReducer.selected_organisation_id;\n        const kb_id = getState().appReducer.selected_knowledgebase_id;\n        const semantic_filter = getState().appReducer.semantic_filter;\n        const semantic_page_size = getState().appReducer.semantic_page_size;\n        const prevPage = getState().appReducer.semantic_page;\n        const semantic_nav_list = getState().appReducer.semantic_nav_list;\n        const semantic_list = getState().appReducer.semantic_list;\n        if (page !== prevPage && page >= 0) {\n            if (page > prevPage) {\n                if (semantic_list.length > 0) {\n                    const prev_word = semantic_list[semantic_list.length - 1].word;\n                    dispatch(({type: SET_SEMANTIC_PAGE, page, prev_word: prev_word}));\n                    await _getSemantics(organisation_id, kb_id, prev_word, semantic_filter, semantic_page_size, dispatch);\n                }\n            } else if (page < semantic_nav_list.length) {\n                const prev_word = semantic_nav_list[page];\n                dispatch(({type: SET_SEMANTIC_PAGE, page, prev_word}));\n                await _getSemantics(organisation_id, kb_id, prev_word, semantic_filter, semantic_page_size, dispatch);\n            }\n        }\n    },\n\n    // update the semantic page-size\n    setSemanticPageSize: (page_size) => async (dispatch, getState) => {\n        dispatch({type: BUSY, busy: true});\n        dispatch(({type: SET_SEMANTIC_PAGE_SIZE, page_size}));\n\n        const organisation_id = getState().appReducer.selected_organisation_id;\n        const kb_id = getState().appReducer.selected_knowledgebase_id;\n        const semantic_filter = getState().appReducer.semantic_filter;\n        await _getSemantics(organisation_id, kb_id, null, semantic_filter, page_size, dispatch);\n    },\n\n    deleteSemantic: (word) => async (dispatch, getState) => {\n        dispatch({type: BUSY, busy: true});\n        const organisation_id = getState().appReducer.selected_organisation_id;\n        const kb_id = getState().appReducer.selected_knowledgebase_id;\n        const filter = getState().appReducer.semantic_filter;\n        const prev_word = getState().appReducer.semantic_prev_word;\n        const page_size = getState().appReducer.semantic_page_size;\n        await Comms.http_delete('/language/delete-semantic/' + encodeURIComponent(organisation_id) + '/' +\n                                    encodeURIComponent(kb_id) + '/' + encodeURIComponent(word),\n            (response) => {\n                _getSemantics(organisation_id, kb_id, prev_word, filter, page_size, dispatch);\n            },\n            (errStr) => { dispatch({type: ERROR, title: \"Error\", error: errStr})}\n        )\n    },\n\n    findSemantics: () => async (dispatch, getState) => {\n        const organisation_id = getState().appReducer.selected_organisation_id;\n        const kb_id = getState().appReducer.selected_knowledgebase_id;\n        const filter = getState().appReducer.semantic_filter;\n        const page_size = getState().appReducer.semantic_page_size;\n        const prev_word = getState().appReducer.semantic_prev_word;\n        await _getSemantics(organisation_id, kb_id, prev_word, filter, page_size, dispatch);\n    },\n\n    saveSemantic: (semantic) => async (dispatch, getState) => {\n        dispatch({type: BUSY, busy: true});\n        const organisation_id = getState().appReducer.selected_organisation_id;\n        const kb_id = getState().appReducer.selected_knowledgebase_id;\n        const filter = getState().appReducer.semantic_filter;\n        const page_size = getState().appReducer.semantic_page_size;\n        const prev_word = '';\n        Comms.http_put('/language/save-semantic/' + encodeURIComponent(organisation_id) + '/' +\n                        encodeURIComponent(kb_id), semantic,\n            (response) => {\n                _getSemantics(organisation_id, kb_id, prev_word, filter, page_size, dispatch);\n            },\n            (errStr) => { dispatch({type: ERROR, title: \"Error\", error: errStr})}\n        )\n    },\n\n    setSemanticFilter: (filter) => async (dispatch, getState) => {\n        dispatch({type: SET_SEMANTIC_FILTER, semantic_filter: filter});\n    },\n\n    getSemanticDisplayCategories: () => async (dispatch, getState) => {\n        const organisation_id = getState().appReducer.selected_organisation_id;\n        const kb_id = getState().appReducer.selected_knowledgebase_id;\n        await _getSemanticDisplayCategories(organisation_id, kb_id, dispatch);\n    },\n\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////\n    // semantic display categories\n\n    saveSemanticDisplayCategory: (prevDisplayName, displayName, semanticList) => async (dispatch, getState) => {\n        const organisation_id = getState().appReducer.selected_organisation_id;\n        const kb_id = getState().appReducer.selected_knowledgebase_id;\n        await Comms.http_put('/language/semantic-display-category/',\n            {\"organisationId\": organisation_id, \"kbId\": kb_id, \"prevDisplayName\": prevDisplayName,\n                    \"displayName\": displayName, \"semanticList\": semanticList},\n            (response) => {\n                _getSemanticDisplayCategories(organisation_id, kb_id, dispatch);\n            },\n            (errStr) => { dispatch({type: ERROR, title: \"Error\", error: errStr})}\n        )\n    },\n\n    deleteSemanticDisplayCategory: (displayName) => async (dispatch, getState) => {\n        const organisation_id = getState().appReducer.selected_organisation_id;\n        const kb_id = getState().appReducer.selected_knowledgebase_id;\n        await Comms.http_delete('/language/semantic-display-category/' + encodeURIComponent(organisation_id) + '/' +\n            encodeURIComponent(kb_id) + '/' + encodeURIComponent(displayName),\n            (response) => {\n                _getSemanticDisplayCategories(organisation_id, kb_id, dispatch);\n            },\n            (errStr) => { dispatch({type: ERROR, title: \"Error\", error: errStr})}\n        )\n    },\n\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////\n    // syn-sets\n\n    deleteSynSet: (lemma) => async (dispatch, getState) => {\n        dispatch({type: BUSY, busy: true});\n        const organisation_id = getState().appReducer.selected_organisation_id;\n        const kb_id = getState().appReducer.selected_knowledgebase_id;\n        const page = getState().appReducer.synset_page;\n        const page_size = getState().appReducer.synset_page_size;\n        const filter = getState().appReducer.synset_filter;\n        await Comms.http_delete('/language/delete-syn-set/' + encodeURIComponent(organisation_id) + '/' +\n            encodeURIComponent(kb_id) + '/' + encodeURIComponent(lemma),\n            (response) => {\n                _getSynSets(organisation_id, kb_id, page, page_size, filter, dispatch);\n            },\n            (errStr) => { dispatch({type: ERROR, title: \"Error\", error: errStr})}\n        )\n    },\n\n    findSynSets: () => async (dispatch, getState) => {\n        const organisation_id = getState().appReducer.selected_organisation_id;\n        const kb_id = getState().appReducer.selected_knowledgebase_id;\n        const page = getState().appReducer.synset_page;\n        const page_size = getState().appReducer.synset_page_size;\n        const filter = getState().appReducer.synset_filter;\n        await _getSynSets(organisation_id, kb_id, page, page_size, filter, dispatch);\n    },\n\n    saveSynSet: (syn_set) => async (dispatch, getState) => {\n        dispatch({type: BUSY, busy: true});\n        const organisation_id = getState().appReducer.selected_organisation_id;\n        const kb_id = getState().appReducer.selected_knowledgebase_id;\n        const page = getState().appReducer.synset_page;\n        const page_size = getState().appReducer.synset_page_size;\n        const filter = getState().appReducer.synset_filter;\n        Comms.http_put('/language/save-syn-set/' + encodeURIComponent(organisation_id) + '/' +\n            encodeURIComponent(kb_id), syn_set,\n            (response) => {\n                _getSynSets(organisation_id, kb_id, page, page_size, filter, dispatch);\n            },\n            (errStr) => { dispatch({type: ERROR, title: \"Error\", error: errStr})}\n        )\n    },\n\n    setSynSetFilter: (filter) => async (dispatch, getState) => {\n        dispatch({type: SET_SYNSET_FILTER, synset_filter: filter});\n    },\n\n    // update the syn-set page\n    setSynSetPage: (page) => async (dispatch, getState) => {\n        dispatch({type: BUSY, busy: true});\n        const organisation_id = getState().appReducer.selected_organisation_id;\n        const kb_id = getState().appReducer.selected_knowledgebase_id;\n        const page_size = getState().appReducer.synset_page_size;\n        const filter = getState().appReducer.synset_filter;\n\n        dispatch(({type: SET_SYNSET_PAGE, page: page}));\n        await _getSynSets(organisation_id, kb_id, page, page_size, filter, dispatch);\n    },\n\n    // update the syn-set pagination size\n    setSynSetPageSize: (page_size) => async (dispatch, getState) => {\n        dispatch({type: BUSY, busy: true});\n        dispatch(({type: SET_SYNSET_PAGE_SIZE, page_size: page_size}));\n\n        const organisation_id = getState().appReducer.selected_organisation_id;\n        const kb_id = getState().appReducer.selected_knowledgebase_id;\n        const page = getState().appReducer.synset_page;\n        const filter = getState().appReducer.synset_filter;\n\n        await _getSynSets(organisation_id, kb_id, page, page_size, filter, dispatch);\n    },\n\n\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////\n    // reports\n\n    setReportDate: (report_date) => ({type: SET_REPORT_DATE, report_date}),\n\n    getReports: () => async (dispatch, getState) => {\n        const organisation_id = getState().appReducer.selected_organisation_id;\n        const kb_id = getState().appReducer.selected_knowledgebase_id;\n        const top = getState().appReducer.report_num_items;\n        const date = new Date(getState().appReducer.report_date);\n        const year = date.getFullYear();\n        const month = date.getMonth() + 1;\n        await _getReports(organisation_id, kb_id, year, month, top, dispatch);\n    },\n\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////\n    // operator\n\n    // add a new message to the list\n    processOperatorMessage: (message) => ({type: PROCESS_OPERATOR_MESSAGE, message}),\n\n    // set connected status of operator\n    setOperatorConnected: (connected) => ({type: SET_OPERATOR_CONNECTED, connected}),\n\n    // add a conversation to the list\n    addConversation: (operatorId, item) => ({type: ADD_CONVERSATION, operatorId, item}),\n\n    markConversationItemUsed: (operatorId, id) => ({type: MARK_CONVERSATION_USED, operatorId, id}),\n\n    operatorReady: (operatorId, ready) => ({type: OPERATOR_READY, operatorId, ready}),\n\n    setOperatorAnswer: (operatorId, id, answer) => ({type: SET_OPERATOR_ANSWER, operatorId, id, answer}),\n\n    setOperatorQuestion: (operatorId, id, question) => ({type: SET_OPERATOR_QUESTION, operatorId, id, question}),\n\n    clearPreviousAnswer: (operatorId) => ({type: CLEAR_PREVIOUS_ANSWER, operatorId}),\n\n    clearUser: (operatorId) => ({type: OPERATOR_CLEAR_USER, operatorId}),\n\n    addOperator: () => async (dispatch, getState) => {\n        const operators = getState().appReducer.operators;\n        if (operators.length < MAX_OPERATORS) {\n            dispatch({type: ADD_OPERATOR});\n        }\n    },\n\n    removeOperator: (id) => ({type: REMOVE_OPERATOR, id: id}),\n\n    stopClientTyping: (operator_id) => ({type: STOP_CLIENT_TYPING, operator_id: operator_id}),\n\n    // POST data to url for operator processing\n    sendOperatorMessage: (url, data) => async (dispatch, getState) => {\n        await Comms.http_post(url, data,\n            (response) => {\n            },\n            (errStr) => {\n                dispatch({type: ERROR, title: \"Error\", error: errStr})\n            }\n        )\n    },\n\n    //////////////////////////////////////////////////////////////////////////////////////////////////////////\n    // log list\n\n    getLogs: () => async (dispatch, getState) => {\n        const organisation_id = getState().appReducer.selected_organisation_id;\n        const date = new Date(getState().appReducer.log_date);\n        const year = date.getFullYear();\n        const month = date.getMonth() + 1;\n        const day = date.getDate();\n        const hour = date.getHours();\n        const hours = getState().appReducer.log_hours;\n        await _getLogList(organisation_id, year, month, day, hour, hours, dispatch);\n    },\n\n    setLogDate: (log_date) => ({type: SET_LOG_DATE, log_date}),\n\n    setLogHours: (log_hours) => ({type: SET_LOG_HOURS, log_hours}),\n\n    setLogType: (log_type) => ({type: SET_LOG_TYPE, log_type}),\n\n    setLogService: (log_service) => ({type: SET_LOG_SERVICE, log_service}),\n\n    setLogRefresh: (log_refresh) => async (dispatch, getState) => {\n        dispatch({type: SET_LOG_REFRESH, log_refresh})\n    },\n\n    restartService: (subSystem) => async (dispatch, getState) => {\n        const session = getState().appReducer.session;\n        const organisation_id = getState().appReducer.selected_organisation_id;\n        await Comms.http_get('/stats/restart-service/' + encodeURIComponent(session.id) + '/' + encodeURIComponent(organisation_id) + '/' + encodeURIComponent(subSystem),\n            (response) => {},\n            (errStr) => {\n                dispatch({type: ERROR, title: \"Error\", error: errStr})\n            }\n        )\n    },\n\n    //////////////////////////////////////////////////////////////////////////////////////////////////////////\n    // Edge devices\n\n    // retrieve list of all organisations from server\n    getEdgeDevices: () => async (dispatch, getState) => {\n        await _getEdgeDevices(getState().appReducer.selected_organisation_id, dispatch);\n    },\n\n    deleteEdgeDevice: (organisation_id, edge_id) => async (dispatch, getState) => {\n        dispatch({type: BUSY, busy: true});\n        await Comms.http_delete('/edge/' + encodeURIComponent(organisation_id) + '/' + encodeURIComponent(edge_id),\n            (response) => {\n                _getEdgeDevices(organisation_id, dispatch);\n            },\n            (errStr) => { dispatch({type: ERROR, title: \"Error\", error: errStr}) }\n        )\n    },\n\n    updateEdgeDevice: (organisation_id, edge_id, name, created) => async (dispatch, getState) => {\n        dispatch({type: BUSY, busy: true});\n        const payload = {\"edgeId\": edge_id, \"organisationId\": organisation_id, \"name\": name, \"created\": created};\n        await Comms.http_put('/edge/', payload,\n            (response) => {\n                _getEdgeDevices(organisation_id, dispatch);\n            },\n            (errStr) => { dispatch({type: ERROR, title: \"Error\", error: errStr}) }\n        )\n    },\n\n    updateEdgeDeviceCommand: (organisation_id, edge_id, command, parameters, created) => async (dispatch, getState) => {\n        dispatch({type: BUSY, busy: true});\n        const payload = {\"edgeId\": edge_id, \"organisationId\": organisation_id, \"command\": command,\n                         \"parameters\": parameters, \"created\": created, \"executed\": 0, \"result\": \"\"};\n        await Comms.http_put('/edge/command', payload,\n            (response) => {\n                _getEdgeDeviceCommands(organisation_id, edge_id, dispatch);\n            },\n            (errStr) => { dispatch({type: ERROR, title: \"Error\", error: errStr}) }\n        )\n    },\n\n    deleteEdgeDeviceCommand: (organisation_id, edge_id, created) => async (dispatch, getState) => {\n        dispatch({type: BUSY, busy: true});\n        await Comms.http_delete('/edge/command/' + encodeURIComponent(organisation_id) + '/' + encodeURIComponent(edge_id) + '/' + encodeURIComponent(created),\n            (response) => {\n                _getEdgeDeviceCommands(organisation_id, edge_id, dispatch);\n            },\n            (errStr) => { dispatch({type: ERROR, title: \"Error\", error: errStr}) }\n        )\n    },\n\n    //////////////////////////////////////////////////////////////////////////////////////////////////////////\n    // html 5 notification permissions\n\n    getHtml5Notifications: () => async (dispatch, getState) => {\n        await _getHtmlNotifications(dispatch);\n    },\n\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////\n    // restore a text file on the server\n\n    restore: (base64_text) => async (dispatch, getState) => {\n        dispatch({type: BUSY, busy: true});\n        const organisation_id = getState().appReducer.selected_organisation_id;\n        await Comms.http_put('/backup/restore', {\"organisationId\": organisation_id,\"data\": base64_text},\n            (response) => {\n                dispatch({type: BUSY, busy: false});\n            },\n            (errStr) => {\n                dispatch({type: ERROR, title: \"Error\", error: errStr})\n            })\n    },\n\n    ///////////////////////////////////////////////////////////////////////////////////////////////////////////\n    // groups\n\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////\n    // semantics\n\n    getGroups: () => async (dispatch, getState) => {\n        dispatch({type: BUSY, busy: true});\n        const organisation_id = getState().appReducer.selected_organisation_id;\n        if (organisation_id) {\n            await _getGroups(organisation_id, dispatch);\n        }\n    },\n\n    // update the group page\n    setGroupPage: (page) => async (dispatch, getState) => {\n        dispatch({type: BUSY, busy: true});\n        dispatch(({type: SET_GROUP_PAGE, page}));\n    },\n\n    // update the semantic page-size\n    setGroupPageSize: (page_size) => async (dispatch, getState) => {\n        dispatch({type: BUSY, busy: true});\n        dispatch(({type: SET_GROUP_PAGE_SIZE, page_size}));\n    },\n\n    deleteGroup: (name) => async (dispatch, getState) => {\n        dispatch({type: BUSY, busy: true});\n        const organisation_id = getState().appReducer.selected_organisation_id;\n        await Comms.http_delete('/auth/group/' + encodeURIComponent(organisation_id) + '/' + encodeURIComponent(name),\n            (response) => {\n                _getGroups(organisation_id, dispatch);\n            },\n            (errStr) => { dispatch({type: ERROR, title: \"Error\", error: errStr})}\n        )\n    },\n\n    saveGroup: (name, user_id_list) => async (dispatch, getState) => {\n        dispatch({type: BUSY, busy: true});\n        const organisation_id = getState().appReducer.selected_organisation_id;\n        const data = {\n            organisationId: organisation_id,\n            name: name,\n            userIdList: user_id_list\n        }\n        Comms.http_put('/auth/group',\n            data,\n            (response) => {\n                _getGroups(organisation_id, dispatch);\n            },\n            (errStr) => { dispatch({type: ERROR, title: \"Error\", error: errStr})}\n        )\n    },\n\n    setGroupFilter: (filter) => async (dispatch, getState) => {\n        dispatch({type: SET_GROUP_FILTER, group_filter: filter});\n    },\n\n\n};\n\n","import React, {Component} from 'react';\n\nimport {connect} from \"react-redux\";\nimport {bindActionCreators} from \"redux\";\nimport {appCreators} from \"../actions/appActions\";\n\nimport '../css/app-menu.css';\n\nexport class AppMenu extends Component {\n    constructor(props){\n        super(props);\n\n        this.state={\n            title: props.title,\n            signed_in: props.signed_in,\n            showDocumentation: window.location.toString().indexOf('/#/documentation') < 0,\n        };\n    }\n    componentDidMount() {\n        if (this.props.theme === 'light') {\n            document.getElementById('ss-body').className = 'light';\n        } else {\n            document.getElementById('ss-body').className = 'dark';\n        }\n    }\n    goWeb() {\n        window.location = window.ENV.web_base;\n    }\n    signOut() {\n        this.props.signOut();\n        window.location = \"/#/\";\n    }\n    // get the right logo file depending on the theme\n    getLogo() {\n        if (this.props.theme === 'dark') {\n            return \"../images/simsage-logo-white-no-strapline.svg\";\n        }\n        return \"../images/simsage-logo-no-strapline.svg\"; // default\n    }\n    flipTheme() {\n        if (this.props.theme !== 'light') {\n            this.props.setTheme('light');\n            document.getElementById('ss-body').className = 'light';\n        } else {\n            this.props.setTheme('dark');\n            document.getElementById('ss-body').className = 'dark';\n        }\n    }\n    render() {\n        const theme = this.props.theme;\n        return (\n            <div className={\"app-menu menu-padding no-select\"}>\n                <div className=\"logo-box\">\n                    <img alt=\"SimSage\" title=\"Search less; find more.\" className=\"logo\" src={this.getLogo()} onClick={() => this.goWeb()} />\n                </div>\n                <div>\n\n                    {\n                        !this.state.signed_in &&\n                        <span className=\"home-image-container\">\n                            <img src={theme === 'light' ? \"../images/home.svg\" : \"../images/home-light.svg\"} alt=\"home\" title=\"home\" onClick={() => this.goWeb()}\n                                 className=\"home-image\" />\n                             <div className=\"version-text\">version {window.ENV.version}</div>\n                        </span>\n                    }\n                    {\n                        this.state.signed_in &&\n                        <div className=\"sign-out-image-container\">\n                            <img src={theme === 'light' ? \"../images/sign-out.svg\" : \"../images/sign-out-light.svg\"} alt=\"sign-out\" title=\"sign-out\"\n                                 onClick={() => { this.signOut() }} className=\"sign-out-image\" />\n                        </div>\n                    }\n\n                    {\n                        <div className={this.state.signed_in ? \"theme-select-logged-in\" : \"theme-select\"}>\n                            <div className=\"form-check form-switch\">\n                                <input className=\"form-check-input\" type=\"checkbox\" id=\"flexSwitchCheckChecked\" checked={this.props.theme === 'light'}\n                                       title=\"change the SimSage theme from dark to light or vice versa\"\n                                       onChange={() => this.flipTheme()} />\n                            </div>\n                        </div>\n                    }\n\n                </div>\n                <br clear=\"both\" />\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = function(state) {\n    return {\n        theme: state.appReducer.theme,\n    }\n};\n\nexport default connect(\n    mapStateToProps,\n    dispatch => bindActionCreators(appCreators, dispatch)\n)(AppMenu);\n","import React from 'react';\n\n// display error dialog\nexport class ErrorDialog extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            open: false,\n            title: props.title,\n            message: props.message,\n            callback: props.callback,\n            has_error: false,\n        };\n    }\n    componentDidCatch(error, info) {\n        this.setState({ has_error: true });\n        console.log(error, info);\n    }\n    handleOk() {\n        this.setState({open: false});\n        if (this.state.callback) {\n            this.state.callback();\n        }\n    }\n    UNSAFE_componentWillReceiveProps(nextProps) {\n        // see if we have data to start this dialog\n        if (nextProps !== null && nextProps.message) {\n            this.setState({\n                open: (nextProps.message.length > 0),\n                message: nextProps.message,\n                title: nextProps.title\n            })\n        }\n    }\n    render() {\n        if (this.state.has_error) {\n            return <h1>error-dialog.js: Something went wrong.</h1>;\n        }\n        if (!this.state.open) {\n            return (<div />)\n        }\n        return (\n            <div className=\"modal\" tabIndex=\"-1\" role=\"dialog\" style={{display: \"inline\", zIndex: \"9999\"}}>\n                <div className={\"modal-dialog modal-dialog-centered modal-xl\"} role=\"document\">\n                    <div className=\"modal-content shadow p-3 mb-5 bg-white rounded\">\n\n                        <div className=\"modal-header\">\n                            <div>{this.state.title}</div>\n                        </div>\n                        <div className=\"modal-body\">\n                            <div>\n                                {this.state.message}\n                            </div>\n                        </div>\n                        <div className=\"modal-footer\">\n                            <button type=\"submit\" className=\"btn btn-primary btn-block\" onClick={() => this.handleOk()}>Ok</button>\n                        </div>\n\n                    </div>\n                </div>\n            </div>\n        );\n    }\n};\n\nexport default ErrorDialog;\n","import React, {Component} from 'react';\n\nimport AppMenu from './app-menu';\nimport ErrorDialog from '../common/error-dialog';\nimport {clearState} from '../reducers/stateLoader';\n\nimport {connect} from \"react-redux\";\nimport {bindActionCreators} from \"redux\";\nimport {appCreators} from \"../actions/appActions\";\n\nimport '../css/sign-in.css';\n\n\n// sign-in screen\nexport class SignIn extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state={\n            email: '',\n            password: '',\n        }\n    }\n    componentDidMount() {\n        clearState();\n        this.props.notBusy();\n    }\n    componentDidCatch(error, info) {\n        this.props.setError(error, info);\n        console.log(error, info);\n    }\n    handleClick() {\n        this.props.signIn(this.state.email, this.state.password, () => {\n            window.location = '/#/home';\n        });\n    }\n    onKeyPress(event) {\n        if (event.key === \"Enter\") {\n            this.handleClick();\n        }\n    }\n    render() {\n        return (\n            <div>\n                <AppMenu signed_in={false} />\n                <ErrorDialog title={this.props.error_title}\n                             theme={this.props.theme}\n                             message={this.props.error}\n                             callback={() => this.props.closeError()} />\n\n                {\n                    this.props.busy &&\n                    <div className={this.props.theme === 'light' ? \"busy\" : \"busyDark\"} />\n                }\n\n\n                <div className=\"auth-wrapper\">\n                    <div className=\"auth-inner\">\n                        <div>\n                            <h3>Sign In</h3>\n\n                            <div className=\"form-group\">\n                                <label>Email address</label>\n                                <input type=\"email\" className=\"form-control\" placeholder=\"Enter email\" autoFocus={true}\n                                       value={this.state.email}\n                                       onKeyPress={(event) => this.onKeyPress(event)}\n                                       onChange = {(event) => this.setState({email: event.target.value}) }\n                                />\n                            </div>\n\n                            <div className=\"form-group\">\n                                <label>Password</label>\n                                <input type=\"password\" className=\"form-control\" placeholder=\"Enter password\"\n                                       value={this.state.password}\n                                       onKeyPress={(event) => this.onKeyPress(event)}\n                                       onChange = {(event) => this.setState({password: event.target.value}) }\n                                />\n                            </div>\n\n                            <div className=\"form-group spacer-height\">\n                            </div>\n\n                            <button type=\"submit\" className=\"btn btn-primary btn-block\" onClick={() => this.handleClick()}>Submit</button>\n\n                            <p className=\"forgot-password text-right\">\n                                Forgot <span className=\"forgot-password-link\" onClick={() => window.location = '/#/reset-password-request'}>password?</span>\n                            </p>\n\n                            <p className=\"forgot-password text-right\">\n                                <span className=\"forgot-password-link\" onClick={() => window.location = '/#/foss-license'}>open-source licenses</span>\n                            </p>\n\n                        </div>\n\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n}\n\n\n\nconst mapStateToProps = function(state) {\n    return {\n        error: state.appReducer.error,\n        error_title: state.appReducer.error_title,\n        busy: state.appReducer.busy,\n        theme: state.appReducer.theme,\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    dispatch => bindActionCreators(appCreators, dispatch)\n)(SignIn);\n","import React, {Component} from 'react';\n\nimport Api from '../common/api'\nimport AppMenu from './app-menu';\nimport ErrorDialog from '../common/error-dialog';\nimport {connect} from \"react-redux\";\nimport {bindActionCreators} from \"redux\";\nimport {appCreators} from \"../actions/appActions\";\n\nimport '../css/sign-in.css';\n\n\nexport class ResetPasswordRequest extends Component {\n    constructor(props){\n        super(props);\n        this.state={\n            email:'',\n\n            error_title: '',\n            error_msg: '',\n\n            has_error: false,  // error trapping\n        }\n    }\n    componentDidCatch(error, info) {\n        this.setState({ has_error: true });\n        console.log(error, info);\n    }\n    handleClick(event) {\n        const self = this;\n        //To be done:check for empty values before hitting submit\n        if(this.state.email.length > 0) {\n            Api.passwordResetRequest(this.state.email,\n                (response) => {\n                    self.showError('Success', \"we've emailed you a link for resetting your password.\");\n                },\n                (error) => {\n                    self.showError('Error', error);\n                }\n            );\n        }\n        else{\n            this.showError('Error', 'Input field value is missing');\n        }\n    }\n    showError(title, error_msg) {\n        this.setState({error_title: title, error_msg: error_msg});\n    }\n    closeError() {\n        this.setState({error_msg: ''});\n    }\n    render() {\n        if (this.state.has_error) {\n            return <h1>ResetPasswordRequest: Something went wrong.</h1>;\n        }\n        return (\n            <div>\n\n                <AppMenu title=\"administration\" loggedIn={false} />\n\n                <ErrorDialog title={this.state.error_title}\n                             theme={this.props.theme}\n                             message={this.state.error_msg}\n                             callback={this.closeError.bind(this)} />\n\n                <div>\n\n                    <div className=\"auth-wrapper\">\n                        <div className=\"auth-inner\">\n                            <div>\n                                <h3>Reset Password</h3>\n\n                                <div>Please enter your email address and we'll email you a link to reset your password.</div>\n                                <br />\n\n                                <div className=\"form-group\">\n                                    <input type=\"text\" className=\"form-control\"\n                                        autoFocus\n                                        placeholder=\"Enter your email Address\"\n                                        onChange = {(event) => this.setState({email: event.target.value})} />\n                                </div>\n\n                                <div className=\"form-group submit-adjust\">\n                                    <button className=\"btn btn-primary btn-block\" onClick={(event) => this.handleClick(event)}>\n                                        Submit\n                                    </button>\n                                </div>\n\n                                <p className=\"forgot-password text-right\">\n                                    Click here to return to <span className=\"forgot-password-link\" onClick={() => window.location = '/#/'}>sign-in</span>\n                                </p>\n\n                            </div>\n                        </div>\n                    </div>\n\n                </div>\n\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = function(state) {\n    return {\n        theme: state.appReducer.theme,\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    dispatch => bindActionCreators(appCreators, dispatch)\n)(ResetPasswordRequest);\n","import React, {Component} from 'react';\n\nimport Api from '../common/api'\nimport AppMenu from './app-menu';\nimport ErrorDialog from '../common/error-dialog';\nimport {connect} from \"react-redux\";\nimport {bindActionCreators} from \"redux\";\nimport {appCreators} from \"../actions/appActions\";\n\nimport '../css/sign-in.css';\n\nconst queryString = require('query-string');\n\n\nexport class ResetPasswordResponse extends Component {\n    constructor(props){\n        super(props);\n\n        const parsed = queryString.parse(props.location.search);\n\n        let email = '';\n        let reset_id = '';\n        if (parsed['email']) {\n            email = parsed['email'];\n        }\n        if (parsed['resetid']) {\n            reset_id = parsed['resetid'];\n        }\n\n        this.state={\n            email: email,\n            reset_id: reset_id,\n            password: '',\n\n            error_title: '',\n            error_msg: '',\n\n            has_error: false,  // error trapping\n        }\n    }\n    componentDidCatch(error, info) {\n        this.setState({ has_error: true });\n        console.log(error, info);\n    }\n    handleClick(event) {\n        const self = this;\n        //To be done:check for empty values before hitting submit\n        if(this.state.email.length > 0 && this.state.reset_id.length > 0 && this.state.password.length > 5) {\n            Api.resetPassword(this.state.email, this.state.password, this.state.reset_id,\n                (response) => {\n                    self.showError('Success', \"Password reset.  You can now sign-in using your new password.\");\n                    self.setState({reset_id: '', email: '', password: ''});\n                },\n                (error) => {\n                    self.showError('Error', error);\n                }\n            );\n        }\n        else{\n            this.showError('Error', 'Input field value(s) missing or incorrect.');\n        }\n    }\n    onKeyPress(event) {\n        if (event.key === \"Enter\") {\n            this.handleClick(event);\n        }\n    }\n    showError(title, error_msg) {\n        this.setState({error_title: title, error_msg: error_msg});\n    }\n    closeError() {\n        this.setState({error_msg: ''});\n    }\n    render() {\n        if (this.state.has_error) {\n            return <h1>ResetPasswordResponse: Something went wrong.</h1>;\n        }\n        return (\n            <div>\n\n                <AppMenu title=\"\" loggedIn={false} />\n\n                <ErrorDialog title={this.state.error_title}\n                             theme={this.props.theme}\n                             message={this.state.error_msg}\n                             callback={this.closeError.bind(this)} />\n\n                <div className=\"auth-wrapper\">\n                    <div className=\"auth-inner\">\n                        <div>\n                            <h3>Reset Password</h3>\n\n                            <form>\n                                <input type=\"text\" className=\"form-control margin-bottom\"\n                                       placeholder=\"Enter your email Address\"\n                                       autoComplete={false}\n                                        value={this.state.email}\n                                        onChange = {(event) => this.setState({email: event.target.value})} />\n                            </form>\n\n                            <form>\n                                <input type=\"text\" className=\"form-control margin-bottom\"\n                                        placeholder=\"Enter the reset-id we sent you\"\n                                        autoComplete={false}\n                                        value={this.state.reset_id}\n                                        onChange = {(event) => this.setState({reset_id: event.target.value})} />\n                            </form>\n\n                            <form>\n                                <input type=\"password\" className=\"form-control margin-bottom\"\n                                        placeholder=\"Enter your new Password\"\n                                        autoFocus={true}\n                                        autoComplete={false}\n                                        onChange = {(event) => this.setState({password: event.target.value})}\n                                        onKeyPress = {this.onKeyPress.bind(this)} />\n                            </form>\n\n                            <div>\n                                <button className=\"btn btn-primary btn-block\"\n                                              onClick={(event) => this.handleClick(event)}>\n                                    Reset Password\n                                </button>\n                            </div>\n\n                            <p className=\"forgot-password text-right\">\n                                Click here to return to <span className=\"forgot-password-link\" onClick={() => window.location = '/#/'}>sign-in</span>\n                            </p>\n\n                        </div>\n                    </div>\n                </div>\n\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = function(state) {\n    return {\n        theme: state.appReducer.theme,\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    dispatch => bindActionCreators(appCreators, dispatch)\n)(ResetPasswordResponse);\n","import React, {Component} from 'react';\n\n\nimport AppMenu from '../auth/app-menu';\nimport ErrorDialog from '../common/error-dialog';\nimport {connect} from \"react-redux\";\nimport {bindActionCreators} from \"redux\";\nimport {appCreators} from \"../actions/appActions\";\n\n\nexport class OpenSourceLicenses extends Component {\n    constructor(props){\n        super(props);\n        this.state={\n            error_title: '',\n            error_msg: '',\n            has_error: false,  // error trapping\n        }\n    }\n    componentDidCatch(error, info) {\n        this.setState({ has_error: true });\n        console.log(error, info);\n    }\n    showError(title, error_msg) {\n        this.setState({error_title: title, error_msg: error_msg});\n    }\n    closeError() {\n        this.setState({error_msg: ''});\n    }\n    render() {\n        if (this.state.has_error) {\n            return <h1>license: Something went wrong.</h1>;\n        }\n        return (\n            <div>\n\n                <AppMenu title=\"Open Source Licenses\" loggedIn={false} />\n\n                <ErrorDialog title={this.state.error_title}\n                             theme={this.props.theme}\n                             message={this.state.error_msg}\n                             callback={this.closeError.bind(this)} />\n\n                 <div className=\"license-container no-select\">\n\n                     <div className=\"license-section\">\n                         <div className=\"title\">Apache ActiveMQ</div>\n                         <div className=\"copyright\">Copyright © 2005-2019 The Apache Software Foundation </div>\n                         <div className=\"license\">Apache 2.0 license</div>\n                     </div>\n\n                     <div className=\"license-section\">\n                         <div className=\"title\">Apache Avro</div>\n                         <div className=\"copyright\">Copyright © 2010-2019 The Apache Software Foundation </div>\n                         <div className=\"license\">Apache 2.0 license</div>\n                     </div>\n\n                     <div className=\"license-section\">\n                         <div className=\"title\">Apache Cassandra</div>\n                         <div className=\"copyright\">Copyright © 2009-2021 The Apache Software Foundation </div>\n                         <div className=\"license\">Apache 2.0 license</div>\n                     </div>\n\n                     <div className=\"license-section\">\n                         <div className=\"title\">Apache Hadoop</div>\n                         <div className=\"copyright\">Copyright © 2019 The Apache Software Foundation </div>\n                         <div className=\"license\">Apache 2.0 license</div>\n                     </div>\n\n                     <div className=\"license-section\">\n                         <div className=\"title\">Apache http-client</div>\n                         <div className=\"copyright\">Copyright © 1999-2007 The Apache Software Foundation</div>\n                         <div className=\"license\">Apache 2.0 license</div>\n                     </div>\n\n                     <div className=\"license-section\">\n                         <div className=\"title\">Apache http-mime</div>\n                         <div className=\"copyright\">Copyright © 1999-2020 The Apache Software Foundation</div>\n                         <div className=\"license\">Apache 2.0 license</div>\n                     </div>\n\n                     <div className=\"license-section\">\n                         <div className=\"title\">Apache Parquet</div>\n                         <div className=\"copyright\">Copyright © 2020 The Apache Software Foundation </div>\n                         <div className=\"license\">Apache 2.0 license</div>\n                     </div>\n\n                     <div className=\"license-section\">\n                         <div className=\"title\">Apache PDFBox</div>\n                         <div className=\"copyright\">Copyright © 2020 The Apache Software Foundation </div>\n                         <div className=\"license\">Apache 2.0 license</div>\n                     </div>\n\n                     <div className=\"license-section\">\n                         <div className=\"title\">Apache Spark</div>\n                         <div className=\"copyright\">Copyright © 2014- The Apache Software Foundation </div>\n                         <div className=\"license\">Apache 2.0 license</div>\n                     </div>\n\n                     <div className=\"license-section\">\n                         <div className=\"title\">Apache Tika</div>\n                         <div className=\"copyright\">Copyright © 2020 The Apache Software Foundation</div>\n                         <div className=\"license\">Apache 2.0 license</div>\n                     </div>\n\n                     <div className=\"license-section\">\n                         <div className=\"title\">commons-io</div>\n                         <div className=\"copyright\">Copyright © 2002-2020 The Apache Software Foundation</div>\n                         <div className=\"license\">Apache 2.0 license</div>\n                     </div>\n\n                     <div className=\"license-section\">\n                         <div className=\"title\">commons-fileupload</div>\n                         <div className=\"copyright\">Copyright © 2002-2020 The Apache Software Foundation</div>\n                         <div className=\"license\">Apache 2.0 license</div>\n                     </div>\n\n                     <div className=\"license-section\">\n                         <div className=\"title\">DataStax Driver</div>\n                         <div className=\"copyright\">Copyright © DataStax, Inc.</div>\n                         <div className=\"license\">Apache 2.0 license</div>\n                     </div>\n\n                     <div className=\"license-section\">\n                         <div className=\"title\">Google API</div>\n                         <div className=\"copyright\">Copyright © 2012 Google Inc.</div>\n                         <div className=\"license\">Apache 2.0 license</div>\n                     </div>\n\n                     <div className=\"license-section\">\n                         <div className=\"title\">Google Drive</div>\n                         <div className=\"copyright\">Copyright © 2018, Google Inc.</div>\n                         <div className=\"license\">Apache 2.0 license</div>\n                     </div>\n\n                     <div className=\"license-section\">\n                         <div className=\"title\">Google OAuth</div>\n                         <div className=\"copyright\">Copyright © 2018, Google Inc.</div>\n                         <div className=\"license\">Apache 2.0 license</div>\n                     </div>\n\n                     <div className=\"license-section\">\n                         <div className=\"title\">Jackson</div>\n                         <div className=\"copyright\">Copyright © 2007- Tatu Saloranta, tatu.saloranta@iki.fi</div>\n                         <div className=\"license\">Apache 2.0 license</div>\n                     </div>\n\n                     <div className=\"license-section\">\n                         <div className=\"title\">javax-mail</div>\n                         <div className=\"copyright\">Copyright © 1997-2011 Oracle and/or its affiliates.</div>\n                         <div className=\"license\">CDDL 1.1</div>\n                     </div>\n\n                     <div className=\"license-section\">\n                         <div className=\"title\">javax WebSocket Client</div>\n                         <div className=\"copyright\">Copyright © 2012-2014 Oracle and/or its affiliates. </div>\n                         <div className=\"license\">CDDL 1.1, GPL 2.0</div>\n                     </div>\n\n                     <div className=\"license-section\">\n                         <div className=\"title\">jBcrypt</div>\n                         <div className=\"copyright\">Copyright © 2006 Damien Miller &lt;djm@mindrot.org&gt;</div>\n                         <div className=\"license\">Mozilla public license 2.0</div>\n                     </div>\n\n                     <div className=\"license-section\">\n                         <div className=\"title\">JCIFS-ng</div>\n                         <div className=\"copyright\">Copyright © 2016 AgNO3 Gmbh & Co. KG</div>\n                         <div className=\"license\">GNU Lesser General public license 2.1</div>\n                     </div>\n\n                     <div className=\"license-section\">\n                         <div className=\"title\">JEP</div>\n                         <div className=\"copyright\">Copyright (c) 2004 - 2020 JEP AUTHORS</div>\n                         <div className=\"license\">zlib/libpng License</div>\n                     </div>\n\n                     <div className=\"license-section\">\n                         <div className=\"title\">JNA</div>\n                         <div className=\"copyright\">Copyright © 2011 Timothy Wall</div>\n                         <div className=\"license\">Apache 2.0 license</div>\n                     </div>\n\n                     <div className=\"license-section\">\n                         <div className=\"title\">JEP</div>\n                         <div className=\"copyright\">Copyright © 2004 - 2020 JEP AUTHORS</div>\n                         <div className=\"license\">zlib/libpng License</div>\n                     </div>\n\n                     <div className=\"license-section\">\n                         <div className=\"title\">Joda-time</div>\n                         <div className=\"copyright\">Copyright © 2001-2005 Stephen Colebourne</div>\n                         <div className=\"license\">Apache 2.0 license</div>\n                     </div>\n\n                     <div className=\"license-section\">\n                         <div className=\"title\">jSoup</div>\n                         <div className=\"copyright\">Copyright © 2009 - 2021 Jonathan Hedley (https://jsoup.org/)</div>\n                         <div className=\"license\">MIT License</div>\n                     </div>\n\n                     <div className=\"license-section\">\n                         <div className=\"title\">junit</div>\n                         <div className=\"copyright\">Copyright © 2002-2020 JUnit</div>\n                         <div className=\"license\">Eclipse Public License 1.0</div>\n                     </div>\n\n                     <div className=\"license-section\">\n                         <div className=\"title\">Kotlin</div>\n                         <div className=\"copyright\">Copyright © 2016-2020 JetBrains s.r.o.</div>\n                         <div className=\"license\">Apache 2.0 license</div>\n                     </div>\n\n                     <div className=\"license-section\">\n                        <div className=\"title\">Kotlin Coroutines Core</div>\n                        <div className=\"copyright\">Copyright © 2016-2020 JetBrains s.r.o.</div>\n                        <div className=\"license\">Apache 2.0 license</div>\n                    </div>\n\n                     <div className=\"license-section\">\n                         <div className=\"title\">Microsoft SQL JDBC</div>\n                         <div className=\"copyright\">Copyright © 2020 Microsoft Corporation</div>\n                         <div className=\"license\">MIT license</div>\n                     </div>\n\n                     <div className=\"license-section\">\n                         <div className=\"title\">Microsoft msal4j</div>\n                         <div className=\"copyright\">Copyright © 2020 Microsoft Corporation</div>\n                         <div className=\"license\">MIT license</div>\n                     </div>\n\n                     <div className=\"license-section\">\n                         <div className=\"title\">MariaDB JDBC</div>\n                         <div className=\"copyright\">Copyright © 2021, MariaDB</div>\n                         <div className=\"license\">LGPL 2.1</div>\n                     </div>\n\n                     <div className=\"license-section\">\n                         <div className=\"title\">OpenJDK 11.0.9.1</div>\n                         <div className=\"copyright\">Copyright © 1995, 2021, Oracle and/or its affiliates.</div>\n                         <div className=\"license\">GPLv2 with linking exception</div>\n                     </div>\n\n                     <div className=\"license-section\">\n                         <div className=\"title\">Postgres SQL JDBC</div>\n                         <div className=\"copyright\">Copyright © 1997, PostgreSQL Global Development Group</div>\n                         <div className=\"license\">BSD-2 Clause</div>\n                     </div>\n\n                     <div className=\"license-section\">\n                         <div className=\"title\">snakeyaml</div>\n                         <div className=\"copyright\">Copyright © 2008-2013 Andrey Somov</div>\n                         <div className=\"license\">Apache 2.0 license</div>\n                     </div>\n\n                     <div className=\"license-section\">\n                         <div className=\"title\">snappy java</div>\n                         <div className=\"copyright\">Copyright © 2011 Taro L. Saito</div>\n                         <div className=\"license\">Apache 2.0 license</div>\n                     </div>\n\n                     <div className=\"license-section\">\n                         <div className=\"title\">spaCy</div>\n                         <div className=\"copyright\">Copyright © 2016-2020 ExplosionAI GmbH, 2016 spaCy GmbH, 2015 Matthew Honnibal</div>\n                         <div className=\"license\">MIT license</div>\n                     </div>\n\n                     <div className=\"license-section\">\n                        <div className=\"title\">Spring</div>\n                        <div className=\"copyright\">Copyright © 2002-2021 Pivotal, Inc.</div>\n                        <div className=\"license\">Apache 2.0 license</div>\n                    </div>\n\n                    <div className=\"license-section\">\n                        <div className=\"title\">Tyrus WebSocket Client</div>\n                        <div className=\"copyright\">Copyright © 2014-2015 Oracle and/or its affiliates. </div>\n                        <div className=\"license\">Eclipse Public License 2.0</div>\n                    </div>\n\n                     <br clear=\"both\" />\n\n                     <div className=\"button-bottom\">\n                         <button onClick={() => window.location = \"/#/\"} className=\"btn btn-primary btn-block\">Return to Sign-in</button>\n                     </div>\n\n                 </div>\n\n                <br/>\n                <br/>\n\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = function(state) {\n    return {\n        theme: state.appReducer.theme,\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    dispatch => bindActionCreators(appCreators, dispatch)\n)(OpenSourceLicenses);\n\n","import React, {Component} from 'react';\n\nimport AppMenu from '../auth/app-menu';\nimport ErrorDialog from '../common/error-dialog';\nimport {connect} from \"react-redux\";\nimport {bindActionCreators} from \"redux\";\nimport {appCreators} from \"../actions/appActions\";\n\nimport '../css/license.css';\n\n\nexport class LicenseAgreement extends Component {\n    constructor(props){\n        super(props);\n        this.state={\n            error_title: '',\n            error_msg: '',\n            has_error: false,  // error trapping\n        }\n    }\n    componentDidCatch(error, info) {\n        this.setState({ has_error: true });\n        console.log(error, info);\n    }\n    showError(title, error_msg) {\n        this.setState({error_title: title, error_msg: error_msg});\n    }\n    closeError() {\n        this.setState({error_msg: ''});\n    }\n    render() {\n        if (this.state.has_error) {\n            return <h1>license-agreement: Something went wrong.</h1>;\n        }\n        return (\n            <div>\n                <AppMenu title=\"\" loggedIn={false} />\n                <ErrorDialog title={this.state.error_title}\n                             theme={this.props.theme}\n                             message={this.state.error_msg}\n                             callback={this.closeError.bind(this)} />\n\n                <br clear=\"both\" />\n                <div className=\"license-screen\">\n\n                    <h1>SIMSAGE™ TERMS OF USE</h1>\n                    <br/>\n                    Welcome to SimSage™, an innovative, semantic, software-based Artificial Intelligence service that assists organisations to automate their web-page interactions with Customers. SimSage™’s capabilities include automating Customer enquiries requests for information, particularly by supplementing, or replacing Frequently Asked Questions (FAQs).<br/>\n                    <br/>\n                    <br/>\n                    These Terms of Use, as amended from time to time (Terms) explain the terms on which SimSage™  Limited (NZCN 6798094) of 86 Tinakori Road, Wellington, New Zealand (SimSage™) provides customers with access to certain services through the www.simsage.nz website (Website). Please read them carefully.<br/>\n                    <br/>\n                    By registering to use the Services and clicking “I accept”, You acknowledge that You have read and understood these Terms and if You are acting on behalf of any person for whom You are using the Services, that You have full authority to act and are deemed to have agreed to these Terms on behalf of that person for whom you use the Services.<br/>\n                    <br/>\n                    SimSage™ reserves the right to change these Terms at any time, effective on posting the modified terms on the Website, and SimSage™ will make every effort to communicate these changes to You via email or notification via the Website. It is likely the Terms will change over time, particularly as the Services evolve to reflect our development of the Services and user feedback. It is Your obligation to ensure that You have read, understood and agree to the most recent Terms available on the Website.<br/>\n                    <br/>\n                    <h2>1. The Website and the Services</h2>\n                    <br/>\n                    1.1\tThe Website is owned and managed by SimSage Limited (NZCN 6798094) of 86 Tinakori Road, Wellington, New Zealand.<br/>\n                    <br/>\n                    1.2 In consideration of You paying the Fees, SimSage™ shall provide You with the services described on the Website (Services). To avoid doubt, SimSage™’s obligations are limited to providing the Services and do not in any way include acting on Your behalf. Nothing in these Terms is intended to, or shall be deemed to, establish any partnership or joint venture between You and SimSage™, appoint either party as the agent of the other, nor authorise either party to make or enter into any commitments for, or on behalf of, the other party.<br/>\n                    <br/>\n                    1.3 SimSage™ may from time to time add, modify, suspend or cease (temporarily or permanently) providing any element of the Services upon notice to You, such notice to be effective on the earlier of SimSage™ posting on the Website or via email to You.<br/>\n                    <br/>\n                    1.4 If there is unplanned service downtime in respect of the Services or the Website, SimSage™ shall use its reasonable endeavours (but has no obligation) to notify You in advance provided that SimSage™ is able to do so and such notice will be effective on the earlier of SimSage™ posting on the Website or notifying You via email.<br/>\n                    <br/>\n                    1.5 Access to the Website and the Services may be granted to You, at SimSage™’s discretion and on terms and for a period agreed in writing (and if no time period is specified, for one month only), on a trial or ‘free’ basis (Trial). You acknowledge and agree that these Terms shall apply to the Trial, and in addition, during the Trial:<br/>\n                    1.5.1 access to the Services will be provided to You at no cost;<br/>\n                    1.5.2 such access is solely for the purpose of offering You a preview demonstration of the functionality and features of the Services;<br/>\n                    1.5.3 the functionality of the Services may be limited or restricted; and<br/>\n                    1.5.4 SimSage™ may withdraw or suspend Your access to the Services at any time, and at the end of the one month Trial period (or such other Trial period agreed in writing), Your continued access to the Website and/or Services will be subject to payment of Fees or charges in accordance with clause 4.<br/>\n                    <br/>\n                    <h2>2 Register to use the Services</h2>\n                    <br/>\n                    2.1\tTo use the Services You must first register with SimSage™ by completing the online registration form on the Website.<br/>\n                    <br/>\n                    2.2 SimSage™ will send You a confirmation email (Confirmation Email) once it has accepted and confirmed Your registration. Your contract to use the Services on these Terms (Contract) starts on the date of the Confirmation Email.<br/>\n                    <br/>\n                    2.3 SimSage™ reserves the right to conduct verification and security procedures in respect of all information provided by You to SimSage™. If SimSage™ believes the information provided by You to register and use any of the Services breaches (or may breach) any of these Terms, SimSage™ at its sole discretion may take any action it deems appropriate, including without limitation, to terminate Your Contract (with no return of any Fees already paid).<br/>\n                    <br/>\n                    2.4 These Terms apply to any Authorised Personnel who You authorize to access and use the Website and the Services through Your account. You acknowledge and agree:<br/>\n                    2.4.1 all Authorised Personnel must use the corporate  email address allocated to them by You when creating an Authorised Personnel profile;<br/>\n                    2.4.2 SimSage™ may allocate Your \"Admin\" or \"Member\" accounts with varying levels of access, and You shall comply (and ensure each Authorised Personnel complies) with any SimSage™ directions for setting up and using such accounts; and<br/>\n                    2.4.3 You are directly liable to SimSage™ at all times for the acts or omissions of Your Authorised Personnel.<br/>\n                    <br/>\n                    2.5 You shall keep, and ensure Your Authorised Personnel keep, Your and Your Authorised Personnel’s usernames and passwords (Logins) safe and secure to ensure they are not used without Your permission. You must immediately notify SimSage™ if You believe there has been unauthorised use or access to Your Logins and/or Your profile on the Website. You shall be solely responsible and liable for any breach of these Terms arising out of, or resulting from, using Your Logins to access the Services and/or the Website (whether such use is authorised by You or not).<br/>\n                    <br/>\n                    2.6 SimSage™ may, at any time on notice, require You to sign any further documents to confirm Your acceptance of, or give full effect to, these Terms.<br/>\n                    <br/>\n                    <h2>3 Your obligations - general</h2>\n                    <br/>\n                    3.1\tThe obligations in this clause 3 apply to all users of SimSage™, the Services and/or the Website. Additional obligations   are set out below.<br/>\n                    <br/>\n                    3.2 You shall at all times use the Services and the Website in accordance with these Terms.<br/>\n                    <br/>\n                    3.3 You shall ensure Your use of the Services and/or the Website, including submitting any information, data, images, videos, audio, files, links to external websites, communication between Authorised Personnel, and all other material of any format (Submissions), in each case:<br/>\n                    3.3.1 complies with all applicable laws;<br/>\n                    3.3.2 does not infringe any intellectual property or other proprietary rights of any third party;<br/>\n                    3.3.3 does not, or could not reasonably be deemed to:<br/>\n                    <ul>\n                        <li>be offensive, illegal, inappropriate or in any way promote racism, bigotry, hatred or physical harm of any kind against any group or individual;</li>\n                        <li>harass or advocate harassment of another person;</li>\n                        <li>display pornographic or sexually explicit material;</li>\n                        <li>promote conduct that is abusive, threatening, obscene, or defamatory;</li>\n                        <li>promote any illegal activities, or provide instructional information about illegal activities, including violating someone else’s privacy; or</li>\n                        <li>provide or create computer viruses, other malware or denial of service attacks;</li>\n                        <li>promote or contain information that is inaccurate, false or misleading;</li>\n                        <li>engage in promoting contests, sweepstakes and pyramid schemes;</li>\n                        <li>exploit people in a sexual or violent manner;</li>\n                        <li>invade or violate any third party’s right to privacy; and</li>\n                        <li>transmit \"junk mail\", or \"chain letters\", or unsolicited mass mailing, messaging or \"spamming\";</li>\n                    </ul>\n                    and You hereby indemnify SimSage™ for all losses, liabilities, costs and expenses (including legal costs) suffered or incurred by SimSage™ (and/or its parent company) which arise directly or indirectly from Your breach of this clause 3.2.<br/>\n                    <br/>\n                    3.4 SimSage™ does not vet, verify the accuracy, correctness and completeness, edit or modify any Submission or any other information, data and materials created, used and/or published by You or on Your behalf on Your Website to determine whether they may result in any liability to any third party. You warrant that You have the right to use all such information and material.<br/>\n                    <br/>\n                    3.5 Notwithstanding clause 3.3, SimSage™ reserves the right to refuse to publish any Submissions, or to remove or edit a Submission (in whole or in part and at any time), if SimSage™ believes Your use of the Services and/or the Website breaches these Terms.<br/>\n                    <br/>\n                    3.6 You shall not at any time:<br/>\n                    3.6.1 use the Services and/or the Website to impersonate (or in a way that impersonates) another User or person; and<br/>\n                    3.6.2 use the information made available to You through Your use of the Services and/or the Website for any purpose other than for procuring benefit out of the Services and/or the Website; and<br/>\n                    3.6.3 do anything whatsoever which (or which is likely to) impair, interfere with, damage, or cause harm or distress to any person using the Services and/or the Website or in respect of the network.<br/>\n                    <br/>\n                    3.7 SimSage™ takes breaches of this clause 3 very seriously and reserves the right to take any action that SimSage™ deems necessary, including suspending or terminating Your use of the Services and/or access to the Website. SimSage™ may also commence legal proceedings if there is illegal use of the Services and/or the Website, or disclose information to any third party who is claiming that any material posted or uploaded by You to our Website violates their intellectual property or other proprietary rights or their right to privacy. You shall promptly notify SimSage™ if You are aware of any breach (or any suspected breach) of this clause 3 by Your Authorised Personnel.<br/>\n                    <br/>\n                    <h2>4 Fees</h2>\n                    <br/>\n                    4.1 The fees to access the Services are set out on the Website (Fees). Except where You are using any Services that are specifically noted on the Website as “Free”, or participating in a Trial in accordance with clause 1.5, You may only access the Services by paying the Fees noted on the Website..<br/>\n                    <br/>\n                    4.2 Unless stated otherwise on the Website or agreed by SimSage™ in writing, the Fees shall be payable by You, in the manner as set out on the Website.<br/>\n                    <br/>\n                    4.3 All Fees are inclusive of GST and all other taxes or duties, and are non-refundable for any reason whatsoever.<br/>\n                    <br/>\n                    4.4 The Fees or any rate of charge may be increased by SimSage™ upon not less than 30 days prior written notice to You, which notice may be provided through the Website.<br/>\n                    <br/>\n                    <h2>5 Warranties</h2>\n                    <br/>\n                    5.1 You: You warrant that (a) You have the right and capacity to enter into, and be bound by, these Terms;  (b) You shall comply with all applicable laws relating to Your use of the Services and/or the Website; and (c)  You shall comply with SimSage™’s requirements and reasonable directions relating to the Services and Website as notified by SimSage™ from time to time.<br/>\n                    <br/>\n                    5.2 SimSage™: The provision of, access to, and use of, the Services and the Website is on an \"as is \" basis and at Your own risk. SimSage™ gives no warranty about the Services and/or the Website, and in particular, SimSage™ does not warrant that:<br/>\n                    5.2.1 the Services will meet Your requirements or that it will be suitable for any particular purpose. It is Your sole responsibility to determine that the Services meet Your needs and/or the needs of Your business and are suitable for the purposes for which they are used; or<br/>\n                    5.2.2 the use of the Services will be uninterrupted or error free. Among other things, the operation and availability of the systems used for accessing the Services, including public telephone services, computer networks and the Internet, can be unpredictable and may from time to time interfere with or prevent access to the Services. SimSage™ is not in any way responsible for any such interference or prevention of Your access or use of the Services.\n                    To avoid doubt, all implied conditions or warranties are excluded to the maximum extent permitted by law, including (without limitation) warranties of merchantability, non-infringement of intellectual property, accuracy, completeness, fitness for a particular purpose, and any warranties arising by statute or otherwise in law or from course of dealing, course of performance, or use of trade.<br/>\n                    <br/>\n                    5.3 Third party websites: SimSage™ may display or provide links or other interaction with third party websites and third party advertising banners on the Website (Third Party Websites). In particular, the Services may also provide You with the opportunity to connect and publish Your Information through Third Party Websites and other third party services such as social and business networking sites. Use of any such Third Party Websites and services shall be at Your sole risk and subject to the terms and conditions of the Third Party Website provider.<br/>\n                    <br/>\n                    <h2>6 Limitation of liability</h2>\n                    <br/>\n                    6.1 To the maximum extent permitted by law, SimSage™ excludes all liability and responsibility to You (or any other person) in contract, tort (including negligence), or otherwise, for any loss (including loss of information, Data, profits and savings) or damage resulting, directly or indirectly, from any use of, or reliance on, the Services and/or Website.<br/>\n                    <br/>\n                    6.2 If You suffer loss or damage as a result of SimSage™'s negligence or failure to comply with these Terms, any claim by You against SimSage™ arising from SimSage™'s negligence or failure will be limited in respect of any one incident, or series of connected incidents, to the Fees paid by You in the previous month. You are directly liable to SimSage™ at all times for the acts or omissions of Your Authorised Personnel, in accordance with clause 2.4.<br/>\n                    <br/>\n                    6.3 If You are not satisfied with the Services, Your sole and exclusive remedy is to terminate these Terms in accordance with clause 7.<br/>\n                    <br/>\n                    <h2>7 Termination</h2>\n                    <br/>\n                    7.1 Trial policy: If SimSage™ agrees in writing, in accordance with clause 1.5, to provide You with a trial usage period when You first sign up for access to the Services, You can evaluate the Services under the specified trial usage conditions, with no obligation to continue to use the Services. If You choose to continue using the Services thereafter, any payment applicable in accordance with clause 7 will be billed to You from the day You first added Your billing details into the Services.<br/>\n                    <br/>\n                    7.2 Prepaid Subscriptions: SimSage™ will not provide any refund for any remaining prepaid period for a prepaid Fee subscription.<br/>\n                    <br/>\n                    7.3 No-fault termination: These Terms will continue for the period covered by the Fee paid or payable under clause 7.1. At the end of each billing period, these Terms will automatically continue for another period of the same duration as that period, provided You continue to pay the prescribed Fee when due, unless either party terminates these Terms by giving at least 30 days’ notice to the other party before the end of the relevant payment period. If You terminate these Terms, You shall be liable to pay all relevant Fees on a pro-rata basis for each day of the then current period up to and including the day of termination of these Terms.<br/>\n                    <br/>\n                    7.4 Breach: If You:<br/>\n                    7.4.1 breach any of these Terms (including by non-payment of any Fees) and (i) if the breach is capable of being remedied, do not remedy the breach within 14 days after receiving notice of the breach; and (ii) if the breach is not capable of being remedied (which includes any payment of Fees that are more than 30 days overdue); or<br/>\n                    7.4.2 You or Your business become insolvent or Your business goes into liquidation or has a receiver or manager appointed of any of its assets or if You become insolvent, or make any arrangement with Your creditors, or become subject to any similar insolvency event in any jurisdiction,\n                    SimSage™ may, at its sole discretion:<br/>\n                    7.4.3 Terminate this Agreement and Your use of the Services;<br/>\n                    7.4.4 Suspend for any definite or indefinite period of time, Your use of the Services;<br/>\n                    7.4.5 Suspend or terminate access to all or any Data; and/or<br/>\n                    7.4.6 Take any of these actions in relation to any other person/s whom You have authorised to have access to Your information or Data.<br/>\n                    <br/>\n                    7.5 Accrued Rights: Termination of these Terms is without prejudice to any rights or obligations of the parties which have accrued up to and including the date of termination, and shall not affect the provisions of these Terms which expressly, or by their nature, are intended to continue, including this clause 7 (Termination), and clauses 5 (Warranties), 6 (Limitation of Liability), 8 (Intellectual Property Rights). On termination of this Agreement You will:<br/>\n                    7.5.1 remain liable for any accrued Fees and amounts which become due for payment before or after termination; and<br/>\n                    7.5.2 immediately cease to use the Services.<br/>\n                    <br/>\n                    <h2>8 Intellectual property rights</h2>\n                    <br/>\n                    8.1 Title to, and all intellectual property rights in, the Services, the Website, including all software forming part of the Website (Software), and any documentation relating to the Services, is and remains the property of SimSage™ (or its licensors). Nothing in these Terms will transfer from SimSage™ to You any right, title or interest in the Services, the Website, the Software and associated documentation, all of which remain exclusively with SimSage™ (or its licensors). All rights in and to the Software and the Website not expressly granted to You are reserved by SimSage™ (and its licensors).<br/>\n                    <br/>\n                    8.2 You may print off one copy and may download extracts of any pages from the Website solely for use by You; and You may draw the attention of other Users to Submissions or materials posted on the Website. You must not use any part of the Submissions of other Users and all materials on the Website for any purpose other than accessing the Website or obtaining a benefit from the Services in accordance with these Terms.<br/>\n                    <br/>\n                    8.3 You shall not, and shall procure that Authorised Personnel shall not modify, translate, create or attempt to create derivative copies of or copy the Software and/or the Website in whole or in part; reverse engineer, decompile, disassemble or otherwise reduce the object code of the Software and/or the Website to source code form; distribute, sub-licence, assign, share, timeshare, sell, rent, lease, transmit, grant a security interest in or otherwise transfer the Software, the Website and/or Your right to use the Software or the Website.<br/>\n                    <br/>\n                    8.4 You:<br/>\n                    8.4.1 Warrant that You own or have the right or licence to use the intellectual property rights in the Your Information, all information and materials provided by You to SimSage™; and<br/>\n                    8.4.2 indemnify SimSage™ against all losses, liabilities, costs and expenses (including but not limited to legal costs) arising from or incurred by reason of any infringement of any intellectual property right by the use or possession of Your Information, and all other information and material provided by You to SimSage™.<br/>\n                    <br/>\n                    <h2>9 Data protection & privacy policy</h2>\n                    <br/>\n                    9.1 You and SimSage™ shall comply with the Privacy Act 1993 (and all other successor legislation and regulations) in performing their obligations under these Terms.<br/>\n                    <br/>\n                    9.2 SimSage™ processes personal information (as defined in the Privacy Act 1993) which it collects in the course of providing the Services in accordance with its Privacy Policy which is accessible on the Website. You should read that policy at www.SimSage.nz/privacy/. You will be deemed to have accepted that policy when You accept these Terms.<br/>\n                    <br/>\n                    9.3 For personal information which is processed by SimSage™ on Your behalf as part of the Services, SimSage™ will act strictly in accordance with Your instructions by following the processing and security obligations contained in these Terms. You confirm that You are solely responsible for ensuring that any such processing and security obligations comply with all applicable privacy and data protection laws. You hereby indemnify SimSage™ against all losses, liabilities, costs and expenses (including but not limited to legal costs) arising from or incurred by reason of Your failure to comply with this clause 9.<br/>\n                    <br/>\n                    <h2>10 General</h2>\n                    <br/>\n                    10.1 No Assignment: You may not assign or transfer any rights to any other person without SimSage™'s prior written consent. SimSage™ may assign or transfer its rights and/or obligations under these Terms without requiring Your consent.<br/>\n                    <br/>\n                    10.2 Waiver: If either party waives any breach of these Terms, this will not constitute a waiver of any other breach. No waiver will be effective unless made in writing.<br/>\n                    <br/>\n                    10.3 Delays: Neither party will be liable for any delay or failure in performing its obligations under these Terms if the delay or failure is due to any cause outside its reasonable control. This clause does not apply to any obligation to pay money.<br/>\n                    <br/>\n                    10.4 Severability: If any provision of these Terms is invalid, unenforceable or conflicts with applicable law, that provision is replaced with a provision which, as far as possible, accomplishes the original purpose of that provision. The remainder of these Terms will be binding on the parties.<br/>\n                    <br/>\n                    10.5 Notices: Unless specified otherwise in these Terms, any notice given under these Terms by one party to the other must be in writing by email and will be deemed to have been given on transmission. Notices to SimSage™ must be sent to support@simsage.nz  or to any other email address notified by email to You by SimSage™. Notices to You will be sent to the email address which You provided when registering for the Services. SimSage™ reserves the right to change these Terms at any time, effective on posting the modified terms on the Website, and SimSage™ will make every effort to communicate these changes to You via email or notification via the Website.<br/>\n                    <br/>\n                    10.6 Rights of Third Parties: A person who is not a party to these Terms has no right to benefit under or to enforce any term of these Terms.<br/>\n                    <br/>\n                    10.7 Acknowledgement: You acknowledge that in entering into these Terms, You have not relied on any representations, undertakings or promises given by or implied from anything said or written (whether on the Website, the internet or in negotiation between the parties) except as expressly set out in these Terms.<br/>\n                    <br/>\n                    10.8 Entire agreement: These Terms, together with our Privacy Policy and the terms of any other notices or instructions given to You under these Terms, supersede and extinguish all prior agreements, representations (whether oral or written), and understandings and constitute the entire agreement between You and SimSage™ relating to the Services, the Website and the other matters addressed in these Terms.<br/>\n                    <br/>\n                    10.9 Governing law and jurisdiction: These Terms are governed by, and shall be construed in accordance with, New Zealand law and shall be subject to the exclusive jurisdiction of the New Zealand courts.<br/>\n                    <br/>\n                    <br/>\n                </div>\n\n                <div className=\"bottom-link\">\n                    <button onClick={() => window.close()} className=\"btn btn-primary btn-block\" >close</button>\n                </div>\n\n                </div>\n        );\n    }\n}\n\nconst mapStateToProps = function(state) {\n    return {\n        theme: state.appReducer.theme,\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    dispatch => bindActionCreators(appCreators, dispatch)\n)(LicenseAgreement);\n","import React from 'react';\n\nimport '../css/single-search-result.css';\n\n\nexport class SingleSearchResult extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            has_error: false,\n            item: this.props.item,\n        };\n    }\n\n    UNSAFE_componentWillReceiveProps(nextProps) {\n        this.setState({\n            item: nextProps.item,\n        });\n    }\n\n    componentDidCatch(error, info) {\n        this.setState({ has_error: true });\n        console.log(error, info);\n    }\n\n    // helper - highlight SimSage matching keywords at various levels\n    static highlight(str) {\n        if (str && str.replace) {\n            str = str.replace(/{hl1:}/g, \"<span class='hl1'>\");\n            str = str.replace(/{hl2:}/g, \"<span class='hl2'>\");\n            str = str.replace(/{:hl1}/g, \"</span>\");\n            str = str.replace(/{:hl2}/g, \"</span>\");\n            str = str.replace(/\\n/g, \"<br />\");\n        }\n        return str;\n    }\n    prevFragment() {\n        const item = this.state.item;\n        if (item && item.textIndex > 0) {\n            item.textIndex -= 1;\n            this.setState({item: item});\n        }\n    }\n    nextFragment() {\n        const item = this.state.item;\n        if (item && item.textIndex + 1 < item.textList.length) {\n            item.textIndex += 1;\n            this.setState({item: item});\n        }\n    }\n    getPreviewSource(item) {\n        return \"http://localhost:8080/api/document/preview/\" + this.props.organisationId + \"/\" +\n                    this.props.kbId + \"/\" + this.props.clientId + \"/\" + item.urlId + \"/-1\"\n    }\n    getBinarySource(item) {\n        return \"http://localhost:8080/api/document/binary/\" + this.props.organisationId + \"/\" +\n            this.props.kbId + \"/\" + this.props.clientId + \"/\" + item.urlId;\n    }\n    render() {\n        if (this.state.has_error) {\n            return <h1>single-search-result: Something went wrong.</h1>;\n        }\n        const item = this.state.item;\n        return (\n            <div className=\"single-search-result-page\">\n\n                <div className=\"title\"><a href={this.getPreviewSource(item)} target=\"_blank\" rel=\"noreferrer\">{item.title}</a></div>\n                <div>\n                    {item.textIndex > 0 &&\n                    <span className=\"prev-fragment\" onClick={() => this.prevFragment()}>&lt;</span>\n                    }\n                    {item.textIndex === 0 &&\n                    <span className=\"prev-fragment-disabled\">&lt;</span>\n                    }\n                    {item.textIndex + 1 < item.textList.length &&\n                    <span className=\"next-fragment\" onClick={() => this.nextFragment()}>&gt;</span>\n                    }\n                    {item.textIndex + 1 >= item.textList.length &&\n                    <span className=\"next-fragment-disabled\">&gt;</span>\n                    }\n                </div>\n\n                <div className=\"text\" dangerouslySetInnerHTML={{__html: SingleSearchResult.highlight(item.textList[item.textIndex])}}/>\n\n                <div className=\"preview-image\">\n                    <img src={this.getPreviewSource(item)} alt={item.title} className=\"preview-image\" title={item.title} />\n                </div>\n\n                <div>\n                    <span className=\"author\">{item.author}</span>\n                    <span className=\"url'\" onClick={() => { if (this.props.openDocument) this.props.openDocument(item.url)} }>{item.url}</span>\n                </div>\n                <div className=\"spacer\" />\n            </div>\n        )\n    }\n\n}\n\nexport default SingleSearchResult;\n\n","import React, {Component} from 'react';\n\nimport axios from \"axios\";\n\nimport SingleSearchResult from './single-search-result'\n\nimport '../css/search.css';\n\n// constants\n// const api_base = \"http://localhost:8080/api\";   // the remote SimSage server's location\nconst api_base = window.ENV.api_base;\nconst pageSize = 10;                            // number of search results per page\nconst fragmentCount = 3;                        // number of fragments per search result\nconst scoreThreshold = 0.8125;                  // bot score threshold (0.8125 is a good value)\nconst maxWordDistance = 20;                     // distance between words in search results for scoring\nconst numQNAResults = 1;                        // number of Q&A replies, set to 1\n\n\nexport class SimsageSearch extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            has_error: false,\n\n            // search system\n            busy: false,\n            searchText: '',\n\n            // a result list if applicable after asking\n            page: 0,\n            has_searched: false,\n            search_result_list: [],\n            shard_list: [],\n            bot_response: '',\n            bot_links: [],\n        };\n\n    }\n    componentDidCatch(error, info) {\n        this.setState({ has_error: true });\n        console.log(error, info);\n    }\n    handleSearchTextKeydown(event) {\n        if (event.key === \"Enter\" && this.state.searchText.length > 0) {\n            this.doSearch();\n        }\n    }\n\n    // convert js response to its error output equivalent\n    static get_error(error) {\n        if (typeof error === \"string\" && error.indexOf(\"{\") === 0) {\n            const obj = JSON.parse(error);\n            if (obj && obj[\"response\"] && obj[\"response\"][\"data\"] && obj[\"response\"][\"data\"][\"error\"]) {\n                return obj[\"response\"][\"data\"][\"error\"];\n            } else {\n                return error;\n            }\n        } else {\n            if (error && error[\"response\"] && error[\"response\"][\"data\"] && error[\"response\"][\"data\"][\"error\"]) {\n                return error[\"response\"][\"data\"][\"error\"];\n            } else {\n                return error;\n            }\n        }\n    }\n\n    static getHeaders() {\n        return {\n            headers: {\n                \"API-Version\": \"1\",\n                \"Content-Type\": \"application/json\"\n            }\n        };\n    }\n\n    static http_post(url, payload, fn_success, fn_fail) {\n        axios.post(api_base + url, payload, SimsageSearch.getHeaders())\n            .then(function (response) {\n                if (fn_success) {\n                    fn_success(response);\n                }\n            })\n            .catch(function (error) {\n                if (fn_fail) {\n                    if (error.response === undefined) {\n                        fn_fail('Servers not responding or cannot contact Servers');\n                    } else {\n                        fn_fail(SimsageSearch.get_error(error));\n                    }\n                }\n            });\n    };\n\n    doSearch() {\n        // check about and help - special cases\n        const self = this;\n        if (!self.state.busy) {\n            if (this.state.searchText.length > 0) {\n                self.setState({busy: true});\n                const data = {\n                    organisationId: this.props.organisationId,\n                    kbList: [this.props.kbId],\n                    scoreThreshold: scoreThreshold,\n                    clientId: this.props.clientId,\n                    semanticSearch: true,\n                    query: \"(\" + this.state.searchText + \")\",\n                    queryText: this.state.searchText,\n                    numResults: numQNAResults,\n                    page: this.state.page,\n                    pageSize: pageSize,\n                    shardSizeList: this.state.shard_list,\n                    fragmentCount: fragmentCount,\n                    maxWordDistance: maxWordDistance,\n                    spellingSuggest: false,\n                    contextLabel: '',\n                    contextMatchBoost: 0.01,\n                    sourceId: '',\n                };\n                SimsageSearch.http_post('/semantic/query', data,\n                    (result) => {\n                        if (result && result.data && result.data.messageType === 'message') {\n                            const data = result.data;\n                            const shard_list = (data.shardSizeList) ? data.shardSizeList : [];\n                            const result_list = (data.resultList) ? data.resultList : [];\n                            const bot_response = (data.text) ? data.text : '';\n                            const bot_links = (data.urlList) ? data.urlList : [];\n                            self.setState({shard_list: shard_list,\n                                                 search_result_list: result_list,\n                                                 has_searched: true,\n                                                 bot_response: bot_response,\n                                                 bot_links: bot_links,\n                                                 busy: false});\n                        } else {\n                            self.setState({busy: false});\n                        }\n                    },\n                    (error) => {\n                        self.setState({busy: false});\n                        if (self.props.onError)\n                            self.props.onError('Error', error);\n                    }\n                )\n            }\n        }\n    }\n    openDocument(url) {\n        alert(\"open document \" + url);\n    }\n    render() {\n        if (this.state.has_error) {\n            return <h1>simsage-search.js: Something went wrong.</h1>;\n        }\n        return (\n            <div className=\"search-page\">\n\n                {/* search bar */}\n                <div className=\"search-bar\">\n                    <div className=\"busy-box\">\n                        <span style={{'display': this.state.busy ? '' : 'none', width: '32px'}}>&#8987;</span>\n                    </div>\n                    <div className=\"search-text-box\">\n                        <input type=\"text\" className=\"search-text\"\n                            autoFocus={true}\n                            onChange={(event) => this.setState({searchText: event.target.value})}\n                            onKeyPress={(event) => this.handleSearchTextKeydown(event)}\n                            disabled={this.state.busy}\n                            value={this.state.searchText}\n                        />\n                    </div>\n                    <div className=\"search-button-box\">\n                        <button className=\"btn btn-primary btn-block\" disabled={this.state.busy} onClick={() => this.doSearch()}>\n                            Search\n                        </button>\n                    </div>\n                </div>\n\n\n                {/* bot response display */}\n                {this.state.bot_response !== '' &&\n                    <div className=\"qna-response-bubble\">\n\n                        <div>{this.state.bot_response}</div>\n\n                        <div className=\"url-list\">\n                            {\n                                this.state.bot_links.map((url, index) => {\n                                    return (<div key={index} className=\"url\" onClick={() => this.openDocument(url)}>{url}</div>)\n                                })\n                            }\n                        </div>\n\n                    </div>\n                }\n\n                {/* search result display */}\n\n                {this.state.search_result_list && this.state.search_result_list.length > 0 &&\n                <div>\n                    <div className=\"search-results-box\">\n                        {\n                            this.state.search_result_list.map((item, index) => {\n                                return (<SingleSearchResult key={index}\n                                                            item={item}\n                                                            organisationId={this.props.organisationId}\n                                                            kbId={this.props.kbId}\n                                                            clientId={this.props.clientId}\n                                                            openDocument={(url) => this.openDocument(url)} />)\n                            })\n                        }\n                    </div>\n                </div>\n                }\n\n                {\n                    this.state.search_result_list && this.state.search_result_list.length === 0 &&\n                    this.state.has_searched && this.state.bot_response === '' &&\n                    <div>no results</div>\n                }\n\n\n            </div>\n        );\n    }\n}\n\nexport default SimsageSearch;\n","import React, {Component} from 'react';\nimport SimsageSearch from \"./simsage-search\";\n\n\nexport class SearchPage extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n        }\n    }\n    componentDidCatch(error, info) {\n        this.props.setError(error, info);\n        console.log(error, info);\n    }\n    componentDidMount() {\n    }\n    render() {\n        return (\n             <div>\n                 <SimsageSearch\n                     organisationId=\"c276f883-e0c8-43ae-9119-df8b7df9c574\"\n                     kbId=\"46ff0c75-7938-492c-ab50-442496f5de51\"\n                     clientId=\"37542428-7bf3-45a0-beb4-5179e6931379\"\n                     onError={ (title, message) => alert(title + ':' + message) }\n                 />\n             </div>\n        )\n    }\n}\n\nexport default SearchPage;\n","import React, {Component} from 'react';\n\nimport '../css/common.css';\n\nexport class MessageDialog extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            open: false,\n            title: props.title,\n            message: props.message,\n            callback: props.callback,\n            has_error: false,\n        };\n    }\n    componentDidCatch(error, info) {\n        this.setState({ has_error: true });\n        console.log(error, info);\n    }\n    handleOk() {\n        this.setState({open: false});\n        if (this.state.callback) {\n            this.state.callback(true);\n        }\n    }\n    UNSAFE_componentWillReceiveProps(props) {\n        // see if we have data to start this dialog\n        this.setState({\n            open: (props.message.length > 0),\n            message: props.message,\n            callback: props.callback,\n            title: props.title\n        })\n    }\n    cancel() {\n        if (this.state.callback) {\n            this.state.callback(false);\n        }\n    }\n    ok() {\n        if (this.state.callback) {\n            this.state.callback(true);\n        }\n    }\n    render() {\n        if (this.state.has_error) {\n            return <h1>message-dialog.js: Something went wrong.</h1>;\n        }\n        if (!this.state.open) {\n            return (<div />)\n        }\n        return (\n            <div className=\"modal\" tabIndex=\"-1\" role=\"dialog\" style={{display: \"inline\"}}>\n                <div className={\"modal-dialog modal-dialog-centered modal-lg\"} role=\"document\">\n                    <div className=\"modal-content shadow p-3 mb-5 bg-white rounded message-dialog-height\">\n\n                        <div className=\"modal-header\">{this.state.title}</div>\n                        <div className=\"modal-body\">\n                            <div>\n                                <div dangerouslySetInnerHTML={{__html: this.state.message}} />\n                            </div>\n                        </div>\n                        <div className=\"modal-footer\">\n                            <button className=\"btn btn-primary btn-block\" onClick={() => this.cancel()}>Cancel</button>\n                            <button className=\"btn btn-primary btn-block\" onClick={() => this.ok()}>OK</button>\n                        </div>\n\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default MessageDialog;\n","import React, {Component} from 'react';\n\nimport '../css/autocomplete.css';\n\n\nexport class AutoComplete extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            has_error: false,\n        }\n    }\n    componentDidCatch(error, info) {\n        this.setState({ has_error: true });\n        console.log(error, info);\n    }\n    select(value) {\n        if (this.props.onSelect) {\n            if (value && value.length > 0) {\n                for (const item of this.props.data_list) {\n                    if (item.id === value) {\n                        this.props.onSelect(item);\n                        break;\n                    }\n                }\n            } else {\n                this.props.onSelect(\"\");\n            }\n        }\n    }\n    render() {\n        if (this.state.has_error) {\n            return (<h1>auto-complete.js: Something went wrong.</h1>);\n        }\n        const list = this.props.data_list ? this.props.data_list : [];\n        return (\n            <div className=\"select-control\">\n                <span className=\"select-label\">{this.state.label}</span>\n                <span className=\"select-box\">\n                    <select className=\"form-select\" onChange={(event) => this.select(event.target.value)} defaultValue={this.props.value} aria-label=\"Default select example\">\n                        <option value=\"\">not selected</option>\n                        {\n                            list.map((suggestion, index) => {\n                                return (<option value={suggestion.id} key={index}>{suggestion.name}</option>);\n                            })\n                        }\n                    </select>\n                </span>\n            </div>\n        )\n    }\n}\n\nexport default AutoComplete;\n","import React, {Component} from 'react';\n\n\nexport class OrganisationEdit extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            has_error: false,\n            open: props.open,\n            onSave: props.onSave,\n            onError: props.onError,\n\n            id: this.props.id,\n            name: this.props.name,\n            enabled: this.props.enabled,\n        };\n    }\n    componentDidCatch(error, info) {\n        this.setState({ has_error: true });\n        console.log(error, info);\n    }\n    handleSave() {\n        if (this.state.onSave) {\n            this.state.onSave({\n                id: this.state.id,\n                name: this.state.name,\n                enabled: this.state.enabled,\n            });\n        }\n    }\n    handleCancel() {\n        if (this.state.onSave) {\n            this.state.onSave(null);\n        }\n    }\n    UNSAFE_componentWillReceiveProps(props) {\n        this.setState({\n            open: props.open,\n            onSave: props.onSave,\n            onError: props.onError,\n\n            id: props.id,\n            name: props.name,\n            enabled: props.enabled,\n        })\n    }\n    render() {\n        if (this.state.has_error) {\n            return <h1>organisation-edit.js: Something went wrong.</h1>;\n        }\n        if (!this.state.open)\n            return (<div />);\n        return (\n            <div className=\"modal\" tabIndex=\"-1\" role=\"dialog\" style={{display: \"inline\"}}>\n                <div className={\"modal-dialog modal-dialog-centered modal-lg\"} role=\"document\">\n                    <div className=\"modal-content shadow p-3 mb-5 bg-white rounded\">\n\n                        <div className=\"modal-header\">Edit Organisation</div>\n                        <div className=\"modal-body\">\n                            <div>\n\n                                <div className=\"control-row\">\n                                    <span className=\"label-2\">name</span>\n                                    <span className=\"text\">\n                                        <input type=\"text\" className=\"form-control\"\n                                               autoFocus={true}\n                                               onChange={(event) => this.setState({name: event.target.value})}\n                                               placeholder=\"name\"\n                                               value={this.state.name}\n                                        />\n                                    </span>\n                                </div>\n\n\n                                <div className=\"control-row\">\n                                    <span className=\"checkbox-only\">\n                                        <input type=\"checkbox\"\n                                            checked={this.state.enabled}\n                                            onChange={(event) => { this.setState({enabled: event.target.checked}); }}\n                                            value=\"enable this organisation?\"\n                                        />\n                                    </span>\n                                    <span>organisation enabled?</span>\n                                </div>\n\n                            </div>\n                        </div>\n                        <div className=\"modal-footer\">\n                            <button className=\"btn btn-primary btn-block\" onClick={() => this.handleCancel()}>Cancel</button>\n                            <button className=\"btn btn-primary btn-block\" onClick={() => this.handleSave()}>Save</button>\n                        </div>\n\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default OrganisationEdit;\n","import React from 'react';\n\nimport '../css/restore-upload.css';\n\nexport class RestoreUpload extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            filename: '',\n            fileType: '',\n            data: '',\n            organisationId: props.organisationId,\n            onError: props.onError,\n        };\n    }\n\n    UNSAFE_componentWillReceiveProps(nextProps, futureProps) {\n        this.setState({\n            organisationId: nextProps.organisationId,\n            onError: nextProps.onError,\n        });\n    }\n\n    _handleImageChange(e) {\n        e.preventDefault();\n\n        const self = this;\n        const reader = new FileReader();\n        const file = e.target.files[0];\n        const filename = file['name'];\n        const fileType = file['type'];\n\n        reader.onloadend = () => {\n            self.setState({\n                filename: filename,\n                fileType: fileType,\n                data: reader.result\n            });\n        };\n        reader.readAsDataURL(file)\n    }\n\n    upload() {\n        if (this.state.data) {\n            const payload = {\n                organisationId: this.state.organisationId,\n                data: this.state.data,\n            };\n            if (this.props.doUpload) {\n                this.props.doUpload(payload);\n            }\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"restore-upload\">\n                <form onSubmit={(e) => this._handleSubmit(e)} className=\"upload-container\">\n                    <div className=\"form-offset\">\n                        {\n                            this.state.data && this.state.data.length > 0 && this.state.fileType === \"text/plain\" &&\n                            <div className=\"restore-image-button\" onClick={() => this.upload()}><img\n                                className=\"image-size\" src=\"../images/restore.svg\"\n                                title={\"Click here to restore data from \\\"\" + this.state.filename + \"\\\"\"}\n                                alt=\"restore data from file\"/></div>\n                        }\n                        <input className=\"upload-margin\"\n                               type=\"file\"\n                               onChange={(e) => this._handleImageChange(e)}/>\n                    </div>\n                </form>\n            </div>\n        )\n    }\n}\n\nexport default RestoreUpload;\n","import React, {Component} from 'react';\n\nimport '../css/pagination.css';\n\n\nexport class Pagination extends Component {\n    render() {\n        let num_pages = this.props.count / this.props.rowsPerPage;\n        if (num_pages !== parseInt(\"\" + num_pages)) {\n            num_pages += 1;\n        }\n        num_pages = parseInt(\"\" + num_pages);\n        return (\n            <nav aria-label=\"Page navigation example\">\n                <ul className=\"pagination\">\n                    <li className={\"page-item\" + (this.props.page === 0 ? \" disabled\" : \"\")}\n                        onClick={() => { if (this.props.page > 0) this.props.onChangePage(this.props.page - 1)}}>\n                        <div className=\"page-link link-cursor\" aria-label=\"Previous\">\n                            <span aria-hidden=\"true\">&laquo;&nbsp;</span>\n                            <span className=\"sr-only\">previous</span>\n                        </div>\n                    </li>\n                    <li className=\"page-item\">\n                        <span className=\"page-display\">\n                            <label>{\"page \" + (this.props.page + 1) + \" of \" + num_pages}</label>\n                        </span>\n                    </li>\n                    <li className=\"page-item\">\n                        <div>\n                            <span className=\"page-size-label\">page size</span>\n                            <span className=\"page-size-select\">\n                                <select className=\"form-select\"\n                                        onChange={(event) => this.props.onChangeRowsPerPage(event.target.value)}\n                                        defaultValue={this.props.rowsPerPage} aria-label=\"set page-size\">\n                                    {\n                                        this.props.rowsPerPageOptions.map((rows, index) => {\n                                            return (<option value={rows} key={index}>{rows}</option>);\n                                        })\n                                    }\n                                </select>\n                            </span>\n                        </div>\n                    </li>\n                    <li className={\"page-item\" + (this.props.page + 1 >= num_pages ? \" disabled\" : \"\")}\n                        onClick={() => { if (this.props.page + 1 < num_pages) this.props.onChangePage(this.props.page + 1)}}>\n                        <div className=\"page-link link-cursor\" aria-label=\"Next\">\n                            <span className=\"sr-only\">next</span>\n                            <span aria-hidden=\"true\">&nbsp;&raquo;</span>\n                        </div>\n                    </li>\n                </ul>\n            </nav>\n        )\n    }\n}\n\n","import React from 'react';\n\nimport {Api} from '../common/api'\n\nimport {connect} from \"react-redux\";\nimport {bindActionCreators} from \"redux\";\nimport {appCreators} from \"../actions/appActions\";\nimport Comms from \"../common/comms\";\nimport {Home} from \"../home\";\nimport {OrganisationEdit} from \"./organisation-edit\"\nimport RestoreUpload from \"../common/restore-upload\";\nimport {Pagination} from \"../common/pagination\";\n\nimport '../css/organisations.css';\n\n\nexport class Organisations extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            edit_organisation: false,\n\n            edit_organisation_id: \"\",\n            name: \"\",\n            max_tpm: 0,\n            analytics_window_size_in_months: 12,\n            enabled: true,\n            bot_enabled: true,\n            analytics_enabled: true,\n            operator_enabled: true,\n            language_enabled: true,\n\n            // organisation id view dialog\n            copied_visible: '',\n            view_organisation_id: false,\n\n            organisation: null,\n\n            // pagination\n            page_size: 5,\n            page: 0,\n        };\n    }\n    componentDidCatch(error, info) {\n        this.props.setError(error, info);\n        console.log(error, info);\n    }\n    addNewOrganisation() {\n        this.setState({edit_organisation: true,\n                             organisation: null,\n                             id: \"\",\n                             name: \"\",\n                             enabled: true,\n        })\n    }\n    refreshSecurityId() {\n        this.setState({edit_security_id: Api.createGuid()})\n    }\n    editOrganisation(organisation) {\n        if (organisation) {\n            this.setState({edit_organisation: true,\n                                 organisation: organisation,\n                                 id: organisation.id,\n                                 name: organisation.name,\n                                 enabled: Api.defined(organisation.enabled) ? organisation.enabled : true,\n            })\n        }\n    }\n    deleteOrganisationAsk(organisation) {\n        if (organisation && this.props.openDialog) {\n            this.props.openDialog(\"are you sure you want to remove \\\"\" + organisation.name + \"\\\" ?\",\n                                  \"Remove Organisation\", (action) => { this.deleteOrganisation(action) });\n            this.setState({organisation: organisation})\n        }\n    }\n    deleteOrganisation(action) {\n        if (action) {\n            this.props.deleteOrganisation(this.state.organisation.id);\n        }\n        if (this.props.closeDialog) {\n            this.props.closeDialog();\n        }\n    }\n    changePage(page) {\n        this.setState({page: page});\n    }\n    changePageSize(page_size) {\n        this.setState({page_size: page_size});\n    }\n    handleSearchTextKeydown(event) {\n        if (event.key === \"Enter\") {\n            this.props.getOrganisationList();\n        }\n    }\n    getOrganisations() {\n        const paginated_list = [];\n        const first = this.state.page * this.state.page_size;\n        const last = first + this.state.page_size;\n        for (const i in this.props.organisation_list) {\n            if (i >= first && i < last) {\n                if (this.props.organisation_list.hasOwnProperty(i))\n                    paginated_list.push(this.props.organisation_list[i]);\n            }\n        }\n        return paginated_list;\n    }\n    save(organisation) {\n        if (organisation) {\n            if (organisation.name.length > 0) {\n                this.props.updateOrganisation({\n                    id: Api.defined(organisation.id) ? organisation.id : '',\n                    name: organisation.name,\n                    enabled: organisation.enabled,\n                });\n                this.setState({edit_organisation: false, organisation: null});\n            } else {\n                this.props.setError(\"Incomplete Data\", \"Please complete all fields.  Must have a name.\");\n            }\n        } else {\n            this.setState({edit_organisation: false, organisation: null});\n        }\n    }\n    backupAll() {\n        Comms.download_backup(this.props.selected_organisation_id, 'all');\n    }\n    backup(organisationId) {\n        Comms.download_backup(organisationId, 'specific');\n    }\n    restore(data) {\n        if (data && data.data && data.data.length > 0) {\n            this.props.restore(data.data);\n        }\n    }\n    viewIds(organisation) {\n        this.setState({view_organisation_id: true, organisation: organisation});\n    }\n    startCopiedVisible(org_id) {\n        this.setState({copied_visible: org_id});\n        window.setTimeout(() => { this.setState({copied_visible: \"\"})}, 1000);\n    }\n    render() {\n        const theme = this.props.theme;\n        const isAdmin = Home.hasRole(this.props.user, ['admin']);\n        return (\n            <div className=\"organisation-display\">\n                <OrganisationEdit open={this.state.edit_organisation}\n                                  id={this.state.id}\n                                  theme={theme}\n                                  name={this.state.name}\n                                  enabled={this.state.enabled}\n                                  onError={(title, err) => this.props.showError(title, err)}\n                                  onSave={(data) => this.save(data)} />\n\n                <div className=\"filter-find-box\">\n                    <span className=\"filter-label\">filter</span>\n                    <span className=\"filter-find-text\">\n                            <input type=\"text\" value={this.props.user_filter} autoFocus={true} className={theme}\n                                   onKeyPress={(event) => this.handleSearchTextKeydown(event)}\n                                   onChange={(event) => {\n                                       this.props.setOrganisationFilter(event.target.value)\n                                   }}/>\n                        </span>\n                    <span className=\"filter-find-image\">\n                            <img className=\"image-size\"\n                                 onClick={() => this.props.getOrganisationList()}\n                                 src=\"../images/dark-magnifying-glass.svg\" title=\"filter\" alt=\"filter\"/>\n                        </span>\n                </div>\n\n                <br clear=\"both\" />\n\n                <div>\n                    <table className=\"table\">\n                        <thead>\n                            <tr className='table-header'>\n                                <th className='table-header table-width-70'>organisation</th>\n                                <th className='table-header'>actions</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {\n                                this.getOrganisations().map((organisation) => {\n                                    return (\n                                        <tr key={organisation.id}>\n                                            <td>\n                                                <div className=\"org-label\">{organisation.name}</div>\n                                            </td>\n                                            <td>\n                                                <div className=\"linkButton\"\n                                                     onClick={() => { this.viewIds(organisation); }}>\n                                                    <img src=\"../images/id.svg\" className=\"image-size\"\n                                                         title=\"view knowledge base ids\" alt=\"ids\"/>\n                                                </div>\n                                                <div className=\"linkButton\" onClick={() => this.editOrganisation(organisation)}>\n                                                    <img src=\"../images/edit.svg\" className=\"image-size\" title=\"edit organisation\" alt=\"edit\"/>\n                                                </div>\n                                                <div className=\"linkButton\" onClick={() => this.deleteOrganisationAsk(organisation)}>\n                                                    <img src=\"../images/delete.svg\" className=\"image-size\" title=\"remove organisation\" alt=\"remove\"/>\n                                                </div>\n                                                {isAdmin &&\n                                                <div className=\"linkButton\" onClick={() => this.backup(organisation.id)}>\n                                                    <img src=\"../images/backup.svg\" className=\"image-size\" title={\"backup this organisation\"}\n                                                         alt={\"backup \" + organisation.name} />\n                                                </div>\n                                                }\n                                            </td>\n                                        </tr>\n                                    )\n                                })\n                            }\n                            <tr>\n                                <td colSpan={2}>\n                                    {isAdmin &&\n                                    <div className=\"imageButton\" onClick={() => this.backupAll()}><img\n                                        className=\"addImage\" src=\"../images/backup.svg\"\n                                        title=\"backup all organisations\"\n                                        alt=\"backup all organisations\"/></div>\n                                    }\n                                    <div className=\"imageButton\" onClick={() => this.addNewOrganisation()}><img\n                                        className=\"addImage\" src=\"../images/add.svg\" title=\"add new organisation\"\n                                        alt=\"add new organisation\"/></div>\n                                    <br />\n                                    {isAdmin &&\n                                    <RestoreUpload doUpload={(data) => this.restore(data)}\n                                                   organisationId={this.props.selected_organisation_id}\n                                                   onError={(err) => this.props.setError(\"Error\", err)} />\n                                    }\n                                </td>\n                            </tr>\n                        </tbody>\n                    </table>\n\n                    <Pagination\n                        rowsPerPageOptions={[5, 10, 25]}\n                        component=\"div\"\n                        count={this.props.organisation_list.length}\n                        rowsPerPage={this.state.page_size}\n                        page={this.state.page}\n                        onChangePage={(page) => this.changePage(page)}\n                        onChangeRowsPerPage={(rows) => this.changePageSize(rows)}\n                    />\n\n                </div>\n\n\n                {\n                    this.state.view_organisation_id &&\n                    <div className=\"modal\" tabIndex=\"-1\" role=\"dialog\" style={{display: \"inline\"}}>\n                        <div className={\"modal-dialog modal-dialog-centered modal-lg\"} role=\"document\">\n                            <div className=\"modal-content organisation-id-modal shadow p-3 mb-5 bg-white rounded\">\n                                <div\n                                    className=\"modal-header\">{this.state.organisation != null ? this.state.organisation.name : \"\"} organisation-id\n                                </div>\n                                <div className=\"modal-body\">\n                                    <div>\n                                        <div className=\"organisationIdLabel\">\n                                            organisation id\n                                        </div>\n                                        <div\n                                            className=\"floatLeft\">{this.state.organisation ? this.state.organisation.id : \"\"}</div>\n                                        <span className=\"copyImageSpan\" title={'copy organisation id'}>\n                                            <img\n                                                src={theme === 'light' ? '../images/clipboard-copy.svg' : '../images/clipboard-copy-dark.svg'}\n                                                className=\"clipboardImage\" alt={'copy'}\n                                                onClick={() => {\n                                                    if (Api.writeToClipboard(this.state.organisation ? this.state.organisation.id : \"\"))\n                                                        this.startCopiedVisible(this.state.organisation.id);\n                                                }}/>\n                                            {this.state.organisation != null && this.state.copied_visible === this.state.organisation.id &&\n                                            <div className=\"copiedStyle\">copied</div>\n                                            }\n                                        </span>\n                                        <br clear='both'/>\n                                    </div>\n                                </div>\n                                <div className=\"modal-footer\">\n                                    <button className=\"btn btn-primary btn-block\"\n                                            onClick={() => this.setState({view_organisation_id: false})}>Close\n                                    </button>\n                                </div>\n\n                            </div>\n                        </div>\n                    </div>\n                }\n\n\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = function(state) {\n    return {\n        error: state.appReducer.error,\n        error_title: state.appReducer.error_title,\n        user: state.appReducer.user,\n        theme: state.appReducer.theme,\n\n        selected_organisation_id: state.appReducer.selected_organisation_id,\n\n        organisation_list: state.appReducer.organisation_list,\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    dispatch => bindActionCreators(appCreators, dispatch)\n)(Organisations);\n\n","import React, {Component} from 'react';\n\nimport '../css/chip.css';\n\n\nexport class Chip extends Component {\n    render() {\n        return (\n            <div className=\"role-chip\" onClick={() => this.props.onClick()}>\n                {this.props.label}\n            </div>\n        )\n    }\n}\n\n","import React, {Component} from 'react';\n\nimport '../css/group-selector.css';\n\n\n// select users from a list of available ones\nexport class GroupSelector extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            has_error: false,\n            selected_group_list: props.selected_group_list ? props.selected_group_list: [],\n            selectedFilter: '',\n            availableFilter: '',\n        };\n    }\n    UNSAFE_componentWillReceiveProps(props) {\n        this.setState({\n            selected_group_list: props.selected_group_list ? props.selected_group_list: [],\n        })\n    }\n    componentDidCatch(error, info) {\n        this.setState({ has_error: true });\n        console.log(error, info);\n    }\n    update_parent(selected_group_list) {\n        if (this.props.onChange) {\n            this.props.onChange(selected_group_list);\n        }\n    }\n    removeUserOrGroup(group) {\n        const new_groups = [];\n        for (const s_group of this.state.selected_group_list) {\n            if (s_group.name !== group.name) {\n                new_groups.push(s_group);\n            }\n        }\n        this.setState({selected_group_list: new_groups});\n        this.update_parent(new_groups);\n    }\n    addUserOrGroup(group) {\n        const selected_group_list = JSON.parse(JSON.stringify(this.state.selected_group_list));\n        selected_group_list.push(group);\n        this.setState({selected_group_list: selected_group_list});\n        this.update_parent(selected_group_list);\n    }\n    getAllGroups() {\n        return this.props.group_list ? this.props.group_list : [];\n    }\n    getAllUsers() {\n        return this.props.user_list ? this.props.user_list : [];\n    }\n    getAvailableGroupsAndUsers() {\n        const list = [];\n        const filter = this.state.availableFilter.trim().toLowerCase();\n        for (const group of this.getAllGroups()) {\n            let found = false;\n            for (const s_group of this.state.selected_group_list) {\n                if (group.name === s_group.name) {\n                    found = true;\n                }\n            }\n            if (!found) {\n                if (filter.length === 0 || group.name.toLowerCase().indexOf(filter) >= 0)\n                    group.isUser = false;\n                    list.push(group);\n            }\n        }\n        if (this.props.include_users) {\n            for (const user of this.getAllUsers()) {\n                let found = false;\n                for (const s_user of this.state.selected_group_list) {\n                    if (user.email === s_user.name) {\n                        found = true;\n                    }\n                }\n                if (!found) {\n                    if (filter.length === 0 || user.email.toLowerCase().indexOf(filter) >= 0)\n                        list.push({\n                            organisationId: this.props.organisation_id,\n                            name: user.email,\n                            id: user.id,\n                            isUser: true\n                        });\n                }\n            }\n        }\n        return list;\n    }\n    getSelectedGroups() {\n        const group_list = this.state.selected_group_list ? this.state.selected_group_list : [];\n        const selected_group_list = [];\n        const filter = this.state.selectedFilter.trim().toLowerCase();\n        for (const group of group_list) {\n            if (group && group.name) {\n                if (filter.length === 0 || group.name.toLowerCase().indexOf(filter) >= 0)\n                    selected_group_list.push(group);\n            }\n        }\n        return selected_group_list;\n    }\n    selectAll() {\n        const new_groups = [];\n        for (const group of this.getAllGroups()) {\n            new_groups.push(group);\n        }\n        this.setState({selected_group_list: new_groups});\n        this.update_parent(new_groups);\n    }\n    clearAll() {\n        this.setState({selected_group_list: []});\n        this.update_parent([]);\n    }\n    render() {\n        if (this.state.has_error) {\n            return <h1>group-selector.js: Something went wrong.</h1>;\n        }\n        return (\n            <div>\n\n                <div className=\"group-block\">\n                    <div className=\"group-label\">selected groups\n                        <span className=\"filter-label\">filter </span>\n                        <span className=\"filter-text-box\"><input type=\"text\" className=\"filter-text\" value={this.state.selectedFilter}\n                                                                 onChange={(event) => { this.setState({selectedFilter: event.target.value})}} />\n                            <span className=\"clear\" title=\"clear filter\" onClick={() => this.setState({selectedFilter: ''})}>&times;</span>\n                        </span>\n                    </div>\n                    <div className=\"group-area\">\n                        {\n                            this.getSelectedGroups().map((item, i) => {\n                                return (<div key={i} className=\"user-name\" onClick={() => this.removeUserOrGroup(item)} title={item.name + (item.isUser ? \" (user)\" : \" (group)\")}>\n                                    <span className=\"user-group-image-box\"><img className=\"user-group-image\" src={item.isUser ? \"../images/user.svg\" : \"../images/group.svg\"} alt=\"user\"/></span><span>{item.name}</span>\n                                </div>)\n                            })\n                        }\n                    </div>\n                </div>\n\n                <div className=\"group-controls\">\n                    <div className=\"button\" title=\"move all to selected groups\" onClick={() => this.selectAll()}>&lt;&lt;</div>\n                    <div className=\"button\" title=\"move all to available groups\" onClick={() => this.clearAll()}>&gt;&gt;</div>\n                </div>\n\n                <div className=\"group-block\">\n                    <div className=\"group-label\">available groups\n                        <span className=\"filter-label\">filter </span>\n                        <span className=\"filter-text-box\"><input type=\"text\" className=\"filter-text\" value={this.state.availableFilter}\n                                                                 onChange={(event) => { this.setState({availableFilter: event.target.value})}} />\n                            <span className=\"clear\" title=\"clear filter\" onClick={() => this.setState({availableFilter: ''})}>&times;</span>\n                        </span>\n                    </div>\n                    <div className=\"group-area\">\n                        {\n                            this.getAvailableGroupsAndUsers().map((item, i) => {\n                                return (<div key={i} className=\"user-name\" onClick={() => this.addUserOrGroup(item)} title={item.name + (item.isUser ? \" (user)\" : \" (group)\")}>\n                                    <span className=\"user-group-image-box\"><img className=\"user-group-image\" src={item.isUser ? \"../images/user.svg\" : \"../images/group.svg\"} alt=\"user\"/></span><span>{item.name}</span>\n                                </div>)\n                            })\n                        }\n                    </div>\n                </div>\n\n            </div>\n        );\n    }\n}\n\nexport default GroupSelector;\n","import React from 'react';\n\nimport {Chip} from \"../common/chip\";\nimport {Home} from '../home';\nimport GroupSelector from \"../common/group-selector\";\nimport Api from \"../common/api\";\n\nimport '../css/users.css';\n\n\nconst roles = ['admin', 'operator', 'dms', 'manager'];\n\n// props:  theme, open, edit_user_id, edit_email, edit_first_name, edit_surname, edit_password, edit_roles, edit_groups, edit_kb_list\n// fns: onClose(save:boolean)\nexport class UserEdit extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            selectedTab: 'details',\n            edit_password_2: '',\n            edit_user_id: this.props.edit_user_id ? this.props.edit_user_id : '',\n            edit_email: this.props.edit_email ? this.props.edit_email : '',\n            edit_first_name: this.props.edit_first_name ? this.props.edit_first_name : '',\n            edit_surname: this.props.edit_surname ? this.props.edit_surname : '',\n            edit_password: this.props.edit_password ? this.props.edit_password : '',\n            edit_roles: this.props.edit_roles ? this.props.edit_roles : [],\n            edit_kb_list: this.props.edit_kb_list ? this.props.edit_kb_list : [],\n            edit_groups: this.props.edit_groups ? this.props.edit_groups : [],\n        };\n    }\n    UNSAFE_componentWillReceiveProps(nextProps, nextContext) {\n        this.setState({\n            selectedTab: 'details',\n            edit_user_id: nextProps.edit_user_id ? nextProps.edit_user_id : '',\n            edit_email: nextProps.edit_email ? nextProps.edit_email : '',\n            edit_first_name: nextProps.edit_first_name ? nextProps.edit_first_name : '',\n            edit_surname: nextProps.edit_surname ? nextProps.edit_surname : '',\n            edit_password: nextProps.edit_password ? nextProps.edit_password : '',\n            edit_roles: nextProps.edit_roles.length > 0 ? nextProps.edit_roles : [],\n            edit_kb_list: nextProps.edit_kb_list.length > 0 ? nextProps.edit_kb_list : [],\n            edit_groups: nextProps.edit_groups.length > 0 ? nextProps.edit_groups : [],\n        });\n    }\n    componentDidCatch(error, info) {\n        this.props.setError(error, info);\n        console.log(error, info);\n    }\n    close(save) {\n        let do_save = true;\n        if (save) {\n            if (this.state.edit_password_2 !== this.state.edit_password) {\n                do_save = false;\n                if (this.props.onError) {\n                    this.props.onError(\"Error\", \"passwords do not match\");\n                }\n            }\n        }\n        if (do_save) {\n            if (this.props.onClose) {\n                if (save) {\n                    this.props.onClose(save, {\n                        user_id: this.state.edit_user_id,\n                        email: this.state.edit_email,\n                        first_name: this.state.edit_first_name,\n                        surname: this.state.edit_surname,\n                        password: this.state.edit_password,\n                        roles: this.state.edit_roles,\n                        kb_list: this.state.edit_kb_list,\n                        groups: this.state.edit_groups,\n                    });\n                } else {\n                    this.props.onClose(save, {});\n                }\n            }\n        }\n    }\n    fillNames() {\n        function capitalizeFirstLetter(string) {\n            if (string.length > 0) {\n                return string.slice(0, 1).toUpperCase() + string.slice(1);\n            }\n            return string;\n        }        // if there is an email address and there is no first-surname - try and use the email address to complete\n        if (this.state.edit_email.length > 0 && this.state.edit_email.indexOf('@') > 0) {\n            const firstPart = this.state.edit_email.split('@')[0];\n            const firstNameSurname = firstPart.split('.');\n            let newFirst = \"\";\n            let newSur = \"\";\n            if (this.state.edit_first_name.length === 0) {\n                newFirst = capitalizeFirstLetter(firstNameSurname[0]);\n            }\n            if (this.state.edit_surname.length === 0 && firstNameSurname.length > 1) {\n                newSur = capitalizeFirstLetter(firstNameSurname[1]);\n            }\n            if (newFirst.length > 0 && newSur.length > 0) {\n                this.setState({edit_first_name: newFirst, edit_surname: newSur});\n\n            } else if (newFirst.length > 0) {\n                this.setState({edit_first_name: newFirst});\n\n            } else if (newSur.length > 0) {\n                this.setState({edit_surname: newSur});\n            }\n        }\n    }\n    removeRoleFromUser(role) {\n        const new_roles = [];\n        for (const e_role of this.state.edit_roles) {\n            if (role !== e_role) {\n                new_roles.push(e_role);\n            }\n        }\n        this.setState({edit_roles: new_roles});\n    }\n    addRoleToUser(role) {\n        const roles = JSON.parse(JSON.stringify(this.state.edit_roles));\n        let found = false;\n        for (const e_role of this.state.edit_roles) {\n            if (role === e_role) {\n                found = true;\n            }\n        }\n        if (!found) {\n            roles.push(role);\n            this.setState({edit_roles: roles});\n        }\n    }\n    getAvailableRoles() {\n        const list = [];\n        const isAdmin = Home.hasRole(this.props.user, ['admin']);\n        for (const available_role of roles) {\n            let found = false;\n            for (const role of this.state.edit_roles) {\n                if (available_role === role) {\n                    found = true;\n                }\n            }\n            if (!found) {\n                if (available_role === 'admin' && isAdmin) {\n                    list.push(available_role);\n                } else if (available_role !== 'admin') {\n                    list.push(available_role);\n                }\n            }\n        }\n        return list;\n    }\n\n    static hasOperatorRole(edit_roles) {\n        if (edit_roles) {\n            for (const role of edit_roles) {\n                if (role === \"operator\") {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n\n    removeKBFromUser(kb) {\n        const new_kbs = [];\n        for (const ekb of this.state.edit_kb_list) {\n            if (kb.kbId !== ekb.kbId) {\n                new_kbs.push(ekb);\n            }\n        }\n        this.setState({edit_kb_list: new_kbs});\n    }\n    addKBToUser(kb) {\n        const kbs = JSON.parse(JSON.stringify(this.state.edit_kb_list));\n        kbs.push(kb);\n        this.setState({edit_kb_list: kbs});\n    }\n    getAvailableKnowledgeBases() {\n        const list = [];\n        for (const available_kb of this.props.knowledge_base_list) {\n            let found = false;\n            for (const kb of this.state.edit_kb_list) {\n                if (available_kb.kbId === kb.kbId) {\n                    found = true;\n                }\n            }\n            if (!found) {\n                list.push(available_kb);\n            }\n        }\n        return list;\n    }\n    render() {\n        if (!this.props.open)\n            return (<div />);\n        return (\n            <div className=\"modal user-display\" tabIndex=\"-1\" role=\"dialog\" style={{display: \"inline\"}}>\n                <div className={\"modal-dialog modal-dialog-centered modal-xl\"} role=\"document\">\n                    <div className=\"modal-content shadow p-3 mb-5 bg-white rounded\">\n                        <div className=\"modal-header\">{this.props.edit_user_id ? \"Edit User\" : \"Add New User\"}</div>\n                        <div className=\"modal-body\">\n\n                            <ul className=\"nav nav-tabs\">\n                                <li className=\"nav-item nav-cursor\">\n                                    <div className={\"nav-link \" + (this.state.selectedTab === 'details' ? 'active' : '')}\n                                         onClick={() => this.setState({selectedTab: 'details'})}>user details</div>\n                                </li>\n                                <li className=\"nav-item nav-cursor\">\n                                    <div className={\"nav-link \" + (this.state.selectedTab === 'roles' ? 'active' : '')}\n                                         onClick={() => this.setState({selectedTab: 'roles'})}>roles</div>\n                                </li>\n                                <li className=\"nav-item nav-cursor\">\n                                    <div className={\"nav-link \" + (this.state.selectedTab === 'groups' ? 'active' : '')}\n                                         onClick={() => this.setState({selectedTab: 'groups'})}>groups</div>\n                                </li>\n                            </ul>\n\n                            {\n                                this.state.selectedTab === 'details' &&\n                                <div className=\"tab-content\">\n\n                                    <div className=\"control-row\">\n                                        <span className=\"label-2\">email</span>\n                                        <span className=\"text\">\n                                            <form>\n                                                <input type=\"text\" className=\"form-control\"\n                                                    autoFocus={true}\n                                                    autoComplete=\"false\"\n                                                    placeholder=\"email\"\n                                                    value={this.state.edit_email}\n                                                    onBlur={() => this.fillNames()}\n                                                    onChange={(event) => this.setState({edit_email: event.target.value})}\n                                                />\n                                                </form>\n                                        </span>\n                                    </div>\n\n                                    <div className=\"control-row\">\n                                        <span className=\"label-2\">first name</span>\n                                        <span className=\"text\">\n                                            <form>\n                                                <input type=\"text\" className=\"form-control\"\n                                                       autoComplete=\"false\"\n                                                       placeholder=\"first name\"\n                                                       value={this.state.edit_first_name}\n                                                       onChange={(event) => this.setState({edit_first_name: event.target.value})}\n                                            />\n                                            </form>\n                                        </span>\n                                    </div>\n\n                                    <div className=\"control-row\">\n                                        <span className=\"label-2\">surname</span>\n                                        <span className=\"text\">\n                                            <form>\n                                                <input type=\"text\" className=\"form-control\"\n                                                       autoComplete=\"false\"\n                                                       placeholder=\"surname\"\n                                                       value={this.state.edit_surname}\n                                                       onChange={(event) => this.setState({edit_surname: event.target.value})}\n                                                />\n                                            </form>\n                                        </span>\n                                    </div>\n\n                                    <div className=\"control-row\">\n                                        <span className=\"label-2\">password</span>\n                                        <span className=\"text\">\n                                            <form>\n                                                <input type=\"password\" className=\"form-control\"\n                                                       autoComplete=\"false\"\n                                                       placeholder={this.props.edit_user_id ? \"leave blank not to change\" : \"password\"}\n                                                       value={this.state.edit_password}\n                                                       onChange={(event) => this.setState({edit_password: event.target.value})}\n                                                />\n                                            </form>\n                                        </span>\n                                    </div>\n\n                                    <div className=\"control-row\">\n                                        <span className=\"label-2\">verify password</span>\n                                        <span className=\"text\">\n                                            <form>\n                                                <input type=\"password\" className=\"form-control\"\n                                                       autoComplete=\"false\"\n                                                       placeholder={this.props.edit_user_id ? \"leave blank not to change\" : \"verify password\"}\n                                                       value={this.state.edit_password_2}\n                                                       onChange={(event) => this.setState({edit_password_2: event.target.value})}\n                                                />\n                                            </form>\n                                        </span>\n                                    </div>\n\n                                </div>\n                            }\n\n                            {\n                                this.state.selectedTab === 'roles' &&\n                                <div className=\"tab-content\">\n                                    <div>\n                                        <div className=\"role-block\">\n                                            <div className=\"role-label\">SimSage roles</div>\n                                            <div className=\"role-area\">\n                                                {\n                                                    this.state.edit_roles.map((role, i) => {\n                                                        return (<Chip key={i} color=\"secondary\"\n                                                                      onClick={() => this.removeRoleFromUser(role)}\n                                                                      label={Api.getPrettyRole(role)} variant=\"outlined\"/>)\n                                                    })\n                                                }\n                                            </div>\n                                        </div>\n                                        <div className=\"role-block\">\n                                            <div className=\"role-label\">available SimSage roles</div>\n                                            <div className=\"role-area\">\n                                                {\n                                                    this.getAvailableRoles().map((role, i) => {\n                                                        return (<Chip key={i} color=\"primary\"\n                                                                      onClick={() => this.addRoleToUser(role)}\n                                                                      label={Api.getPrettyRole(role)} variant=\"outlined\"/>)\n                                                    })\n                                                }\n                                            </div>\n                                        </div>\n                                    </div>\n\n                                    <br style={{clear: 'both'}} />\n\n                                    {UserEdit.hasOperatorRole(this.state.edit_roles) &&\n                                    <div>\n                                        <div className=\"role-block\">\n                                            <div className=\"role-label\">operator's knowledge bases</div>\n                                            <div className=\"role-area\">\n                                                {\n                                                    this.state.edit_kb_list.map((kb, i) => {\n                                                        return (<Chip key={i} color=\"secondary\"\n                                                                      onClick={() => this.removeKBFromUser(kb)}\n                                                                      label={kb.name} variant=\"outlined\"/>)\n                                                    })\n                                                }\n                                            </div>\n                                        </div>\n                                        <div className=\"role-block\">\n                                            <div className=\"role-label\">operator available knowledge bases</div>\n                                            <div className=\"role-area\">\n                                                {\n                                                    this.getAvailableKnowledgeBases().map((kb, i) => {\n                                                        return (<Chip key={i} color=\"primary\"\n                                                                      onClick={() => this.addKBToUser(kb)}\n                                                                      label={kb.name} variant=\"outlined\"/>)\n                                                    })\n                                                }\n                                            </div>\n                                        </div>\n                                    </div>\n                                    }\n                                </div>\n                            }\n\n\n                            {\n                                this.state.selectedTab === 'groups' &&\n                                <div className=\"tab-content\">\n\n                                    <GroupSelector\n                                        group_list={this.props.all_groups}\n                                        include_users={false}\n                                        organisation_id={this.props.organisation_id}\n                                        user_list={this.props.all_users}\n                                        selected_group_list={this.state.edit_groups}\n                                        onChange={(groups) => this.setState({edit_groups: groups})}\n                                    />\n\n                                </div>\n                            }\n\n                        </div>\n\n                        <div className=\"modal-footer\">\n                            <button className=\"btn btn-primary btn-block\" onClick={() => this.close(false)}>Cancel</button>\n                            <button className=\"btn btn-primary btn-block\" onClick={() => this.close(true)}>Save</button>\n                        </div>\n\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default UserEdit;\n\n","import React from 'react';\n\nimport {Home} from '../home';\nimport {connect} from \"react-redux\";\nimport {bindActionCreators} from \"redux\";\nimport {appCreators} from \"../actions/appActions\";\nimport UserEdit from \"./user-edit\";\nimport Api from \"../common/api\";\nimport {Pagination} from \"../common/pagination\";\n\nimport '../css/users.css';\n\n\nexport class UserManager extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n\n            // edit dialog\n            edit_user: false,\n            user: null,\n            edit_user_id: \"\",\n            edit_first_name: \"\",\n            edit_surname: \"\",\n            edit_email: \"\",\n            edit_password: \"\",\n            edit_roles: [],\n            edit_kb_list: [],\n            edit_groups: [],\n\n            // pagination\n            page_size: 5,\n            page: 0,\n        };\n    }\n    componentDidCatch(error, info) {\n        this.props.setError(error, info);\n        console.log(error, info);\n    }\n    numUsers(organisation_id, isAdmin) {\n        let count = 0;\n        for (const i in this.props.user_list) {\n            const user = this.props.user_list[i];\n            const roleStr = UserManager.formatRoles(this.props.selected_organisation_id, user.roles);\n            if (isAdmin || roleStr.length > 0) { // has a role or isAdmin?\n                count += 1;\n            }\n        }\n        return count;\n    }\n    getUsers(isAdmin) {\n        const paginated_list = [];\n        const first = this.state.page * this.state.page_size;\n        const last = first + this.state.page_size;\n        let index = 0;\n        for (const i in this.props.user_list) {\n            // paginate all users - but only those that have roles in this organisation\n            const user = this.props.user_list[i];\n            const roleStr = UserManager.formatRoles(this.props.selected_organisation_id, user.roles);\n            if (isAdmin || roleStr.length > 0) { // has a role or is admin?\n                if (index >= first && index < last) {\n                    paginated_list.push(user);\n                }\n                index += 1; // one more user in this set of roles\n            }\n        }\n        return paginated_list;\n    }\n    changePage(page) {\n        this.setState({page: page});\n    }\n    changePageSize(page_size) {\n        this.setState({page_size: page_size});\n    }\n    static formatRoles(organisationId, roles) {\n        let roles_str = \"\";\n        for (const role of roles) {\n            // admin always displays\n            if (role.organisationId === organisationId || role.role === \"admin\") {\n                // make sure we add the admin role only once\n                if (role.role === \"admin\" && roles_str.indexOf(\"admin\") === -1) {\n                    if (roles_str.length > 0) {\n                        roles_str += \", \";\n                    }\n                    roles_str += Api.getPrettyRole(role.role);\n                } else if (role.role !== \"admin\") {  // any other role just add\n                    if (roles_str.length > 0) {\n                        roles_str += \", \";\n                    }\n                    roles_str += Api.getPrettyRole(role.role);\n                }\n            }\n        }\n        return roles_str;\n    }\n    addNewUser() {\n        this.setState({edit_user: true, user: null,\n                            edit_user_id: \"\", edit_first_name: \"\",\n                            edit_surname: \"\", edit_email: \"\",\n                            edit_password: \"\",\n                            edit_roles: [],\n                            edit_kb_list: [],\n                            edit_groups: [],\n                        })\n    }\n    editUser(user) {\n        if (user) {\n            // only allow roles that apply to this organisation that this user has\n            const filtered_roles = user.roles.filter(x => x.organisationId === this.props.selected_organisation_id);\n            const role_list = [];\n            for (const role of filtered_roles) {\n                role_list.push(role.role);\n            }\n            const kb_list = [];\n            if (user.operatorKBList) {\n                for (const operatorKB of user.operatorKBList) {\n                    for (const available_kb of this.props.knowledge_base_list) {\n                        if (available_kb.kbId === operatorKB.kbId) {\n                            kb_list.push(available_kb);\n                        }\n                    }\n                }\n            }\n            this.setState({edit_user: true, user: user,\n                edit_user_id: user.id,\n                edit_first_name: user.firstName,\n                edit_surname: user.surname,\n                edit_email: user.email,\n                edit_password: \"\",\n                edit_roles: role_list,\n                edit_kb_list: kb_list,\n                edit_groups: user.groupList,\n            })\n        }\n    }\n    deleteUserAsk(user, isAdmin) {\n        if (user && this.props.selected_organisation_id && this.props.selected_organisation_id.length > 0) {\n            this.props.openDialog(\"are you sure you want to remove \" + user.firstName + \" \" + user.surname + \"?\",\n                \"Remove User\", (action) => {\n                    this.deleteUser(action)\n                });\n            this.setState({user: user});\n        } else {\n            this.props.setError('No Organisation', 'Please select an organisation from the drop-down box.')\n        }\n    }\n    deleteUser(action) {\n        if (action) {\n            this.props.deleteUser(this.props.selected_organisation_id, this.state.user.id);\n        }\n        if (this.props.closeDialog) {\n            this.props.closeDialog();\n        }\n    }\n    static hasOperatorRole(edit_roles) {\n        if (edit_roles) {\n            for (const role of edit_roles) {\n                if (role === \"operator\") {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n    static hasAdministratorRole(edit_roles) {\n        if (edit_roles) {\n            for (const role of edit_roles) {\n                if (role === \"admin\") {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n    editDone(save, data) {\n        if (!save) {\n            this.setState({edit_user: false, user: null,\n                edit_user_id: \"\", edit_first_name: \"\", edit_surname: \"\", edit_email: \"\",\n                edit_password: \"\", edit_roles: [], edit_kb_list: [], edit_groups: [],\n            });\n            if (this.state.closeDialog) {\n                this.state.closeDialog();\n            }\n        } else {\n            if (data.first_name.length > 0 &&\n                data.surname.length > 0 &&\n                data.email.length > 0 &&\n                (data.user_id.length > 0 || data.password.length > 0)) {\n\n                // do we have an operator and knowledge bases?\n                if (UserManager.hasOperatorRole(data.roles) && data.kb_list.length === 0) {\n                    this.props.setError(\"Incomplete Data\", \"An operator must have at least one knowledge base associated with it.\");\n\n                } else {\n\n                    // put up an alert warning?\n                    if (!UserManager.hasAdministratorRole(this.state.edit_roles) && UserManager.hasAdministratorRole(data.roles)) {\n                        // if this user wasn't an administrator, but is now, show a warning\n                        alert(\"WARNING:\\n\\nYou are about to assign administrative rights to this user.\\nPlease be responsible and consider assigning the right permissions to the right people.\");\n                    }\n\n                    // organisation_id, user_id, name, surname, email, password, role_list, kb_list\n                    this.props.updateUser(this.props.selected_organisation_id, data.user_id,\n                        data.first_name, data.surname, data.email, data.password, data.roles, data.kb_list, data.groups);\n\n                    this.setState({\n                        edit_user: false, user: null,\n                        edit_user_id: \"\", edit_first_name: \"\", edit_surname: \"\", edit_email: \"\",\n                        edit_password: \"\", edit_roles: [], edit_kb_list: [], edit_groups: [],\n                    });\n\n                }\n            } else {\n                this.props.setError(\"Incomplete Data\", \"Please complete all fields.  \" +\n                    \"Must have email-address, first-name, surname, and at least one role.  \" +\n                    \"New Accounts must have a password.\");\n            }\n        }\n    }\n    handleSearchTextKeydown(event) {\n        if (event.key === \"Enter\" && this.props.selected_organisation_id) {\n            this.props.getUsers(this.props.selected_organisation_id);\n        }\n    }\n    isVisible() {\n        return this.props.selected_organisation_id && this.props.selected_organisation_id.length > 0 &&\n            this.props.selected_organisation && this.props.selected_organisation.length > 0;\n    }\n    render() {\n        const theme = this.props.theme;\n        const isAdmin = Home.hasRole(this.props.user, ['admin']);\n        const isManager = Home.hasRole(this.props.user, ['manager']);\n        return (\n            <div className=\"user-display\">\n                { this.isVisible() &&\n                <div>\n\n                    <div className=\"filter-find-box\">\n                        <span className=\"filter-label\">filter</span>\n                        <span className=\"filter-find-text\">\n                            <input type=\"text\" value={this.props.user_filter} autoFocus={true} className={theme}\n                                   onKeyPress={(event) => this.handleSearchTextKeydown(event)}\n                                   onChange={(event) => {\n                                       this.props.setUserFilter(event.target.value)\n                                   }}/>\n                       </span>\n                        <span className=\"filter-find-image\">\n                            <img className=\"image-size\"\n                                 onClick={() => this.props.getUsers()}\n                                 src=\"../images/dark-magnifying-glass.svg\" title=\"search\" alt=\"search\"/>\n                        </span>\n                    </div>\n\n                    <br clear=\"both\" />\n\n                    <div>\n                        <table className=\"table\">\n                            <thead>\n                                <tr className='table-header'>\n                                    <th className='table-header'>user name</th>\n                                    <th className='table-header'>first name</th>\n                                    <th className='table-header'>surname</th>\n                                    <th className='table-header'>roles</th>\n                                    <th className='table-header'>actions</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {\n                                    this.getUsers(isAdmin).map((user) => {\n                                        const canEdit = Home.canEdit(user, isAdmin, isManager);\n                                        const canDelete = Home.canDelete(user, this.props.user, isAdmin, isManager);\n                                        return (\n                                            <tr key={user.id}>\n                                                <td>\n                                                    <div className=\"label\">{user.email}</div>\n                                                </td>\n                                                <td>\n                                                    <div className=\"label\">{user.firstName}</div>\n                                                </td>\n                                                <td>\n                                                    <div className=\"label\">{user.surname}</div>\n                                                </td>\n                                                <td>\n                                                    <div className=\"role-label\">{UserManager.formatRoles(this.props.selected_organisation_id, user.roles)}</div>\n                                                </td>\n                                                <td>\n                                                    { !canEdit &&\n                                                        <div className=\"disabled-link-button\" title=\"cannot edit this user\">\n                                                            <img src=\"../images/edit.svg\" className=\"dl-image-size-disabled\"\n                                                                 title=\"cannot edit this user\" alt=\"cannot edit this user\"/>\n                                                        </div>\n                                                    }\n                                                    { canEdit &&\n                                                        <div className=\"link-button\" title=\"Edit this user\"\n                                                             onClick={() => this.editUser(user)}>\n                                                            <img src=\"../images/edit.svg\" className=\"dl-image-size\"\n                                                                 title=\"edit user\" alt=\"edit\"/>\n                                                        </div>\n                                                    }\n                                                    {\n                                                        !canDelete &&\n                                                        <div className=\"disabled-link-button\" title=\"cannot remove this user\">\n                                                            <img src=\"../images/delete.svg\" className=\"dl-image-size-disabled\"\n                                                                 title=\"cannot remove this user\" alt=\"cannot remove this user\"/>\n                                                        </div>\n                                                    }\n                                                    {\n                                                        canDelete &&\n                                                        <div className=\"link-button\" title=\"Remove this user\"\n                                                             onClick={() => this.deleteUserAsk(user, isAdmin)}>\n                                                            <img src=\"../images/delete.svg\" className=\"dl-image-size\"\n                                                                 title={isAdmin ? \"remove user\" : \"remove user roles\"} alt=\"remove\"/>\n                                                        </div>\n                                                    }\n                                                </td>\n                                            </tr>\n                                        )\n                                    })\n                                }\n                                <tr>\n                                    <td />\n                                    <td />\n                                    <td />\n                                    <td />\n                                    <td>\n                                        {this.props.selected_organisation_id.length > 0 && (isAdmin || isManager) &&\n                                        <div className=\"image-button\" onClick={() => this.addNewUser()}>\n                                            <img className=\"add-image\" src=\"../images/add.svg\" title=\"add new user\" alt=\"add new user\"/>\n                                        </div>\n                                        }\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td colSpan={5}>\n                                        <Pagination\n                                            rowsPerPageOptions={[5, 10, 25]}\n                                            component=\"div\"\n                                            count={this.numUsers(this.props.selected_organisation_id, isAdmin)}\n                                            rowsPerPage={this.state.page_size}\n                                            page={this.state.page}\n                                            onChangePage={(page) => this.changePage(page)}\n                                            onChangeRowsPerPage={(rows) => this.changePageSize(rows)}\n                                        />\n                                    </td>\n                                </tr>\n                            </tbody>\n                        </table>\n\n                    </div>\n\n                    <UserEdit open={this.state.edit_user}\n                              theme={theme}\n                              organisation_id={this.props.selected_organisation_id}\n                              user={this.props.user}\n                              edit_user_id={this.state.edit_user_id}\n                              edit_email={this.state.edit_email}\n                              edit_first_name={this.state.edit_first_name}\n                              edit_surname={this.state.edit_surname}\n                              edit_password={this.state.edit_password}\n                              edit_roles={this.state.edit_roles}\n                              edit_kb_list={this.state.edit_kb_list}\n                              edit_groups={this.state.edit_groups}\n                              all_groups={this.props.group_list}\n                              all_users={this.props.user_list}\n                              knowledge_base_list={this.props.knowledge_base_list}\n                              setError={this.props.setError}\n                              onClose={(save, data) => this.editDone(save, data)}\n                              onError={(title, msg) => this.props.setError(title, msg)}\n                    />\n\n                </div>\n                }\n            </div>\n        )\n    }\n};\n\nconst mapStateToProps = function(state) {\n    return {\n        error: state.appReducer.error,\n        error_title: state.appReducer.error_title,\n        theme: state.appReducer.theme,\n\n        user_list: state.appReducer.user_list,\n        user_filter: state.appReducer.user_filter,\n        selected_organisation_id: state.appReducer.selected_organisation_id,\n        selected_organisation: state.appReducer.selected_organisation,\n        knowledge_base_list: state.appReducer.knowledge_base_list,\n        group_list: state.appReducer.group_list,\n        user: state.appReducer.user,\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    dispatch => bindActionCreators(appCreators, dispatch)\n)(UserManager);\n\n","import React, {Component} from 'react';\n\nimport '../css/time-select.css';\n\nconst time_list = ['00:00','01:00','02:00','03:00','04:00','05:00','06:00','07:00','08:00','09:00','10:00','11:00',\n                   '12:00','13:00','14:00','15:00','16:00','17:00','18:00','19:00','20:00','21:00','22:00','23:00'];\n\nconst day_list = ['mon', 'tue', 'wed', 'thu', 'fri', 'sat', 'sun'];\n\n// time schedule all selected\nconst defaultAllTimesSelected = 'mon-0,tue-0,wed-0,thu-0,fri-0,sat-0,sun-0,mon-1,tue-1,wed-1,thu-1,fri-1,sat-1,sun-1,mon-2,tue-2,wed-2,thu-2,fri-2,sat-2,sun-2,mon-3,tue-3,wed-3,thu-3,fri-3,sat-3,sun-3,mon-4,tue-4,wed-4,thu-4,fri-4,sat-4,sun-4,mon-5,tue-5,wed-5,thu-5,fri-5,sat-5,sun-5,mon-6,tue-6,wed-6,thu-6,fri-6,sat-6,sun-6,mon-7,tue-7,wed-7,thu-7,fri-7,sat-7,sun-7,mon-8,tue-8,wed-8,thu-8,fri-8,sat-8,sun-8,mon-9,tue-9,wed-9,thu-9,fri-9,sat-9,sun-9,mon-10,tue-10,wed-10,thu-10,fri-10,sat-10,sun-10,mon-11,tue-11,wed-11,thu-11,fri-11,sat-11,sun-11,mon-12,tue-12,wed-12,thu-12,fri-12,sat-12,sun-12,mon-13,tue-13,wed-13,thu-13,fri-13,sat-13,sun-13,mon-14,tue-14,wed-14,thu-14,fri-14,sat-14,sun-14,mon-15,tue-15,wed-15,thu-15,fri-15,sat-15,sun-15,mon-16,tue-16,wed-16,thu-16,fri-16,sat-16,sun-16,mon-17,tue-17,wed-17,thu-17,fri-17,sat-17,sun-17,mon-18,tue-18,wed-18,thu-18,fri-18,sat-18,sun-18,mon-19,tue-19,wed-19,thu-19,fri-19,sat-19,sun-19,mon-20,tue-20,wed-20,thu-20,fri-20,sat-20,sun-20,mon-21,tue-21,wed-21,thu-21,fri-21,sat-21,sun-21,mon-22,tue-22,wed-22,thu-22,fri-22,sat-22,sun-22,mon-23,tue-23,wed-23,thu-23,fri-23,sat-23,sun-23';\n\n// display error dialog\nexport class TimeSelect extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            onSave: props.onSave,  // save callback\n            time: props.time,\n            time_map: this.setupTimeMap(props.time),\n            has_error: false,\n        };\n    }\n    componentDidCatch(error, info) {\n        this.setState({ has_error: true });\n        console.log(error, info);\n    }\n    handleSave() {\n        let time = '';\n        for (let key in this.state.time_map) {\n            if (this.state.time_map[key] === 1) {\n                if (time.length > 0) {\n                    time += ',';\n                }\n                time += key;\n            }\n        }\n        if (this.state.onSave) {\n            this.state.onSave(time);\n        }\n    }\n    handleCancel() {\n        if (this.state.onSave) {\n            this.state.onSave(null);\n        }\n    }\n    UNSAFE_componentWillReceiveProps(nextProps) {\n        // see if we have data to start this dialog\n        if (nextProps !== null) {\n            const time_map = this.setupTimeMap(nextProps.time);\n            this.setState({\n                time: nextProps.time,\n                onSave: nextProps.onSave,\n                time_map: time_map,\n            })\n        }\n    }\n    setupTimeMap(time_str) {\n        // \"mon-1,tue-3\" etc.\n        let time_map = {};\n        if (time_str)\n            time_str.split(',').map((item) => {time_map[item] = 1; return time_map[item];});\n        return time_map;\n    }\n    gs(cell) {\n        if (this.state.time_map[cell] === 1) {\n            return \"active\";\n        } else {\n            return \"inactive\";\n        }\n    }\n    clearAll() {\n        this.setState({time_map: this.setupTimeMap(''), time: ''});\n        if (this.state.onSave) {\n            this.state.onSave('');\n        }\n    }\n    selectAll() {\n        this.setState({time_map: this.setupTimeMap(defaultAllTimesSelected), time: defaultAllTimesSelected});\n        if (this.state.onSave) {\n            this.state.onSave(defaultAllTimesSelected);\n        }\n    }\n    select(item) {\n        let tm = this.state.time_map;\n        if (item === \"all\") {\n            // invert all\n            for (let i = 0; i < 24; i++) {\n                day_list.map( (dow) => {\n                    const str = dow + '-' + i;\n                    if (tm[str] === 1) {\n                        tm[str] = 0;\n                    } else {\n                        tm[str] = 1;\n                    }\n                    return tm[str];\n                });\n            }\n        } else if (item.indexOf('-') > 0) {\n            // single cell selector\n            if (tm[item] === 1) {\n                tm[item] = 0;\n            } else {\n                tm[item] = 1;\n            }\n\n        } else if (day_list.indexOf(item) >= 0) {\n            // 24 hour selector\n            for (let i = 0; i < 24; i++) {\n                const str = item + '-' + i;\n                if (tm[str] === 1) {\n                    tm[str] = 0;\n                } else {\n                    tm[str] = 1;\n                }\n            }\n        } else {\n            // day of week selector\n            day_list.map( (dow) => {\n                const str = dow + '-' + item;\n                if (tm[str] === 1) {\n                    tm[str] = 0;\n                } else {\n                    tm[str] = 1;\n                }\n                return tm[str];\n            });\n        }\n        this.setState({time_map: tm});\n        this.handleSave();\n    }\n    // return a pretty version of GMT time (eg. Tue, 10:21)\n    timeStr() {\n        const gmtTime = new Date().toGMTString();\n        const day = gmtTime.split(\",\")[0];\n        const time = gmtTime.split(\" \")[4].split(\":\");\n        const time_no_seconds = time[0] + \":\" + time[1];\n        return day + \", \" + time_no_seconds;\n    }\n    render() {\n        if (this.state.has_error) {\n            return <h1>time-select.js: Something went wrong.</h1>;\n        }\n        return (\n            <div className=\"time-select\">\n                <div className=\"labelTop\">all times in GMT (now {this.timeStr()})</div>\n                <table className=\"tableStyle\">\n                    <tbody>\n                    <tr>\n                        <td onClick={() => this.select('all')}/>\n                        { time_list.map((str, value) => {\n                            return (<td key={\"time-\"+value} onClick={() => this.select('' + value)} className=\"cell-spacing tHeader\">{str}</td>)\n                        })}\n                    </tr>\n                    <tr>\n                        <td onClick={() => this.select('mon')} className=\"tCol\">Monday</td>\n                        { time_list.map((str, value) => {\n                             return (<td key={\"mon-\"+value} onClick={() => this.select('mon-'+value)} className={\"cell-spacing \" + this.gs('mon-'+value)} />)\n                        })}\n                    </tr>\n                    <tr>\n                        <td onClick={() => this.select('tue')} className=\"tCol\">Tuesday</td>\n                        { time_list.map((str, value) => {\n                            return (<td key={\"tue-\"+value} onClick={() => this.select('tue-'+value)} className={\"cell-spacing \" + this.gs('tue-'+value)} />)\n                        })}\n                    </tr>\n                    <tr>\n                        <td onClick={() => this.select('wed')} className=\"tCol\">Wednesday</td>\n                        { time_list.map((str, value) => {\n                            return (<td key={\"wed-\"+value} onClick={() => this.select('wed-'+value)} className={\"cell-spacing \" +this.gs('wed-'+value)}/>)\n                        })}\n                    </tr>\n                    <tr>\n                        <td onClick={() => this.select('thu')} className=\"tCol\">Thursday</td>\n                        { time_list.map((str, value) => {\n                            return (<td key={\"thu-\"+value} onClick={() => this.select('thu-'+value)} className={\"cell-spacing \" + this.gs('thu-'+value)}/>)\n                        })}\n                    </tr>\n                    <tr>\n                        <td onClick={() => this.select('fri')} className=\"tCol\">Friday</td>\n                        { time_list.map((str, value) => {\n                            return (<td key={\"fri-\"+value} onClick={() => this.select('fri-'+value)} className={\"cell-spacing \" + this.gs('fri-'+value)}/>)\n                        })}\n                    </tr>\n                    <tr>\n                        <td onClick={() => this.select('sat')} className=\"tCol\">Saturday</td>\n                        { time_list.map((str, value) => {\n                            return (<td key={\"sat-\"+value} onClick={() => this.select('sat-'+value)} className={\"cell-spacing \" + this.gs('sat-'+value)}/>)\n                        })}\n                    </tr>\n                    <tr>\n                        <td onClick={() => this.select('sun')} className=\"tCol\">Sunday</td>\n                        { time_list.map((str, value) => {\n                            return (<td key={\"sun-\"+value} onClick={() => this.select('sun-'+value)} className={\"cell-spacing \" + this.gs('sun-'+value)}/>)\n                        })}\n                    </tr>\n                    </tbody>\n                </table>\n\n                <br />\n                <div className=\"legenda\">\n                    <div className=\"activeText\">active</div>\n                    <div className=\"inactiveText\">inactive</div>\n                    <div className=\"button1\">\n                        <button className=\"btn btn-primary btn-block\" onClick={() => this.clearAll()}>\n                            clear all\n                        </button>\n                    </div>\n                    <div className=\"button2\">\n                        <button className=\"btn btn-primary btn-block\" onClick={() => this.selectAll()}>\n                            select all\n                        </button>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default TimeSelect;\n","import React, {Component} from 'react';\n\nimport {Api} from '../common/api'\n\nimport {connect} from \"react-redux\";\nimport {bindActionCreators} from \"redux\";\nimport {appCreators} from \"../actions/appActions\";\nimport TimeSelect from \"../common/time-select\";\nimport {Home} from \"../home\";\nimport {Pagination} from \"../common/pagination\";\n\nimport '../css/kb.css';\n\nconst defaultOptimizationSchedule = 'mon-0,tue-0,wed-0,thu-0,fri-0,sat-0,sun-0,mon-1,tue-1,wed-1,thu-1,fri-1,sat-1,sun-1,mon-2,tue-2,wed-2,thu-2,fri-2,sat-2,sun-2,mon-3,tue-3,wed-3,thu-3,fri-3,sat-3,sun-3';\nconst defaultDmsIndexSchedule = 'mon-0,tue-0,wed-0,thu-0,fri-0,sat-0,sun-0,mon-1,tue-1,wed-1,thu-1,fri-1,sat-1,sun-1,mon-2,tue-2,wed-2,thu-2,fri-2,sat-2,sun-2,mon-3,tue-3,wed-3,thu-3,fri-3,sat-3,sun-3';\n\n\nexport class KnowledgeBases extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            selectedTab: 'general',\n\n            edit_knowledgebase: false,\n            edit_knowledgebase_id: \"\",\n            knowledgeBase: null,\n\n            edit_kb_id: \"\",\n            edit_name: \"\",\n            edit_email: \"\",\n            edit_security_id: \"\",\n            edit_enabled: true,\n            edit_max_queries_per_day: \"0\",\n            edit_analytics_window_size_in_months: \"0\",\n            edit_operator_enabled: true,\n            edit_capacity_warnings: true,\n            edit_created: 0,\n            edit_index_optimization_schedule: defaultOptimizationSchedule,\n            edit_dms_index_schedule: defaultDmsIndexSchedule,\n\n            // view ids\n            view_ids: false,\n            copied_visible: '',\n            kb: null,\n\n            // pagination\n            page_size: 5,\n            page: 0,\n        };\n    }\n    componentDidCatch(error, info) {\n        this.props.setError(error, info);\n        console.log(error, info);\n    }\n    changePage(page) {\n        this.setState({page: page});\n    }\n    changePageSize(page_size) {\n        this.setState({page_size: page_size});\n    }\n    addNewKnowledgeBase() {\n        this.setState({edit_knowledgebase: true, knowledgeBase: null,\n            edit_knowledgebase_id: \"\",\n            edit_name: \"\",\n            edit_email: \"\",\n            edit_enabled: true,\n            edit_max_queries_per_day: \"0\",\n            edit_analytics_window_size_in_months: \"0\",\n            edit_operator_enabled: true,\n            edit_capacity_warnings: true,\n            edit_created: 0,\n            edit_security_id: Api.createGuid(),\n            edit_index_optimization_schedule: defaultOptimizationSchedule,\n            edit_dms_index_schedule: defaultDmsIndexSchedule,\n        })\n    }\n    refreshSecurityId() {\n        this.setState({edit_security_id: Api.createGuid()})\n    }\n    editKnowledgeBase(knowledgeBase) {\n        if (knowledgeBase) {\n            this.setState({edit_knowledgebase: true, knowledgeBase: knowledgeBase,\n                edit_knowledgebase_id: knowledgeBase.kbId,\n                edit_name: knowledgeBase.name,\n                edit_email: knowledgeBase.email,\n                edit_security_id: knowledgeBase.securityId,\n                edit_enabled: knowledgeBase.enabled,\n                edit_max_queries_per_day: knowledgeBase.maxQueriesPerDay,\n                edit_analytics_window_size_in_months: knowledgeBase.analyticsWindowInMonths,\n                edit_operator_enabled: knowledgeBase.operatorEnabled,\n                edit_capacity_warnings: knowledgeBase.capacityWarnings,\n                edit_index_optimization_schedule: knowledgeBase.indexOptimizationSchedule,\n                edit_dms_index_schedule: knowledgeBase.dmsIndexSchedule,\n                edit_created: knowledgeBase.created,\n            })\n        }\n    }\n    optimizeIndexesAsk(knowledgeBase) {\n        if (knowledgeBase) {\n            this.props.openDialog(\"are you sure you want to optimize the indexes for \\\"\" + knowledgeBase.name + \"\\\" ?\", \"Optimize Knowledge base\", (action) => { this.optimizeIndexes(action) });\n            this.setState({knowledgeBase: knowledgeBase});\n        }\n    }\n    optimizeIndexes(action) {\n        if (action) {\n            this.props.optimizeIndexes(this.props.selected_organisation_id, this.state.knowledgeBase.kbId);\n        }\n        if (this.props.closeDialog) {\n            this.props.closeDialog();\n        }\n    }\n    removeOptimizedIndexesAsk(knowledgeBase) {\n        if (knowledgeBase) {\n            this.props.openDialog(\"are you sure you want to remove the optimized indexes for \\\"\" + knowledgeBase.name + \"\\\" ?\", \"Remove Optimized Indexes\", (action) => { this.removeOptimizedIndexes(action) });\n            this.setState({knowledgeBase: knowledgeBase});\n        }\n    }\n    removeOptimizedIndexes(action) {\n        if (action) {\n            this.props.removeOptimizedIndexes(this.props.selected_organisation_id, this.state.knowledgeBase.kbId);\n        }\n        if (this.props.closeDialog) {\n            this.props.closeDialog();\n        }\n    }\n    removeAllIndexesAsk(knowledgeBase) {\n        if (knowledgeBase) {\n            this.props.openDialog(\"are you sure you want to remove the <b>ALL indexes</b> (optimized and non-optimized) for \\\"\" + knowledgeBase.name + \"\\\" ?\", \"Remove ALL Indexes\", (action) => { this.removeAllIndexes(action) });\n            this.setState({knowledgeBase: knowledgeBase});\n        }\n    }\n    removeAllIndexes(action) {\n        if (action) {\n            this.props.removeAllIndexes(this.props.selected_organisation_id, this.state.knowledgeBase.kbId);\n        }\n        if (this.props.closeDialog) {\n            this.props.closeDialog();\n        }\n    }\n    deleteKnowledgeBaseAsk(knowledgeBase) {\n        if (knowledgeBase) {\n            this.props.openDialog(\"are you sure you want to remove \\\"\" + knowledgeBase.name + \"\\\" ?\", \"Remove Knowledge base\", (action) => { this.deleteKnowledgeBase(action) });\n            this.setState({knowledgeBase: knowledgeBase});\n        }\n    }\n    deleteKnowledgeBase(action) {\n        if (action) {\n            this.props.deleteKnowledgeBase(this.props.selected_organisation_id, this.state.knowledgeBase.kbId);\n        }\n        if (this.props.closeDialog) {\n            this.props.closeDialog();\n        }\n    }\n    editCancel() {\n        this.setState({edit_knowledgebase: false, knowledgeBase: null});\n    }\n    editOk() {\n        if (this.state.edit_name.length > 0) {\n            this.props.updateKnowledgeBase(this.props.selected_organisation_id, this.state.edit_knowledgebase_id,\n                                           this.state.edit_name, this.state.edit_email, this.state.edit_security_id,\n                                           this.state.edit_enabled, this.state.edit_max_queries_per_day,\n                                           this.state.edit_analytics_window_size_in_months, this.state.edit_operator_enabled,\n                                           this.state.edit_capacity_warnings, this.state.edit_created,\n                                           this.state.edit_index_optimization_schedule, this.state.edit_dms_index_schedule);\n            this.setState({edit_knowledgebase: false, knowledgeBase: null});\n        } else {\n            this.props.setError(\"Incomplete Data\", \"Please complete all fields.\");\n        }\n    }\n    viewIds(knowledge_base) {\n        this.setState({view_ids: true, kb: knowledge_base});\n    }\n    getKnowledgeBases() {\n        const paginated_list = [];\n        const first = this.state.page * this.state.page_size;\n        const last = first + this.state.page_size;\n        for (const i in this.props.knowledge_base_list) {\n            if (i >= first && i < last) {\n                paginated_list.push(this.props.knowledge_base_list[i]);\n            }\n        }\n        return paginated_list;\n    }\n    updateIndexOptimizationSchedule(time) {\n        if (time !== null) {\n            this.setState({edit_index_optimization_schedule: time});\n        }\n    }\n    updateDMSIndexSchedule(time) {\n        if (time !== null) {\n            this.setState({edit_dms_index_schedule: time});\n        }\n    }\n    isVisible() {\n        return this.props.selected_organisation_id && this.props.selected_organisation_id.length > 0 &&\n            this.props.selected_organisation && this.props.selected_organisation.length > 0;\n    }\n    startCopiedVisible(org_id) {\n        this.setState({copied_visible: org_id});\n        window.setTimeout(() => { this.setState({copied_visible: \"\"})}, 1000);\n    }\n    indexOptimizationClass(kb) {\n        if (kb) {\n            if (kb.needsIndexOptimization || kb.indexOptimizationTime === 0) {\n                return \"indexes-out-of-date\";\n            } else {\n                return \"indexes-up-to-date\";\n            }\n        }\n        return \"\";\n    }\n    indexOptimizationText(kb) {\n        if (kb) {\n            if (kb.needsIndexOptimization || kb.indexOptimizationTime === 0) {\n                return \"the indexes for \\\"\" + kb.name + \"\\\" are out of date.\";\n            } else {\n                return \"the indexes for \\\"\" + kb.name + \"\\\" are up to date.\";\n            }\n        }\n        return \"\";\n    }\n    indexOptimizationStatus(kb) {\n        if (kb) {\n            var time = \"not optimized\";\n            if (kb.indexOptimizationTime > 0) {\n                time = Api.unixTimeConvert(kb.indexOptimizationTime);\n            }\n            return time;\n        }\n        return \"\";\n    }\n    render() {\n        const theme = this.props.theme;\n        const t_value = this.state.selectedTab;\n        const isAdmin = Home.hasRole(this.props.user, ['admin']);\n        return (\n                <div className=\"kb-page\">\n                    { this.isVisible() &&\n\n                    <div>\n\n                        <div>\n                            <table className=\"table\">\n                                <thead>\n                                    <tr className='table-header'>\n                                        <th className='table-header table-width-20'>knowledge base</th>\n                                        <th className='table-header table-width-20'>email queries to</th>\n                                        <th className='table-header table-width-20'>last index optimization</th>\n                                        <th className='table-header'>actions</th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    {\n                                        this.getKnowledgeBases().map((knowledge_base) => {\n                                            return (\n                                                <tr key={knowledge_base.kbId}>\n                                                    <td>\n                                                        <div className=\"kb-label\">{knowledge_base.name}</div>\n                                                    </td>\n                                                    <td>\n                                                        <div className=\"kb-label\">{knowledge_base.email}</div>\n                                                    </td>\n                                                    <td>\n                                                        <div className={\"kb-label\" + this.indexOptimizationClass(knowledge_base)}\n                                                                title={this.indexOptimizationText(knowledge_base)}>\n                                                            {this.indexOptimizationStatus(knowledge_base)}</div>\n                                                    </td>\n                                                    <td>\n                                                        <div className=\"link-button\"\n                                                             onClick={() => this.viewIds(knowledge_base)}>\n                                                            <img src=\"../images/id.svg\" className=\"image-size\"\n                                                                 title=\"view knowledge base ids\" alt=\"ids\"/>\n                                                        </div>\n                                                        <div className=\"link-button\"\n                                                             onClick={() => this.editKnowledgeBase(knowledge_base)}>\n                                                            <img src=\"../images/edit.svg\" className=\"image-size\"\n                                                                 title=\"edit knowledge base\" alt=\"edit\"/>\n                                                        </div>\n                                                        <div className=\"link-button\"\n                                                             onClick={() => this.deleteKnowledgeBaseAsk(knowledge_base)}>\n                                                            <img src=\"../images/delete.svg\" className=\"image-size\"\n                                                                 title=\"remove knowledge base\" alt=\"remove\"/>\n                                                        </div>\n                                                        <br clear=\"both\" />\n                                                        <button style={{marginBottom: '4px'}}\n                                                             onClick={() => this.optimizeIndexesAsk(knowledge_base)}>\n                                                            optimize indexes\n                                                        </button>\n                                                        {isAdmin &&\n                                                            <div style={{marginBottom: '4px'}}>\n                                                                <button onClick={() => this.removeOptimizedIndexesAsk(knowledge_base)}>\n                                                                    remove optimized indexes\n                                                                </button>\n                                                            </div>\n                                                        }\n                                                        {isAdmin &&\n                                                        <div>\n                                                            <button onClick={() => this.removeAllIndexesAsk(knowledge_base)}>\n                                                                remove all indexes\n                                                            </button>\n                                                        </div>\n                                                        }\n                                                    </td>\n                                                </tr>\n                                            )\n                                        })\n                                    }\n                                    <tr>\n                                        <td/>\n                                        <td/>\n                                        <td/>\n                                        <td>\n                                            {this.props.selected_organisation_id.length > 0 &&\n                                            <div className=\"kb-image-button\" onClick={() => this.addNewKnowledgeBase()}>\n                                                <img\n                                                    className=\"image-size\" src=\"../images/add.svg\" title=\"add new user\"\n                                                    alt=\"add new user\"/></div>\n                                            }\n                                        </td>\n                                    </tr>\n                                </tbody>\n                            </table>\n\n                            <Pagination\n                                rowsPerPageOptions={[5, 10, 25]}\n                                theme={theme}\n                                component=\"div\"\n                                count={this.props.knowledge_base_list.length}\n                                rowsPerPage={this.state.page_size}\n                                page={this.state.page}\n                                backIconButtonProps={{\n                                    'aria-label': 'Previous Page',\n                                }}\n                                nextIconButtonProps={{\n                                    'aria-label': 'Next Page',\n                                }}\n                                onChangePage={(page) => this.changePage(page)}\n                                onChangeRowsPerPage={(rows) => this.changePageSize(rows)}\n                            />\n\n                        </div>\n\n\n                        {\n                            this.state.edit_knowledgebase &&\n                            <div className=\"modal\" tabIndex=\"-1\" role=\"dialog\" style={{display: \"inline\"}}>\n                                <div className={\"modal-dialog modal-dialog-centered modal-xl\"} role=\"document\">\n                                    <div className=\"modal-content shadow p-3 mb-5 bg-white rounded kb-height\">\n                                        <div\n                                            className=\"modal-header\">{this.state.edit_knowledgebase_id ? \"Edit Knowledge Base\" : \"Add New Knowledge Base\"}</div>\n                                        <div className=\"modal-body\">\n\n\n                                            <ul className=\"nav nav-tabs\">\n                                                <li className=\"nav-item nav-cursor\">\n                                                    <div className={\"nav-link \" + (this.state.selectedTab === 'general' ? 'active' : '')}\n                                                         onClick={() => this.setState({selectedTab: 'general'})}>general</div>\n                                                </li>\n                                                <li className=\"nav-item nav-cursor\">\n                                                    <div className={\"nav-link \" + (this.state.selectedTab === 'index schedule' ? 'active' : '')}\n                                                         onClick={() => this.setState({selectedTab: 'index schedule'})}>index schedule</div>\n                                                </li>\n                                                <li className=\"nav-item nav-cursor\">\n                                                    <div className={\"nav-link \" + (this.state.selectedTab === 'DMS schedule' ? 'active' : '')}\n                                                         onClick={() => this.setState({selectedTab: 'DMS schedule'})}>DMS schedule</div>\n                                                </li>\n                                            </ul>\n\n                                            <br/>\n\n                                            {t_value === 'general' &&\n                                            <div>\n\n                                                <div className=\"control-row\">\n                                                    <span className=\"label-2\">name</span>\n                                                    <span className=\"text\">\n                                                        <input type=\"text\"\n                                                               autoFocus={true}\n                                                               className=\"edit-box\"\n                                                               placeholder=\"knowledge base name\"\n                                                               value={this.state.edit_name}\n                                                               onChange={(event) => this.setState({edit_name: event.target.value})}\n                                                        />\n                                                    </span>\n                                                </div>\n\n                                                <div className=\"control-row\">\n                                                    <span className=\"label-2\">email questions to</span>\n                                                    <span className=\"text\">\n                                                        <input type=\"text\"\n                                                               className=\"edit-box\"\n                                                               placeholder=\"email questions to\"\n                                                               value={this.state.edit_email}\n                                                               onChange={(event) => this.setState({edit_email: event.target.value})}\n                                                        />\n                                                    </span>\n                                                </div>\n\n                                                <div className=\"control-row\">\n                                                    <span className=\"label-2\">security id</span>\n                                                    <span className=\"text\">\n                                                    <input type=\"text\"\n                                                           className=\"sid-box\"\n                                                           disabled={true}\n                                                           placeholder=\"security id\"\n                                                           value={this.state.edit_security_id}\n                                                           onChange={(event) => this.setState({edit_security_id: event.target.value})}\n                                                    />\n                                                    </span>\n                                                    <img title=\"generate new security id\" alt=\"refresh\"\n                                                         src={theme === 'light' ? \"../images/refresh.svg\" : \"../images/refresh-dark.svg\"}\n                                                         onClick={() => this.refreshSecurityId()}\n                                                         className=\"image-size\" />\n                                                </div>\n\n                                                <div className=\"control-row\">\n                                                    <span className=\"checkbox-only\">\n                                                        <input type=\"checkbox\"\n                                                               checked={this.state.edit_enabled}\n                                                               onChange={(event) => {\n                                                                   this.setState({edit_enabled: event.target.checked});\n                                                               }}\n                                                               value=\"enable this knowledge-base?\"\n                                                        />\n                                                    </span>\n                                                    <span>knowledge-base enabled?</span>\n                                                </div>\n\n\n                                                <div className=\"control-row\">\n                                                    <span className=\"checkbox-only\">\n                                                        <input type=\"checkbox\"\n                                                               checked={this.state.edit_operator_enabled}\n                                                               onChange={(event) => {\n                                                                   this.setState({edit_operator_enabled: event.target.checked});\n                                                               }}\n                                                               value=\"enable operator access?\"\n                                                        />\n                                                    </span>\n                                                    <span>operator enabled?</span>\n                                                </div>\n\n\n                                                <div className=\"control-row\">\n                                                    <span className=\"checkbox-only\">\n                                                        <input type=\"checkbox\"\n                                                               checked={this.state.edit_capacity_warnings}\n                                                               onChange={(event) => {\n                                                                   this.setState({edit_capacity_warnings: event.target.checked});\n                                                               }}\n                                                               value=\"enable capacity warnings?\"\n                                                        />\n                                                    </span>\n                                                    <span>capacity-warnings on?</span>\n                                                </div>\n\n\n                                                <div className=\"control-row\">\n                                                    <span className=\"label-wide\">maximum number of queries per day (0 is no limits)</span>\n                                                    <span className=\"text\">\n                                                        <input type=\"text\"\n                                                               onChange={(event) => this.setState({edit_max_queries_per_day: event.target.value})}\n                                                               placeholder=\"max transactions per month\"\n                                                               value={this.state.edit_max_queries_per_day}\n                                                        />\n                                                    </span>\n                                                </div>\n\n\n                                                <div className=\"control-row\">\n                                                    <span className=\"label-wide\">maximum analytics retention period in months (0 is no limits)</span>\n                                                    <span className=\"text\">\n                                                        <input type=\"text\"\n                                                               onChange={(event) => this.setState({edit_analytics_window_size_in_months: event.target.value})}\n                                                               placeholder=\"max analytics retention period in months\"\n                                                               value={this.state.edit_analytics_window_size_in_months}\n                                                        />\n                                                    </span>\n                                                </div>\n\n\n                                            </div>\n                                            }\n\n                                            {t_value === 'index schedule' &&\n                                            <div className=\"time-tab-content\">\n                                                <TimeSelect time={this.state.edit_index_optimization_schedule}\n                                                            onSave={(time) => this.updateIndexOptimizationSchedule(time)}/>\n                                            </div>\n                                            }\n                                            {t_value === 'index schedule' &&\n                                            <div className=\"padding-bottom\">\n                                            </div>\n                                            }\n\n\n                                            {t_value === 'DMS schedule' &&\n                                            <div className=\"time-tab-content\">\n                                                <TimeSelect time={this.state.edit_dms_index_schedule}\n                                                            onSave={(time) => this.updateDMSIndexSchedule(time)}/>\n                                            </div>\n                                            }\n                                            {t_value === 'DMS schedule' &&\n                                            <div className=\"padding-bottom\">\n                                            </div>\n                                            }\n\n\n                                        </div>\n                                        <div className=\"modal-footer\">\n                                            <button className=\"btn btn-primary btn-block\"  onClick={() => this.editCancel()}>Cancel</button>\n                                            <button className=\"btn btn-primary btn-block\"  onClick={() => this.editOk()}>Save</button>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        }\n\n                    </div>\n                }\n\n                {\n                    this.state.view_ids &&\n                    <div className=\"modal\" tabIndex=\"-1\" role=\"dialog\" style={{display: \"inline\"}}>\n                        <div className={\"modal-dialog modal-dialog-centered modal-xl\"} role=\"document\">\n                            <div className=\"modal-content shadow p-3 mb-5 bg-white rounded\">\n\n                                <div className=\"modal-header\">{this.state.kb != null ? this.state.kb.name : \"\"} IDS</div>\n                                <div className=\"modal-body\">\n                                    <div>\n                                        <div className=\"dialog-line-height\">\n                                            <div className=\"organisation-id-label\">\n                                                organisation id\n                                            </div>\n                                            <div className=\"float-left\">{this.props.selected_organisation_id ? this.props.selected_organisation_id : \"\"}</div>\n                                            <span className=\"copy-image-span\" title={'copy organisation id'}>\n                                                <img\n                                                    src={theme === 'light' ? '../images/clipboard-copy.svg' : '../images/clipboard-copy-dark.svg'}\n                                                    className=\"clipboard-image\" alt={'copy'}\n                                                    onClick={() => {\n                                                        if (Api.writeToClipboard(this.props.selected_organisation_id ? this.props.selected_organisation_id : \"\"))\n                                                            this.startCopiedVisible(this.props.selected_organisation_id);\n                                                    }}/>\n                                                            {this.props.selected_organisation_id && this.state.copied_visible === this.props.selected_organisation_id &&\n                                                            <div className=\"copied-style\">copied</div>\n                                                            }\n                                            </span>\n                                            <br clear='both'/>\n                                        </div>\n\n                                        <div className=\"dialog-line-height\">\n                                            <div className=\"organisation-id-label\">\n                                                knowledge base id\n                                            </div>\n                                            <div className=\"float-left\">{this.state.kb ? this.state.kb.kbId : \"\"}</div>\n                                            <span className=\"copy-image-span\" title={'copy knowledge base id'}>\n                                                <img\n                                                    src={theme === 'light' ? '../images/clipboard-copy.svg' : '../images/clipboard-copy-dark.svg'}\n                                                    className=\"clipboard-image\" alt={'copy'}\n                                                    onClick={() => {\n                                                        if (Api.writeToClipboard(this.state.kb ? this.state.kb.kbId : \"\"))\n                                                            this.startCopiedVisible(this.state.kb.kbId);\n                                                    }}/>\n                                                            {this.state.kb && this.state.copied_visible === this.state.kb.kbId &&\n                                                            <div className=\"copied-style\">copied</div>\n                                                            }\n                                            </span>\n                                            <br clear='both'/>\n                                        </div>\n\n                                        <div className=\"dialog-line-height\">\n                                            <div className=\"organisation-id-label\">\n                                                security id\n                                            </div>\n                                            <div\n                                                className=\"float-left\">{this.state.kb ? this.state.kb.securityId : \"\"}</div>\n                                            <span className=\"copy-image-span\" title={'copy security id'}>\n                                                <img\n                                                    src={theme === 'light' ? '../images/clipboard-copy.svg' : '../images/clipboard-copy-dark.svg'}\n                                                    className=\"clipboard-image\" alt={'copy'}\n                                                    onClick={() => {\n                                                        if (Api.writeToClipboard(this.state.kb ? this.state.kb.securityId : \"\"))\n                                                            this.startCopiedVisible(this.state.kb.securityId);\n                                                    }}/>\n                                                            {this.state.kb && this.state.copied_visible === this.state.kb.securityId &&\n                                                            <div className=\"copied-style\">copied</div>\n                                                            }\n                                            </span>\n                                            <br clear='both'/>\n                                        </div>\n\n                                    </div>\n                                </div>\n                                <div className=\"modal-footer\">\n                                    <button className=\"btn btn-primary btn-block\" onClick={() => this.setState({view_ids: false})}>Close</button>\n                                </div>\n\n                            </div>\n                        </div>\n                    </div>\n                }\n\n            </div>\n        )\n    }\n}\n\n\nconst mapStateToProps = function(state) {\n    return {\n        error: state.appReducer.error,\n        error_title: state.appReducer.error_title,\n        theme: state.appReducer.theme,\n\n        selected_organisation_id: state.appReducer.selected_organisation_id,\n        selected_organisation: state.appReducer.selected_organisation,\n        knowledge_base_list: state.appReducer.knowledge_base_list,\n        user: state.appReducer.user,\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    dispatch => bindActionCreators(appCreators, dispatch)\n)(KnowledgeBases);\n","import React, {Component} from 'react';\n\nimport {connect} from \"react-redux\";\nimport {bindActionCreators} from \"redux\";\nimport {appCreators} from \"../actions/appActions\";\n\nimport Api from '../common/api'\nimport {Pagination} from \"../common/pagination\";\n\nimport '../css/edge.css';\n\n\n\nexport class EdgeDevices extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            edit_edge_device: false,\n            edgeDevice: null,\n\n            // edit / create device\n            edit_edge_id: \"\",\n            edit_name: \"\",\n            edit_created: 0,\n\n            // viewing ids\n            view_ids: false,\n            view_ids_edge_device: null,\n            copied_visible: '',\n            view_ids_edge_map: {},\n\n            // pagination\n            page_size: 5,\n            page: 0,\n        };\n    }\n    componentDidCatch(error, info) {\n        this.props.setError(error, info);\n        console.log(error, info);\n    }\n    changePage(page) {\n        this.setState({page: page});\n    }\n    changePageSize(page_size) {\n        this.setState({page_size: page_size});\n    }\n    addEdgeDevice() {\n        this.setState({edit_edge_device: true, edgeDevice: null,\n            edit_edge_id: \"\",\n            edit_name: \"\",\n            edit_created: 0,\n        })\n    }\n    editEdgeDevice(edgeDevice) {\n        if (edgeDevice) {\n            this.setState({edit_edge_device: true, edgeDevice: edgeDevice,\n                edit_edge_id: edgeDevice.edgeId,\n                edit_name: edgeDevice.name,\n                edit_created: edgeDevice.created,\n            })\n        }\n    }\n    deleteEdgeDeviceAsk(edgeDevice) {\n        if (edgeDevice) {\n            this.props.openDialog(\"are you sure you want to remove \\\"\" + edgeDevice.name + \"\\\" ?\", \"Remove Edge device?\", (action) => { this.deleteEdgeDevice(action) });\n            this.setState({edgeDevice: edgeDevice});\n        }\n    }\n    deleteEdgeDevice(action) {\n        if (action) {\n            this.props.deleteEdgeDevice(this.props.selected_organisation_id, this.state.edgeDevice.edgeId);\n        }\n        if (this.props.closeDialog) {\n            this.props.closeDialog();\n        }\n    }\n    editCancel() {\n        this.setState({edit_edge_device: false, edgeDevice: null});\n    }\n    editOk() {\n        if (this.state.edit_name.length > 0) {\n            this.props.updateEdgeDevice(this.props.selected_organisation_id, this.state.edit_edge_id,\n                                           this.state.edit_name, this.state.edit_created);\n            this.setState({edit_edge_device: false, edgeDevice: null});\n        } else {\n            this.props.setError(\"Incomplete Data\", \"Please complete all fields.\");\n        }\n    }\n    viewIds(edge_device) {\n        let edge_details = {};\n        if (edge_device.details && edge_device.details.length > 2) {\n            edge_details = JSON.parse(edge_device.details);\n        }\n        this.setState({view_ids: true, view_ids_edge_device: edge_device,\n                             view_ids_edge_map: edge_details});\n    }\n    startCopiedVisible(edge_id) {\n        this.setState({copied_visible: edge_id});\n        window.setTimeout(() => { this.setState({copied_visible: \"\"})}, 1000);\n    }\n    getEdgeDevices() {\n        const paginated_list = [];\n        const first = this.state.page * this.state.page_size;\n        const last = first + this.state.page_size;\n        if (this.props.edge_device_list) {\n            for (const i in this.props.edge_device_list) {\n                if (i >= first && i < last) {\n                    paginated_list.push(this.props.edge_device_list[i]);\n                }\n            }\n        }\n        return paginated_list;\n    }\n    get_edge_details(edge_device) {\n        let str = \"\";\n        if (edge_device) {\n            if (edge_device.details && edge_device.details.length > 2) {\n                const edge_details = JSON.parse(edge_device.details);\n                if (edge_details[\"ipv4\"]) {\n                    str += \"ip v4: \" + edge_details[\"ipv4\"];\n                }\n            }\n            if (edge_device.lastModified !== 0) {\n                if (str.length > 0) str += \", \";\n                str += \"last seen: \" + Api.unixTimeConvert(edge_device.lastModified);\n            }\n        }\n        if (str === \"\") {\n            return \"device not active\";\n        }\n        return str;\n    }\n    pretty_key(key) {\n        if (key) {\n            if (key === 'date') {\n                return \"last seen\";\n            } else if (key.indexOf('_k') > 0) {\n                return key.replace('_k', ' size').replace(/_/g, ' ');\n            } else if (key.indexOf('v4') > 0) {\n                return key.replace('v4', ' v4').replace(/_/g, ' ');\n            } else if (key.indexOf('v6') > 0) {\n                return key.replace('v6', ' v6').replace(/_/g, ' ');\n            }\n        }\n        return key.replace(/_/g, ' ');\n    }\n    pretty_value(key, value) {\n        if (key && value) {\n            if (key === 'date') {\n                return Api.unixTimeConvert(value * 1000);\n            }\n            if (key.indexOf('_k') > 0) {\n                return Api.formatSizeUnits(parseInt(value) * 1000);\n            }\n        }\n        return value;\n    }\n    isVisible() {\n        return this.props.selected_organisation_id && this.props.selected_organisation_id.length > 0 &&\n               this.props.selected_organisation && this.props.selected_organisation.length > 0;\n    }\n    render() {\n        const theme = this.props.theme;\n        return (\n                <div>\n                    { this.isVisible() &&\n\n                    <div className=\"edge-display\">\n\n                        <div>\n                            <table className=\"table\">\n                                <thead>\n                                    <tr className='table-header'>\n                                        <th className='table-header'>Edge device</th>\n                                        <th className='table-header'>remote details</th>\n                                        <th className='table-header'>actions</th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    {\n                                        this.getEdgeDevices().map((edge_device) => {\n                                            return (\n                                                <tr key={edge_device.edgeId}>\n                                                    <td>\n                                                        <div>{edge_device.name}</div>\n                                                    </td>\n                                                    <td>\n                                                        <div>{this.get_edge_details(edge_device)}</div>\n                                                    </td>\n                                                    <td>\n                                                        <div className=\"link-button\"\n                                                             onClick={() => this.viewIds(edge_device)}>\n                                                            <img src=\"../images/id.svg\" className=\"dl-image-size\"\n                                                                 title=\"view edge device ids and details\" alt=\"ids\"/>\n                                                        </div>\n                                                        <div className=\"link-button\"\n                                                             onClick={() => this.editEdgeDevice(edge_device)}>\n                                                            <img src=\"../images/edit.svg\" className=\"dl-image-size\"\n                                                                 title=\"edit edge device\" alt=\"edit\"/>\n                                                        </div>\n                                                        <div className=\"link-button\"\n                                                             onClick={() => this.deleteEdgeDeviceAsk(edge_device)}>\n                                                            <img src=\"../images/delete.svg\" className=\"dl-image-size\"\n                                                                 title=\"remove edge device\" alt=\"remove\"/>\n                                                        </div>\n                                                    </td>\n                                                </tr>\n                                            )\n                                        })\n                                    }\n                                    <tr>\n                                        <td/>\n                                        <td/>\n                                        <td>\n                                            {this.props.selected_organisation_id.length > 0 &&\n                                            <div className=\"image-button\" onClick={() => this.addEdgeDevice()}>\n                                                <img\n                                                    className=\"dl-image-size\" src=\"../images/add.svg\" title=\"add new Edge device\"\n                                                    alt=\"add new Edge device\"/></div>\n                                            }\n                                        </td>\n                                    </tr>\n                                </tbody>\n                            </table>\n\n                            <Pagination\n                                rowsPerPageOptions={[5, 10, 25]}\n                                theme={theme}\n                                component=\"div\"\n                                count={this.props.edge_device_list ? this.props.edge_device_list.length : 0}\n                                rowsPerPage={this.state.page_size}\n                                page={this.state.page}\n                                backIconButtonProps={{\n                                    'aria-label': 'Previous Page',\n                                }}\n                                nextIconButtonProps={{\n                                    'aria-label': 'Next Page',\n                                }}\n                                onChangePage={(page) => this.changePage(page)}\n                                onChangeRowsPerPage={(rows) => this.changePageSize(rows)}\n                            />\n\n                        </div>\n\n                        {\n                            this.state.edit_edge_device &&\n                            <div className=\"modal\" tabIndex=\"-1\" role=\"dialog\" style={{display: \"inline\"}}>\n                                <div className={\"modal-dialog modal-dialog-centered modal-md\"} role=\"document\">\n                                    <div className=\"modal-content shadow p-3 mb-5 bg-white rounded\">\n                                        <div\n                                            className=\"modal-header\">{this.state.edit_edge_id ? \"Edit Edge device\" : \"Add New Edge device\"}</div>\n                                        <div className=\"modal-body\">\n\n                                            <div>name</div>\n\n                                            <input type=\"text\"\n                                                   autoFocus={true}\n                                                   className=\"edit-box\"\n                                                   placeholder=\"Edge device name\"\n                                                   value={this.state.edit_name}\n                                                   onChange={(event) => this.setState({edit_name: event.target.value})}\n                                            />\n\n                                        </div>\n                                        <div className=\"modal-footer\">\n                                            <button className=\"btn btn-primary btn-block\" onClick={() => this.editCancel()}>Cancel</button>\n                                            <button className=\"btn btn-primary btn-block\" onClick={() => this.editOk()}>Save</button>\n                                        </div>\n\n                                    </div>\n                                </div>\n                            </div>\n                        }\n\n                        {\n                            this.state.view_ids &&\n                            <div className=\"modal\" tabIndex=\"-1\" role=\"dialog\" style={{display: \"inline\"}}>\n                                <div className={\"modal-dialog modal-dialog-centered modal-lg\"} role=\"document\">\n                                    <div className=\"modal-content shadow p-3 mb-5 bg-white rounded\">\n                                        <div\n                                            className=\"modal-header\">{this.state.view_ids_edge_device != null ? this.state.view_ids_edge_device.name : \"\"} details\n                                        </div>\n                                        <div className=\"modal-body\">\n                                            <div>\n                                                <div className=\"line-height\">\n                                                    <span className=\"label-1\">organisation id</span>\n                                                    <span className=\"guid\">{this.props.selected_organisation_id ? this.props.selected_organisation_id : \"\"}</span>\n                                                    <span className=\"clipboard\" title={'copy organisation id'}>\n                                                        <img\n                                                            src={theme === 'light' ? '../images/clipboard-copy.svg' : '../images/clipboard-copy-dark.svg'}\n                                                            className=\"dl-image-size\" alt={'copy'}\n                                                            onClick={() => {\n                                                                if (Api.writeToClipboard(this.props.selected_organisation_id ? this.props.selected_organisation_id : \"\"))\n                                                                    this.startCopiedVisible(this.props.selected_organisation_id);\n                                                            }}/>\n                                                        {this.props.selected_organisation_id && this.state.copied_visible === this.props.selected_organisation_id &&\n                                                        <span className=\"copied\">copied</span>\n                                                        }\n                                                    </span>\n                                                </div>\n\n                                                <div className=\"line-height\">\n                                                    <span className=\"label-1\">edge device id</span>\n                                                    <span className=\"guid\">{this.state.view_ids_edge_device ? this.state.view_ids_edge_device.edgeId : \"\"}</span>\n                                                    <span className=\"clipboard\" title={'copy Edge device id'}>\n                                                        <img\n                                                            src={theme === 'light' ? '../images/clipboard-copy.svg' : '../images/clipboard-copy-dark.svg'}\n                                                            className=\"dl-image-size\" alt={'copy'}\n                                                            onClick={() => {\n                                                                if (Api.writeToClipboard(this.state.view_ids_edge_device ? this.state.view_ids_edge_device.edgeId : \"\"))\n                                                                    this.startCopiedVisible(this.state.view_ids_edge_device.edgeId);\n                                                            }}/>\n                                                        {this.state.view_ids_edge_device && this.state.copied_visible === this.state.view_ids_edge_device.edgeId &&\n                                                            <span className=\"copied\">copied</span>\n                                                        }\n                                                    </span>\n                                                </div>\n\n                                                {\n                                                    Object.keys(this.state.view_ids_edge_map).map((key) => {\n                                                        return (<div className=\"line-height\" key={key}>\n                                                                    <span className=\"label-1\">{this.pretty_key(key)}</span>\n                                                                    <span className=\"guid\">{this.pretty_value(key, this.state.view_ids_edge_map[key])}</span>\n                                                                </div>);\n                                                    })\n                                                }\n\n                                            </div>\n                                        </div>\n                                        <div className=\"modal-footer\">\n                                            <button className=\"btn btn-primary btn-block\" onClick={() => this.setState({view_ids: false})}>Close\n                                            </button>\n                                        </div>\n\n                                    </div>\n                                </div>\n                            </div>\n                        }\n\n                    </div>\n                }\n\n            </div>\n        )\n    }\n};\n\n\nconst mapStateToProps = function(state) {\n    return {\n        error: state.appReducer.error,\n        error_title: state.appReducer.error_title,\n        theme: state.appReducer.theme,\n\n        selected_organisation_id: state.appReducer.selected_organisation_id,\n        selected_organisation: state.appReducer.selected_organisation,\n        edge_device_list: state.appReducer.edge_device_list,\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    dispatch => bindActionCreators(appCreators, dispatch)\n)(EdgeDevices);\n","import React, {Component} from 'react';\n\nimport {connect} from \"react-redux\";\nimport {bindActionCreators} from \"redux\";\nimport {appCreators} from \"../actions/appActions\";\n\nimport Api from '../common/api'\nimport {Pagination} from \"../common/pagination\";\n\nimport '../css/edge.css';\n\n\n\nexport class EdgeDeviceCommands extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            // edit / create device\n            edit_edge_device_cmd: false,\n            created: 0,\n            edit_command: \"\",\n            edit_parameters: \"\",\n            edc: null,\n\n            // result viewer for commands\n            view_results: false,\n            command: \"\",\n            results: [],\n\n            // pagination\n            page_size: 5,\n            page: 0,\n        };\n    }\n    componentDidCatch(error, info) {\n        this.props.setError(error, info);\n        console.log(error, info);\n    }\n    changePage(page) {\n        this.setState({page: page});\n    }\n    changePageSize(page_size) {\n        this.setState({page_size: page_size});\n    }\n    addEdgeDeviceCommand() {\n        this.setState({edit_edge_device_cmd: true, edc: null,\n            created: 0,\n            edit_command: \"\",\n            edit_parameters: \"\",\n        })\n    }\n    editEdgeDeviceCommand(edc) {\n        if (edc) {\n            this.setState({edit_edge_device_cmd: true, edgeDeviceCommand: edc,\n                created: edc.created,\n                edit_command: edc.command,\n                edit_parameters: edc.parameters,\n            })\n        }\n    }\n    deleteEdgeDeviceCommandAsk(edc) {\n        if (edc) {\n            this.props.openDialog(\"are you sure you want to remove \\\"\" + edc.command + \"\\\" ?\", \"Remove Edge device command?\",\n                                    (action) => { this.deleteEdgeDeviceCommand(action) });\n            this.setState({edc: edc});\n        }\n    }\n    deleteEdgeDeviceCommand(action) {\n        if (action && this.state.edc) {\n            this.props.deleteEdgeDeviceCommand(this.props.selected_organisation_id, this.props.selected_edge_device_id,\n                                               this.state.edc.created);\n        }\n        if (this.props.closeDialog) {\n            this.props.closeDialog();\n        }\n    }\n    editCancel() {\n        this.setState({edit_edge_device_cmd: false, edc: null});\n    }\n    editOk() {\n        if (this.state.edit_command.trim().length > 0) {\n            this.props.updateEdgeDeviceCommand(this.props.selected_organisation_id, this.props.selected_edge_device_id,\n                                               this.state.edit_command, this.state.edit_parameters, this.state.created);\n            this.setState({edit_edge_device_cmd: false, edc: null, created: 0, edit_command: '', edit_parameters: ''});\n        } else {\n            this.props.setError(\"Incomplete Data\", \"Please complete all fields.\");\n        }\n    }\n    getEdgeDeviceCommands() {\n        const paginated_list = [];\n        const first = this.state.page * this.state.page_size;\n        const last = first + this.state.page_size;\n        if (this.props.edge_device_command_list) {\n            for (const i in this.props.edge_device_command_list) {\n                if (i >= first && i < last) {\n                    paginated_list.push(this.props.edge_device_command_list[i]);\n                }\n            }\n        }\n        return paginated_list;\n    }\n    getExecutedStatus(executed) {\n        if (executed > 0) {\n            return Api.unixTimeConvert(executed);\n        }\n        return \"queued\";\n    }\n    isVisible() {\n        return this.props.selected_edge_device_id && this.props.selected_edge_device_id.length > 0 &&\n               this.props.selected_edge_device && this.props.selected_edge_device.length > 0;\n    }\n    viewResult(edc) {\n        if (edc && edc.result) {\n            this.setState({view_results: true, results: edc.result.split(\"\\n\"), command: edc.command + \" \" + edc.parameters});\n        }\n    }\n    render() {\n        const theme = this.props.theme;\n        return (\n                <div className=\"edge-display\">\n                    { this.isVisible() &&\n\n                    <div>\n\n                        <div>\n                            <table className=\"table\">\n                                <thead>\n                                    <tr className='table-header'>\n                                        <th className='table-header'>Edge command</th>\n                                        <th className='table-header'>created</th>\n                                        <th className='table-header'>executed</th>\n                                        <th className='table-header'>actions</th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    {\n                                        this.getEdgeDeviceCommands().map((edc) => {\n                                            return (\n                                                <tr key={edc.created}>\n                                                    <td>\n                                                        <div>{edc.command}</div>\n                                                    </td>\n                                                    <td>\n                                                        <div>{Api.unixTimeConvert(edc.created)}</div>\n                                                    </td>\n                                                    <td>\n                                                        <div>{this.getExecutedStatus(edc.executed)}</div>\n                                                    </td>\n                                                    <td>\n                                                        { edc.executed === 0 &&\n                                                            <div className=\"link-button\"\n                                                                 onClick={() => this.editEdgeDeviceCommand(edc)}>\n                                                                <img src=\"../images/edit.svg\" className=\"dl-image-size\"\n                                                                     title=\"edit Edge device\" alt=\"edit\"/>\n                                                            </div>\n                                                        }\n                                                        { edc.executed === 0 &&\n                                                            <div className=\"link-button\"\n                                                                 onClick={() => this.deleteEdgeDeviceCommandAsk(edc)}>\n                                                                <img src=\"../images/delete.svg\" className=\"dl-image-size\"\n                                                                     title=\"remove Edge device\" alt=\"remove\"/>\n                                                            </div>\n                                                        }\n                                                        { edc.executed > 0 &&\n                                                            <div className=\"link-button\"\n                                                                 onClick={() => this.viewResult(edc)}>\n                                                                <img src=\"../images/edit.svg\" className=\"dl-image-size\"\n                                                                     title=\"view command result\" alt=\"view\"/>\n                                                            </div>\n                                                        }\n                                                    </td>\n                                                </tr>\n                                            )\n                                        })\n                                    }\n                                    <tr>\n                                        <td/>\n                                        <td/>\n                                        <td/>\n                                        <td>\n                                            {this.props.selected_edge_device_id.length > 0 &&\n                                            <div className=\"edge-float-right\" onClick={() => this.addEdgeDeviceCommand()}>\n                                                <img\n                                                    className=\"dl-image-size\" src=\"../images/add.svg\" title=\"add new Edge device command\"\n                                                    alt=\"add new Edge device command\"/></div>\n                                            }\n                                        </td>\n                                    </tr>\n                                </tbody>\n                            </table>\n\n                            <Pagination\n                                rowsPerPageOptions={[5, 10, 25]}\n                                theme={theme}\n                                component=\"div\"\n                                count={this.props.edge_device_command_list ? this.props.edge_device_command_list.length : 0}\n                                rowsPerPage={this.state.page_size}\n                                page={this.state.page}\n                                onChangePage={(page) => this.changePage(page)}\n                                onChangeRowsPerPage={(rows) => this.changePageSize(rows)}\n                            />\n\n                        </div>\n\n\n                        {this.state.edit_edge_device_cmd &&\n                        <div className=\"modal\" tabIndex=\"-1\" role=\"dialog\" style={{display: \"inline\"}}>\n                            <div className={\"modal-dialog modal-dialog-centered modal-xl\"} role=\"document\">\n                                <div className=\"modal-content shadow p-3 mb-5 bg-white rounded\">\n\n                                    <div\n                                        className=\"modal-header\">{this.state.created ? \"Edit Edge device command\" : \"Add New Edge device command\"}</div>\n                                    <div className=\"modal-body\">\n\n                                        <div>\n\n                                            <div className=\"control-row\">\n                                                <span className=\"label-2\">command</span>\n                                                <span className=\"text\">\n                                                    <input type=\"text\" className=\"form-control\"\n                                                           autoFocus={true}\n                                                           placeholder=\"command\"\n                                                           value={this.state.edit_command}\n                                                           onChange={(event) => this.setState({edit_command: event.target.value})}\n                                                    />\n                                                </span>\n                                            </div>\n\n                                            <div className=\"control-row\">\n                                                <span className=\"label-2\">parameters</span>\n                                                <span className=\"text\">\n                                                    <input type=\"text\" className=\"form-control\"\n                                                       placeholder=\"command parameters\"\n                                                       value={this.state.edit_parameters}\n                                                       onChange={(event) => this.setState({edit_parameters: event.target.value})}\n                                                    />\n                                                </span>\n                                            </div>\n\n                                        </div>\n\n                                    </div>\n                                    <div className=\"modal-footer\">\n                                        <button className=\"btn btn-primary btn-block\" onClick={() => this.editCancel()}>Cancel</button>\n                                        <button className=\"btn btn-primary btn-block\" onClick={() => this.editOk()}>Save</button>\n                                    </div>\n\n                                </div>\n                            </div>\n                        </div>\n                        }\n\n\n                        {this.state.view_results &&\n                        <div className=\"modal\" tabIndex=\"-1\" role=\"dialog\" style={{display: \"inline\"}}>\n                            <div className={\"modal-dialog modal-dialog-centered modal-xl\"} role=\"document\">\n                                <div className=\"modal-content shadow p-3 mb-5 bg-white rounded\">\n\n                                    <div className=\"modal-header\">results</div>\n                                    <div className=\"modal-body\">\n                                        <div>\n                                            <div className=\"command-item\">{this.state.command}</div>\n                                            {\n                                                this.state.results.map((result, index) => {\n                                                    return (\n                                                        <div key={index} className=\"result-item\">\n                                                            {result}\n                                                        </div>\n                                                    )\n                                                })\n                                            }\n                                            <br clear='both'/>\n\n                                        </div>\n                                    </div>\n                                    <div className=\"modal-footer\">\n                                        <button className=\"btn btn-primary btn-block\"\n                                                onClick={() => this.setState({view_results: false})}>Close\n                                        </button>\n                                    </div>\n\n                                </div>\n                            </div>\n                        </div>\n                        }\n\n                    </div>\n                }\n\n            </div>\n        )\n    }\n}\n\n\nconst mapStateToProps = function(state) {\n    return {\n        error: state.appReducer.error,\n        error_title: state.appReducer.error_title,\n        theme: state.appReducer.theme,\n\n        selected_organisation_id: state.appReducer.selected_organisation_id,\n        selected_organisation: state.appReducer.selected_organisation,\n\n        selected_edge_device_id: state.appReducer.selected_edge_device_id,\n        selected_edge_device: state.appReducer.selected_edge_device,\n\n        edge_device_list: state.appReducer.edge_device_list,\n        edge_device_command_list: state.appReducer.edge_device_command_list,\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    dispatch => bindActionCreators(appCreators, dispatch)\n)(EdgeDeviceCommands);\n","import React from 'react';\n\nimport Comms from '../common/comms';\nimport Api from '../common/api';\n\nimport {connect} from \"react-redux\";\nimport {bindActionCreators} from \"redux\";\nimport {appCreators} from \"../actions/appActions\";\n\nimport '../css/inventory.css';\n\n\n\nexport class Inventory extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            date_time: 0,\n        };\n    }\n    componentDidCatch(error, info) {\n        this.props.setError(error, info);\n        console.log(error, info);\n    }\n    componentDidMount() {\n    }\n    programConverted(program) {\n        if (program) {\n            window.open().document.body.innerHTML += program.replace(/\\n/g, \"<br />\");\n        }\n    }\n    inventorizeDump(dateTime) {\n        Comms.download_inventorize_dump(this.props.selected_organisation_id, this.props.selected_knowledgebase_id, dateTime);\n    }\n    inventorizeDumpSpreadsheet(dateTime) {\n        Comms.download_inventorize_dump_spreadhseet(this.props.selected_organisation_id, this.props.selected_knowledgebase_id, dateTime);\n    }\n    deleteInventorizeAsk(dateTime) {\n        this.setState({date_time: dateTime});\n        this.props.openDialog(\"are you sure you want to remove the report dated <b>\" + Api.unixTimeConvert(dateTime) + \"</b>?\",\n            \"Remove Inventory Report\", (action) => { this.deleteReport(action) });\n    }\n    deleteReport(action) {\n        if (action) {\n            this.props.deleteInventoryItem(this.state.date_time);\n        }\n        if (this.props.closeDialog) {\n            this.props.closeDialog();\n        }\n    }\n    mindDump() {\n        Comms.download_mind_dump(this.props.selected_organisation_id, this.props.selected_knowledgebase_id);\n    }\n    queryLogDump() {\n        Comms.download_query_log(this.props.selected_organisation_id, this.props.selected_knowledgebase_id);\n    }\n    restore(data) {\n        if (data) {\n            this.setState({uploading: true});\n            Api.restore(data,\n                () => {\n                    this.setState({uploading: false,\n                        message_title: \"Success\",\n                        message: \"data restored\",\n                        message_callback: () => { this.setState({message: \"\", message_title: \"\"})}\n                    });\n                },\n                (errStr) => {\n                    this.props.setError(\"Error\", errStr);\n                })\n        }\n    }\n    isVisible() {\n        return this.props.selected_organisation_id && this.props.selected_organisation_id.length > 0 &&\n            this.props.selected_organisation && this.props.selected_organisation.length > 0 &&\n            this.props.selected_knowledgebase_id && this.props.selected_knowledgebase_id.length > 0;\n    }\n    render() {\n        const theme = this.props.theme;\n        return (\n            <div className=\"inventory-page\">\n\n                {this.isVisible() &&\n                    <div className={theme === 'light' ? \"hr\" : \"hr_dark\"} />\n                }\n\n                {this.isVisible() &&\n\n                    <div className=\"inventory-label\">Manage snapshots of your document inventory.\n                        {this.props.inventorize_busy &&\n                            <span>  SimSage is busy creating a new snapshot.</span>\n                        }\n                        {this.props.selected_organisation_id.length > 0 &&\n                        <img src=\"../images/refresh.svg\" alt=\"refresh\"\n                             title=\"refresh the inventory list\"\n                             onClick={() => {\n                                 this.props.getInventoryList();\n                                 this.props.getInventoryBusy();\n                             }}\n                             className=\"refresh-image\" />\n                        }\n                    </div>\n                }\n\n                {this.isVisible() &&\n                    <div>\n                        <table className=\"table\">\n                            <thead>\n                                <tr className='table-header'>\n                                    <th className='table-header table-width-70'>created</th>\n                                    <th className='table-header'>action</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                { this.props.inventorize_list && this.props.inventorize_list.timeList && this.props.inventorize_list.timeList.map((item) => {\n                                    return (\n                                        <tr key={item}>\n                                            <td>\n                                                <div className=\"snapshot-item\">\n                                                    content snapshot {Api.unixTimeConvert(item)}\n                                                </div>\n                                            </td>\n                                            <td>\n                                                <div className=\"link-button\" onClick={() => this.inventorizeDump(item)}>\n                                                    <img src=\"../images/parquet.png\" className=\"image-size\" title=\"download as parquet-file\" alt=\"download parquet\"/>\n                                                </div>\n                                                <div className=\"link-button\" onClick={() => this.inventorizeDumpSpreadsheet(item)}>\n                                                    <img src=\"../images/xlsx.svg\" className=\"image-size\" title=\"download as spreadsheet-xlsx\" alt=\"download spreadsheet\"/>\n                                                </div>\n                                                <div className=\"link-button\" onClick={() => this.deleteInventorizeAsk(item)}>\n                                                    <img src=\"../images/delete.svg\" className=\"image-size\" title=\"remove report\" alt=\"remove\"/>\n                                                </div>\n                                            </td>\n                                        </tr>\n                                    )\n                                })}\n                                <tr>\n                                    <td/>\n                                    <td>\n                                        {this.props.selected_organisation_id.length > 0 && !this.props.inventorize_busy &&\n                                        <div className=\"image-button\" onClick={() => {\n                                            this.props.createInventory();\n                                            this.props.forceInventoryBusy();\n                                        }}><img className=\"image-size\" src=\"../images/add.svg\" title=\"create a new snapshot\" alt=\"create new snapshot\"/></div>\n                                        }\n                                        {this.props.selected_organisation_id.length > 0 && this.props.inventorize_busy &&\n                                            <div className=\"image-button\">\n                                                <img className=\"image-size add-image-disabled\" src=\"../images/add.svg\" title=\"SimSage is currently busy processing an inventory.  Please try again later.\" alt=\"create new snapshot\"/>\n                                            </div>\n                                        }\n                                    </td>\n                                </tr>\n                            </tbody>\n                        </table>\n\n                    </div>\n                }\n\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = function(state) {\n    return {\n        error: state.appReducer.error,\n        error_title: state.appReducer.error_title,\n        theme: state.appReducer.theme,\n\n        selected_organisation_id: state.appReducer.selected_organisation_id,\n        selected_organisation: state.appReducer.selected_organisation,\n        selected_knowledgebase_id: state.appReducer.selected_knowledgebase_id,\n        inventorize_list: state.appReducer.inventorize_list,\n        knowledge_base_list: state.appReducer.knowledge_base_list,\n        inventorize_busy: state.appReducer.inventorize_busy,\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    dispatch => bindActionCreators(appCreators, dispatch)\n)(Inventory);\n\n","import React, {Component} from 'react';\n\nimport MessageDialog from \"../common/message-dialog\";\nimport {Api} from \"../common/api\";\n\nimport '../css/crawler.css';\n\nconst crawler_list = [\n    {\"key\": \"none\", \"value\": \"please select crawler type\"},\n    {\"key\": \"file\", \"value\": \"file crawler\"},\n    {\"key\": \"web\", \"value\": \"web crawler\"},\n    {\"key\": \"office365\", \"value\": \"office 365 crawler\"},\n    {\"key\": \"dropbox\", \"value\": \"dropbox crawler\"},\n    {\"key\": \"wordpress\", \"value\": \"WordPress external crawler\"},\n    {\"key\": \"gdrive\", \"value\": \"Google-drive crawler\"},\n    {\"key\": \"nfs\", \"value\": \"nfs external crawler\"},\n    {\"key\": \"database\", \"value\": \"database crawler\"},\n    {\"key\": \"restfull\", \"value\": \"REST-full crawler\"},\n];\n\n\nexport class CrawlerGeneral extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            has_error: false,\n\n            onSave: props.onSave,  // save data\n            onError: props.onError,\n\n            // messages\n            message_callback: null,\n            message: '',\n            message_title: '',\n\n            organisation_id: Api.defined(props.organisation_id) ? props.organisation_id : '',\n            kb_id: Api.defined(props.kb_id) ? props.kb_id : '',\n            sourceId: Api.defined(props.sourceId) ? props.sourceId : '0',\n            nodeId: Api.defined(props.nodeId) ? props.nodeId : '0',\n            maxItems: Api.defined(props.maxItems) ? props.maxItems : '0',\n            maxQNAItems: Api.defined(props.maxQNAItems) ? props.maxQNAItems : '0',\n\n            name: Api.defined(props.name) ? props.name : '',\n            filesPerSecond: Api.defined(props.filesPerSecond) ? props.filesPerSecond : '0',\n            crawlerType: Api.defined(props.crawlerType) && props.crawlerType.length > 0 ? props.crawlerType : 'none',\n            deleteFiles: props.deleteFiles,\n            allowAnonymous: props.allowAnonymous,\n            enablePreview: props.enablePreview,\n            processingLevel: props.processingLevel,\n            customRender: props.customRender,\n            edge_device_list: this.props.edge_device_list,\n\n            edgeDeviceId: Api.defined(props.edgeDeviceId) && props.edgeDeviceId.length > 0 ? props.edgeDeviceId : 'none',\n            qaMatchStrength: Api.defined(props.qaMatchStrength) && props.qaMatchStrength ? props.qaMatchStrength : 0.8125,\n            numResults: Api.defined(props.numResults) && props.numResults ? props.numResults : 5,\n            numFragments: Api.defined(props.numFragments) && props.numFragments ? props.numFragments : 3,\n        };\n\n    }\n    componentDidMount() {\n    }\n    componentWillUnmount() {\n    }\n    componentDidCatch(error, info) {\n        this.setState({ has_error: true });\n        console.log(error, info);\n    }\n    UNSAFE_componentWillReceiveProps(nextProps) {\n        // see if we have data to start this dialog\n        if (nextProps !== null) {\n            this.setState(this.construct_data({\n                            filesPerSecond: nextProps.filesPerSecond,\n                            crawlerType: Api.defined(nextProps.crawlerType) ? nextProps.crawlerType : 'none',\n                            deleteFiles: nextProps.deleteFiles,\n                            allowAnonymous: nextProps.allowAnonymous,\n                            enablePreview: nextProps.enablePreview,\n                            organisation_id: nextProps.organisation_id,\n                            kb_id: nextProps.kb_id,\n                            sourceId: nextProps.sourceId,\n                            nodeId: nextProps.nodeId,\n                            maxItems: nextProps.maxItems,\n                            maxQNAItems: nextProps.maxQNAItems,\n                            processingLevel: nextProps.processingLevel,\n                            customRender: nextProps.customRender,\n                            edgeDeviceId: Api.defined(nextProps.edgeDeviceId) ? nextProps.edgeDeviceId : 'none',\n                            qaMatchStrength: Api.defined(nextProps.qaMatchStrength) ? nextProps.qaMatchStrength : 0.8125,\n                            numResults: Api.defined(nextProps.numResults) ? nextProps.numResults : 5,\n                            numFragments: Api.defined(nextProps.numFragments) ? nextProps.numFragments : 3,\n\n                            name: nextProps.name,\n                            onSave: nextProps.onSave,\n                            edge_device_list: nextProps.edge_device_list,\n\n                            onError: nextProps.onError,\n                        }));\n        }\n    }\n    construct_data(data) {\n        const crawlerType = Api.defined(data.crawlerType) ? data.crawlerType : this.state.crawlerType;\n        const allowAnonymous = (Api.defined(data.allowAnonymous) ? data.allowAnonymous : this.state.allowAnonymous) || (crawlerType === 'web');\n        let edgeDeviceId = Api.defined(data.edgeDeviceId) ? data.edgeDeviceId : this.state.edgeDeviceId;\n        if (edgeDeviceId === 'none' || !this.canHaveEdgeDevice()) edgeDeviceId = '';\n        return {filesPerSecond: Api.defined(data.filesPerSecond) ? data.filesPerSecond : this.state.filesPerSecond,\n                organisationId: Api.defined(data.organisationId) ? data.organisationId : this.state.organisationId,\n                crawlerType: crawlerType,\n                deleteFiles: Api.defined(data.deleteFiles) ? data.deleteFiles : this.state.deleteFiles,\n                allowAnonymous: allowAnonymous,\n                enablePreview: Api.defined(data.enablePreview) ? data.enablePreview : this.state.enablePreview,\n                processingLevel: Api.defined(data.processingLevel) ? data.processingLevel : this.state.processingLevel,\n                name: Api.defined(data.name) ? data.name : this.state.name,\n                sourceId: Api.defined(data.sourceId) ? data.sourceId : this.state.sourceId,\n                nodeId: Api.defined(data.nodeId) ? data.nodeId : this.state.nodeId,\n                maxItems: Api.defined(data.maxItems) ? data.maxItems : this.state.maxItems,\n                maxQNAItems: Api.defined(data.maxQNAItems) ? data.maxQNAItems : this.state.maxQNAItems,\n                customRender: Api.defined(data.customRender) ? data.customRender : this.state.customRender,\n                edgeDeviceId: edgeDeviceId,\n                qaMatchStrength: Api.defined(data.qaMatchStrength) ? data.qaMatchStrength : this.state.qaMatchStrength,\n                numResults: Api.defined(data.numResults) ? data.numResults : this.state.numResults,\n                numFragments: Api.defined(data.numFragments) ? data.numFragments : this.state.numFragments,\n            };\n    }\n    setError(title, error_msg) {\n        if (this.props.onError) {\n            this.props.onError(title, error_msg);\n        }\n    }\n    change_callback(data) {\n        this.setState(data);\n        if (this.state.onSave) {\n            this.state.onSave(this.construct_data(data));\n        }\n    }\n    testCrawler() {\n        const name = this.state.name;\n        Api.testCrawler(this.state.organisation_id, this.state.kb_id, this.state.sourceId,\n            () => {\n                this.setState({\n                    message_callback: () => { this.setState({message_title: '', message: ''})},\n                    message_title: 'Crawler Test',\n                    message: 'Success!  crawler \"' + name + '\" can communicate with its intended end-point.'\n                });\n            },\n            (err) => {\n                console.log(err);\n                this.setError(\"Error Testing Crawler\", err);\n            });\n    }\n    canHaveEdgeDevice() {\n        const crawlerType = this.state.crawlerType;\n        return crawlerType !== 'office365' && crawlerType !== 'wordpress' && crawlerType !== 'gdrive';\n    }\n    setProcessingLevelFromMark(value) {\n        if (this.state.onSave) {\n            this.state.onSave(this.construct_data({\"processingLevel\": value}));\n        }\n    }\n    filteredEdgeDevices() {\n        let list = [{\"key\": \"none\", \"value\": \"n/a\"}];\n        if (this.props.edge_device_list) {\n            for (let edge_device of this.props.edge_device_list) {\n                if (edge_device.organisationId === this.state.organisation_id && edge_device.edgeId) {\n                    list.push({\"key\": edge_device.edgeId, \"value\": edge_device.name});\n                }\n            }\n        }\n        return list;\n    }\n    render() {\n        if (this.state.has_error) {\n            return <h1>crawler-general.js: Something went wrong.</h1>;\n        }\n        return (\n            <div className=\"crawler-page-form\">\n\n                <MessageDialog callback={(action) => this.state.message_callback(action)}\n                               open={this.state.message.length > 0}\n                               theme={this.props.theme}\n                               message={this.state.message}\n                               title={this.state.message_title} />\n\n                <div className=\"crawler-page\">\n\n                    <div className=\"type-select-box\">\n                        <select className=\"form-select customWidth\" onChange={(event) => {this.change_callback({crawlerType: event.target.value})}}\n                                disabled={(\"\" + this.state.sourceId) !== \"0\"}\n                                defaultValue={this.state.crawlerType}>\n                            {\n                                crawler_list.map((value) => {\n                                    return (<option key={value.key} value={value.key}>{value.value}</option>)\n                                })\n                            }\n                        </select>\n                    </div>\n\n\n                    <div className=\"processing-selector\">\n                        <span className=\"label-processing\">processing level:</span>\n                        <span title=\"Select what kind of processing you want done to these files\" className=\"processing-list\">\n                            <div className=\"form-check form-check-inline\">\n                                <input className=\"form-check-input\" type=\"radio\" name=\"inlineRadioOptions\"\n                                       onChange={() => this.setProcessingLevelFromMark(\"FILES\")}\n                                       id=\"inlineRadio1\" value=\"FILES\" checked={this.state.processingLevel === \"FILES\"} />\n                                <label className=\"form-check-label\" htmlFor=\"inlineRadio1\">discovery</label>\n                            </div>\n                            <div className=\"form-check form-check-inline\">\n                                <input className=\"form-check-input\" type=\"radio\" name=\"inlineRadioOptions\"\n                                       onChange={() => this.setProcessingLevelFromMark(\"GDPR\")}\n                                       id=\"inlineRadio2\" value=\"GDPR\" checked={this.state.processingLevel === \"GDPR\"} />\n                                <label className=\"form-check-label\" htmlFor=\"inlineRadio2\">GDPR</label>\n                            </div>\n                            <div className=\"form-check form-check-inline\">\n                                <input className=\"form-check-input\" type=\"radio\" name=\"inlineRadioOptions\"\n                                       onChange={() => this.setProcessingLevelFromMark(\"SEARCH\")}\n                                       id=\"inlineRadio3\" value=\"SEARCH\" checked={this.state.processingLevel === \"SEARCH\"} />\n                                <label className=\"form-check-label\" htmlFor=\"inlineRadio3\">search</label>\n                            </div>\n                            <div className=\"form-check form-check-inline\">\n                                <input className=\"form-check-input\" type=\"radio\" name=\"inlineRadioOptions\"\n                                       onChange={() => this.setProcessingLevelFromMark(\"NLU\")}\n                                       id=\"inlineRadio4\" value=\"lang\" disabled />\n                                <label className=\"form-check-label\" htmlFor=\"inlineRadio3\">NLU</label>\n                            </div>\n\n                        </span>\n                    </div>\n\n\n                    <div className=\"form-group\">\n                        <span className=\"left-column\">\n                            <input type=\"text\" className=\"form-control\"\n                                placeholder=\"Crawler Name\"\n                                autoFocus\n                                value={this.state.name}\n                                onChange={(event) => {this.change_callback({name: event.target.value})}}\n                            />\n                        </span>\n                        <span className=\"right-column\">\n                            <span className=\"label-right\">files per second throttle</span>\n                            <span className=\"number-textbox\">\n                                <input type=\"text\" className=\"form-control\"\n                                    placeholder=\"files per second throttle\"\n                                    value={this.state.filesPerSecond}\n                                    onChange={(event) => {this.change_callback({filesPerSecond: event.target.value})}}\n                                />\n                            </span>\n                        </span>\n                    </div>\n\n\n                    <div className=\"form-group\">\n                        <span className=\"left-column\">\n                            <span className=\"label-right\">maximum number of files</span>\n                            <span className=\"number-textbox\">\n                                <input type=\"text\" className=\"form-control\"\n                                placeholder=\"Maximum number of files (0 for no limits)\"\n                                value={this.state.maxItems}\n                                onChange={(event) => {this.change_callback({maxItems: event.target.value})}}\n                                />\n                            </span>\n                        </span>\n                        <span className=\"right-column\">\n                            <span className=\"label-right\">maximum number of QA</span>\n                            <span className=\"number-textbox\">\n                                <input type=\"text\" className=\"form-control\"\n                                    placeholder=\"Maximum number of QA entries (0 for no limits)\"\n                                    value={this.state.maxQNAItems}\n                                    onChange={(event) => {this.change_callback({maxQNAItems: event.target.value})}}\n                                />\n                            </span>\n                        </span>\n                    </div>\n\n\n                    <div className=\"form-group\">\n                        <span className=\"left-column\">\n                            <span className=\"label-right\">node id</span>\n                            <span className=\"number-textbox\">\n                                <input type=\"text\" className=\"form-control\"\n                                    placeholder=\"node-id (0 for single node systems)\"\n                                    value={this.state.nodeId}\n                                    onChange={(event) => {this.change_callback({nodeId: event.target.value})}}\n                                />\n                            </span>\n                        </span>\n                        <span className=\"right-column\">\n                            {(this.state.crawlerType === 'database' || this.state.crawlerType === 'restfull') &&\n                            <div>\n                                <div\n                                     title=\"Restful and DB crawlers have optional custom-rendering flags.\">\n                                    <input type=\"checkbox\"\n                                        checked={this.state.customRender && (this.state.crawlerType === 'database' || this.state.crawlerType === 'restfull')}\n                                        onChange={(event) => {\n                                            this.change_callback({customRender: event.target.checked && (this.state.crawlerType === 'database' || this.state.crawlerType === 'restfull')});\n                                        }}\n                                        value=\"custom render?\"\n                                    />\n                                    <span className=\"label-left\">custom render?</span>\n                                </div>\n                            </div>\n                            }\n                            {(this.state.crawlerType !== 'database' && this.state.crawlerType !== 'restfull') &&\n                            <div />\n                            }\n                        </span>\n                    </div>\n\n                    <div className=\"form-group\">\n                        <span className=\"left-column\">\n                            <div style={{float: 'left'}} title=\"At the end of a run through your data we can optionally check if files have been removed by seeing which files weren't seen during a run.  Check this option if you want files that no longer exist removed automatically from SimSage.\">\n                                <input type=\"checkbox\"\n                                    checked={this.state.deleteFiles}\n                                    onChange={(event) => { this.change_callback({deleteFiles: event.target.checked}); }}\n                                    value=\"delete files?\"\n                                />\n                                <span className=\"label-left\">remove un-seen files?</span>\n                            </div>\n                        </span>\n                        <span className=\"right-column\">\n                            <div style={{float: 'left'}} title=\"Our default web-search and bot-interfaces require anonymous access to the data gathered by this source.  Check this box if you want anonymous users to view the data in it. (always enabled for web-sources).\">\n                                <input type=\"checkbox\"\n                                    checked={this.state.allowAnonymous || this.state.crawlerType === 'web'}\n                                    disabled={this.state.crawlerType === 'web'}\n                                    onChange={(event) => { this.change_callback({allowAnonymous: event.target.checked}); }}\n                                    value=\"allow anonymous access to these files?\"\n                                />\n                                <span className=\"label-left\">allow anonymous access to these files?</span>\n                            </div>\n                        </span>\n                    </div>\n\n\n                    <div className=\"form-group\">\n                        <span className=\"left-column\">\n                            <div style={{float: 'left'}} title=\"Check this box if you preview images generated for each document.  Document search must be enabled for this to work.\">\n                                <input type=\"checkbox\"\n                                    checked={this.state.enablePreview && (this.state.processingLevel === \"SEARCH\" || this.state.processingLevel === \"NLU\")}\n                                    disabled={this.state.processingLevel !== \"SEARCH\" && this.state.processingLevel !== \"NLU\"}\n                                    onChange={(event) => { this.change_callback({enablePreview: event.target.checked}); }}\n                                    value=\"enable document image previews?\"\n                                />\n                                <span className=\"label-left\">enable document image previews?</span>\n                            </div>\n                        </span>\n                        <span className=\"right-column\">\n                            <span className=\"label-right\">number of search results</span>\n                            <span className=\"number-textbox\">\n                                <input type=\"text\" className=\"form-control\"\n                                    placeholder=\"number of search results\"\n                                    value={this.state.numResults}\n                                    onChange={(event) => {this.change_callback({numResults: event.target.value})}}\n                                />\n                            </span>\n                        </span>\n                    </div>\n\n                    <div className=\"form-group\">\n                        <span className=\"left-column\">\n                            <span className=\"label-right\">number of fragments</span>\n                            <span className=\"number-textbox\">\n                                <input type=\"text\" className=\"form-control\"\n                                    placeholder=\"number of fragments per search result\"\n                                    value={this.state.numFragments}\n                                    onChange={(event) => {this.change_callback({numFragments: event.target.value})}}\n                                />\n                            </span>\n                        </span>\n                        <span className=\"right-column\">\n                            <span className=\"label-right\">Q&A threshold</span>\n                            <span className=\"number-textbox\">\n                                <input type=\"text\" className=\"form-control\"\n                                    placeholder=\"Q&A threshold (0.8125 default)\"\n                                    value={this.state.qaMatchStrength}\n                                    onChange={(event) => {this.change_callback({qaMatchStrength: event.target.value})}}\n                                />\n                            </span>\n                        </span>\n                    </div>\n\n\n                    {this.canHaveEdgeDevice() &&\n                    <div className=\"form-group\">\n                        <span className=\"left-column\">\n                            <span className=\"label-right\"\n                                 title=\"you can connect this source to a SimSage Edge device if you have one.  Select it here.\">\n                                Edge device\n                            </span>\n                            <span className=\"select-box-after-label\">\n                                <select className=\"form-select\" onChange={(event) => this.change_callback({edgeDeviceId: event.target.value})}\n                                        disabled={(\"\" + this.state.sourceId) !== \"0\"}\n                                        defaultValue={this.state.edgeDeviceId !== '' ? this.state.edgeDeviceId : 'none'}>\n                                    {\n                                        this.filteredEdgeDevices().map((value) => {\n                                            return (<option key={value.key} value={value.key}>{value.value}</option>)\n                                        })\n                                    }\n                                </select>\n                            </span>\n                        </span>\n                        <span className=\"right-column\">\n                        </span>\n                    </div>\n                    }\n\n\n                    <div>\n                        {this.state.sourceId && this.state.sourceId > 0 && this.state.crawlerType !== 'nfs' &&\n                            this.state.crawlerType !== 'database' && this.state.crawlerType !== 'restfull' &&\n                            this.state.crawlerType !== 'gdrive' &&\n                        <div>\n                            <button className=\"btn btn-primary btn-block\"\n                                    onClick={() => this.testCrawler()}>Test Connection</button>\n                        </div>\n                        }\n                    </div>\n\n\n\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default CrawlerGeneral;\n","import React, {Component} from 'react';\n\nimport Api from '../common/api';\nimport '../css/crawler.css';\n\n\nexport class CrawlerFile extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            has_error: false,\n\n            onSave: props.onSave,\n            onError: props.onError,\n\n            // file specific\n            username: Api.defined(props.username) ? props.username : '',\n            password: Api.defined(props.password) ? props.password : '',\n            server: Api.defined(props.server) ? props.server : '',\n            domain: Api.defined(props.domain) ? props.domain : '',\n            fqdn: Api.defined(props.fqdn) ? props.fqdn : '',\n            shareName: Api.defined(props.shareName) ? props.shareName : '',\n            sharePath: Api.defined(props.sharePath) ? props.sharePath : '',\n            specific_json: props.specific_json,\n        };\n\n    }\n    componentDidMount() {\n    }\n    componentWillUnmount() {\n    }\n    componentDidCatch(error, info) {\n        this.setState({ has_error: true });\n        console.log(error, info);\n    }\n    UNSAFE_componentWillReceiveProps(nextProps) {\n        // see if we have data to start this dialog\n        if (nextProps !== null) {\n            this.setState(this.construct_data({username: nextProps.username,\n                password: nextProps.password,\n                domain: nextProps.domain,\n                fqdn: nextProps.fqdn,\n                server: nextProps.server,\n                shareName: nextProps.shareName,\n                sharePath: nextProps.sharePath,\n                specific_json: nextProps.specific_json,\n                onSave: nextProps.onSave,\n                onError: nextProps.onError,\n            }));\n        }\n    }\n    construct_data(data) {\n        return {\n            ...this.state.specific_json,\n            username: Api.defined(data.username) ? data.username : this.state.username,\n            password: Api.defined(data.password) ? data.password : this.state.password,\n            domain: Api.defined(data.domain) ? data.domain : this.state.domain,\n            fqdn: Api.defined(data.fqdn) ? data.fqdn : this.state.fqdn,\n            server: Api.defined(data.server) ? data.server : this.state.server,\n            shareName: Api.defined(data.shareName) ? data.shareName : this.state.shareName,\n            sharePath: Api.defined(data.sharePath) ? data.sharePath : this.state.sharePath,\n        };\n    }\n    change_callback(data) {\n        this.setState(data);\n        if (this.state.onSave) {\n            this.state.onSave(this.construct_data(data));\n        }\n    }\n    render() {\n        if (this.state.has_error) {\n            return <h1>crawler-file.js: Something went wrong.</h1>;\n        }\n        return (\n            <div className=\"crawler-page\">\n\n                <div className=\"form-group\">\n                    <span className=\"left-column\">\n                        <span className=\"small-label-right\">user name</span>\n                        <span className=\"big-text\">\n                            <form>\n                                <input type=\"text\" className=\"form-control\"\n                                    autoFocus={true}\n                                    placeholder=\"user name\"\n                                    value={this.state.username}\n                                    onChange={(event) => {this.change_callback({username: event.target.value})}}\n                                />\n                            </form>\n                        </span>\n                    </span>\n                    <span className=\"right-column\">\n                        <span className=\"small-label-right\">password</span>\n                        <span className=\"big-text\">\n                            <form>\n                                <input type=\"password\" className=\"form-control\"\n                                    placeholder=\"password\"\n                                    value={this.state.password}\n                                    onChange={(event) => {this.change_callback({password: event.target.value})}}\n                                />\n                            </form>\n                        </span>\n                    </span>\n                </div>\n\n\n                <div className=\"form-group\">\n                    <span className=\"left-column\">\n                        <span className=\"small-label-right\">domain name</span>\n                        <span className=\"big-text\">\n                            <form>\n                                <input type=\"text\" className=\"form-control\"\n                                    placeholder=\"domain name\"\n                                    value={this.state.domain}\n                                    onChange={(event) => {this.change_callback({domain: event.target.value})}}\n                                />\n                            </form>\n                        </span>\n                    </span>\n                    <span className=\"right-column\">\n                        <span className=\"small-label-right\">fqdn</span>\n                        <span className=\"big-text\">\n                            <form>\n                                <input type=\"text\" className=\"form-control\"\n                                    placeholder=\"e.g.  simsage.ai  (this will form your user's email addresses, eg. account-name@simsage.ai)\"\n                                    value={this.state.fqdn}\n                                    onChange={(event) => {this.change_callback({fqdn: event.target.value})}}\n                                />\n                            </form>\n                        </span>\n                    </span>\n                </div>\n\n                <div className=\"form-group\">\n                    <span className=\"left-column\">\n                        <span className=\"small-label-right\">server</span>\n                        <span className=\"big-text\">\n                            <form>\n                                <input type=\"text\" className=\"form-control\"\n                                    placeholder=\"server (hostname or ip-address)\"\n                                    value={this.state.server}\n                                    onChange={(event) => {this.change_callback({server: event.target.value})}}\n                                />\n                            </form>\n                        </span>\n                    </span>\n                    <span className=\"right-column\">\n                        <span className=\"small-label-right\">share name</span>\n                        <span className=\"big-text\">\n                            <form>\n                                <input type=\"text\" className=\"form-control\"\n                                    placeholder=\"share name\"\n                                    value={this.state.shareName}\n                                    onChange={(event) => {this.change_callback({shareName: event.target.value})}}\n                                />\n                            </form>\n                        </span>\n                    </span>\n                </div>\n\n\n\n                <div className=\"form-group\">\n                    <span className=\"left-column\">\n                        <span className=\"small-label-right\">share path</span>\n                        <span className=\"big-text\">\n                            <form>\n                                <input type=\"text\" className=\"form-control\"\n                                    placeholder=\"path inside share (optional)\"\n                                    value={this.state.sharePath}\n                                    onChange={(event) => {this.change_callback({sharePath: event.target.value})}}\n                                />\n                            </form>\n                        </span>\n                    </span>\n                </div>\n\n\n            </div>\n        );\n    }\n}\n\nexport default CrawlerFile;\n","import React, {Component} from 'react';\n\nimport Api from '../common/api';\n\nimport '../css/crawler.css';\n\n\nexport class CrawlerWeb extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            has_error: false,\n\n            onError: props.onError,\n            onSave: props.onSave,\n\n            // web specific\n            baseUrlList: Api.defined(props.baseUrlList) ? props.baseUrlList : '',\n            webCss: Api.defined(props.webCss) ? props.webCss : '',\n            webCssIgnore: Api.defined(props.webCssIgnore) ? props.webCssIgnore : '',\n            validExtensions: Api.defined(props.validExtensions) ? props.validExtensions : '',\n            validExtensionsIgnore: Api.defined(props.validExtensionsIgnore) ? props.validExtensionsIgnore : '',\n            articleIncludeWordsCsv: Api.defined(props.articleIncludeWordsCsv) ? props.articleIncludeWordsCsv : '',\n            articleExcludeWordsCsv: Api.defined(props.articleExcludeWordsCsv) ? props.articleExcludeWordsCsv : '',\n            specific_json: props.specific_json,\n        };\n\n    }\n    componentDidMount() {\n    }\n    componentWillUnmount() {\n    }\n    componentDidCatch(error, info) {\n        this.setState({ has_error: true });\n        console.log(error, info);\n    }\n    UNSAFE_componentWillReceiveProps(nextProps) {\n        // see if we have data to start this dialog\n        if (nextProps !== null) {\n            this.setState(this.construct_data({baseUrlList: nextProps.baseUrlList,\n                webCss: Api.defined(nextProps.webCss) ? nextProps.webCss : '',\n                validExtensions: Api.defined(nextProps.validExtensions) ? nextProps.validExtensions : '',\n                webCssIgnore: Api.defined(nextProps.webCssIgnore) ? nextProps.webCssIgnore : '',\n                validExtensionsIgnore: Api.defined(nextProps.validExtensionsIgnore) ? nextProps.validExtensionsIgnore : '',\n                articleIncludeWordsCsv: Api.defined(nextProps.articleIncludeWordsCsv) ? nextProps.articleIncludeWordsCsv : '',\n                articleExcludeWordsCsv: Api.defined(nextProps.articleExcludeWordsCsv) ? nextProps.articleExcludeWordsCsv : '',\n                specific_json: nextProps.specific_json,\n                onSave: nextProps.onSave,\n                onError: nextProps.onError,\n            }));\n        }\n    }\n    construct_data(data) {\n        return {\n            ...this.state.specific_json,\n            baseUrlList: Api.defined(data.baseUrlList) ? data.baseUrlList : this.state.baseUrlList,\n            webCss: Api.defined(data.webCss) ? data.webCss : this.state.webCss,\n            webCssIgnore: Api.defined(data.webCssIgnore) ? data.webCssIgnore : this.state.webCssIgnore,\n            validExtensions: Api.defined(data.validExtensions) ? data.validExtensions : this.state.validExtensions,\n            validExtensionsIgnore: Api.defined(data.validExtensionsIgnore) ? data.validExtensionsIgnore : this.state.validExtensionsIgnore ,\n            articleIncludeWordsCsv: Api.defined(data.articleIncludeWordsCsv) ? data.articleIncludeWordsCsv : this.state.articleIncludeWordsCsv ,\n            articleExcludeWordsCsv: Api.defined(data.articleExcludeWordsCsv) ? data.articleExcludeWordsCsv : this.state.articleExcludeWordsCsv ,\n        };\n    }\n    change_callback(data) {\n        this.setState(data);\n        if (this.state.onSave) {\n            this.state.onSave(this.construct_data(data));\n        }\n    }\n    render() {\n        if (this.state.has_error) {\n            return <h1>crawler-web.js: Something went wrong.</h1>;\n        }\n        return (\n            <div className=\"crawler-page\">\n\n                <div className=\"form-group\">\n                    <span className=\"label-right-top\">http/s base url</span>\n                    <span className=\"full-column\">\n                        <input type=\"text\"\n                            placeholder=\"single http/s base url path (e.g. https://simsage.ai)\"\n                            autoFocus={true}\n                            className=\"form-control\"\n                            value={this.state.baseUrlList}\n                            onChange={(event) => {this.change_callback({baseUrlList: event.target.value})}}\n                        />\n                    </span>\n                </div>\n\n                <div className=\"form-group\">\n                    <span className=\"left-column\">\n                        <span className=\"small-label-right\">valid extensions</span>\n                        <span className=\"big-text\">\n                            <input type=\"text\" className=\"form-control\"\n                                   value={this.state.validExtensions}\n                                   onChange={(event) => {this.change_callback({validExtensions: event.target.value})}}\n                            />\n                        </span>\n                    </span>\n                    <span className=\"left-column\">\n                            <span className=\"small-label-right\">ignore extensions</span>\n                            <span className=\"big-text\">\n                            <input type=\"text\" className=\"form-control\"\n                                    value={this.state.validExtensionsIgnore}\n                                    onChange={(event) => {this.change_callback({validExtensionsIgnore: event.target.value})}}\n                                />\n                            </span>\n                    </span>\n                </div>\n\n                <div className=\"form-group\">\n                    <span className=\"label-right-top\">include css csv</span>\n                    <span className=\"full-column\">\n                        <textarea className=\"textarea-width\"\n                            placeholder=\"css/html root fragments to include csv\"\n                            rows=\"3\"\n                            value={this.state.webCss}\n                            onChange={(event) => {this.change_callback({webCss: event.target.value})}}\n                        />\n                    </span>\n                </div>\n\n                <div className=\"form-group\">\n                    <span className=\"label-right-top\">exclude css csv</span>\n                    <span className=\"full-column\">\n                        <textarea className=\"textarea-width\"\n                            placeholder=\"css/html root fragments to exclude csv\"\n                            rows=\"3\"\n                            value={this.state.webCssIgnore}\n                            onChange={(event) => {this.change_callback({webCssIgnore: event.target.value})}}\n                        />\n                    </span>\n                </div>\n\n                <div className=\"form-group\">\n                    <span className=\"label-right-top\">csv include words</span>\n                    <span className=\"full-column\">\n                        <textarea className=\"textarea-width\"\n                            placeholder=\"csv words, include articles by words [optional]\"\n                            rows=\"3\"\n                            value={this.state.articleIncludeWordsCsv}\n                            onChange={(event) => {this.change_callback({articleIncludeWordsCsv: event.target.value})}}\n                        />\n                    </span>\n                </div>\n\n                <div className=\"form-group\">\n                    <span className=\"label-right-top\">csv exclude words</span>\n                    <span className=\"full-column\">\n                        <textarea className=\"textarea-width\"\n                            placeholder=\"csv words, exclude articles by words [optional]\"\n                            rows=\"3\"\n                            value={this.state.articleExcludeWordsCsv}\n                            onChange={(event) => {this.change_callback({articleExcludeWordsCsv: event.target.value})}}\n                        />\n                    </span>\n                </div>\n\n            </div>\n        );\n    }\n}\n\nexport default CrawlerWeb;\n","import React, {Component} from 'react';\n\nimport {Api} from \"../common/api\";\n\nimport '../css/crawler.css';\n\nconst type_list = [\n    {\"key\": \"none\", \"value\": \"please select database type\"},\n    {\"key\": \"mysql\", \"value\": \"MySQL\"},\n    {\"key\": \"postgresql\", \"value\": \"Postgresql\"},\n    {\"key\": \"microsoftsql\", \"value\": \"Microsoft SQL\"},\n];\n\n\nexport class CrawlerDatabase extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            has_error: false,\n\n            onSave: props.onSave,\n            onError: props.onError,\n\n            // database specific\n            username: props.username ? props.username : '',\n            password: props.password ? props.password : '',\n            jdbc: props.jdbc ? props.jdbc : '',\n            type: Api.defined(props.type) ? props.type : 'none',\n            query: props.query ? props.query : '',\n            pk: props.pk ? props.pk : '',\n            template: props.template ? props.template : '',\n            text: props.text ? props.text : '',\n            content_url: props.content_url ? props.content_url : '',\n            customRender: props.customRender,\n\n            specific_json: props.specific_json,\n        };\n\n    }\n    componentDidMount() {\n    }\n    componentWillUnmount() {\n    }\n    componentDidCatch(error, info) {\n        this.setState({ has_error: true });\n        console.log(error, info);\n    }\n    UNSAFE_componentWillReceiveProps(nextProps) {\n        // see if we have data to start this dialog\n        if (nextProps !== null) {\n            this.setState(this.construct_data({\n                username: nextProps.username,\n                password: nextProps.password,\n                jdbc: nextProps.jdbc,\n                type: Api.defined(nextProps.type) ? nextProps.type : 'none',\n                query: nextProps.query,\n                pk: nextProps.pk,\n                template: nextProps.template,\n                text: nextProps.text,\n                content_url: nextProps.content_url,\n                customRender: nextProps.customRender,\n\n                specific_json: nextProps.specific_json,\n\n                onSave: nextProps.onSave,\n                onError: nextProps.onError,\n            }));\n        }\n    }\n    construct_data(data) {\n        return {\n            ...this.state.specific_json,\n            username: Api.defined(data.username) ? data.username : this.state.username,\n            password: Api.defined(data.password) ? data.password : this.state.password,\n            jdbc: Api.defined(data.jdbc) ? data.jdbc : this.state.jdbc,\n            type: Api.defined(data.type) ? data.type : this.state.type,\n            query: Api.defined(data.query) ? data.query : this.state.query,\n            pk: Api.defined(data.pk) ? data.pk : this.state.pk,\n            template: Api.defined(data.template) ? data.template : this.state.template,\n            text: Api.defined(data.text) ? data.text : this.state.text,\n            content_url: Api.defined(data.content_url) ? data.content_url : this.state.content_url,\n        };\n    }\n    change_callback(data) {\n        this.setState(data);\n        if (this.state.onSave) {\n            this.state.onSave(this.construct_data(data));\n        }\n    }\n    render() {\n        if (this.state.has_error) {\n            return <h1>crawler-database.js: Something went wrong.</h1>;\n        }\n        return (\n            <div className=\"crawler-page\">\n\n                <div className=\"form-group\">\n                    <span className=\"left-column\">\n                        <span className=\"small-label-right\">user name</span>\n                        <span className=\"big-text\">\n                            <form>\n                                <input type=\"text\" className=\"form-control\"\n                                    placeholder=\"the user name for db access\"\n                                    autoFocus={true}\n                                    value={this.state.username}\n                                    onChange={(event) => {this.change_callback({username: event.target.value})}}\n                                />\n                            </form>\n                        </span>\n                    </span>\n                    <span className=\"right-column\">\n                        <span className=\"small-label-right\">password</span>\n                        <span className=\"big-text\">\n                            <form>\n                                <input type=\"password\" className=\"form-control\"\n                                    placeholder=\"password\"\n                                    value={this.state.password}\n                                    onChange={(event) => {this.change_callback({password: event.target.value})}}\n                                />\n                            </form>\n                        </span>\n                    </span>\n                </div>\n\n\n                <div className=\"form-group\">\n                    <span className=\"left-column\">\n                        <span className=\"small-label-right\">jdbc string</span>\n                        <span className=\"big-text\">\n                            <input type=\"text\" className=\"form-control jdbc-field-width\"\n                                placeholder=\"jdbc connection string, e.g. jdbc:microsoft:sqlserver://HOST:1433;DatabaseName=DATABASE\"\n                                value={this.state.jdbc}\n                                onChange={(event) => {this.change_callback({jdbc: event.target.value})}}\n                            />\n                        </span>\n                    </span>\n                </div>\n\n                <div className=\"form-group\">\n                    <span className=\"left-column\">\n                        <span className=\"small-label-right\">database</span>\n                        <span className=\"big-text\">\n                            <select className=\"form-select\" onChange={(event) => {this.change_callback({type: event.target.value})}}\n                                    defaultValue={this.state.type}>\n                                {\n                                    type_list.map((value) => {\n                                        return (<option key={value.key} value={value.key}>{value.value}</option>)\n                                    })\n                                }\n                            </select>\n                        </span>\n                    </span>\n                    <span className=\"right-column\">\n                        <span className=\"small-label-right\">pk field</span>\n                        <span className=\"big-text\">\n                            <form>\n                                <input type=\"text\" className=\"form-control\"\n                                    placeholder=\"primary key field name\"\n                                    value={this.state.pk}\n                                    onChange={(event) => {this.change_callback({pk: event.target.value})}}\n                                />\n                            </form>\n                        </span>\n                    </span>\n                </div>\n\n\n                <div className=\"form-group\">\n                    <span className=\"left-column\">\n                        <span className=\"small-label-right\">web fields</span>\n                        <span className=\"big-text\">\n                            <form>\n                                <input type=\"text\" className=\"form-control jdbc-field-width\"\n                                       placeholder=\"document http/https reference SQL fields in square brackets [FIELD-NAME]\"\n                                       disabled={this.state.customRender}\n                                       value={this.state.content_url}\n                                       onChange={(event) => {this.change_callback({content_url: event.target.value})}}\n                                />\n                            </form>\n                        </span>\n                    </span>\n                </div>\n\n\n                <div className=\"form-group\">\n                    <span className=\"label-right-top\">select</span>\n                    <span className=\"full-column\">\n                        <textarea className=\"textarea-width\"\n                            placeholder=\"SQL query, a valid SELECT statement, no other allowed\"\n                            rows={3}\n                            value={this.state.query}\n                            onChange={(event) => {this.change_callback({query: event.target.value})}}\n                        />\n                    </span>\n                </div>\n\n\n                <div className=\"form-group\">\n                    <span className=\"label-right-top\">text index template</span>\n                    <span className=\"full-column\">\n                        <textarea className=\"textarea-width\"\n                            placeholder=\"sql text index template, an text template referencing SQL fields in square brackets [FIELD-NAME]\"\n                            disabled={!this.state.customRender}\n                            rows={4}\n                            value={this.state.text}\n                            onChange={(event) => {this.change_callback({text: event.target.value})}}\n                        />\n                    </span>\n                </div>\n\n\n                <div className=\"form-group\">\n                    <span className=\"label-right-top\">html template</span>\n                    <span className=\"full-column\">\n                        <textarea className=\"textarea-width\"\n                            placeholder=\"sql html render template, an html template referencing SQL fields in square brackets [FIELD-NAME]\"\n                            disabled={!this.state.customRender}\n                            rows={4}\n                            value={this.state.template}\n                            onChange={(event) => {this.change_callback({template: event.target.value})}}\n                        />\n                    </span>\n                </div>\n\n            </div>\n        );\n    }\n}\n\nexport default CrawlerDatabase;\n","import React, {Component} from 'react';\n\nimport {Api} from \"../common/api\";\n\nimport '../css/crawler.css';\n\n\n// valid metadata drop-down values\nconst metadata_list = [\n    {\"key\": \"none\", \"display\": null, \"field1\": \"\", \"db1\": \"\", \"db2\":\"\", \"sort\": \"\", \"sort_default\": \"\", \"sort_asc\": \"\", \"sort_desc\": \"\"},\n    {\"key\": \"author\", \"display\": null, \"field1\": \"{author}\", \"db1\": \"\", \"db2\":\"\", \"sort\": \"\", \"sort_default\": \"\", \"sort_asc\": \"\", \"sort_desc\": \"\"},\n    {\"key\": \"created\", \"display\": null, \"field1\": \"{created}\", \"db1\": \"\", \"db2\":\"\", \"sort\": \"\", \"sort_default\": \"\", \"sort_asc\": \"\", \"sort_desc\": \"\"},\n    {\"key\": \"last modified\", \"display\": null, \"field1\": \"{lastmod}\", \"db1\": \"\", \"db2\":\"\", \"sort\": \"\", \"sort_default\": \"\", \"sort_asc\": \"\", \"sort_desc\": \"\"},\n    {\"key\": \"title\", \"display\": null, \"field1\": \"{title}\", \"db1\": \"\", \"db2\":\"\", \"sort\": \"\", \"sort_default\": \"\", \"sort_asc\": \"\", \"sort_desc\": \"\"},\n    {\"key\": \"image from binary-blob\", \"display\": null, \"field1\": \"binary-blob-image\", \"db1\": \"\", \"db2\":\"\", \"sort\": \"\", \"sort_default\": \"\", \"sort_asc\": \"\", \"sort_desc\": \"\"},\n    {\"key\": \"image from base64\", \"display\": null, \"field1\": \"base64-image\", \"db1\": \"\", \"db2\":\"\", \"sort\": \"\", \"sort_default\": \"\", \"sort_asc\": \"\", \"sort_desc\": \"\"},\n    {\"key\": \"image from url\", \"display\": null, \"field1\": \"url-image\", \"db1\": \"\", \"db2\":\"\", \"sort\": \"\", \"sort_default\": \"\", \"sort_asc\": \"\", \"sort_desc\": \"\"},\n    {\"key\": \"category\", \"display\": \"\", \"field1\": \"\", \"db1\": \"\", \"db2\":\"\", \"sort\": \"\", \"sort_default\": \"\", \"sort_asc\": \"\", \"sort_desc\": \"\"},\n    {\"key\": \"two level category\", \"display\": \"\", \"field1\": \"\", \"db1\": \"\", \"db2\":\"\", \"sort\": \"\", \"sort_default\": \"\", \"sort_asc\": \"\", \"sort_desc\": \"\"},\n    {\"key\": \"number range\", \"display\": \"\", \"field1\": \"\", \"db1\": \"\", \"db2\":\"\", \"sort\": \"false\", \"sort_default\": \"\", \"sort_asc\": \"\", \"sort_desc\": \"\"},\n    {\"key\": \"monetary x 100 range\", \"display\": \"\", \"field1\": \"\", \"db1\": \"\", \"db2\":\"\", \"sort\": \"false\", \"sort_default\": \"\", \"sort_asc\": \"\", \"sort_desc\": \"\"},\n    {\"key\": \"monetary range\", \"display\": \"\", \"field1\": \"\", \"db1\": \"\", \"db2\":\"\", \"sort\": \"false\", \"sort_default\": \"\", \"sort_asc\": \"\", \"sort_desc\": \"\"},\n    {\"key\": \"star rating\", \"display\": \"\", \"field1\": \"\", \"db1\": \"\", \"db2\":\"\", \"sort\": \"false\", \"sort_default\": \"\", \"sort_asc\": \"\", \"sort_desc\": \"\"},\n    {\"key\": \"select if true\", \"display\": \"\", \"field1\": \"\", \"db1\": \"\", \"db2\":\"\", \"sort\": \"\", \"sort_default\": \"\", \"sort_asc\": \"\", \"sort_desc\": \"\"},\n    {\"key\": \"created date range\", \"display\": \"\", \"field1\": \"\", \"db1\": \"\", \"db2\":\"\", \"sort\": \"false\", \"sort_default\": \"\", \"sort_asc\": \"\", \"sort_desc\": \"\"},\n    {\"key\": \"last modified date ranges\", \"display\": \"\", \"field1\": \"\", \"db1\": \"\", \"db2\":\"\", \"sort\": \"false\", \"sort_default\": \"\", \"sort_asc\": \"\", \"sort_desc\": \"\"},\n    {\"key\": \"csv string\", \"display\": \"\", \"field1\": \"\", \"db1\": \"\", \"db2\":\"\", \"sort\": \"\", \"sort_default\": \"\", \"sort_asc\": \"\", \"sort_desc\": \"\"},\n];\n\n\nexport class CrawlerMetadataMapper extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            has_error: false,\n\n            onSave: props.onSave,\n            onError: props.onError,\n            sourceId: 0,\n\n            // metadata set\n            specificJson: props.specificJson ? props.specificJson : {},\n        };\n\n    }\n    componentDidCatch(error, info) {\n        this.setState({ has_error: true });\n        console.log(error, info);\n    }\n    UNSAFE_componentWillReceiveProps(nextProps) {\n        // see if we have data to start this dialog\n        if (nextProps !== null) {\n            this.setState(this.construct_data({\n                specificJson: nextProps.specificJson ? nextProps.specificJson : {},\n\n                onSave: nextProps.onSave,\n                onError: nextProps.onError,\n            }));\n        }\n    }\n    get_md_list() {\n        return this.state && this.state.specificJson && this.state.specificJson.metadata_list ?\n            this.state.specificJson.metadata_list : [];\n    }\n    construct_data(md_list) {\n        return {\n            ...this.props.specificJson, metadata_list: Api.defined(md_list) ? md_list : this.get_md_list()\n        };\n    }\n    set_db(record, index, value) {\n        const md_list = this.get_md_list();\n        if (index >= 0 && index < md_list.length) {\n            md_list[index].db1 = value;\n            this.setState({specificJson: this.construct_data(md_list)});\n            if (this.state.onSave) {\n                this.state.onSave(this.construct_data(md_list));\n            }\n        }\n    }\n    set_db_extra(record, index, value) {\n        const md_list = this.get_md_list();\n        if (index >= 0 && index < md_list.length) {\n            md_list[index].db2 = value;\n            this.setState({specificJson: this.construct_data(md_list)});\n            if (this.state.onSave) {\n                this.state.onSave(this.construct_data(md_list));\n            }\n        }\n    }\n    set_md_type(record, index, value) {\n        const md_list = this.get_md_list();\n        if (index >= 0 && index < md_list.length) {\n            // find the right item type in the preset list of items\n            let match_item = null;\n            for (const item of metadata_list) {\n                if (item.key === value) {\n                    match_item = item;\n                    break;\n                }\n            }\n            if (match_item != null) {\n                md_list[index] = JSON.parse(JSON.stringify(match_item));\n                this.setState({specificJson: this.construct_data(md_list)});\n                if (this.state.onSave) {\n                    this.state.onSave(this.construct_data(md_list));\n                }\n            }\n        }\n    }\n    setDisplayName(record, index, value) {\n        const md_list = this.get_md_list();\n        if (index >= 0 && index < md_list.length) {\n            md_list[index].display = value;\n            this.setState({specificJson: this.construct_data(md_list)});\n            if (this.state.onSave) {\n                this.state.onSave(this.construct_data(md_list));\n            }\n        }\n    }\n    setUserMetadataName1(record, index, value) {\n        const md_list = this.get_md_list();\n        if (index >= 0 && index < md_list.length) {\n            md_list[index].field1 = value;\n            this.setState({specificJson: this.construct_data(md_list)});\n            if (this.state.onSave) {\n                this.state.onSave(this.construct_data(md_list));\n            }\n        }\n    }\n    setSort(record, index, value) {\n        const md_list = this.get_md_list();\n        if (index >= 0 && index < md_list.length) {\n            md_list[index].sort = value ? \"true\" : \"false\";\n            this.setState({specificJson: this.construct_data(md_list)});\n            if (this.state.onSave) {\n                this.state.onSave(this.construct_data(md_list));\n            }\n        }\n    }\n    setValue(record, index, field_name, value) {\n        const md_list = this.get_md_list();\n        if (index >= 0 && index < md_list.length) {\n            md_list[index][field_name] = value;\n            this.setState({specificJson: this.construct_data(md_list)});\n            if (this.state.onSave) {\n                this.state.onSave(this.construct_data(md_list));\n            }\n        }\n    }\n    setDefaultSort(record, index, direction, value) {\n        const md_list = this.get_md_list();\n        if (index >= 0 && index < md_list.length) {\n            md_list[index].sort_default = (value ? direction : \"\");\n            for (const i in md_list) {\n                if (\"\"+i !== \"\"+index && md_list.hasOwnProperty(i)) {\n                    md_list[i].sort_default = \"\";\n                }\n            }\n            this.setState({specificJson: this.construct_data(md_list)});\n            if (this.state.onSave) {\n                this.state.onSave(this.construct_data(md_list));\n            }\n        }\n    }\n    deleteMetadataItem(index) {\n        const md_list = [];\n        const i_index = '' + index\n        const old_md_list = this.get_md_list();\n        for (let i in old_md_list) {\n            if (i !== i_index) {\n                md_list.push(old_md_list[i]);\n            }\n        }\n        this.setState({specificJson: this.construct_data(md_list)});\n        if (this.state.onSave) {\n            this.state.onSave(this.construct_data(md_list));\n        }\n    }\n    addNewMetadataMapping() {\n        const md_list = this.get_md_list();\n        md_list.push(JSON.parse(JSON.stringify(metadata_list[0]))); // add a copy of item 0\n        this.setState({specificJson: this.construct_data(md_list)});\n        if (this.state.onSave) {\n            this.state.onSave(this.construct_data(md_list));\n        }\n    }\n    checkMetadataName(event) {\n        // only allow valid characters to propagate for metadata names\n        if ((event.key >= 'a' && event.key <= 'z') ||\n            (event.key >= 'A' && event.key <= 'Z') ||\n            (event.key >= '0' && event.key <= '9') || event.key === '-') {\n            return true;\n        } else {\n            event.preventDefault();\n            event.stopPropagation();\n            return false;\n        }\n    }\n    move_row_up(md, index) {\n        if (index > 0) {\n            const md_list = this.get_md_list();\n            const temp = md_list[index-1];\n            md_list[index-1] = md;\n            md_list[index] = temp;\n            this.setState({specificJson: this.construct_data(md_list)});\n            if (this.state.onSave) {\n                this.state.onSave(this.construct_data(md_list));\n            }\n        }\n    }\n    move_row_down(md, index) {\n        const md_list = this.get_md_list();\n        if (index + 1 < md_list.length) {\n            const temp = md_list[index+1];\n            md_list[index+1] = md;\n            md_list[index] = temp;\n            this.setState({specificJson: this.construct_data(md_list)});\n            if (this.state.onSave) {\n                this.state.onSave(this.construct_data(md_list));\n            }\n        }\n    }\n    needs_metadata_field(md) {\n        return md && md.key && (md.key === \"category\" || md.key === \"number range\" || md.key === \"two level category\" ||\n                md.key === \"monetary x 100 range\" || md.key === \"monetary range\" || md.key === \"star rating\" ||\n                md.key === \"created date range\" || md.key === \"last modified date ranges\" ||\n                md.key === \"select if true\" || md.key === \"csv string\");\n    }\n    render() {\n        if (this.state.has_error) {\n            return <h1>crawler-metadata-mapper.js: Something went wrong.</h1>;\n        }\n        const self = this;\n        const num_rows = this.get_md_list().length;\n        const theme = this.props.theme;\n        const source_id = (this.state && this.state.sourceId) ? this.state.sourceId : 0;\n        return (\n            <div className=\"crawler-page\">\n\n                <div className=\"instructions-label\">All rows in order of UI.  Use 'actions' arrows to re-arrange existing rows.</div>\n\n                <table className=\"table\">\n\n                    <thead>\n                        <tr className='table-header'>\n                            <th className=\"table-header metadata-column\">data-type</th>\n                            <th className=\"table-header db-field-column\">source field</th>\n                            <th className=\"table-header display-column\">UI display-name</th>\n                            <th className=\"table-header metadata-field-column\">metadata name</th>\n                            <th className=\"table-header sort-field-column\">sortable</th>\n                            <th className=\"table-header action-field-column\">actions</th>\n                        </tr>\n                    </thead>\n\n                    <tbody>\n\n                    {\n                        this.get_md_list().map(function(md, index) {\n                            return (<tr key={index}>\n\n                                <td className=\"selector-column\">\n                                    <select className=\"form-select metadata-field-column\" onChange={(event) => { self.set_md_type(md, index, event.target.value) }}\n                                            disabled={(\"\" + source_id) !== \"0\"} aria-label=\"select what kind of metadata field to use\"\n                                            defaultValue={md.key}>\n                                        {\n                                            metadata_list.map((value, j) => {\n                                                return (<option key={j} value={value.key}>{value.key}</option>)\n                                            })\n                                        }\n                                    </select>\n                                </td>\n\n                                {md.key !== \"two level category\" &&\n                                <td className=\"db-field-column\">\n                                    <input type=\"text\"\n                                        className=\"theme source-field-width\"\n                                        placeholder=\"source [field-name]\"\n                                        title=\"the source-name field to use for this category\"\n                                        value={md.db1}\n                                        onChange={(event) => {\n                                            self.set_db(md, index, event.target.value)\n                                        }}\n                                        />\n                                </td>\n                                }\n\n                                {md.key === \"two level category\" &&\n                                <td className=\"db-field-column\">\n                                    <input type=\"text\"\n                                        placeholder=\"level 1 [field-name]\"\n                                        className=\"theme source-field-width\"\n                                        value={md.db1}\n                                        title=\"the first source field to use for this double category\"\n                                        onChange={(event) => {\n                                            self.set_db(md, index, event.target.value)\n                                        }}\n                                        />\n                                    <input type=\"text\"\n                                        placeholder=\"level 2 [field-name]\"\n                                        className=\"theme source-field-width\"\n                                        value={md.db2}\n                                        title=\"the second source field to use for this double category\"\n                                        onChange={(event) => {\n                                            self.set_db_extra(md, index, event.target.value)\n                                        }}\n                                        />\n                                </td>\n                                }\n\n\n                                <td className=\"td-display-column\">\n                                    {\n                                        md.display !== null &&\n                                        <span>\n                                            <input type=\"text\"\n                                                className=\"theme metadata-text\"\n                                                placeholder=\"UI display-name\"\n                                                title=\"name displayed in the UI for this item\"\n                                                value={md.display}\n                                                onChange={(event) => {self.setDisplayName(md, index, event.target.value)}}  />\n                                        </span>\n                                    }\n                                </td>\n\n\n                                <td className=\"td-align-top\">\n                                {\n                                    self.needs_metadata_field(md) &&\n                                    <div className=\"td-md-field-width\">\n                                        <input type=\"text\"\n                                            className=\"theme metadata-text\"\n                                            placeholder=\"metadata name\"\n                                            value={md.field1}\n                                            title=\"metadata names should only contain 0..9, a..z, and A..Z\"\n                                            onKeyDown={(event) => {return self.checkMetadataName(event)}}\n                                            onChange={(event) => {self.setUserMetadataName1(md, index, event.target.value)}}  />\n                                    </div>\n                                }\n                                    { md.sort === \"true\" &&\n                                    <div>\n                                        <input type=\"text\"\n                                               className=\"theme metadata-text\"\n                                               placeholder=\"sort descending UI text\"\n                                               value={md.sort_desc}\n                                               title=\"The text to display for this field if a descending sort is selected of this type\"\n                                               onChange={(event) => {self.setValue(md, index, \"sort_desc\", event.target.value)}}  />\n                                    </div>\n                                    }\n                                    { md.sort === \"true\" &&\n                                     <div>\n                                         <input type=\"text\"\n                                                className=\"theme metadata-text\"\n                                                placeholder=\"sort ascending UI text\"\n                                                value={md.sort_asc}\n                                                title=\"The text to display for this field if an ascending sort is selected of this type\"\n                                                onChange={(event) => {self.setValue(md, index, \"sort_asc\", event.target.value)}}  />\n                                     </div>\n                                    }\n                                    {md.sort === \"true\" &&\n                                        <br />\n                                    }\n                                </td>\n\n                                <td className=\"td-align-top\">\n                                    {md.sort !== \"\" &&\n                                    <div className=\"td-sort-2\" title=\"enable this category as an item used for sorting in the UI\">\n                                        <input type=\"checkbox\"\n                                            checked={md.sort === \"true\"}\n                                            onChange={(event) => {\n                                                self.setSort(md, index, event.target.checked);\n                                            }}\n                                            value=\"enable result sorting over this field?\"\n                                        />\n                                    </div>\n                                    }\n                                    {md.sort === \"true\" &&\n                                    <div className=\"td-sort-2\" title=\"set this descending field as the default sort field for the UI\">\n                                        {'\\u2190'}\n                                        <input type=\"checkbox\"\n                                            checked={md.sort_default === \"desc\"}\n                                            onChange={(event) => {\n                                                self.setDefaultSort(md, index, \"desc\", event.target.checked);\n                                            }}\n                                        />\n                                    </div>\n                                    }\n\n                                    {md.sort === \"true\" &&\n                                    <div className=\"td-sort-2\" title=\"set this ascending field as the default sort field for the UI\">\n                                        {'\\u2190'}\n                                        <input type=\"checkbox\"\n                                            checked={md.sort_default === \"asc\"}\n                                            onChange={(event) => {\n                                                self.setDefaultSort(md, index, \"asc\", event.target.checked);\n                                            }}\n                                        />\n                                    </div>\n                                    }\n                                </td>\n\n                                <td className=\"td-action\">\n                                    <span className=\"delete-box\" onClick={() => self.deleteMetadataItem(index)} title=\"remove this metadata item\">\n                                        <img src={theme === 'light' ? \"../images/delete.svg\" : \"../images/delete-dark.svg\"} className=\"image-size\" title=\"remove this metadata mapping\" alt=\"remove this metadata mapping\"/>\n                                    </span>\n                                    {index > 0 &&\n                                    <span className=\"up-arrow\" title=\"move row up (change UI ordering)\"\n                                          onClick={() => {\n                                              self.move_row_up(md, index)\n                                          }}>&#8679;</span>\n                                    }\n                                    {index + 1 < num_rows &&\n                                    <span className=\"up-arrow\" title=\"move row down (change UI ordering)\"\n                                          onClick={() => {\n                                              self.move_row_down(md, index)\n                                          }}>&#8681;</span>\n                                    }\n                                </td>\n\n                            </tr>)\n                        })\n                    }\n\n                    <tr>\n                        <td colSpan={5}>&nbsp;</td>\n                    </tr>\n\n                    <tr>\n                        <td colSpan={5} />\n                        <td>\n                            <div className=\"image-button\" onClick={() => this.addNewMetadataMapping()}><img\n                                className=\"image-size\" src={theme === 'light' ? \"../images/add.svg\" : \"../images/add-dark.svg\"} title=\"add new metadata mapping\"\n                                alt=\"add new metadata mapping\"/></div>\n                        </td>\n                    </tr>\n\n                    <tr>\n                        <td colSpan={5}>&nbsp;</td>\n                    </tr>\n\n                    </tbody>\n\n                </table>\n            </div>\n        );\n    }\n}\n\nexport default CrawlerMetadataMapper;\n","import React, {Component} from 'react';\n\nimport Api from '../common/api';\nimport '../css/crawler.css';\n\n\nexport class CrawlerOffice365 extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            has_error: false,\n\n            onSave: props.onSave,\n            onError: props.onError,\n\n            // office 365 properties\n            tenantId: props.tenantId ? props.tenantId : '',\n            clientId: props.clientId ? props.clientId : '',\n            clientSecret: props.clientSecret ? props.clientSecret : '',\n            redirectUrl: props.redirectUrl ? props.redirectUrl : '',\n\n            crawlOneDrive: Api.defined(props.crawlOneDrive) ? props.crawlOneDrive : false,\n            crawlAllOfOneDrive: Api.defined(props.crawlAllOfOneDrive) ? props.crawlAllOfOneDrive : false,\n            oneDriveUsersToCrawl: props.oneDriveUsersToCrawl ? props.oneDriveUsersToCrawl : '',\n\n            crawlSharePoint: Api.defined(props.crawlSharePoint) ? props.crawlSharePoint : false,\n            crawlRootSite: Api.defined(props.crawlRootSite) ? props.crawlRootSite : false,\n            sharePointSitesToCrawl: props.sharePointSitesToCrawl ? props.sharePointSitesToCrawl : '',\n\n            crawlExchange: Api.defined(props.crawlExchange) ? props.crawlExchange : false,\n            crawlAllOfExchange: Api.defined(props.crawlAllOfExchange) ? props.crawlAllOfExchange : false,\n            exchangeUsersToCrawl: props.exchangeUsersToCrawl ? props.exchangeUsersToCrawl : '',\n\n            specific_json: props.specific_json,\n        };\n\n    }\n    componentDidMount() {\n    }\n    componentWillUnmount() {\n    }\n    componentDidCatch(error, info) {\n        this.setState({ has_error: true });\n        console.log(error, info);\n    }\n    UNSAFE_componentWillReceiveProps(nextProps) {\n        // see if we have data to start this dialog\n        if (nextProps !== null) {\n            this.setState(this.construct_data({\n                tenantId: nextProps.tenantId,\n                clientId: nextProps.clientId,\n                clientSecret: nextProps.clientSecret,\n                redirectUrl: nextProps.redirectUrl,\n\n                crawlOneDrive: nextProps.crawlOneDrive,\n                crawlAllOfOneDrive: nextProps.crawlAllOfOneDrive,\n                oneDriveUsersToCrawl: nextProps.oneDriveUsersToCrawl,\n\n                crawlSharePoint: nextProps.crawlSharePoint,\n                crawlRootSite: nextProps.crawlRootSite,\n                sharePointSitesToCrawl: nextProps.sharePointSitesToCrawl,\n\n                crawlExchange: nextProps.crawlExchange,\n                crawlAllOfExchange: nextProps.crawlAllOfExchange,\n                exchangeUsersToCrawl: nextProps.exchangeUsersToCrawl,\n\n                specific_json: nextProps.specific_json,\n\n                onSave: nextProps.onSave,\n                onError: nextProps.onError,\n            }));\n        }\n    }\n    construct_data(data) {\n        return {\n            ...this.state.specific_json,\n\n            tenantId: Api.defined(data.tenantId) ? data.tenantId : this.state.tenantId,\n            clientId: Api.defined(data.clientId) ? data.clientId : this.state.clientId,\n            clientSecret: Api.defined(data.clientSecret) ? data.clientSecret : this.state.clientSecret,\n            redirectUrl: Api.defined(data.redirectUrl) ? data.redirectUrl : this.state.redirectUrl,\n\n            crawlOneDrive: Api.defined(data.crawlOneDrive) ? data.crawlOneDrive : this.state.crawlOneDrive,\n            crawlAllOfOneDrive: Api.defined(data.crawlAllOfOneDrive) ? data.crawlAllOfOneDrive : this.state.crawlAllOfOneDrive,\n            oneDriveUsersToCrawl: Api.defined(data.oneDriveUsersToCrawl) ? data.oneDriveUsersToCrawl : this.state.oneDriveUsersToCrawl,\n\n            crawlSharePoint: Api.defined(data.crawlSharePoint) ? data.crawlSharePoint : this.state.crawlSharePoint,\n            crawlRootSite: Api.defined(data.crawlRootSite) ? data.crawlRootSite : this.state.crawlRootSite,\n            sharePointSitesToCrawl: Api.defined(data.sharePointSitesToCrawl) ? data.sharePointSitesToCrawl : this.state.sharePointSitesToCrawl,\n\n            crawlExchange: Api.defined(data.crawlExchange) ? data.crawlExchange : this.state.crawlExchange,\n            crawlAllOfExchange: Api.defined(data.crawlAllOfExchange) ? data.crawlAllOfExchange : this.state.crawlAllOfExchange,\n            exchangeUsersToCrawl: Api.defined(data.exchangeUsersToCrawl) ? data.exchangeUsersToCrawl : this.state.exchangeUsersToCrawl,\n        };\n    }\n    change_callback(data) {\n        this.setState(data);\n        if (this.state.onSave) {\n            this.state.onSave(this.construct_data(data));\n        }\n    }\n    render() {\n        if (this.state.has_error) {\n            return <h1>crawler-office365.js: Something went wrong.</h1>;\n        }\n        return (\n            <div className=\"crawler-page\">\n\n                <div className=\"form-group\">\n                    <div className=\"full-column-2\">\n                        <span className=\"small-label-right\">domain name</span>\n                        <span className=\"bigger-text\">\n                            <form>\n                                <input type=\"text\" className=\"form-control\"\n                                    placeholder=\"tenant id\"\n                                    autoFocus={true}\n                                    value={this.state.tenantId}\n                                    onChange={(event) => {this.change_callback({tenantId: event.target.value})}}\n                                />\n                            </form>\n                        </span>\n                        <span className=\"office-manual-box\">\n                            <a href=\"../resources/simsage-office365-setup.pdf\" id=\"dlOffice365\" target=\"_blank\" title=\"download the SimSage Office 365 setup guide\">\n                                <span className=\"instructions-label\">instructions</span>\n                                <img src=\"../images/pdf-icon.png\" alt=\"office 365 setup guide\" className=\"image-size\" />\n                            </a>\n                        </span>\n                    </div>\n                </div>\n\n\n                <div className=\"form-group\">\n                    <span className=\"left-column\">\n                        <span className=\"small-label-right\">client id</span>\n                        <span className=\"big-text\">\n                            <form>\n                                <input type=\"text\" className=\"form-control\"\n                                    placeholder=\"client id\"\n                                    value={this.state.clientId}\n                                    onChange={(event) => {this.change_callback({clientId: event.target.value})}}\n                                />\n                            </form>\n                        </span>\n                    </span>\n                    <span className=\"right-column\">\n                        <span className=\"small-label-right\">client secret</span>\n                        <span className=\"big-text\">\n                            <form>\n                                <input type=\"text\" className=\"form-control\"\n                                    placeholder=\"client secret\"\n                                    value={this.state.clientSecret}\n                                    onChange={(event) => {this.change_callback({clientSecret: event.target.value})}}\n                                />\n                            </form>\n                        </span>\n                    </span>\n                </div>\n\n\n                <div className=\"form-group\">\n                    <span className=\"full-column\">\n                        <span className=\"small-label-right\">redirect url</span>\n                        <span className=\"bigger-text\">\n                            <form>\n                                <input type=\"text\" className=\"form-control\"\n                                    placeholder=\"redirect url: the SimSage interface url to return-to after MS sign-in completes.\"\n                                    value={this.state.redirectUrl}\n                                    onChange={(event) => {this.change_callback({redirectUrl: event.target.value})}}\n                                />\n                            </form>\n                        </span>\n                    </span>\n                </div>\n\n\n                <div className=\"form-group\">\n                    <span className=\"left-column\">\n                        <div style={{float: 'left'}} title=\"Check this box if you want OneDrive of your Office365 to be included\">\n                            <input type=\"checkbox\"\n                                checked={this.state.crawlOneDrive}\n                                onChange={(event) => { this.change_callback({crawlOneDrive: event.target.checked}); }}\n                                value=\"enable OneDrive?\"\n                            />\n                            <span className=\"label-left\">enable OneDrive?</span>\n                        </div>\n                    </span>\n                    <span className=\"right-column\">\n                        <div style={{float: 'left'}} title=\"Check this box if you want ALL of OneDrive to be included\">\n                            <input type=\"checkbox\"\n                                checked={this.state.crawlAllOfOneDrive}\n                                disabled={!this.state.crawlOneDrive}\n                                onChange={(event) => { this.change_callback({crawlAllOfOneDrive: event.target.checked}); }}\n                                value=\"crawl all of OneDrive?\"\n                            />\n                            <span className=\"label-left\">crawl all of OneDrive?</span>\n                        </div>\n                    </span>\n                </div>\n\n                <div className=\"form-group\">\n                    <span className=\"label-right-top\">one-drive accounts</span>\n                    <span className=\"full-column\">\n                        <textarea className=\"textarea-width\"\n                            placeholder=\"specific one-drive accounts (comma separated email addresses)\"\n                            disabled={this.state.crawlAllOfOneDrive || !this.state.crawlOneDrive}\n                            rows={2}\n                            value={this.state.oneDriveUsersToCrawl}\n                            onChange={(event) => {this.change_callback({oneDriveUsersToCrawl: event.target.value})}}\n                        />\n                    </span>\n                </div>\n\n\n\n                <div className=\"form-group\">\n                    <span className=\"left-column\">\n                        <div style={{float: 'left'}} title=\"Check this box if you want SharePoint of your Office365 to be included\">\n                            <input type=\"checkbox\"\n                                checked={this.state.crawlSharePoint}\n                                onChange={(event) => { this.change_callback({crawlSharePoint: event.target.checked}); }}\n                                value=\"enable SharePoint indexing?\"\n                            />\n                            <span className=\"label-left\">enable SharePoint indexing?</span>\n                        </div>\n                    </span>\n                    <span className=\"right-column\">\n                        <div style={{float: 'left'}} title=\"Check this box if you want the root SharePoint site to be indexed\">\n                            <input type=\"checkbox\"\n                                checked={this.state.crawlRootSite}\n                                disabled={!this.state.crawlSharePoint}\n                                onChange={(event) => { this.change_callback({crawlRootSite: event.target.checked}); }}\n                                value=\"crawl SharePoint root site?\"\n                            />\n                            <span className=\"label-left\">crawl SharePoint root site?</span>\n                        </div>\n                    </span>\n                </div>\n\n\n                <div className=\"form-group\">\n                    <span className=\"label-right-top\">sharepoint site ids</span>\n                    <span className=\"full-column\">\n                        <textarea className=\"textarea-width\"\n                            placeholder=\"other SharePoint sites (comma separated ids)\"\n                            disabled={!this.state.crawlSharePoint}\n                            rows={2}\n                            value={this.state.sharePointSitesToCrawl}\n                            onChange={(event) => {this.change_callback({sharePointSitesToCrawl: event.target.value})}}\n                        />\n                    </span>\n                </div>\n\n                <div className=\"form-group\">\n                        <span className=\"left-column\">\n                            <div style={{float: 'left'}} title=\"Check this box if you want Exchange of your Office365 to be included\">\n                                <input type=\"checkbox\"\n                                    checked={this.state.crawlExchange}\n                                    onChange={(event) => { this.change_callback({crawlExchange: event.target.checked}); }}\n                                    value=\"enable Exchange?\"\n                                />\n                                <span className=\"label-left\">enable Exchange?</span>\n                            </div>\n                        </span>\n                    <span className=\"right-column\">\n                        <div style={{float: 'left'}} title=\"Check this box if you want ALL of Exchange to be included\">\n                            <input type=\"checkbox\"\n                                checked={this.state.crawlAllOfExchange}\n                                disabled={!this.state.crawlExchange}\n                                onChange={(event) => { this.change_callback({crawlAllOfExchange: event.target.checked}); }}\n                                value=\"crawl all of Exchange?\"\n                            />\n                            <span className=\"label-left\">crawl all of Exchange?</span>\n                        </div>\n                    </span>\n                </div>\n\n                <div className=\"form-group\">\n                    <span className=\"label-right-top\">specific exchange accounts</span>\n                    <span className=\"full-column\">\n                        <textarea className=\"textarea-width\"\n                            placeholder=\"specific exchange accounts (comma separated email addresses)\"\n                            disabled={this.state.crawlAllOfExchange || !this.state.crawlExchange}\n                            rows={2}\n                            value={this.state.exchangeUsersToCrawl}\n                            onChange={(event) => {this.change_callback({exchangeUsersToCrawl: event.target.value})}}\n                        />\n                    </span>\n                </div>\n\n            </div>\n        );\n    }\n}\n\nexport default CrawlerOffice365;\n","import React, {Component} from 'react';\n\nimport Api from '../common/api';\n\nimport '../css/crawler.css';\n\nexport class CrawlerDropbox extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            has_error: false,\n\n            onSave: props.onSave,\n            onError: props.onError,\n\n            // dropbox properties\n            clientToken: props.clientToken ? props.clientToken : '',\n            folderList: props.folderList ? props.folderList : '',\n            specific_json: props.specific_json,\n        };\n\n    }\n    componentWillUnmount() {\n    }\n    componentDidCatch(error, info) {\n        this.setState({ has_error: true });\n        console.log(error, info);\n    }\n    UNSAFE_componentWillReceiveProps(nextProps) {\n        // see if we have data to start this dialog\n        if (nextProps !== null) {\n            this.setState(this.construct_data({tenantId: nextProps.tenantId,\n                clientToken: Api.defined(nextProps.clientToken) ? nextProps.clientToken : '',\n                folderList: Api.defined(nextProps.folderList) ? nextProps.folderList : '',\n                specific_json: nextProps.specific_json,\n                onSave: nextProps.onSave,\n                onError: nextProps.onError,\n            }));\n        }\n    }\n    construct_data(data) {\n        return {\n            ...this.state.specific_json,\n            clientToken: Api.defined(data.clientToken) ? data.clientToken : this.state.clientToken,\n            folderList: Api.defined(data.folderList) ? data.folderList : this.state.folderList,\n        };\n    }\n    change_callback(data) {\n        this.setState(data);\n        if (this.state.onSave) {\n            const c_data = this.construct_data(data);\n            this.state.onSave(c_data);\n        }\n    }\n    render() {\n        if (this.state.has_error) {\n            return <h1>crawler-dropbox.js: Something went wrong.</h1>;\n        }\n        return (\n            <div className=\"crawler-page\">\n\n                <div className=\"form-group\">\n                    <span className=\"left-column\">\n                        <span className=\"small-label-right\">client token</span>\n                        <span className=\"big-text\">\n                            <form>\n                                <input type=\"text\" className=\"form-control dropbox-text-width\"\n                                    autoFocus={true}\n                                    spellCheck={false}\n                                    placeholder=\"client token\"\n                                    value={this.state.clientToken}\n                                    onChange={(event) => {this.change_callback({clientToken: event.target.value})}}\n                                />\n                            </form>\n                        </span>\n                    </span>\n                    <span className=\"dropbox-manual-box\">\n                        <a href=\"../resources/simsage-dropbox-setup.pdf\" id=\"dlDropbox\" target=\"_blank\" title=\"download the SimSage Dropbox setup guide\">\n                            <span className=\"instructions-label\">instructions</span>\n                            <img src=\"../images/pdf-icon.png\" alt=\"dropbox setup guide\" className=\"image-size\" />\n                        </a>\n                    </span>\n                </div>\n\n                <div className=\"form-group\">\n                    <span className=\"left-column\">\n                        <span className=\"small-label-right\">start folder</span>\n                        <span className=\"big-text\">\n                            <input type=\"text\" className=\"form-control textarea-width\"\n                                      placeholder=\"specific folder to crawl, leave empty to crawl all folders.\"\n                                      value={this.state.folderList}\n                                      onChange={(event) => {this.change_callback({folderList: event.target.value})}}\n                            />\n                        </span>\n                    </span>\n                </div>\n\n            </div>\n        );\n    }\n}\n\nexport default CrawlerDropbox;\n","import React from 'react';\n\nimport '../css/restore-wp-archive.css'\n\n\nexport class RestoreWPArchive extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            filename: '',\n            fileType: '',\n            data: '',\n            organisationId: props.organisationId,\n            kbId: props.kbId,\n            sourceId: props.sourceId,\n            onError: props.onError,\n        };\n    }\n\n    UNSAFE_componentWillReceiveProps(nextProps) {\n        this.setState({\n            organisationId: nextProps.organisationId,\n            kbId: nextProps.kbId,\n            sourceId: nextProps.sourceId,\n            onError: nextProps.onError,\n        });\n    }\n\n    _handleImageChange(e) {\n        e.preventDefault();\n\n        const self = this;\n        const reader = new FileReader();\n        const file = e.target.files[0];\n        const filename = file['name'];\n        const fileType = file['type'];\n\n        reader.onloadend = () => {\n            self.setState({\n                filename: filename,\n                fileType: fileType,\n                data: reader.result\n            });\n        };\n        reader.readAsDataURL(file)\n    }\n\n    upload() {\n        if (this.state.data) {\n            const payload = {\n                organisationId: this.state.organisationId,\n                kbId: this.state.kbId,\n                sid: \"\",\n                sourceId: this.state.sourceId,\n                data: this.state.data,\n            };\n            if (this.props.doUpload) {\n                this.props.doUpload(payload);\n            }\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"restore-wp\">\n                <form onSubmit={(e) => this._handleSubmit(e)} className=\"upload-container\">\n                    <div className=\"form-width\">\n                        <input className=\"upload-control\"\n                               type=\"file\"\n                               onChange={(e) => this._handleImageChange(e)}/>\n                        {\n                            this.state.data && this.state.data.length > 0 && this.state.fileType === \"application/zip\" &&\n                            <span className=\"image-button\" onClick={() => this.upload()}><img\n                                className=\"image-size\" src=\"../images/restore.svg\"\n                                title={\"Click here to upload WordPress Archive \\\"\" + this.state.filename + \"\\\"\"}\n                                alt=\"restore data from file\"/></span>\n                        }\n                    </div>\n                </form>\n            </div>\n        )\n    }\n}\n\nexport default RestoreWPArchive;\n","import React, {Component} from 'react';\n\nimport Comms from \"../common/comms\";\nimport RestoreWPArchive from \"../common/restore-wp-archive\";\n\nimport '../css/crawler.css';\n\n\nexport class CrawlerWordpress extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            has_error: false,\n            organisation_id: props.organisation_id,\n            kb_id: props.kb_id,\n            source_id: props.source_id,\n            onSave: props.onSave,\n            onError: props.onError,\n        };\n\n    }\n    componentWillUnmount() {\n    }\n    componentDidCatch(error, info) {\n        this.setState({ has_error: true });\n        console.log(error, info);\n    }\n    UNSAFE_componentWillReceiveProps(nextProps) {\n        // see if we have data to start this dialog\n        if (nextProps !== null) {\n            this.setState({\n                onSave: nextProps.onSave,\n                onError: nextProps.onError,\n            });\n        }\n    }\n    change_callback(data) {\n        this.setState(data);\n        if (this.state.onSave) {\n            // dummy value in order to save\n            this.state.onSave({crawlerType: \"wordpress\"});\n        }\n    }\n    exportArchive() {\n        Comms.download_export_archive(this.state.organisation_id, this.state.kb_id, this.state.source_id);\n    }\n    restore(data) {\n        if (data && data.data && data.data.length > 0) {\n            // sid will be set by wpUploadArchive\n            this.props.wpUploadArchive({\"organisationId\": this.state.organisation_id,\n                \"kbId\": this.state.kb_id, \"sid\": \"\", \"sourceId\": this.state.source_id, \"data\": data.data});\n        }\n    }\n    render() {\n        if (this.state.has_error) {\n            return <h1>crawler-wordpress.js: Something went wrong.</h1>;\n        }\n        return (\n            <div className=\"crawler-page\">\n                <div className=\"wp-form\">\n                    The WordPress crawler is an external entity controlled by the SimSage WordPress plugin.<br/>\n                    As such there are no properties to configure here, nor is there a schedule for SimSage to work to.<br/><br/>\n\n                    {this.state.source_id > 0 &&\n                        <div className=\"export-wp\">\n                            <div>export the contents of this source as a WordPress GZip Archive</div>\n                            <button className=\"btn btn-primary btn-block\"\n                                    onClick={() => this.exportArchive()}>Export WordPress Archive</button>\n                        </div>\n                    }\n\n                    {this.state.source_id > 0 &&\n                        <div className=\"import-wp\">\n                            <div className=\"import-text\">import the contents of  WordPress GZip Archive into this source</div>\n                            <RestoreWPArchive doUpload={(data) => this.restore(data)}\n                                              organisationId={this.state.organisation_id}\n                                              kbId={this.state.kb_id}\n                                              sourceId={this.state.source_id}\n                                              onError={(err) => this.props.setError(\"Error\", err)} />\n                        </div>\n                    }\n\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default CrawlerWordpress;\n","import React, {Component} from 'react';\n\nimport Api from '../common/api';\n\nimport '../css/crawler.css';\n\n\nexport class CrawlerGDrive extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            has_error: false,\n\n            onSave: props.onSave,\n            onError: props.onError,\n\n            // Google-drive properties\n            gdrive_projectId: props.gdrive_projectId ? props.gdrive_projectId : '',\n            gdrive_clientId: props.gdrive_clientId ? props.gdrive_clientId : '',\n            gdrive_clientSecret: props.gdrive_clientSecret ? props.gdrive_clientSecret : '',\n            gdrive_clientName: props.gdrive_clientName ? props.gdrive_clientName : '',\n            gdrive_clientPort: props.gdrive_clientPort ? props.gdrive_clientPort : '',\n            specific_json: props.specific_json,\n        };\n\n    }\n    componentWillUnmount() {\n    }\n    componentDidCatch(error, info) {\n        this.setState({ has_error: true });\n        console.log(error, info);\n    }\n    UNSAFE_componentWillReceiveProps(nextProps) {\n        // see if we have data to start this dialog\n        if (nextProps !== null) {\n            this.setState(this.construct_data({tenantId: nextProps.tenantId,\n                gdrive_projectId: Api.defined(nextProps.gdrive_projectId) ? nextProps.gdrive_projectId : '',\n                gdrive_clientId: Api.defined(nextProps.gdrive_clientId) ? nextProps.gdrive_clientId : '',\n                gdrive_clientSecret: Api.defined(nextProps.gdrive_clientSecret) ? nextProps.gdrive_clientSecret : '',\n                gdrive_clientName: Api.defined(nextProps.gdrive_clientName) ? nextProps.gdrive_clientName : '',\n                gdrive_clientPort: Api.defined(nextProps.gdrive_clientPort) ? nextProps.gdrive_clientPort : '',\n                specific_json: nextProps.specific_json,\n                onSave: nextProps.onSave,\n                onError: nextProps.onError,\n            }));\n        }\n    }\n    construct_data(data) {\n        return {\n            ...this.state.specific_json,\n            gdrive_projectId: Api.defined(data.gdrive_projectId) ? data.gdrive_projectId : this.state.gdrive_projectId,\n            gdrive_clientId: Api.defined(data.gdrive_clientId) ? data.gdrive_clientId : this.state.gdrive_clientId,\n            gdrive_clientSecret: Api.defined(data.gdrive_clientSecret) ? data.gdrive_clientSecret : this.state.gdrive_clientSecret,\n            gdrive_clientName: Api.defined(data.gdrive_clientName) ? data.gdrive_clientName : this.state.gdrive_clientName,\n            gdrive_clientPort: Api.defined(data.gdrive_clientPort) ? data.gdrive_clientPort : this.state.gdrive_clientPort,\n        };\n    }\n    change_callback(data) {\n        this.setState(data);\n        if (this.state.onSave) {\n            const c_data = this.construct_data(data);\n            this.state.onSave(c_data);\n        }\n    }\n    render() {\n        if (this.state.has_error) {\n            return <h1>crawler-gdrive.js: Something went wrong.</h1>;\n        }\n        return (\n            <div className=\"crawler-page\">\n\n                <div className=\"form-group\">\n                    <div className=\"full-column-2\">\n                        <span className=\"small-label-right\">client id</span>\n                        <span className=\"bigger-text\">\n                            <form>\n                                <input type=\"text\" className=\"form-control\"\n                                       placeholder=\"client id\"\n                                       value={this.state.gdrive_clientId}\n                                       onChange={(event) => {this.change_callback({gdrive_clientId: event.target.value})}}\n                                />\n                            </form>\n                        </span>\n                        <span className=\"office-manual-box\">\n                        <a href=\"../resources/simsage-google-drive-setup.pdf\" id=\"dlGDrive\" target=\"_blank\" title=\"download the SimSage Google-drive setup guide\">\n                                <span className=\"instructions-label\">instructions</span>\n                                <img src=\"../images/pdf-icon.png\" alt=\"google-drive setup guide\" className=\"image-size\" />\n                            </a>\n                        </span>\n                    </div>\n                </div>\n\n\n                <div className=\"form-group\">\n                    <span className=\"left-column\">\n                        <span className=\"small-label-right\">client secret</span>\n                        <span className=\"big-text\">\n                            <form>\n                                <input type=\"text\" className=\"form-control\"\n                                    placeholder=\"client Secret\"\n                                    value={this.state.gdrive_clientSecret}\n                                    onChange={(event) => {this.change_callback({gdrive_clientSecret: event.target.value})}}\n                                />\n                            </form>\n                        </span>\n                    </span>\n                </div>\n\n                <div className=\"form-group\">\n                    <span className=\"left-column\">\n                        <span className=\"small-label-right\">project id</span>\n                        <span className=\"big-text\">\n                            <form>\n                                <input type=\"text\" className=\"form-control\"\n                                    placeholder=\"project id\"\n                                    value={this.state.gdrive_projectId}\n                                    onChange={(event) => {this.change_callback({gdrive_projectId: event.target.value})}}\n                                />\n                            </form>\n                        </span>\n                    </span>\n                </div>\n\n                <div className=\"form-group\">\n                    <span className=\"left-column\">\n                        <span className=\"small-label-right\">client name</span>\n                        <span className=\"big-text\">\n                            <form>\n                                <input type=\"text\" className=\"form-control\"\n                                    placeholder=\"client name\"\n                                    value={this.state.gdrive_clientName}\n                                    onChange={(event) => {this.change_callback({gdrive_clientName: event.target.value})}}\n                                />\n                            </form>\n                        </span>\n                    </span>\n                </div>\n\n\n                <div className=\"form-group\">\n                    <span className=\"left-column\">\n                        <span className=\"small-label-right\">local web port</span>\n                        <span className=\"big-text\">\n                            <form>\n                                <input type=\"text\" className=\"form-control\"\n                                    placeholder=\"local web port\"\n                                    value={this.state.gdrive_clientPort}\n                                    onChange={(event) => {this.change_callback({gdrive_clientPort: event.target.value})}}\n                                />\n                            </form>\n                        </span>\n                    </span>\n                </div>\n\n            </div>\n        );\n    }\n}\n\nexport default CrawlerGDrive;\n","import React, {Component} from 'react';\n\nimport Api from '../common/api';\n\nimport '../css/crawler.css';\n\n\nexport class CrawlerNFS extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            has_error: false,\n\n            onSave: props.onSave,\n            onError: props.onError,\n\n            // nfs drive properties\n            nfs_local_folder: props.nfs_local_folder ? props.nfs_local_folder : '',\n            specific_json: props.specific_json,\n        };\n\n    }\n    componentWillUnmount() {\n    }\n    componentDidCatch(error, info) {\n        this.setState({ has_error: true });\n        console.log(error, info);\n    }\n    UNSAFE_componentWillReceiveProps(nextProps) {\n        // see if we have data to start this dialog\n        if (nextProps !== null) {\n            this.setState({\n                nfs_local_folder: Api.defined(nextProps.nfs_local_folder) ? nextProps.nfs_local_folder : '',\n                specific_json: nextProps.specific_json,\n                onSave: nextProps.onSave,\n                onError: nextProps.onError,\n            });\n        }\n    }\n    construct_data(data) {\n        return {\n            ...this.state.specific_json,\n            nfs_local_folder: Api.defined(data.nfs_local_folder) ? data.nfs_local_folder : this.state.nfs_local_folder,\n        };\n    }\n    change_callback(data) {\n        this.setState(data);\n        if (this.state.onSave) {\n            const c_data = this.construct_data(data);\n            this.state.onSave(c_data);\n        }\n    }\n    render() {\n        if (this.state.has_error) {\n            return <h1>crawler-nfs.js: Something went wrong.</h1>;\n        }\n        return (\n            <div className=\"crawler-page\">\n\n                <div className=\"form-group\">\n                    <span className=\"left-column\">\n                        <span className=\"small-label-right\">local folder</span>\n                        <span className=\"big-text\">\n                            <form>\n                                <input type=\"text\" className=\"form-control nfs-width\"\n                                    placeholder=\"local folder\"\n                                    value={this.state.nfs_local_folder}\n                                    onChange={(event) => {this.change_callback({nfs_local_folder: event.target.value})}}\n                                />\n                            </form>\n                        </span>\n                    </span>\n                </div>\n\n            </div>\n        );\n    }\n}\n\nexport default CrawlerNFS;\n","import React, {Component} from 'react';\n\nimport {Api} from \"../common/api\";\n\nimport '../css/crawler.css';\n\n\nexport class CrawlerRestFull extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            has_error: false,\n\n            onSave: props.onSave,\n            onError: props.onError,\n\n            // database specific\n            pk: props.pk ? props.pk : '',\n            url: props.url ? props.url : '',\n            template: props.template ? props.template : '',\n            text: props.text ? props.text : '',\n            content_url: props.content_url ? props.content_url : '',\n            customRender: props.customRender ? props.customRender : false,\n\n            specific_json: props.specific_json,\n        };\n\n    }\n    componentDidMount() {\n    }\n    componentWillUnmount() {\n    }\n    componentDidCatch(error, info) {\n        this.setState({ has_error: true });\n        console.log(error, info);\n    }\n    UNSAFE_componentWillReceiveProps(nextProps) {\n        // see if we have data to start this dialog\n        if (nextProps !== null) {\n            this.setState(this.construct_data({\n                pk: nextProps.pk,\n                url: nextProps.url,\n                template: nextProps.template,\n                text: nextProps.text,\n                content_url: nextProps.content_url ? nextProps.content_url : '',\n                customRender: nextProps.customRender ? nextProps.customRender : false,\n\n                specific_json: nextProps.specific_json,\n\n                onSave: nextProps.onSave,\n                onError: nextProps.onError,\n            }));\n        }\n    }\n    construct_data(data) {\n        return {\n            ...this.state.specific_json,\n            url: Api.defined(data.url) ? data.url : this.state.url,\n            template: Api.defined(data.template) ? data.template : this.state.template,\n            text: Api.defined(data.text) ? data.text : this.state.text,\n            content_url: Api.defined(data.content_url) ? data.content_url : this.state.content_url,\n            pk: Api.defined(data.pk) ? data.pk : this.state.pk,\n        };\n    }\n    change_callback(data) {\n        this.setState(data);\n        if (this.state.onSave) {\n            this.state.onSave(this.construct_data(data));\n        }\n    }\n    render() {\n        if (this.state.has_error) {\n            return <h1>crawler-restfull.js: Something went wrong.</h1>;\n        }\n        return (\n            <div className=\"crawler-page\">\n\n                <div className=\"form-group\">\n                    <span className=\"left-column\">\n                        <span className=\"small-label-right\">API url</span>\n                        <span className=\"big-text\">\n                            <form>\n                                <input type=\"text\" className=\"form-control jdbc-field-width\"\n                                    placeholder=\"url\"\n                                    value={this.state.url}\n                                    onChange={(event) => {this.change_callback({url: event.target.value})}}\n                                />\n                            </form>\n                        </span>\n                    </span>\n                </div>\n\n                <div className=\"form-group\">\n                    <span className=\"left-column\">\n                        <span className=\"small-label-right\">record primary key</span>\n                        <span className=\"big-text\">\n                            <form>\n                                <input type=\"text\" className=\"form-control jdbc-field-width\"\n                                    placeholder=\"the name of the primary key in the record\"\n                                    value={this.state.pk}\n                                    onChange={(event) => {this.change_callback({pk: event.target.value})}}\n                                />\n                            </form>\n                        </span>\n                    </span>\n                </div>\n\n                <div className=\"form-group\">\n                    <span className=\"left-column\">\n                        <span className=\"small-label-right\">JSON fields</span>\n                        <span className=\"big-text\">\n                            <form>\n                                <input type=\"text\" className=\"form-control jdbc-field-width\"\n                                    placeholder=\"document http/https reference JSON fields in square brackets [FIELD-NAME]\"\n                                    disabled={this.state.customRender}\n                                    value={this.state.content_url}\n                                    onChange={(event) => {this.change_callback({content_url: event.target.value})}}\n                                />\n                            </form>\n                        </span>\n                    </span>\n                </div>\n\n                <div className=\"form-group\">\n                    <span className=\"label-right-top\">text index template</span>\n                    <span className=\"full-column\">\n                        <textarea className=\"textarea-width\"\n                            placeholder=\"REST text index template, an text template referencing REST fields in square brackets [FIELD-NAME]\"\n                            disabled={!this.state.customRender}\n                            rows={7}\n                            value={this.state.text}\n                            onChange={(event) => {this.change_callback({text: event.target.value})}}\n                        />\n                    </span>\n                </div>\n\n                <div className=\"form-group\">\n                    <span className=\"label-right-top\">html render template</span>\n                    <span className=\"full-column\">\n                        <textarea className=\"textarea-width\"\n                            placeholder=\"REST html render template, an html template referencing REST fields in square brackets [FIELD-NAME]\"\n                            disabled={!this.state.customRender}\n                            rows={7}\n                            value={this.state.template}\n                            onChange={(event) => {this.change_callback({template: event.target.value})}}\n                        />\n                    </span>\n                </div>\n\n            </div>\n        );\n    }\n}\n\nexport default CrawlerRestFull;\n","import React, {Component} from 'react';\n\nimport {Api} from \"../common/api\";\n\nimport '../css/crawler.css';\n\n// valid metadata drop-down values\nconst metadata_list = [\n    {\"key\": \"none\", \"display\": null, \"field1\": null, \"db1\": \"\", \"db2\":\"\", \"sort\": \"\", \"sort_default\": \"\", \"sort_asc\": \"\", \"sort_desc\": \"\"},\n    {\"key\": \"author list\", \"display\": \"\", \"field1\": \"\", \"db1\": \"\", \"db2\":\"\", \"sort\": \"\", \"sort_default\": \"\", \"sort_asc\": \"\", \"sort_desc\": \"\"},\n    {\"key\": \"created date range\", \"display\": \"\", \"field1\": \"\", \"db1\": \"\", \"db2\":\"\", \"sort\": \"false\", \"sort_default\": \"\", \"sort_asc\": \"\", \"sort_desc\": \"\"},\n    {\"key\": \"last modified date ranges\", \"display\": \"\", \"field1\": \"\", \"db1\": \"\", \"db2\":\"\", \"sort\": \"false\", \"sort_default\": \"\", \"sort_asc\": \"\", \"sort_desc\": \"\"},\n    {\"key\": \"document type\", \"display\": \"\", \"field1\": \"\", \"db1\": \"\", \"db2\":\"\", \"sort\": \"\", \"sort_default\": \"\", \"sort_asc\": \"\", \"sort_desc\": \"\"},\n    {\"key\": \"people list\", \"display\": \"\", \"field1\": \"\", \"db1\": \"\", \"db2\":\"\", \"sort\": \"\", \"sort_default\": \"\", \"sort_asc\": \"\", \"sort_desc\": \"\"},\n    {\"key\": \"location list\", \"display\": \"\", \"field1\": \"\", \"db1\": \"\", \"db2\":\"\", \"sort\": \"\", \"sort_default\": \"\", \"sort_asc\": \"\", \"sort_desc\": \"\"},\n    {\"key\": \"money range\", \"display\": \"\", \"field1\": \"\", \"db1\": \"\", \"db2\":\"\", \"sort\": \"false\", \"sort_default\": \"\", \"sort_asc\": \"\", \"sort_desc\": \"\"},\n    {\"key\": \"number range\", \"display\": \"\", \"field1\": \"\", \"db1\": \"\", \"db2\":\"\", \"sort\": \"false\", \"sort_default\": \"\", \"sort_asc\": \"\", \"sort_desc\": \"\"},\n];\n\n\nexport class CrawlerMetadata extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            has_error: false,\n\n            onSave: props.onSave,\n            onError: props.onError,\n\n            // metadata set\n            specific_json: props.specific_json ? props.specific_json : {},\n        };\n\n    }\n    componentDidCatch(error, info) {\n        this.setState({ has_error: true });\n        console.log(error, info);\n    }\n    UNSAFE_componentWillReceiveProps(nextProps) {\n        // see if we have data to start this dialog\n        if (nextProps !== null) {\n            this.setState({\n                specific_json: nextProps.specific_json,\n                onSave: nextProps.onSave,\n                onError: nextProps.onError,\n            });\n        }\n    }\n    construct_data(md_list) {\n        return {\n            ...this.props.specific_json, metadata_list: Api.defined(md_list) ? md_list : this.get_md_list()\n        };\n    }\n    set_db(record, index, value) {\n        const md_list = this.get_md_list();\n        if (index >= 0 && index < md_list.length) {\n            md_list[index].db1 = value;\n            this.setState({specific_json: {...this.props.specific_json, metadata_list: md_list}});\n            if (this.state.onSave) {\n                this.state.onSave(this.construct_data(md_list));\n            }\n        }\n    }\n    set_db_extra(record, index, value) {\n        const md_list = this.get_md_list();\n        if (index >= 0 && index < md_list.length) {\n            md_list[index].db2 = value;\n            this.setState({specific_json: {...this.props.specific_json, metadata_list: md_list}});\n            if (this.state.onSave) {\n                this.state.onSave(this.construct_data(md_list));\n            }\n        }\n    }\n    set_md_type(record, index, value) {\n        const md_list = this.get_md_list();\n        if (index >= 0 && index < md_list.length) {\n            let match_item = null;\n            for (const item of metadata_list) {\n                if (item.key === value) {\n                    match_item = item;\n                    break;\n                }\n            }\n            if (match_item != null) {\n                md_list[index] = JSON.parse(JSON.stringify(match_item));\n                this.setState({specific_json: {...this.props.specific_json, metadata_list: md_list}});\n                if (this.state.onSave) {\n                    this.state.onSave(this.construct_data(md_list));\n                }\n            }\n        }\n    }\n    setDisplayName(record, index, value) {\n        const md_list = this.get_md_list();\n        if (index >= 0 && index < md_list.length) {\n            md_list[index].display = value;\n            this.setState({specific_json: {...this.props.specific_json, metadata_list: md_list}});\n            if (this.state.onSave) {\n                this.state.onSave(this.construct_data(md_list));\n            }\n        }\n    }\n    setUserMetadataName1(record, index, value) {\n        const md_list = this.get_md_list();\n        if (index >= 0 && index < md_list.length) {\n            md_list[index].field1 = value;\n            this.setState({specific_json: {...this.props.specific_json, metadata_list: md_list}});\n            if (this.state.onSave) {\n                this.state.onSave(this.construct_data(md_list));\n            }\n        }\n    }\n    setSort(record, index, value) {\n        const md_list = this.get_md_list();\n        if (index >= 0 && index < md_list.length) {\n            md_list[index].sort = value ? \"true\" : \"false\";\n            this.setState({specific_json: {...this.props.specific_json, metadata_list: md_list}});\n            if (this.state.onSave) {\n                this.state.onSave(this.construct_data(md_list));\n            }\n        }\n    }\n    setValue(record, index, field_name, value) {\n        const md_list = this.get_md_list();\n        if (index >= 0 && index < md_list.length) {\n            md_list[index][field_name] = value;\n            this.setState({specific_json: {...this.props.specific_json, metadata_list: md_list}});\n            if (this.state.onSave) {\n                this.state.onSave(this.construct_data(md_list));\n            }\n        }\n    }\n    setDefaultSort(record, index, direction, value) {\n        const md_list = this.get_md_list();\n        if (index >= 0 && index < md_list.length) {\n            md_list[index].sort_default = (value ? direction : \"\");\n            for (const i in md_list) {\n                if (\"\"+i !== \"\"+index && md_list.hasOwnProperty(i)) {\n                    md_list[i].sort_default = \"\";\n                }\n            }\n            this.setState({specific_json: {...this.props.specific_json, metadata_list: md_list}});\n            if (this.state.onSave) {\n                this.state.onSave(this.construct_data(md_list));\n            }\n        }\n    }\n    deleteMetadataItem(index) {\n        const md_list = [];\n        const i_index = '' + index\n        const existing_md_list = this.get_md_list();\n        for (let i in existing_md_list) {\n            if (i !== i_index) {\n                if (existing_md_list.hasOwnProperty(i))\n                    md_list.push(existing_md_list[i]);\n            }\n        }\n        this.setState({specific_json: {...this.props.specific_json, metadata_list: md_list}});\n        if (this.state.onSave) {\n            this.state.onSave(this.construct_data(md_list));\n        }\n    }\n    addNewMetadataMapping() {\n        const md_list = this.get_md_list();\n        md_list.push(JSON.parse(JSON.stringify(metadata_list[0]))); // add a copy of item 0\n        this.setState({specific_json: {...this.props.specific_json, metadata_list: md_list}});\n        if (this.state.onSave) {\n            this.state.onSave(this.construct_data(md_list));\n        }\n    }\n    checkMetadataName(event) {\n        // only allow valid characters to propagate for metadata names\n        if ((event.key >= 'a' && event.key <= 'z') ||\n            (event.key >= 'A' && event.key <= 'Z') ||\n            (event.key >= '0' && event.key <= '9') || event.key === '-') {\n            return true;\n        } else {\n            event.preventDefault();\n            event.stopPropagation();\n            return false;\n        }\n    }\n    move_row_up(md, index) {\n        if (index > 0) {\n            const md_list = this.get_md_list();\n            const temp = md_list[index-1];\n            md_list[index-1] = md;\n            md_list[index] = temp;\n            this.setState({specific_json: {...this.props.specific_json, metadata_list: md_list}});\n            if (this.state.onSave) {\n                this.state.onSave(this.construct_data(md_list));\n            }\n        }\n    }\n    move_row_down(md, index) {\n        const md_list = this.get_md_list();\n        if (index + 1 < md_list.length) {\n            const temp = md_list[index+1];\n            md_list[index+1] = md;\n            md_list[index] = temp;\n            this.setState({specific_json: {...this.props.specific_json, metadata_list: md_list}});\n            if (this.state.onSave) {\n                this.state.onSave(this.construct_data(md_list));\n            }\n        }\n    }\n    get_md_list() {\n        return this.state && this.state.specific_json && this.state.specific_json.metadata_list ?\n               this.state.specific_json.metadata_list : [];\n    }\n    needs_metadata_field(md) {\n        return (md.field1 !== null);\n    }\n    render() {\n        if (this.state.has_error) {\n            return <h1>crawler-metadata-mapper.js: Something went wrong.</h1>;\n        }\n        const self = this;\n        const theme = this.props.theme;\n        const num_rows = this.get_md_list().length;\n        return (\n            <div className=\"crawler-page\">\n\n                <div className=\"instructions-label\">All rows in order of UI.  Use 'actions' arrows to re-arrange existing rows.</div>\n\n                <table className=\"table\">\n\n                    <thead>\n                        <tr className='table-header'>\n                            <th className=\"table-header metadata-column\">data-type</th>\n                            <th className=\"table-header display-column\">UI display-name</th>\n                            <th className=\"table-header metadata-field-column\">metadata name</th>\n                            <th className=\"table-header sort-field-column\">sortable</th>\n                            <th className=\"table-header action-field-column\">actions</th>\n                        </tr>\n                    </thead>\n\n                    <tbody>\n                    <tr>\n                        <td colSpan={3}>&nbsp;</td>\n                    </tr>\n\n                    {\n                        this.get_md_list().map(function(md, index) {\n                            return (<tr key={index}>\n\n                                <td className=\"selector-column\">\n                                    <select className=\"form-select\" onChange={(event) => { self.set_md_type(md, index, event.target.value) }}\n                                            defaultValue={md.key} aria-label=\"select what kind of metadata field to use\">\n                                        {\n                                            metadata_list.map((value, j) => {\n                                                return (<option key={j} value={value.key}>{value.key}</option>)\n                                            })\n                                        }\n                                    </select>\n                                </td>\n\n                                <td className=\"td-display-column\">\n                                    {\n                                        md.display !== null &&\n                                        <span>\n                                            <input type=\"text\"\n                                                   className=\"theme metadata-text\"\n                                                   placeholder=\"UI display-name\"\n                                                   title=\"name displayed in the UI for this item\"\n                                                   value={md.display}\n                                                   onChange={(event) => {self.setDisplayName(md, index, event.target.value)}}  />\n                                        </span>\n                                    }\n                                </td>\n\n\n                                <td className=\"td-align-top\">\n                                    {\n                                        self.needs_metadata_field(md) &&\n                                        <div className=\"td-md-field-width\">\n                                            <input type=\"text\"\n                                                   className=\"theme metadata-text\"\n                                                   placeholder=\"metadata name\"\n                                                   value={md.field1}\n                                                   title=\"metadata names should only contain 0..9, a..z, and A..Z\"\n                                                   onKeyDown={(event) => {return self.checkMetadataName(event)}}\n                                                   onChange={(event) => {self.setUserMetadataName1(md, index, event.target.value)}}  />\n                                        </div>\n                                    }\n                                    { md.sort === \"true\" &&\n                                    <div>\n                                        <input type=\"text\"\n                                               placeholder=\"sort descending UI text\"\n                                               className=\"theme metadata-text\"\n                                               value={md.sort_desc}\n                                               title=\"The text to display for this field if a descending sort is selected of this type\"\n                                               onChange={(event) => {self.setValue(md, index, \"sort_desc\", event.target.value)}}  />\n                                    </div>\n                                    }\n                                    { md.sort === \"true\" &&\n                                    <div>\n                                        <input type=\"text\"\n                                               className=\"theme metadata-text\"\n                                               placeholder=\"sort ascending UI text\"\n                                               value={md.sort_asc}\n                                               title=\"The text to display for this field if an ascending sort is selected of this type\"\n                                               onChange={(event) => {self.setValue(md, index, \"sort_asc\", event.target.value)}}  />\n                                    </div>\n                                    }\n                                    {md.sort === \"true\" &&\n                                    <br />\n                                    }\n                                </td>\n\n                                <td className=\"td-align-top\">\n                                    {md.sort !== \"\" &&\n                                    <div className=\"td-sort-2\" title=\"enable this category as an item used for sorting in the UI\">\n                                        <input type=\"checkbox\"\n                                            checked={md.sort === \"true\"}\n                                            onChange={(event) => {\n                                                self.setSort(md, index, event.target.checked);\n                                            }}\n                                            value=\"enable result sorting over this field?\"\n                                        />\n                                        <span className=\"sort-label\">sort</span>\n                                    </div>\n                                    }\n                                    {md.sort === \"true\" &&\n                                    <div className=\"td-sort-2\" title=\"set this descending field as the default sort field for the UI\">\n                                        {'\\u2190'}\n                                        <input type=\"checkbox\"\n                                            checked={md.sort_default === \"desc\"}\n                                            onChange={(event) => {\n                                                self.setDefaultSort(md, index, \"desc\", event.target.checked);\n                                            }}\n                                        />\n                                    </div>\n                                    }\n\n                                    {md.sort === \"true\" &&\n                                    <div className=\"td-sort-2\" title=\"set this ascending field as the default sort field for the UI\">\n                                        {'\\u2190'}\n                                        <input type=\"checkbox\"\n                                            checked={md.sort_default === \"asc\"}\n                                            onChange={(event) => {\n                                                self.setDefaultSort(md, index, \"asc\", event.target.checked);\n                                            }}\n                                        />\n                                    </div>\n                                    }\n                                </td>\n\n                                <td className=\"td-action\">\n                                    <span className=\"delete-box\" onClick={() => self.deleteMetadataItem(index)} title=\"remove this metadata item\">\n                                        <img src={theme === 'light' ? \"../images/delete.svg\" : \"../images/delete-dark.svg\"} className=\"image-size\" title=\"remove this metadata mapping\" alt=\"remove this metadata mapping\"/>\n                                    </span>\n                                    {index > 0 &&\n                                    <span className=\"up-arrow\" title=\"move row up (change UI ordering)\"\n                                          onClick={() => {\n                                              self.move_row_up(md, index)\n                                          }}>&#8679;</span>\n                                    }\n                                    {index + 1 < num_rows &&\n                                    <span className=\"up-arrow\" title=\"move row down (change UI ordering)\"\n                                          onClick={() => {\n                                              self.move_row_down(md, index)\n                                          }}>&#8681;</span>\n                                    }\n                                </td>\n\n                            </tr>)\n                        })\n                    }\n\n                    <tr>\n                        <td colSpan={4}>&nbsp;</td>\n                    </tr>\n\n                    <tr>\n                        <td colSpan={4} />\n                        <td>\n                            <div className=\"image-button\" onClick={() => this.addNewMetadataMapping()}><img\n                                className=\"image-size\" src={theme === 'light' ? \"../images/add.svg\" : \"../images/add-dark.svg\"} title=\"add new metadata mapping\"\n                                alt=\"add new metadata mapping\"/></div>\n                        </td>\n                    </tr>\n\n                    <tr>\n                        <td colSpan={4}>&nbsp;</td>\n                    </tr>\n\n                    </tbody>\n\n                </table>\n            </div>\n        )\n    }\n}\n\nexport default CrawlerMetadata;\n","import React, {Component} from 'react';\n\nimport '../css/acl-setup.css';\n\n\n// create acls from groups\nexport class AclSetup extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            has_error: false,\n            acl_list: props.acl_list ? props.acl_list: [],\n            selectedFilter: '',\n            availableFilter: '',\n        };\n    }\n    UNSAFE_componentWillReceiveProps(props) {\n        this.setState({\n            acl_list: props.acl_list ? props.acl_list: [],\n        })\n    }\n    componentDidCatch(error, info) {\n        this.setState({ has_error: true });\n        console.log(error, info);\n    }\n    update_parent(acl_list) {\n        if (this.props.onChange) {\n            this.props.onChange(acl_list);\n        }\n    }\n    removeAcl(acl) {\n        const new_acls = [];\n        for (const s_acl of this.state.acl_list) {\n            if (s_acl.acl !== acl.acl) {\n                new_acls.push(s_acl);\n            }\n        }\n        this.setState({acl_list: new_acls});\n        this.update_parent(new_acls);\n    }\n    addAcl(group) {\n        const acl_list = JSON.parse(JSON.stringify(this.state.acl_list));\n        const acl = {\"acl\": group.name, \"access\": \"R\", isUser: group.isUser};\n        let exists = false;\n        for (const s_acl of this.state.acl_list) {\n            if (s_acl.acl === group.name) {\n                exists = true;\n                break;\n            }\n        }\n        if (!exists) {\n            acl_list.push(acl);\n            this.setState({acl_list: acl_list});\n            this.update_parent(acl_list);\n        }\n    }\n    getAllGroups() {\n        return this.props.group_list ? this.props.group_list : [];\n    }\n    getAllUsers() {\n        return this.props.user_list ? this.props.user_list : [];\n    }\n    getAvailableGroupsOrUsers() {\n        const list = [];\n        const filter = this.state.availableFilter.trim().toLowerCase();\n        for (const group of this.getAllGroups()) {\n            let found = false;\n            for (const s_acl of this.state.acl_list) {\n                if (group.name === s_acl.acl) {\n                    found = true;\n                }\n            }\n            if (!found) { // still available (ie. not found)?\n                if (filter.length === 0 || group.name.toLowerCase().indexOf(filter) >= 0) {\n                    group.isUser = false;\n                    list.push(group);\n                }\n            }\n        }\n        for (const user of this.getAllUsers()) {\n            let found = false;\n            for (const s_acl of this.state.acl_list) {\n                if (user.email === s_acl.acl) {\n                    found = true;\n                }\n            }\n            if (!found) { // still available (ie. not found)?\n                const user_name = user.email;\n                if (filter.length === 0 || user_name.toLowerCase().indexOf(filter) >= 0) {\n                    list.push({\n                        organisationId: this.props.organisation_id,\n                        name: user_name,\n                        isUser: true,\n                        userIdList: []\n                    });\n                }\n            }\n        }\n        return list;\n    }\n    getAcls() {\n        const acl_list = this.state.acl_list;\n        const selected_acl_list = [];\n        const filter = this.state.selectedFilter.trim().toLowerCase();\n        const seen_set = {};\n        for (const acl of acl_list) {\n            if (acl && acl.acl) {\n                if (filter.length === 0 || acl.acl.toLowerCase().indexOf(filter) >= 0) {\n                    if (!seen_set.hasOwnProperty(acl.acl)) {\n                        seen_set[acl.acl] = true;\n                        selected_acl_list.push(acl);\n                    }\n                }\n            }\n        }\n        return selected_acl_list;\n    }\n    invertAccess(event, acl, attribute) {\n        event.preventDefault();\n        event.stopPropagation();\n        if (acl && acl.access && acl.access.indexOf(attribute) >= 0) {\n            acl.access = acl.access.replace(attribute, \"\");\n        } else {\n            acl.access += attribute;\n        }\n        const acl_list = this.state.acl_list;\n        const updated_acl_list = [];\n        for (const all_acl of acl_list) {\n            if (all_acl && all_acl.acl) {\n                if (all_acl.acl === acl.acl) {\n                    updated_acl_list.push(acl);\n                } else {\n                    updated_acl_list.push(all_acl);\n                }\n            }\n        }\n        this.setState({acl_list: updated_acl_list});\n        this.update_parent(updated_acl_list);\n    }\n    getAccess(acl, attribute) {\n        return attribute;\n    }\n    getTitle(acl, attribute) {\n        let str = \"do not have \";\n        if (acl && acl.access && acl.access.indexOf(attribute) >= 0) {\n            str = \"have \";\n        }\n        if (attribute === \"R\") str += \"read access\";\n        else if (attribute === \"W\") str += \"write access\";\n        else if (attribute === \"D\") str += \"delete access\";\n        else if (attribute === \"M\") str += \"the ability to change permissions\";\n        return str;\n    }\n    getAclClassName(acl, attribute) {\n        if (acl && acl.access && acl.access.indexOf(attribute) >= 0) {\n            return \"acl-access\";\n        } else {\n            return \"acl-no-access\";\n        }\n    }\n    render() {\n        if (this.state.has_error) {\n            return <h1>acl-setup.js: Something went wrong.</h1>;\n        }\n        return (\n            <div>\n\n                <div className=\"acl-setup-role-block\">\n                    <div className=\"role-label\">ACLs\n                        <span className=\"filter-label\">filter </span>\n                        <span className=\"filter-text-box\"><input type=\"text\" className=\"filter-text\" value={this.state.selectedFilter}\n                                                                 onChange={(event) => { this.setState({selectedFilter: event.target.value})}} />\n                            <span className=\"clear\" title=\"clear filter\" onClick={() => this.setState({selectedFilter: ''})}>&times;</span>\n                        </span>\n                    </div>\n                    <div className=\"role-area\">\n                        {\n                            this.getAcls().map((acl, i) => {\n                                return (<div key={i} className=\"acl-box\" title={(acl.isUser ? \"user \" : \"group \") + acl.acl}>\n                                    <span className=\"acl-name\" onClick={() => this.removeAcl(acl)}>\n                                        <span className=\"user-group-image-box\"><img className=\"user-group-image\" src={acl.isUser ? \"../images/user.svg\" : \"../images/group.svg\"} alt=\"user\"/></span><span>{acl.acl}</span>\n                                    </span>\n                                    <span className={this.getAclClassName(acl, \"R\")} title={this.getTitle(acl, \"R\")} onClick={(event) => this.invertAccess(event, acl, \"R\")}>{this.getAccess(acl, \"R\")}</span>\n                                    <span className={this.getAclClassName(acl, \"W\")} title={this.getTitle(acl, \"W\")} onClick={(event) => this.invertAccess(event, acl, \"W\")}>{this.getAccess(acl, \"W\")}</span>\n                                    <span className={this.getAclClassName(acl, \"D\")} title={this.getTitle(acl, \"D\")} onClick={(event) => this.invertAccess(event, acl, \"D\")}>{this.getAccess(acl, \"D\")}</span>\n                                    <span className={this.getAclClassName(acl, \"M\")} title={this.getTitle(acl, \"M\")} onClick={(event) => this.invertAccess(event, acl, \"M\")}>{this.getAccess(acl, \"M\")}</span>\n                                </div>)\n                            })\n                        }\n                    </div>\n                </div>\n\n                <div className=\"acl-setup-role-block-2\">\n                    <div className=\"role-label\">available\n                        <span className=\"available-filter-label\">filter </span>\n                        <span className=\"filter-text-box\"><input type=\"text\" className=\"filter-text\" value={this.state.availableFilter}\n                                                                 onChange={(event) => { this.setState({availableFilter: event.target.value})}} />\n                            <span className=\"clear\" title=\"clear filter\" onClick={() => this.setState({availableFilter: ''})}>&times;</span>\n                        </span>\n                    </div>\n                    <div className=\"role-area\">\n                        {\n                            this.getAvailableGroupsOrUsers().map((u_group, i) => {\n                                return (<div key={i} className=\"user-name\" onClick={() => this.addAcl(u_group)} title={(u_group.isUser ? \"user \" : \"group \") + u_group.name}>\n                                    <span className=\"user-group-image-box\"><img className=\"user-group-image\" src={u_group.isUser ? \"../images/user.svg\" : \"../images/group.svg\"} alt=\"user\"/></span><span>{u_group.name}</span>\n                                </div>)\n                            })\n                        }\n                    </div>\n                </div>\n\n            </div>\n        );\n    }\n}\n\nexport default AclSetup;\n","import React, {Component} from 'react';\n\nimport '../css/acl-setup.css';\nimport '../css/crawler.css';\n\nimport TimeSelect from '../common/time-select'\n\nimport CrawlerGeneral from './crawler-general'\nimport CrawlerFile from './crawler-file'\nimport CrawlerWeb from \"./crawler-web\";\nimport CrawlerDatabase from \"./crawler-database\";\nimport CrawlerMetadataMapper from \"./crawler-metadata-mapper\";\nimport CrawlerOffice365 from \"./crawler-office365\";\nimport CrawlerDropbox from \"./crawler-dropbox\";\nimport CrawlerWordpress from \"./crawler-wordpress\";\nimport CrawlerGDrive from \"./crawler-gdrive\";\nimport CrawlerNFS from \"./crawler-nfs\";\nimport CrawlerRestFull from \"./crawler-restfull\";\nimport CrawlerMetadata from \"./crawler-metadata\";\nimport Api from \"../common/api\";\nimport AclSetup from \"../common/acl-setup\";\n\n\nexport class CrawlerDialog extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            open: props.open,\n\n            onSave: props.onSave,  // save callback\n            onUpdate: props.onUpdate, // update callback\n\n            onError: props.onError,\n            error_title: props.error_title,\n            error_msg: props.error_msg,\n\n            selectedTab: 'general',\n\n            // cache\n            schedule: '',\n\n            // organisational details\n            organisation_id: props.organisation_id,\n            kb_id: props.kb_id,\n            crawler: props.crawler,\n\n            has_error: false,\n        }\n    }\n\n    componentDidCatch(error, info) {\n        this.setState({has_error: true});\n        console.log(error, info);\n    }\n\n    UNSAFE_componentWillReceiveProps(nextProps) {\n        if (nextProps !== null) {\n            this.setState({\n                selectedTab: (nextProps.open !== this.state.open) ? 'general' : this.state.selectedTab,\n\n                open: nextProps.open,\n                title: nextProps.title,\n\n                onSave: nextProps.onSave,\n                onUpdate: nextProps.onUpdate,\n\n                onError: nextProps.onError,\n                error_title: nextProps.error_title,\n                error_msg: nextProps.error_msg,\n\n                organisation_id: nextProps.organisation_id,\n                kb_id: nextProps.kb_id,\n\n                crawler: nextProps.crawler,\n            });\n        }\n    }\n    setError(title, error_msg) {\n        if (this.props.onError) {\n            this.props.onError(title, error_msg);\n        }\n    }\n    handleCancel() {\n        if (this.state.onSave) {\n            this.state.onSave(null);\n        }\n        this.setState({open: false});\n    }\n    // validate metadata\n    isValidMetadata(list, is_db) {\n        //  \"key\": \"none\", \"display\": null, \"field1\": \"\", \"field2\": \"\", \"db1\": \"\", \"db2\":\"\", \"sort\": \"\"\n        const metadata_name_map = {};\n        let sort_counter = 0;\n        let empty_sort_field_counter = 0;\n        let default_sort_counter = 0;\n        if (!Api.defined(list)) {\n            list = [];\n        }\n        for (const item of list) {\n            const name = item.field1;\n            if (!name || name.length ===0) {\n                this.setError(\"invalid metadata field\", \"metadata field missing metadata-field-name\");\n                return false;\n            }\n            const db_name = item.db1;\n            if (is_db && (!db_name || db_name.length ===0)) {\n                this.setError(\"invalid database field\", \"database field missing for database-field-name \\\"\" + name + \"\\\"\");\n                return false;\n            }\n            if (item.key === \"two level category\") {\n                const db_name2 = item.db2;\n                if (!db_name2 || db_name2.length ===0) {\n                    this.setError(\"invalid database field\", \"database field missing for database-field-name \\\"\" + name + \"\\\"\");\n                    return false;\n                }\n            }\n            const display = item.display;\n            if (display !== null && display.length ===0) {\n                this.setError(\"invalid display-name\", \"database field missing display-name \\\"\" + name + \"\\\"\");\n                return false;\n            }\n            if (!metadata_name_map[name]) {\n                metadata_name_map[name] = 1;\n            } else {\n                metadata_name_map[name] += 1;\n            }\n            // sorting checks\n            if (item.sort === \"true\") {\n                sort_counter += 1;\n                if (item.sort_asc.trim().length === 0) empty_sort_field_counter += 1;\n                if (item.sort_desc.trim().length === 0) empty_sort_field_counter += 1;\n                if (item.sort_default.trim() !== \"\") default_sort_counter += 1;\n            }\n        }\n        for (const key in metadata_name_map) {\n            if (metadata_name_map.hasOwnProperty(key)) {\n                const counter = metadata_name_map[key];\n                if (counter > 1) {\n                    this.setError(\"invalid metadata\", \"metadata name \\\"\" + key + \"\\\" is used more than once.\");\n                    return false;\n                }\n            }\n        }\n        if (sort_counter > 0) { // has sort\n            if (empty_sort_field_counter > 0) {\n                this.setError(\"invalid metadata\", \"sort-by fields cannot be empty\");\n                return false;\n            }\n            if (default_sort_counter !== 1) {\n                this.setError(\"invalid metadata\", \"you must specify the default UI sort field\");\n                return false;\n            }\n        }\n        return true;\n    }\n    validFQDN(fqdn) {\n        if (fqdn && fqdn.length > 0) {\n            // valid characters ., a..z A..Z 0..9\n            for (let i = 0; i < fqdn.length; i++) {\n                const ch = fqdn.charAt(i);\n                if (ch !== '.' && !((ch >='a' && ch<='z') || (ch >='A' && ch<='Z') || (ch >='0' && ch<='9'))) {\n                    return false;\n                }\n            }\n            // must have at least one . in it and it can't be the first or last item in the string\n            return fqdn.indexOf('.') > 0 && (fqdn.indexOf('.') + 1 < fqdn.length);\n        }\n        return false;\n    }\n    handleSave() {\n        const crawler = this.state.crawler;\n        const validAcls = crawler.allowAnonymous || (crawler.acls && crawler.acls.length > 0);\n        let sj = {};\n        if (crawler && crawler.specificJson && (typeof crawler.specificJson === \"string\" || crawler.specificJson instanceof String)) {\n            sj = JSON.parse(crawler.specificJson);\n        }\n\n        if (crawler.qaMatchStrength < 0.0 || crawler.qaMatchStrength > 1.0) {\n\n            this.setError('invalid parameters', 'Q&A threshold must be between 0.0 and 1.0.');\n\n        } else  if (crawler.name.length === 0) {\n\n            this.setError('invalid parameters', 'you must supply a crawler name.');\n\n        } else if (crawler.crawlerType === 'none') {\n\n            this.setError('invalid parameters', 'you must select a crawler-type.');\n\n        } else if (!sj) {\n\n            this.setError('invalid parameters', 'crawler specific data not set');\n\n        } else if (!validAcls) {\n\n            this.setError('invalid parameters', 'This source does not have valid ACLs.\\nThis source won\\'t be usable.  Please add ACLs to this source.');\n\n        } else if (crawler.crawlerType === 'file' && (\n            (!sj.username || sj.username.length === 0) ||\n            (!sj.server || sj.server.length === 0) ||\n            !this.validFQDN(sj.fqdn) ||\n            (!sj.shareName || sj.shareName.length === 0))) {\n\n            this.setError('invalid parameters', 'file crawler: you must supply a name, username, server, valid FQDN and share path as a minimum.');\n\n        } else if (crawler.crawlerType === 'web' && (\n            !sj.baseUrlList || sj.baseUrlList.length === 0 ||\n                (!sj.baseUrlList || (!sj.baseUrlList.startsWith(\"http://\") && !sj.baseUrlList.startsWith(\"https://\"))) )) {\n\n            this.setError('invalid parameters', 'you must supply a base url of type http:// or https://');\n\n        } else if (crawler.crawlerType === 'database' && (\n                    !sj.jdbc || sj.jdbc.length === 0 ||\n                    !sj.type || sj.type.length === 0 || !sj.type || sj.type === 'none' ||\n                    !sj.query || sj.query.length === 0 || !sj.pk || sj.pk.length === 0 ||\n                    !sj.template || sj.template.length === 0 || !sj.text || sj.text.length === 0)) {\n\n            this.setError('invalid parameters', 'you must supply a jdbc connection string, database-type, a query, a primary-key, a text-template, and a SQL-template as a minimum.');\n\n        } else if (crawler.crawlerType === 'restfull' && (\n            !sj.url || sj.url.length === 0 ||\n            !sj.pk || sj.pk.length === 0 ||\n            (crawler.customRender && (!sj.template || sj.template.length === 0 || !sj.text || sj.text.length === 0)) ||\n            (!crawler.customRender && (!sj.content_url || sj.content_url.length ===0)))\n        ) {\n            if (crawler.customRender && (!sj.template || sj.template.length === 0 || !sj.text || sj.text.length === 0))\n                this.setError('invalid parameters', 'you must supply a primary-key, a url, a text-template, and an HTML-template as a minimum.');\n            else\n                this.setError('invalid parameters', 'you must supply a primary-key, a url, and a content-url as a minimum.');\n\n        } else if (crawler.crawlerType === 'database' && sj.metadata_list && sj.metadata_list.length > 0 &&\n                    !this.isValidMetadata(sj.metadata_list, true)) {\n\n            // isValidDBMetadata will set the error\n\n        } else if (crawler.crawlerType === 'office365' && (\n                    !sj.tenantId || sj.tenantId.length === 0 ||\n                    !sj.clientId || sj.clientId.length === 0 ||\n                    !sj.redirectUrl || sj.redirectUrl.length === 0 ||\n                    !sj.clientSecret || sj.clientSecret.length === 0)) {\n\n            this.setError('invalid parameters', 'you must supply tenant-id, client-id, client-secret, and redirect-url as a minimum.');\n\n        } else if (crawler.crawlerType === 'dropbox' && (!sj.clientToken || sj.clientToken.length === 0)) {\n\n            this.setError('invalid parameters', 'you must supply a client-token, and select a user as a minimum.');\n\n        } else if (crawler.crawlerType === 'gdrive' && (!sj.gdrive_clientId || sj.gdrive_clientId.length === 0 ||\n                    !sj.gdrive_projectId || sj.gdrive_projectId.length === 0 ||\n                    !sj.gdrive_clientSecret || sj.gdrive_clientSecret.length === 0 ||\n                    !sj.gdrive_clientName || sj.gdrive_clientName.length === 0 || !sj.gdrive_clientPort || sj.gdrive_clientPort.length ===0)) {\n\n            this.setError('invalid parameters', 'you must supply values for all fields, and select one user as a minimum.');\n\n        } else if (crawler.crawlerType === 'nfs' && (sj.nfs_local_folder.length === 0)) {\n\n            this.setError('invalid parameters', 'nfs: you must set a local folder.');\n\n        } else if (crawler.crawlerType !== 'web' && crawler.crawlerType !== 'file' && crawler.crawlerType !== 'database' &&\n                   crawler.crawlerType !== 'office365' && crawler.crawlerType !== 'dropbox' && crawler.crawlerType !== 'nfs' &&\n                   crawler.crawlerType !== 'wordpress' && crawler.crawlerType !== 'gdrive' && crawler.crawlerType !== 'restfull') {\n\n            this.setError('invalid parameters', 'you must select a crawler-type first.');\n\n        } else if (isNaN(crawler.filesPerSecond)) {\n\n            this.setError(\"invalid parameters\", \"files-per-second must be a number\");\n\n        } else if (!this.isValidMetadata(sj.metadata_list, false)) {\n            // takes care of itself\n\n        } else {\n            // save setup?\n            if (this.state.onSave) {\n                this.state.onSave(crawler);\n                // and reset the tabs to the first tab\n                this.setState({selectedTab: 'general'});\n            }\n        }\n    };\n    updateSchedule(time) {\n        if (time !== null) {\n            const crawler = this.state.crawler;\n            crawler.schedule = time;\n            this.setState({crawler: crawler});\n            if (this.state.onUpdate) {\n                this.state.onUpdate(crawler);\n            }\n        }\n    }\n    update_general_data(data) {\n        const crawler = this.state.crawler;\n        data.specificJson = crawler.specificJson;\n        data.schedule = crawler.schedule;\n        data.acls = crawler.acls;\n        this.setState({crawler: data});\n        if (this.state.onUpdate) {\n            this.state.onUpdate(data);\n        }\n    }\n    update_acl_list(acl_list) {\n        const crawler = this.state.crawler;\n        crawler.acls = acl_list;\n        this.setState({crawler: crawler});\n        if (this.state.onUpdate) {\n            this.state.onUpdate(crawler);\n        }\n    }\n    update_specific_json(specific_json) {\n        const crawler = this.state.crawler;\n        crawler.specificJson = JSON.stringify(specific_json);\n        this.setState({crawler: crawler});\n        if (this.state.onUpdate) {\n            this.state.onUpdate(crawler);\n        }\n    }\n    render() {\n        if (this.state.has_error) {\n            return <h1>crawler-dialog.js: Something went wrong.</h1>;\n        }\n        const theme = this.props.theme;\n        const t_value = this.state.selectedTab;\n        const crawler = this.state.crawler;\n        const c_type = crawler.crawlerType;\n        const sj = JSON.parse(crawler.specificJson ? crawler.specificJson : \"{}\");\n        console.log(crawler);\n\n        if (!this.state.open) {\n            return (<div />)\n        }\n        return (\n            <div className=\"modal\" tabIndex=\"-1\" role=\"dialog\" style={{display: \"inline\"}}>\n                <div className={\"modal-dialog modal-dialog-centered modal-xl\"} role=\"document\">\n                    <div className=\"modal-content shadow p-3 mb-5 bg-white rounded crawler-page\">\n\n                        <div className=\"modal-header\">{this.state.title}</div>\n                        <div className={\"modal-body \" + this.props.theme}>\n                            <div>\n                                <ul className=\"nav nav-tabs\">\n                                    <li className=\"nav-item nav-cursor\">\n                                        <div className={\"nav-link \" + (this.state.selectedTab === 'general' ? 'active' : '')}\n                                             onClick={() => this.setState({selectedTab: 'general'})}>general</div>\n                                    </li>\n                                    {c_type === \"file\" && <li className=\"nav-item nav-cursor\">\n                                        <div className={\"nav-link \" + (this.state.selectedTab === 'file crawler' ? 'active' : '')}\n                                             onClick={() => this.setState({selectedTab: 'file crawler'})}>file crawler</div>\n                                    </li>}\n                                    {c_type === \"web\" && <li className=\"nav-item nav-cursor\">\n                                        <div className={\"nav-link \" + (this.state.selectedTab === 'web crawler' ? 'active' : '')}\n                                             onClick={() => this.setState({selectedTab: 'web crawler'})}>web crawler</div>\n                                    </li>}\n                                    {c_type === \"database\" && <li className=\"nav-item nav-cursor\">\n                                        <div className={\"nav-link \" + (this.state.selectedTab === 'database crawler' ? 'active' : '')}\n                                             onClick={() => this.setState({selectedTab: 'database crawler'})}>database crawler</div>\n                                    </li>}\n                                    {c_type === \"restfull\" && <li className=\"nav-item nav-cursor\">\n                                        <div className={\"nav-link \" + (this.state.selectedTab === 'RESTful crawler' ? 'active' : '')}\n                                             onClick={() => this.setState({selectedTab: 'RESTful crawler'})}>RESTful crawler</div>\n                                    </li>}\n                                    {c_type === \"office365\" && <li className=\"nav-item nav-cursor\">\n                                        <div className={\"nav-link \" + (this.state.selectedTab === 'office365 crawler' ? 'active' : '')}\n                                             onClick={() => this.setState({selectedTab: 'office365 crawler'})}>office365 crawler</div>\n                                    </li>}\n                                    {c_type === \"dropbox\" && <li className=\"nav-item nav-cursor\">\n                                        <div className={\"nav-link \" + (this.state.selectedTab === 'dropbox crawler' ? 'active' : '')}\n                                             onClick={() => this.setState({selectedTab: 'dropbox crawler'})}>dropbox crawler</div>\n                                    </li>}\n                                    {c_type === \"gdrive\" && <li className=\"nav-item nav-cursor\">\n                                        <div className={\"nav-link \" + (this.state.selectedTab === 'google drive crawler' ? 'active' : '')}\n                                             onClick={() => this.setState({selectedTab: 'google drive crawler'})}>google drive crawler</div>\n                                    </li>}\n                                    {c_type === \"wordpress\" && <li className=\"nav-item nav-cursor\">\n                                        <div className={\"nav-link \" + (this.state.selectedTab === 'wordpress crawler' ? 'active' : '')}\n                                             onClick={() => this.setState({selectedTab: 'wordpress crawler'})}>wordpress crawler</div>\n                                    </li>}\n                                    {c_type === \"nfs\" && <li className=\"nav-item nav-cursor\">\n                                        <div className={\"nav-link \" + (this.state.selectedTab === 'nfs crawler' ? 'active' : '')}\n                                             onClick={() => this.setState({selectedTab: 'nfs crawler'})}>nfs crawler</div>\n                                    </li>}\n                                    {c_type !== \"wordpress\" && <li className=\"nav-item nav-cursor\">\n                                        <div className={\"nav-link \" + (this.state.selectedTab === 'metadata' ? 'active' : '')}\n                                             onClick={() => this.setState({selectedTab: 'metadata'})}>metadata</div>\n                                    </li>}\n                                    <li className=\"nav-item nav-cursor\">\n                                        <div className={\"nav-link \" + (this.state.selectedTab === 'acls' ? 'active' : '')}\n                                             onClick={() => this.setState({selectedTab: 'acls'})}>ACLs</div>\n                                    </li>\n                                    {c_type !== \"wordpress\" && <li className=\"nav-item nav-cursor\">\n                                        <div className={\"nav-link \" + (this.state.selectedTab === 'schedule' ? 'active' : '')}\n                                             onClick={() => this.setState({selectedTab: 'schedule'})}>schedule</div>\n                                    </li>}\n                                </ul>\n\n                                <div className=\"form-content\">\n                                    {t_value === 'general' &&\n                                        <CrawlerGeneral\n                                            theme={theme}\n                                            sourceId={crawler.sourceId}\n                                            nodeId={crawler.nodeId}\n                                            organisation_id={crawler.organisationId}\n                                            kb_id={crawler.kbId}\n                                            name={crawler.name}\n                                            filesPerSecond={crawler.filesPerSecond}\n                                            crawlerType={c_type}\n                                            deleteFiles={crawler.deleteFiles}\n                                            allowAnonymous={crawler.allowAnonymous}\n                                            enablePreview={crawler.enablePreview}\n                                            processingLevel={crawler.processingLevel}\n                                            maxItems={crawler.maxItems}\n                                            maxQNAItems={crawler.maxQNAItems}\n                                            schedule={crawler.schedule}\n                                            customRender={crawler.customRender}\n                                            edgeDeviceId={crawler.edgeDeviceId}\n                                            qaMatchStrength={crawler.qaMatchStrength}\n                                            numResults={crawler.numResults}\n                                            numFragments={crawler.numFragments}\n                                            edge_device_list={this.props.edge_device_list}\n                                            onError={(title, errStr) => this.setError(title, errStr)}\n                                            onSave={(crawler) => this.update_general_data(crawler)}/>\n                                    }\n                                    {t_value === 'file crawler' &&\n                                        <CrawlerFile\n                                            theme={theme}\n                                            username={sj.username}\n                                            password={sj.password}\n                                            server={sj.server}\n                                            domain={sj.domain}\n                                            fqdn={sj.fqdn}\n                                            shareName={sj.shareName}\n                                            sharePath={sj.sharePath}\n                                            specific_json={sj}\n                                            onError={(title, errStr) => this.setError(title, errStr)}\n                                            onSave={(specific_json) => this.update_specific_json(specific_json)}/>\n                                                                }\n                                    {t_value === 'web crawler' &&\n                                        <CrawlerWeb\n                                            theme={theme}\n                                            baseUrlList={sj.baseUrlList}\n                                            webCss={sj.webCss}\n                                            webCssIgnore={sj.webCssIgnore}\n                                            validExtensions={sj.validExtensions}\n                                            validExtensionsIgnore={sj.validExtensionsIgnore}\n                                            articleIncludeWordsCsv={sj.articleIncludeWordsCsv}\n                                            articleExcludeWordsCsv={sj.articleExcludeWordsCsv}\n                                            specific_json={sj}\n                                            onError={(title, errStr) => this.setError(title, errStr)}\n                                            onSave={(specific_json) => this.update_specific_json(specific_json)}/>\n                                    }\n                                    {t_value === 'database crawler' &&\n                                        <CrawlerDatabase\n                                            theme={theme}\n                                            username={sj.username}\n                                            password={sj.password}\n                                            jdbc={sj.jdbc}\n                                            type={sj.type}\n                                            query={sj.query}\n                                            pk={sj.pk}\n                                            metadata_list={sj.metadata_list}\n                                            template={sj.template}\n                                            text={sj.text}\n                                            content_url={sj.content_url}\n                                            specific_json={sj}\n                                            customRender={crawler.customRender}\n                                            onError={(title, errStr) => this.setError(title, errStr)}\n                                            onSave={(specific_json) => this.update_specific_json(specific_json)}/>\n                                    }\n                                    {t_value === 'RESTful crawler' &&\n                                        <CrawlerRestFull\n                                            theme={theme}\n                                            pk={sj.pk}\n                                            url={sj.url}\n                                            template={sj.template}\n                                            text={sj.text}\n                                            content_url={sj.content_url}\n                                            specific_json={sj}\n                                            customRender={crawler.customRender}\n                                            onError={(title, errStr) => this.setError(title, errStr)}\n                                            onSave={(specific_json) => this.update_specific_json(specific_json)}/>\n                                    }\n                                    {t_value === 'metadata' && (c_type === \"database\" || c_type === \"restfull\") &&\n                                        <CrawlerMetadataMapper\n                                            theme={theme}\n                                            specificJson={sj}\n                                            onError={(title, errStr) => this.setError(title, errStr)}\n                                            onSave={(specific_json) => this.update_specific_json(specific_json)}/>\n                                    }\n                                    {t_value === 'office365 crawler' &&\n                                        <CrawlerOffice365\n                                            theme={theme}\n                                            tenantId={sj.tenantId}\n                                            clientId={sj.clientId}\n                                            clientSecret={sj.clientSecret}\n                                            redirectUrl={sj.redirectUrl}\n                                            crawlOneDrive={sj.crawlOneDrive}\n                                            crawlAllOfOneDrive={sj.crawlAllOfOneDrive}\n                                            oneDriveUsersToCrawl={sj.oneDriveUsersToCrawl}\n                                            crawlSharePoint={sj.crawlSharePoint}\n                                            crawlRootSite={sj.crawlRootSite}\n                                            sharePointSitesToCrawl={sj.sharePointSitesToCrawl}\n                                            crawlExchange={sj.crawlExchange}\n                                            crawlAllOfExchange={sj.crawlAllOfExchange}\n                                            exchangeUsersToCrawl={sj.exchangeUsersToCrawl}\n                                            specific_json={sj}\n                                            onError={(title, errStr) => this.setError(title, errStr)}\n                                            onSave={(specific_json) => this.update_specific_json(specific_json)}/>\n                                    }\n                                    {t_value === 'dropbox crawler' &&\n                                        <CrawlerDropbox\n                                            theme={theme}\n                                            clientToken={sj.clientToken}\n                                            folderList={sj.folderList}\n                                            specific_json={sj}\n                                            onError={(title, errStr) => this.setError(title, errStr)}\n                                            onSave={(specific_json) => this.update_specific_json(specific_json)}/>\n                                    }\n                                    {t_value === 'google drive crawler' &&\n                                        <CrawlerGDrive\n                                            theme={theme}\n                                            gdrive_projectId={sj.gdrive_projectId}\n                                            gdrive_clientId={sj.gdrive_clientId}\n                                            gdrive_clientSecret={sj.gdrive_clientSecret}\n                                            gdrive_clientName={sj.gdrive_clientName}\n                                            gdrive_clientPort={sj.gdrive_clientPort}\n                                            specific_json={sj}\n                                            onError={(title, errStr) => this.setError(title, errStr)}\n                                            onSave={(specific_json) => this.update_specific_json(specific_json)}/>\n                                    }\n                                    {t_value === 'nfs crawler' &&\n                                        <CrawlerNFS\n                                            theme={theme}\n                                            nfs_local_folder={sj.nfs_local_folder}\n                                            specific_json={sj}\n                                            availableUserList={this.props.user_list}\n                                            onError={(title, errStr) => this.setError(title, errStr)}\n                                            onSave={(specific_json) => this.update_specific_json(specific_json)}/>\n                                    }\n                                    {t_value === 'wordpress crawler' &&\n                                        <CrawlerWordpress\n                                            theme={theme}\n                                            source_id={crawler.sourceId}\n                                            organisation_id={this.props.organisation_id}\n                                            kb_id={this.props.kb_id}\n                                            specific_json={sj}\n                                            wpUploadArchive={(data) => this.props.wpUploadArchive(data) }\n                                            onError={(title, errStr) => this.setError(title, errStr)}\n                                            onSave={(specific_json) => this.update_specific_json(specific_json)}/>\n                                    }\n                                    {t_value === 'metadata' && c_type !== \"restfull\" && c_type !== \"database\" && c_type !== \"wordpress\" &&\n                                        <CrawlerMetadata\n                                            theme={theme}\n                                            specific_json={sj}\n                                            onError={(title, errStr) => this.setError(title, errStr)}\n                                            onSave={(specific_json) => this.update_specific_json(specific_json)}/>\n                                    }\n                                    {t_value === 'acls' &&\n                                        <div>\n                                            <div className=\"acl-text\">this list sets a default set of Access Control for this source</div>\n                                            <AclSetup\n                                                organisation_id={this.props.organisation_id}\n                                                acl_list={crawler.acls}\n                                                onChange={(acl_list) => this.update_acl_list(acl_list)}\n                                                user_list={this.props.user_list}\n                                                group_list={this.props.group_list} />\n                                        </div>\n                                    }\n                                    {t_value === 'schedule' && c_type !== \"wordpress\" &&\n                                        <div className=\"time-tab-content\">\n                                            <TimeSelect time={crawler.schedule}\n                                                        onSave={(time) => this.updateSchedule(time)}/>\n                                        </div>\n                                    }\n                                </div>\n\n\n                                </div>\n                        </div>\n                        <div className=\"modal-footer\">\n                            <button className=\"btn btn-primary btn-block\" onClick={() => this.handleCancel()}>cancel</button>\n                            <button className=\"btn btn-primary btn-block\" onClick={() => this.handleSave()}>save</button>\n                        </div>\n\n                    </div>\n                </div>\n\n            </div>\n        );\n    }\n}\n\nexport default CrawlerDialog;\n","import React, {Component} from 'react';\n\n\nexport class CrawlerImportExport extends Component {\n    constructor(props) {\n        super(props);\n        var data = (props.crawler) ? JSON.stringify(props.crawler) : \"\";\n        if (data === \"{}\") {\n            data = \"\";\n        }\n        this.state = {\n            has_error: false,\n            open: props.open,\n            data: data,\n            onSave: props.onSave,\n            onError: props.onError,\n        };\n    }\n    componentDidCatch(error, info) {\n        this.setState({ has_error: true });\n        console.log(error, info);\n    }\n    handleSave() {\n        if (this.state.onSave) {\n            this.state.onSave(this.state.data);\n        }\n    }\n    handleCancel() {\n        if (this.state.onSave) {\n            this.state.onSave(null);\n        }\n    }\n    UNSAFE_componentWillReceiveProps(props) {\n        var data = (props.crawler) ? JSON.stringify(props.crawler) : \"\";\n        if (data === \"{}\") {\n            data = \"\";\n        }\n        this.setState({\n            open: props.open,\n            data: data,\n            onSave: props.onSave,\n            onError: props.onError,\n        })\n    }\n    render() {\n        if (this.state.has_error) {\n            return <h1>mind-edit.js: Something went wrong.</h1>;\n        }\n        if (!this.state.open) {\n            return (<div />);\n        }\n        return (\n            <div className=\"modal\" tabIndex=\"-1\" role=\"dialog\" style={{display: \"inline\"}}>\n                <div className={\"modal-dialog modal-dialog-centered modal-xl\"} role=\"document\">\n                    <div className=\"modal-content shadow p-3 mb-5 bg-white rounded\">\n\n                        <div className=\"modal-header\">{this.props.export_upload ? \"Import Crawler\" : \"Export Crawler\"}</div>\n                        <div className=\"modal-body\">\n                            <div>\n\n                                <div>data</div>\n                                <div>\n                                    <textarea\n                                        autoFocus={true}\n                                        style={{width: \"100%\"}}\n                                        onChange={(event) => this.setState({data: event.target.value})}\n                                        placeholder=\"crawler data\"\n                                        spellCheck={false}\n                                        rows={10}\n                                        value={this.state.data}\n                                    />\n                                </div>\n\n                            </div>\n                        </div>\n                        <div className=\"modal-footer\">\n                            {this.props.export_upload &&\n                            <div>\n                                <button className=\"btn btn-primary btn-block\" style={{marginRight: \"8px\"}} onClick={() => this.handleCancel()}>Cancel</button>\n                                <button className=\"btn btn-primary btn-block\" onClick={() => this.handleSave()}>Import</button>\n                            </div>\n                            }\n                            {!this.props.export_upload &&\n                            <div>\n                                <button className=\"btn btn-primary btn-block\" onClick={() => this.handleCancel()}>Close</button>\n                            </div>\n                            }\n                        </div>\n\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default CrawlerImportExport;\n","import React, {Component} from 'react';\n\nimport {CrawlerDialog} from '../crawlers/crawler-dialog'\n\nimport {connect} from \"react-redux\";\nimport {bindActionCreators} from \"redux\";\nimport {appCreators} from \"../actions/appActions\";\nimport MessageDialog from \"../common/message-dialog\";\nimport CrawlerImportExport from \"./crawler-import-export\";\nimport {Pagination} from \"../common/pagination\";\n\nimport '../css/sources.css';\n\nconst default_specific_json = '{\"metadata_list\":[' +\n    '{\"key\":\"created date range\",\"display\":\"created\",\"field1\":\"created\",\"db1\":\"\",\"db2\":\"\",\"sort\":\"true\",\"sort_default\":\"desc\",\"sort_asc\":\"oldest documents first\",\"sort_desc\":\"newest documents first\"},' +\n    '{\"key\":\"last modified date ranges\",\"display\":\"last modified\",\"field1\":\"last-modified\",\"db1\":\"\",\"db2\":\"\",\"sort\":\"true\",\"sort_default\":\"\",\"sort_asc\":\"least recently modified\",\"sort_desc\":\"most recently modified\"},' +\n    '{\"key\":\"document type\",\"display\":\"document type\",\"field1\":\"document-type\",\"db1\":\"\",\"db2\":\"\",\"sort\":\"\",\"sort_default\":\"\",\"sort_asc\":\"\",\"sort_desc\":\"\"}' +\n    ']}';\n\n// default values for an empty / new crawler\nconst empty_crawler= {id: '', sourceId: '0', crawlerType: '', name: '', deleteFiles: true, allowAnonymous: false,\n                      enablePreview: true, schedule: '', filesPerSecond: '0', specificJson: default_specific_json,\n                      processingLevel: 'SEARCH', nodeId: '0', maxItems: '0', maxQNAItems: '0', customRender: false, \"acls\": []};\n\nexport class DocumentSources extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            // pagination\n            page_size: 5,\n            page: 0,\n            // dialog\n            open: false,\n            export_open: false,\n            export_upload: false,\n            title: '',\n            selected_crawler: {},\n            crawler_ask: null,\n\n            // messages\n            message_callback: null,\n            message: '',\n            message_title: '',\n        };\n    }\n    componentDidCatch(error, info) {\n        this.props.setError(error, info);\n        console.log(error, info);\n    }\n    changePage(page) {\n        this.setState({page: page});\n    }\n    changePageSize(page_size) {\n        this.setState({page_size: page_size});\n    }\n    getCrawlers() {\n        const paginated_list = [];\n        const first = this.state.page * this.state.page_size;\n        const last = first + this.state.page_size;\n        for (const i in this.props.crawler_list) {\n            if (i >= first && i < last) {\n                paginated_list.push(this.props.crawler_list[i]);\n            }\n        }\n        return paginated_list;\n    }\n    addNewCrawler() {\n        this.setState({open: true, selected_crawler: empty_crawler, title: 'Create New Crawler'});\n    }\n    onUpdate(crawler) {\n        this.setState({selected_crawler: crawler});\n    }\n    editCrawler(crawler) {\n        if (crawler) {\n            this.setState({open: true, selected_crawler: { ...empty_crawler, ...crawler}, title: 'Edit Crawler'});\n        }\n    }\n    deleteCrawlerAsk(crawler) {\n        this.setState({crawler_ask: crawler});\n        this.props.openDialog(\"are you sure you want to remove the crawler named <b>\" + crawler.name + \"</b>?\",\n            \"Remove Crawler\", (action) => { this.deleteCrawler(action) });\n    }\n    deleteCrawler(action) {\n        if (action && this.state.crawler_ask && this.state.crawler_ask.sourceId) {\n            this.props.deleteCrawler(this.state.crawler_ask.sourceId);\n        }\n        if (this.props.closeDialog) {\n            this.props.closeDialog();\n        }\n    }\n    saveCrawler(crawler) {\n        if (crawler) {\n            crawler.organisationId = this.props.selected_organisation_id;\n            crawler.kbId = this.props.selected_knowledgebase_id;\n            this.props.updateCrawler(crawler);\n        }\n        this.setState({open: false});\n    }\n    canDeleteDocuments(crawler) {\n        return crawler.crawlerType !== 'wordpress';\n    }\n    exportCrawler(crawler) {\n        this.setState({selected_crawler: crawler, export_upload: false, export_open: true})\n    }\n    importCrawler() {\n        this.setState({selected_crawler: {}, export_upload: true, export_open: true})\n    }\n    saveExport(crawler_str) {\n        if (crawler_str && this.state.export_upload) {\n            const crawler = JSON.parse(crawler_str);\n            delete crawler.sourceId;\n            this.saveCrawler(crawler);\n        }\n        this.setState({export_open: false, selected_crawler: {}});\n    }\n    render() {\n        const theme = this.props.theme;\n        return (\n            <div>\n                <CrawlerDialog\n                    open={this.state.open}\n                    title={this.state.title}\n                    theme={theme}\n                    organisation_id={this.props.selected_organisation_id}\n                    kb_id={this.props.selected_knowledgebase_id}\n                    user_list={this.props.user_list}\n                    onSave={(crawler) => this.saveCrawler(crawler)}\n                    onUpdate={(crawler) => this.onUpdate(crawler)}\n                    onError={(title, errStr) => this.props.setError(title, errStr)}\n                    error_title={this.props.error_title}\n                    error_msg={this.props.error}\n                    wpUploadArchive={(data) => this.props.wpUploadArchive(data) }\n                    group_list={this.props.group_list}\n                    crawler={this.state.selected_crawler}\n                    edge_device_list={this.props.edge_device_list}\n                />\n\n                <CrawlerImportExport\n                    open={this.state.export_open}\n                    theme={theme}\n                    upload={this.state.export_upload}\n                    crawler={this.state.selected_crawler}\n                    export_upload={this.state.export_upload}\n                    onSave={(crawler) => this.saveExport(crawler) }\n                    onError={(title, errStr) => this.props.setError(title, errStr)}\n                />\n\n                <MessageDialog callback={(action) => this.state.message_callback(action)}\n                               open={this.state.message.length > 0}\n                               theme={this.props.theme}\n                               message={this.state.message}\n                               title={this.state.message_title} />\n\n                {\n                    this.props.selected_knowledgebase_id.length > 0 &&\n                    <div className=\"source-page\">\n                        <table className=\"table\">\n                            <thead>\n                                <tr className='table-header'>\n                                    <th className='table-header'>name</th>\n                                    <th className='table-header'>type</th>\n                                    <th className='table-header'>status</th>\n                                    <th className='table-header'>crawled / indexed</th>\n                                    <th className='table-header'>actions</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {\n                                    this.getCrawlers().map((crawler) => {\n                                        return (\n                                            <tr key={crawler.sourceId}>\n                                                <td>\n                                                    <div className=\"source-label\">{crawler.name}</div>\n                                                </td>\n                                                <td>\n                                                    <div className=\"source-label\">{crawler.crawlerType}</div>\n                                                </td>\n                                                <td>\n                                                    <div className=\"source-label\">{crawler.isCrawling ? \"busy\" : \"idle\"}</div>\n                                                </td>\n                                                <td>\n                                                    <div className=\"source-label\">{crawler.numCrawledDocuments + \" / \" + crawler.numIndexedDocuments}</div>\n                                                </td>\n                                                <td>\n                                                    <div className=\"link-button\" onClick={() => this.editCrawler(crawler)}>\n                                                        <img src=\"../images/edit.svg\" className=\"image-size\" title=\"edit crawler\" alt=\"edit\"/>\n                                                    </div>\n                                                    <div className=\"link-button\" onClick={() => this.deleteCrawlerAsk(crawler)}>\n                                                        <img src=\"../images/delete.svg\" className=\"image-size\" title=\"remove crawler\" alt=\"remove\"/>\n                                                    </div>\n                                                    <div className=\"link-button\" onClick={() => this.exportCrawler(crawler)}>\n                                                        <img src=\"../images/download.svg\" className=\"image-size\" title=\"get crawler JSON for export\" alt=\"export\"/>\n                                                    </div>\n                                                </td>\n                                            </tr>\n                                        )\n                                    })\n                                }\n                                <tr>\n                                    <td/>\n                                    <td/>\n                                    <td/>\n                                    <td/>\n                                    <td>\n                                        {this.props.selected_organisation_id.length > 0 &&\n                                            <div className=\"image-button\" onClick={() => this.addNewCrawler()}><img\n                                                className=\"image-size\" src=\"../images/add.svg\" title=\"add new crawler\"\n                                                alt=\"add new crawler\"/></div>\n                                        }\n                                        {this.props.selected_organisation_id.length > 0 &&\n                                            <div className=\"image-button\" onClick={() => this.importCrawler()}><img\n                                                className=\"image-size\" src=\"../images/upload.svg\" title=\"upload crawler JSON\"\n                                                alt=\"import\"/></div>\n                                        }\n                                    </td>\n                                </tr>\n                            </tbody>\n                        </table>\n\n                        <Pagination\n                            rowsPerPageOptions={[5, 10, 25]}\n                            theme={theme}\n                            component=\"div\"\n                            count={this.props.crawler_list.length}\n                            rowsPerPage={this.state.page_size}\n                            page={this.state.page}\n                            backIconButtonProps={{\n                                'aria-label': 'Previous Page',\n                            }}\n                            nextIconButtonProps={{\n                                'aria-label': 'Next Page',\n                            }}\n                            onChangePage={(page) => this.changePage(page)}\n                            onChangeRowsPerPage={(rows) => this.changePageSize(rows)}\n                        />\n\n                    </div>\n                }\n\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = function(state) {\n    return {\n        error: state.appReducer.error,\n        error_title: state.appReducer.error_title,\n        theme: state.appReducer.theme,\n\n        selected_organisation_id: state.appReducer.selected_organisation_id,\n        selected_knowledgebase_id: state.appReducer.selected_knowledgebase_id,\n        user_list: state.appReducer.user_list,\n        user_filter: state.appReducer.user_filter,\n        crawler_list: state.appReducer.crawler_list,\n        edge_device_list: state.appReducer.edge_device_list,\n\n        group_list: state.appReducer.group_list,\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    dispatch => bindActionCreators(appCreators, dispatch)\n)(DocumentSources);\n","import React from 'react';\n\nimport {Api} from '../common/api'\n\nimport {connect} from \"react-redux\";\nimport {bindActionCreators} from \"redux\";\nimport {appCreators} from \"../actions/appActions\";\nimport {Home} from \"../home\";\nimport {Pagination} from \"../common/pagination\";\n\nimport '../css/documents.css';\n\n// display length of a url\nconst maxUrlDisplayLength = 50;\n\n\nexport class Documents extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            document: null,\n            crawler_map: {},\n        };\n    }\n    componentDidCatch(error, info) {\n        this.props.setError(error, info);\n        console.log(error, info);\n    }\n    componentDidMount() {\n        let crawler_map = {};\n        for (const crawler of this.props.crawler_list) {\n            crawler_map[crawler.sourceId] = crawler.crawlerType;\n        }\n        this.setState({crawler_map: crawler_map});\n    }\n    deleteDocumentAsk(document) {\n        if (document) {\n            this.props.openDialog(\"are you sure you want to remove \\\"\" + document.url + \"\\\" ?\", \"Remove Document\", (action) => { this.deleteDocument(action) });\n            this.setState({document: document});\n        }\n    }\n    deleteDocument(action) {\n        if (action && Api.defined(this.state.document)) {\n            console.log(this.state.document);\n            this.props.deleteDocument(this.state.document.url, this.state.document.sourceId);\n        }\n        if (this.props.closeDialog) {\n            this.props.closeDialog();\n        }\n    }\n    handleSearchTextKeydown(event) {\n        if (event.key === \"Enter\") {\n            this.props.getDocuments();\n        }\n    }\n    documentUploaded() {\n        this.setState({message_title: \"done\", message: \"document uploaded\",\n            message_callback: () => { this.setState({message: \"\"})}});\n    }\n    getDocuments() {\n        return this.props.document_list;\n    }\n    static isWeb(url) {\n        return (url.toLowerCase().startsWith(\"http://\") || url.toLowerCase().startsWith(\"https://\"));\n    }\n    static adjustUrl(url) {\n        if (url && url.length > maxUrlDisplayLength) {\n            const half = Math.floor(maxUrlDisplayLength / 2);\n            return url.substring(0, half) + \" ... \" + url.substring(url.length - half);\n        }\n        return url;\n    }\n    // return: 0 => to do, 1 => done, 2 => disabled\n    getActive(document, stage) {\n        if (stage === \"crawled\") {\n            if (document.crawled > 0)\n                return 1;\n        } else if (stage === \"converted\") {\n            if (document.converted > 0)\n                return 1;\n            else if (document.converted < 0)\n                return 2;\n        } else if (stage === \"parsed\") {\n            if (document.converted > 0 && document.converted <= document.parsed)\n                return 1;\n            else if (document.parsed < 0)\n                return 2;\n        } else if (stage === \"indexed\") {\n            if (document.converted > 0 && document.parsed > 0 && document.parsed <= document.indexed)\n                return 1;\n            else if (document.indexed < 0)\n                return 2;\n        } else if (stage === \"previewed\") {\n            if (document.previewed > 0)\n                return 1;\n            else if (document.previewed < 0)\n                return 2;\n        }\n        return 0;\n    }\n    getStatus(document, stage) {\n        const status = this.getActive(document, stage);\n        if (status === 1)\n            return \"../images/dot-green.svg\";\n        else if (status === 0)\n            return \"../images/dot-orange.svg\";\n        else\n            return \"../images/dot-grey.svg\";\n    }\n    getStatusText(document, stage, staging) {\n        const status = this.getActive(document, stage);\n        if (status === 1)\n            return \"document \" + stage;\n        else if (status === 0)\n            return \"document not \" + stage;\n        else\n            return staging + \" disabled for this document-source\";\n    }\n    isVisible() {\n        return this.props.selected_organisation_id && this.props.selected_organisation_id.length > 0 &&\n            this.props.selected_organisation && this.props.selected_organisation.length > 0 &&\n            this.props.selected_knowledgebase_id && this.props.selected_knowledgebase_id.length > 0;\n    }\n    canDeleteDocument(document) {\n        return this.state.crawler_map[document.sourceId] !== 'wordpress';\n    }\n    render() {\n        const theme = this.props.theme;\n        const isAdmin = Home.hasRole(this.props.user, ['admin']);\n        return (\n            <div className=\"document-display\">\n\n                {\n                    this.isVisible() &&\n                    <div className=\"filter-find-box\">\n                        <span className=\"filter-label\">filter</span>\n                        <span className=\"filter-find-text\">\n                            <input type=\"text\" value={this.props.document_filter} autoFocus={true} className={theme}\n                                   onKeyPress={(event) => this.handleSearchTextKeydown(event)}\n                                   onChange={(event) => {\n                                       this.props.setDocumentFilter(event.target.value)\n                                   }}/>\n                        </span>\n                        <span className=\"filter-find-image\">\n                            <img className=\"image-size\"\n                                 onClick={() => this.props.getDocuments()}\n                                 src=\"../images/dark-magnifying-glass.svg\" title=\"filter\" alt=\"filter\"/>\n                        </span>\n                    </div>\n                }\n\n\n                {\n                    this.isVisible() &&\n                    <div className=\"table-style\">\n                        <table className=\"table\">\n\n                            <thead>\n                                <tr className='table-header'>\n                                    <th className='table-header'>url</th>\n                                    <th className='table-header'>source</th>\n                                    <th className='table-header'>last modified</th>\n                                    <th className='table-header'>status</th>\n                                    {isAdmin &&\n                                        <th className='table-header'>actions</th>\n                                    }\n                                </tr>\n                            </thead>\n\n                            <tbody>\n                                {\n                                    this.getDocuments().map((document) => {\n                                        return (\n                                                <tr key={document.url}>\n                                                    <td className=\"urlLabel\">\n                                                        {\n                                                            Documents.isWeb(document.url) &&\n                                                            <div className=\"urlLabel\">\n                                                                <a href={document.url} title={document.url} rel=\"noopener noreferrer\" target=\"_blank\">{Documents.adjustUrl(document.url)}</a>\n                                                            </div>\n                                                        }\n                                                        {\n                                                            !Documents.isWeb(document.url) &&\n                                                            <div className=\"urlLabel\">{Documents.adjustUrl(document.url)}</div>\n                                                        }\n                                                    </td>\n                                                    <td className=\"sourceLabel\">\n                                                        {document.origin}\n                                                    </td>\n                                                    <td>\n                                                        <div className=\"timeLabel\">{Api.unixTimeConvert(document.lastModified)}</div>\n                                                    </td>\n                                                    <td>\n                                                        <div className=\"label\">\n                                                            <img src={this.getStatus(document, \"crawled\")} className=\"statusImage\" alt=\"crawler\" title={this.getStatusText(document, \"crawled\", \"crawling\")} />\n                                                            <img src={this.getStatus(document, \"converted\")} className=\"statusImage\" alt=\"converted\" title={this.getStatusText(document, \"converted\", \"converting\")} />\n                                                            <img src={this.getStatus(document, \"parsed\")} className=\"statusImage\" alt=\"parsed\" title={this.getStatusText(document, \"parsed\", \"parsing\")} />\n                                                            <img src={this.getStatus(document, \"indexed\")} className=\"statusImage\" alt=\"indexed\" title={this.getStatusText(document, \"indexed\", \"indexing\")} />\n                                                            <img src={this.getStatus(document, \"previewed\")} className=\"statusImage\" alt=\"previewed\" title={this.getStatusText(document, \"previewed\", \"preview generation\")} />\n                                                        </div>\n                                                    </td>\n                                                    {isAdmin &&\n                                                        <td>\n                                                            <div className=\"linkButton\"\n                                                                 onClick={() => this.deleteDocumentAsk(document)}>\n                                                                <img src=\"../images/delete.svg\"\n                                                                     className=\"image-size\" title=\"remove document\"\n                                                                     alt=\"remove\"/>\n                                                            </div>\n                                                        </td>\n                                                    }\n                                                </tr>\n                                        )\n                                    })\n                                }\n                            </tbody>\n                        </table>\n\n                        <Pagination\n                            theme={theme}\n                            rowsPerPageOptions={[5, 10, 25]}\n                            component=\"div\"\n                            count={this.props.num_documents}\n                            rowsPerPage={this.props.document_page_size}\n                            page={this.props.document_page}\n                            backIconButtonProps={{\n                                'aria-label': 'Previous Page',\n                            }}\n                            nextIconButtonProps={{\n                                'aria-label': 'Next Page',\n                            }}\n                            onChangePage={(page) => this.props.setDocumentPage(page)}\n                            onChangeRowsPerPage={(rows) => this.props.setDocumentPageSize(rows)}\n                        />\n\n                    </div>\n                }\n\n            </div>\n        )\n    }\n}\n\n\nconst mapStateToProps = function(state) {\n    return {\n        error: state.appReducer.error,\n        error_title: state.appReducer.error_title,\n        theme: state.appReducer.theme,\n        user: state.appReducer.user,\n\n        document_list: state.appReducer.document_list,\n        document_filter: state.appReducer.document_filter,\n        document_page: state.appReducer.document_page,\n        document_page_size: state.appReducer.document_page_size,\n        document_nav_list: state.appReducer.document_nav_list,\n        num_documents: state.appReducer.num_documents,\n\n        crawler_list: state.appReducer.crawler_list,\n\n        selected_organisation_id: state.appReducer.selected_organisation_id,\n        selected_organisation: state.appReducer.selected_organisation,\n        selected_knowledgebase_id: state.appReducer.selected_knowledgebase_id,\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    dispatch => bindActionCreators(appCreators, dispatch)\n)(Documents);\n\n","import React, {Component} from 'react';\n\nimport '../css/mind-edit.css';\n\nconst image_types = [\".jpg\", \".jpeg\", \".png\", \".gif\", \".svg\"];\n\nexport class MindEdit extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            has_error: false,\n            open: props.open,\n            onSave: props.onSave,\n            onError: props.onError,\n            memory: props.memory,\n            information: props.memory && props.memory.information ? props.memory.information : \"\",\n            questionList: MindEdit.getQuestions(props.memory),\n            links: this.linksToText(props.memory),\n        };\n    }\n    componentDidCatch(error, info) {\n        this.setState({ has_error: true });\n        console.log(error, info);\n    }\n    UNSAFE_componentWillReceiveProps(props) {\n        this.setState({\n            open: props.open,\n            onSave: props.onSave,\n            onError: props.onError,\n            memory: props.memory,\n            information: props.memory && props.memory.information ? props.memory.information : \"\",\n            questionList: MindEdit.getQuestions(props.memory),\n            links: this.linksToText(props.memory),\n        })\n    }\n    handleSave() {\n        if (this.state.onSave) {\n            const memory = this.state.memory;\n            memory.information = this.state.information;\n            memory.questionList = [];\n            for (const question of this.state.questionList) {\n                if (question.trim().length > 0) {\n                    memory.questionList.push(question.trim());\n                }\n            }\n            memory.urlList = this.getLinks(this.state.links);\n            memory.imageList = this.getImageLinks(this.state.links);\n            this.state.onSave(memory);\n        }\n    }\n    getLinks(links) {\n        const list = [];\n        for (const link of links.split('\\n')) {\n            const l = link.trim();\n            if (l.length > 0 && !this.isImage(l)) {\n                list.push(l.trim());\n            }\n        }\n        return list;\n    }\n    linksToText(memory) {\n        let str = \"\";\n        if (memory) {\n            if (memory.urlList) {\n                for (const link of memory.urlList) {\n                    const l = link.trim();\n                    if (l.length > 0) {\n                        str += l.trim() + \"\\n\";\n                    }\n                }\n            }\n            if (memory.imageList) {\n                for (const link of memory.imageList) {\n                    const l = link.trim();\n                    if (l.length > 0) {\n                        str += l.trim() + \"\\n\";\n                    }\n                }\n            }\n        }\n        return str;\n    }\n    getImageLinks(links) {\n        const list = [];\n        for (const link of links.split('\\n')) {\n            const l = link.trim();\n            if (l.length > 0 && this.isImage(l)) {\n                list.push(l.trim());\n            }\n        }\n        return list;\n    }\n    isImage(link) {\n        if (link) {\n            const l = link.toLowerCase();\n            const i = l.lastIndexOf('.');\n            if (i > 0) {\n                const extension = l.substring(i);\n                return image_types.includes(extension);\n            }\n        }\n        return false;\n    }\n    handleCancel() {\n        if (this.state.onSave) {\n            this.state.onSave(null);\n        }\n    }\n    static getLinks(memory) {\n        let str = \"\";\n        if (memory && memory.urlList) {\n            for (const url of memory.urlList) {\n                if (str.length > 0) {\n                    str += \"\\n\";\n                }\n                str += url;\n            }\n        }\n        if (memory && memory.imageList) {\n            for (const image of memory.imageList) {\n                if (str.length > 0) {\n                    str += \"\\n\";\n                }\n                str += image;\n            }\n        }\n        return str;\n    }\n    static getQuestions(memory) {\n        let list = [];\n        if (memory && memory.questionList) {\n            for (const question of memory.questionList) {\n                list.push(question.trim());\n            }\n        }\n        while (list.length < 5) {\n            list.push('')\n        }\n        return list;\n    }\n    setQuestion(index, text) {\n        const question_list = this.state.questionList;\n        question_list[index] = text;\n        this.setState({questionList: question_list});\n    }\n    render() {\n        if (this.state.has_error) {\n            return <h1>mind-edit.js: Something went wrong.</h1>;\n        }\n        if (!this.state.open)\n            return (<div />);\n        return (\n            <div className=\"modal\" tabIndex=\"-1\" role=\"dialog\" style={{display: \"inline\"}}>\n                <div className={\"modal-dialog modal-dialog-centered modal-xl\"} role=\"document\">\n                    <div className=\"modal-content shadow p-3 mb-5 bg-white rounded\">\n\n                        <div className=\"modal-header\">Edit Memory</div>\n                        <div className=\"modal-body\">\n\n                                {\n                                    this.state.questionList.map((question, i) => {\n                                        return (\n                                            <div className=\"edit-row\" key={i}>\n                                                <span className=\"label-area\">{\"question \" + (i+1)}</span>\n                                                <span className=\"input-area\">\n                                                    <input type=\"text\" className=\"form-control\"\n                                                        autoFocus={i === 0}\n                                                        onChange={(event) => this.setQuestion(i, event.target.value)}\n                                                        placeholder={\"question \" + (i+1)}\n                                                        value={question}\n                                                    />\n                                                </span>\n                                            </div>\n                                        )})\n                                }\n\n                                <div className=\"edit-row\">\n                                    <span className=\"label-area\">answer text</span>\n                                    <span className=\"input-area\">\n                                    <textarea className=\"input-area\"\n                                        onChange={(event) => this.setState({information: event.target.value})}\n                                        placeholder=\"answer, or function (e.g. 'exec show_help person1 person2 date1')\"\n                                        rows={5}\n                                        value={this.state.information}\n                                    />\n                                    </span>\n                                </div>\n\n\n                                <div className=\"edit-row\">\n                                    <span className=\"label-area\">links (one per line)</span>\n                                    <span className=\"input-area\">\n                                        <textarea className=\"input-area\"\n                                            onChange={(event) => this.setState({links: event.target.value})}\n                                            placeholder=\"links\"\n                                            rows={5}\n                                            value={this.state.links}\n                                        />\n                                    </span>\n                                </div>\n\n                        </div>\n                        <div className=\"modal-footer\">\n                            <button className=\"btn btn-primary btn-block\" onClick={() => this.handleCancel()}>Cancel</button>\n                            <button className=\"btn btn-primary btn-block\" onClick={() => this.handleSave()}>Save</button>\n                        </div>\n\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default MindEdit;\n","import React, {Component} from 'react';\n\nimport {connect} from \"react-redux\";\nimport {bindActionCreators} from \"redux\";\nimport {appCreators} from \"../actions/appActions\";\n\nimport '../css/spreadsheet-upload.css';\n\n\nexport class SpreadsheetUpload extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            filename: '',\n            file_type: '',\n            filter: '',\n            binary_data: null,\n        };\n    }\n\n    _handleImageChange(e) {\n        e.preventDefault();\n\n        const self = this;\n        const reader = new FileReader();\n        const file = e.target.files[0];\n        const filename = file['name'];\n        const file_type = file['type'];\n\n        reader.onloadend = () => {\n            self.setState({\n                filename: filename,\n                file_type: file_type,\n                binary_data: reader.result\n            });\n        };\n        reader.readAsDataURL(file)\n    }\n\n    upload() {\n        if (this.state.binary_data) {\n            const payload = {\n                base64Text: this.state.binary_data,\n                fileType: this.state.file_type,\n                kbId: this.props.selected_knowledgebase_id,\n                organisationId: this.props.selected_organisation_id,\n            };\n            this.props.uploadProgram(payload);\n            if (this.props.onUploadDone) {\n                this.props.onUploadDone();\n            }\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"spreadsheet-upload\">\n                <form onSubmit={(e) => this._handleSubmit(e)} className=\"upload-container\">\n                    <div>\n                        <input className=\"upload-control-position\"\n                               type=\"file\"\n                               onChange={(e) => this._handleImageChange(e)}/>\n                        <div className=\"upload-button\">\n                            <div className=\"upload-input\">\n                                <button className=\"btn btn-primary btn-block\"\n                                        disabled={this.state.binary_data === null || this.props.uploading}\n                                        onClick={this.upload.bind(this)}>upload</button>\n                                {this.props.uploading &&\n                                <div className=\"upload-wheel\"><img src=\"../images/busy2.gif\" alt=\"busy\" className=\"busy-image\" /></div>\n                                }\n                            </div>\n                        </div>\n                    </div>\n                </form>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = function(state) {\n    return {\n        uploading: state.appReducer.uploading,\n        selected_organisation_id: state.appReducer.selected_organisation_id,\n        selected_knowledgebase_id: state.appReducer.selected_knowledgebase_id,\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    dispatch => bindActionCreators(appCreators, dispatch)\n)(SpreadsheetUpload);\n\n","import React from 'react';\n\nimport {Api} from '../common/api'\nimport {MindEdit} from \"./mind-edit\";\n\nimport {connect} from \"react-redux\";\nimport {bindActionCreators} from \"redux\";\nimport {appCreators} from \"../actions/appActions\";\nimport SpreadsheetUpload from \"../common/spreadsheet-upload\";\nimport Comms from \"../common/comms\";\nimport {Pagination} from \"../common/pagination\";\n\nimport '../css/mind.css';\n\n\nexport class Mind extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            mind_item: null,\n            mind_edit: false,\n        };\n    }\n    componentDidCatch(error, info) {\n        this.props.setError(error, info);\n        console.log(error, info);\n    }\n    componentDidMount() {\n    }\n    deleteMemoryAsk(memory) {\n        if (memory) {\n            this.props.openDialog(\"are you sure you want to remove id \" + memory.id + \"?<br/><br/>(\" + memory.questionList[0] + \")\",\n                                    \"Remove Memory\", (action) => { this.deleteMemory(action) });\n            this.setState({mind_item: memory});\n        }\n    }\n    deleteMemory(action) {\n        if (action && Api.defined(this.state.mind_item)) {\n            this.props.deleteMemory(this.state.mind_item.id);\n        }\n        if (this.props.closeDialog) {\n            this.props.closeDialog();\n        }\n    }\n    deleteAllMemoriesAsk() {\n        this.props.openDialog(\"are you sure you want to remove all memories of this knowledge-base?\",\n            \"Remove All Memories\", (action) => { this.deleteAllMemories(action) });\n    }\n    deleteAllMemories(action) {\n        if (action) {\n            this.props.deleteAllMemories();\n        }\n        if (this.props.closeDialog) {\n            this.props.closeDialog();\n        }\n    }\n    handleSearchTextKeydown(event) {\n        if (event.key === \"Enter\") {\n            this.props.getMindItems();\n        }\n    }\n    static getDisplayText(memory) {\n        let str = \"\";\n        for (const question of memory.questionList) {\n            if (str.length > 0) {\n                str += \" | \";\n            }\n            str += question;\n        }\n        str += ' => ' + memory.information;\n        return str;\n    }\n    editMemory(memory) {\n        this.setState({mind_edit: true, mind_item: memory});\n    }\n    newMemory() {\n        this.setState({mind_edit: true, mind_item: {\n                id: \"\",\n                questionList: [],\n                urlList: [],\n                information: \"\",\n            }\n            });\n    }\n    programUploaded() {\n        this.props.openDialog(\"SimSage is now processing these new memories.  Check 'the mind' periodically for updates.\", \"Uploading Memories\", () => this.programUploadedClose());\n    }\n    programUploadedClose() {\n        this.props.closeDialog();\n    }\n    mindDump() {\n        Comms.download_mind_dump(this.props.selected_organisation_id, this.props.selected_knowledgebase_id);\n    }\n    save(memory) {\n        if (memory) {\n            if (memory.information.length > 0 && memory.questionList.length > 0) {\n                this.props.saveMemory(memory);\n                this.setState({mind_edit: false});\n            } else {\n                this.props.setError(\"Error Saving Memory\", \"memory must have questions and an answer\");\n            }\n        } else {\n            this.setState({mind_edit: false});\n        }\n    }\n    getMemoryList() {\n        if (this.props.mind_item_list) {\n            return this.props.mind_item_list;\n        }\n        return [];\n    }\n    isVisible() {\n        return this.props.selected_organisation_id && this.props.selected_organisation_id.length > 0 &&\n            this.props.selected_organisation && this.props.selected_organisation.length > 0 &&\n            this.props.selected_knowledgebase_id && this.props.selected_knowledgebase_id.length > 0;\n    }\n    render() {\n        const theme = this.props.theme;\n        return (\n            <div className=\"mind-page\">\n               <MindEdit open={this.state.mind_edit}\n                         theme={theme}\n                         memory={this.state.mind_item}\n                         onSave={(item) => this.save(item)}\n                         onError={(err) => this.props.setError(\"Error\", err)} />\n\n                {\n                    this.isVisible() &&\n\n                    <div className=\"filter-find-box\">\n                        <span className=\"filter-label\">find items in the mind</span>\n                        <span className=\"filter-find-text\">\n                            <input type=\"text\" value={this.props.mind_item_filter}\n                                   autoFocus={true}\n                                   className=\"form-control\"\n                                   onKeyPress={(event) => this.handleSearchTextKeydown(event)}\n                                   onChange={(event) => {\n                                       this.props.setMindItemFilter(event.target.value)\n                                   }}/>\n                        </span>\n                        <span className=\"filter-find-image\">\n                            <img className=\"image-size\"\n                                 onClick={() => this.props.getMindItems()}\n                                 src=\"../images/dark-magnifying-glass.svg\" title=\"search\" alt=\"search\"/>\n                        </span>\n                    </div>\n                }\n                <br clear=\"both\" />\n\n                {\n                    this.isVisible() &&\n\n                    <div>\n                        <table className=\"table\">\n                            <thead>\n                                <tr className='table-header'>\n                                    <th className='table-header'>id</th>\n                                    <th className='table-header'>memory</th>\n                                    <th className='table-header'>actions</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {\n                                    this.getMemoryList().map((memory) => {\n                                        return (\n                                            <tr key={memory.id}>\n                                                <td>\n                                                    <div>{memory.id}</div>\n                                                </td>\n                                                <td>\n                                                    <div className=\"mind-text-column\" title={Mind.getDisplayText(memory)}>{Mind.getDisplayText(memory)}</div>\n                                                </td>\n                                                <td>\n                                                    <span onClick={() => this.editMemory(memory)}>\n                                                        <img src=\"../images/edit.svg\" className=\"image-size\" title=\"edit memory\" alt=\"edit\"/>\n                                                    </span>\n                                                    <span onClick={() => this.deleteMemoryAsk(memory)}>\n                                                        <img src=\"../images/delete.svg\" className=\"image-size\" title=\"remove memory\" alt=\"remove\"/>\n                                                    </span>\n                                                </td>\n                                            </tr>\n                                        )\n                                    })\n                                }\n                                <tr>\n                                    <td colSpan={3} className=\"bottom-td-margin\">\n                                        {this.props.selected_knowledgebase_id.length > 0 &&\n                                            <div className=\"uploader\">\n                                                <SpreadsheetUpload kbId={this.props.selected_knowledgebase_id}\n                                                                   organisationId={this.props.selected_organisation_id}\n                                                                   onUploadDone={() => this.programUploaded()}\n                                                                   onError={(errStr) => this.props.setError(\"Error\", errStr)}/>\n                                            </div>\n                                        }\n                                        {this.props.selected_knowledgebase_id.length > 0 &&\n                                            <div className=\"export\">\n                                                <button className=\"btn btn-primary btn-block\"\n                                                        onClick={() => this.mindDump()}>Export</button>\n\n                                            </div>\n                                        }\n                                        {this.props.selected_knowledgebase_id.length > 0 &&\n                                        <div className=\"image-button\" onClick={() => this.newMemory()}><img\n                                            className=\"image-size\" src=\"../images/add.svg\" title=\"new mind item\"\n                                            alt=\"new mind item\"/></div>\n                                        }\n                                        {this.props.selected_knowledgebase_id.length > 0 &&\n                                            <div className=\"image-button\" onClick={() => this.deleteAllMemoriesAsk()}><img\n                                                className=\"image-size\" src=\"../images/delete.svg\" title=\"remove all mind items of this knowledgebase\"\n                                                alt=\"remove all mind items\"/></div>\n                                        }\n                                    </td>\n                                </tr>\n                            </tbody>\n                        </table>\n\n                        <Pagination\n                            theme={theme}\n                            rowsPerPageOptions={[5, 10, 25]}\n                            component=\"div\"\n                            count={this.props.num_mind_items}\n                            rowsPerPage={this.props.mind_item_page_size}\n                            page={this.props.mind_item_page}\n                            backIconButtonProps={{\n                                'aria-label': 'Previous Page',\n                            }}\n                            nextIconButtonProps={{\n                                'aria-label': 'Next Page',\n                            }}\n                            onChangePage={(page) => this.props.setMindItemPage(page)}\n                            onChangeRowsPerPage={(rows) => this.props.setMindItemPageSize(rows)}\n                        />\n\n                    </div>\n                }\n\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = function(state) {\n    return {\n        error: state.appReducer.error,\n        error_title: state.appReducer.error_title,\n        theme: state.appReducer.theme,\n\n        mind_item_list: state.appReducer.mind_item_list,\n        mind_item_filter: state.appReducer.mind_item_filter,\n        mind_item_page: state.appReducer.mind_item_page,\n        mind_item_page_size: state.appReducer.mind_item_page_size,\n        num_mind_items: state.appReducer.num_mind_items,\n\n        bot_query: state.appReducer.bot_query,\n        mind_result_list: state.appReducer.mind_result_list,\n\n        selected_organisation_id: state.appReducer.selected_organisation_id,\n        selected_organisation: state.appReducer.selected_organisation,\n        selected_knowledgebase_id: state.appReducer.selected_knowledgebase_id,\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    dispatch => bindActionCreators(appCreators, dispatch)\n)(Mind);\n\n","import React from 'react';\n\nimport '../css/mind.css';\n\n\nexport class BotSingleSearchResult extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            has_error: false,\n            item: props.item,\n            openDocument: props.openDocument,\n        };\n    }\n    UNSAFE_componentWillReceiveProps(nextProps) {\n        // see if we have data to start this dialog\n        if (nextProps) {\n            this.setState({\n                item: nextProps.item,\n                openDocument: nextProps.openDocument,\n            })\n        }\n    }\n    componentDidCatch(error, info) {\n        this.setState({ has_error: true });\n        console.log(error, info);\n    }\n    static highlight(str) {\n        if (str && str.replace) {\n            str = str.replace(/{hl1:}/g, \"<span class='hl1'>\");\n            str = str.replace(/{hl2:}/g, \"<span class='hl2'>\");\n            str = str.replace(/{hl3:}/g, \"<span class='hl3'>\");\n            str = str.replace(/{:hl1}/g, \"</span>\");\n            str = str.replace(/{:hl2}/g, \"</span>\");\n            str = str.replace(/{:hl3}/g, \"</span>\");\n            str = str.replace(/\\n/g, \"<br />\");\n        }\n        return str;\n    }\n\n    toText(memory) {\n        return memory.text.replace(\"<br />\", \"\\n\");\n    }\n\n    render() {\n        if (this.state.has_error) {\n            return <h1>bot-single-search-result: Something went wrong.</h1>;\n        }\n        const item = this.state.item;\n        return (\n            <div className=\"mind-search-results\">\n                <span className=\"mind-score\">{item.score.toFixed(2)}</span>\n                <span className=\"mind-id\">{\"id:\" + item.url}</span>\n                <span className=\"mind-result-text\">{this.toText(item)}</span>\n\n\n                <div className=\"image-list-container\">\n                    {\n                        item.imageList && item.imageList.map((image) => {\n                            return (<div key={image} className=\"image-holder\"><img alt=\"search result\" src={image} className=\"preview-image-size\" /></div>);\n                        })\n                    }\n                </div>\n\n                <br clear=\"both\" />\n\n                <div className=\"url-list-container\">\n                    {\n                        item.urlList && item.urlList.map((url) => {\n                            return (<div className=\"url-style\" key={url}><a href={url} rel=\"noopener noreferrer\" target={\"_blank\"}>{url}</a></div>);\n                        })\n                    }\n                </div>\n\n            </div>\n        );\n    }\n\n}\n\nexport default BotSingleSearchResult;\n\n","import React, {Component} from 'react';\n\nimport Comms from '../common/comms'\nimport BotSingleSearchResult from '../common/bot-single-search-result'\n\nimport '../css/mind.css';\n\n\nexport class MindSearchComponent extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            onError: props.onError,\n\n            setBotQueryString: props.setBotQueryString,\n\n            // search system\n            botQueryString: props.botQueryString,\n            // results\n            queryResultList: props.queryResultList,\n            // a result list if applicable after asking\n            hasSearched: false,\n        };\n\n    }\n    componentDidCatch(error, info) {\n        this.props.onError(error, info);\n        console.log(error, info);\n    }\n    UNSAFE_componentWillReceiveProps(nextProps) {\n        this.setState({\n            botQueryString: nextProps.botQueryString,\n            queryResultList: nextProps.queryResultList,\n            setBotQueryString: nextProps.setBotQueryString,\n            onError: nextProps.onError,\n        })\n    }\n    handleSearchTextKeydown(event) {\n        if (event.key === \"Enter\") {\n            this.doClickSearch();\n        }\n    }\n    doClickSearch() {\n        if (this.props.mindQuery) {\n            this.setState({hasSearched: true});\n            this.props.mindQuery();\n        }\n    }\n    getResultList() {\n        return JSON.parse(JSON.stringify(this.props.queryResultList));\n    }\n    openDocument(url) {\n        const session_id = Comms.getSession();\n        const window_url = Comms.toUrl('/document/' + encodeURIComponent(session_id) + '/' + encodeURIComponent(url));\n        window.open(window_url, \"_blank\");\n    }\n    render() {\n        return (\n            <div className=\"mind-page\">\n\n                <div className=\"form-group\">\n                    <div className=\"busy-body\">\n                        <img alt=\"busy\" src=\"../images/busy2.gif\"\n                             style={{'display': this.state.busy ? '' : 'none', width: '32px'}}/>\n                    </div>\n                </div>\n\n                <div className=\"form-group\">\n                    <div className=\"full-column\">\n                        <span className=\"left-1\">\n                            <input type=\"text\" className=\"form-control text-width\"\n                                onChange={(event) => this.props.setBotQueryString(event.target.value)}\n                                onKeyPress={(event) => this.handleSearchTextKeydown(event)}\n                            />\n                        </span>\n                        <span className=\"left\">\n                            <button className=\"btn btn-primary btn-block\" onClick={() => this.doClickSearch()}>Ask</button>\n                        </span>\n                    </div>\n                </div>\n\n\n                <br clear=\"both\" />\n\n\n                {this.state.queryResultList && this.state.queryResultList.length > 0 &&\n                <div>\n                    <div className=\"search-results-box\">\n                        {\n                            this.getResultList().map((item) => {\n                                return (<BotSingleSearchResult key={item.key} item={item} openDocument={(url) => this.openDocument(url)} />)\n                            })\n                        }\n                    </div>\n\n                </div>\n                }\n\n                {\n                    this.state.queryResultList && this.state.queryResultList.length === 0 && this.state.hasSearched && !this.state.busy &&\n                    <div className=\"no-results\">no results</div>\n                }\n\n            </div>\n        );\n    }\n}\n\nexport default MindSearchComponent;\n","import React from 'react';\n\nimport {Api} from '../common/api'\nimport {MindSearchComponent} from \"./mind-search-component\";\n\nimport {connect} from \"react-redux\";\nimport {bindActionCreators} from \"redux\";\nimport {appCreators} from \"../actions/appActions\";\nimport Comms from \"../common/comms\";\n\n\nexport class MindTest extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            mind_item: null,\n            mind_edit: false,\n        };\n    }\n    componentDidCatch(error, info) {\n        this.props.setError(error, info);\n        console.log(error, info);\n    }\n    componentDidMount() {\n    }\n    deleteMemoryAsk(mindItem) {\n        if (mindItem) {\n            this.props.openDialog(\"are you sure you want to remove id \" + mindItem.id + \"?<br/><br/>(\" + mindItem.expression + \")\",\n                                    \"Remove Mind Entry\", (action) => { this.deleteMemory(action) });\n            this.setState({mind_item: mindItem});\n        }\n    }\n    deleteMemory(action) {\n        if (action && Api.defined(this.state.mind_item)) {\n            this.props.deleteMemory(this.state.mind_item.id);\n        }\n        if (this.props.closeDialog) {\n            this.props.closeDialog();\n        }\n    }\n    deleteAllMemoriesAsk() {\n        this.props.openDialog(\"are you sure you want to remove all mind-items of this knowledge-base?\",\n            \"Remove All Mind Items\", (action) => { this.deleteAllMemories(action) });\n    }\n    deleteAllMemories(action) {\n        if (action) {\n            this.props.deleteAllMemories();\n        }\n        if (this.props.closeDialog) {\n            this.props.closeDialog();\n        }\n    }\n    handleSearchTextKeydown(event) {\n        if (event.key === \"Enter\") {\n            this.props.getMindItems();\n        }\n    }\n    static toAnswer(mindItem) {\n        let str = \"\";\n        if (mindItem && mindItem.actionList) {\n            for (const action of mindItem.actionList) {\n                if (action && action.action === \"browser.write\" && action.parameters) {\n                    for (const param of action.parameters) {\n                        str = str + param.replace(/<br \\/>/g, \"\\n\");\n                    }\n                }\n            }\n        }\n        return str;\n    }\n    editMindItem(mindItem) {\n        this.setState({mind_edit: true, mind_item: mindItem});\n    }\n    newMindItem() {\n        this.setState({mind_edit: true, mind_item: {\n                id: Api.createGuid(),\n                preContext: \"\",\n                postContext: \"\",\n                expression: \"\",\n                actionList: [],\n                metadata: \"\"\n            }\n            });\n    }\n    mindDump() {\n        Comms.download_mind_dump(this.props.selected_organisation_id, this.props.selected_knowledgebase_id);\n    }\n    save(mindItem) {\n        if (mindItem) {\n            if (mindItem.expression.length > 0 && mindItem.actionList.length > 0) {\n                this.props.saveMindItem(mindItem);\n                this.setState({mind_edit: false});\n            } else {\n                this.props.setError(\"Error Saving Mind Entry\", \"mind-item must have an expression and actions\");\n            }\n        } else {\n            this.setState({mind_edit: false});\n        }\n    }\n    render() {\n        return (\n            <div>\n\n                {this.props.selected_knowledgebase_id &&\n                    <MindSearchComponent onError={(title, err) => this.props.setError(title, err)}\n                                         mindQuery={this.props.mindQuery}\n                                         botQueryString={this.props.bot_query}\n                                         setBotQueryString={this.props.setBotQueryString}\n                                         queryResultList={this.props.mind_result_list} />\n                }\n\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = function(state) {\n    return {\n        error: state.appReducer.error,\n        error_title: state.appReducer.error_title,\n\n        bot_query: state.appReducer.bot_query,\n        mind_result_list: state.appReducer.mind_result_list,\n\n        selected_organisation_id: state.appReducer.selected_organisation_id,\n        selected_knowledgebase_id: state.appReducer.selected_knowledgebase_id,\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    dispatch => bindActionCreators(appCreators, dispatch)\n)(MindTest);\n\n","import React, {Component} from 'react';\n\nimport '../css/synonyms.css';\n\n\nexport class SynonymEdit extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            has_error: false,\n            open: props.open,\n            synonym: props.synonym,\n            onSave: props.onSave,\n            onError: props.onError,\n            words: props.synonym && props.synonym.words ? props.synonym.words : \"\",\n        };\n    }\n    componentDidCatch(error, info) {\n        this.setState({ has_error: true });\n        console.log(error, info);\n    }\n    handleSave() {\n        if (this.state.onSave) {\n            const syn = this.state.synonym;\n            syn.words = this.state.words;\n            this.state.onSave(syn);\n        }\n    }\n    handleCancel() {\n        if (this.state.onSave) {\n            this.state.onSave(null);\n        }\n    }\n    UNSAFE_componentWillReceiveProps(props) {\n        this.setState({\n            open: props.open,\n            synonym: props.synonym,\n            onSave: props.onSave,\n            onError: props.onError,\n            words: props.synonym && props.synonym.words ? props.synonym.words : \"\",\n        })\n    }\n    render() {\n        if (this.state.has_error) {\n            return <h1>synonym-edit.js: Something went wrong.</h1>;\n        }\n        if (!this.state.open)\n            return (<div />);\n        return (\n            <div className=\"modal\" tabIndex=\"-1\" role=\"dialog\" style={{display: \"inline\"}}>\n                <div className={\"modal-dialog modal-dialog-centered modal-xl\"} role=\"document\">\n                    <div className=\"modal-content shadow p-3 mb-5 bg-white rounded synonym-page\">\n\n                        <div className=\"modal-header\">Edit Synonym</div>\n                        <div className=\"modal-body\">\n                            <div>\n\n                                <div className=\"edit-row\">\n                                    <span className=\"label-area\">synonyms</span>\n                                    <span className=\"input-area\">\n                                        <textarea className=\"input-area\"\n                                                  autoFocus={true}\n                                                  onChange={(event) => this.setState({words: event.target.value})}\n                                                  placeholder=\"words\"\n                                                  spellCheck={false}\n                                                  rows={5}\n                                                  value={this.state.words}\n                                        />\n                                    </span>\n                                </div>\n\n                            </div>\n                        </div>\n                        <div className=\"modal-footer\">\n                            <button className=\"btn btn-primary btn-block\"  onClick={() => this.handleCancel()}>Cancel</button>\n                            <button className=\"btn btn-primary btn-block\"  onClick={() => this.handleSave()}>Save</button>\n                        </div>\n\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default SynonymEdit;\n","import React from 'react';\n\nimport {SynonymEdit} from \"./synonym-edit\";\n\nimport {connect} from \"react-redux\";\nimport {bindActionCreators} from \"redux\";\nimport {appCreators} from \"../actions/appActions\";\nimport {Pagination} from \"../common/pagination\";\n\n\nexport class Synonyms extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            synonym: {},\n            synonym_edit: false,\n\n            openDialog: props.openDialog,\n            closeDialog: props.closeDialog,\n\n            // pagination\n            page_size: 5,\n            page: 0,\n        };\n    }\n    UNSAFE_componentWillReceiveProps(nextProps) {\n        this.setState({\n            openDialog: nextProps.openDialog,\n            closeDialog: nextProps.closeDialog,\n        });\n    }\n    componentDidCatch(error, info) {\n        this.props.setError(error, info);\n        console.log(error, info);\n    }\n    changePage(page) {\n        this.setState({page: page});\n    }\n    changePageSize(page_size) {\n        this.setState({page_size: page_size});\n    }\n    getSynonymList() {\n        return this.props.synonym_list;\n    }\n    deleteSynonymAsk(synonym) {\n        if (synonym) {\n            this.props.openDialog(\"are you sure you want to remove id \" + synonym.id + \"?<br/><br/>(\" + synonym.words + \")\",\n                                    \"Remove Synonym\", (action) => { this.deleteSynonym(action) });\n            this.setState({synonym: synonym});\n        }\n    }\n    deleteSynonym(action) {\n        if (action && this.state.synonym) {\n            this.props.deleteSynonym(this.state.synonym.id);\n        }\n        if (this.props.closeDialog) {\n            this.props.closeDialog();\n        }\n        this.setState({synonym_edit: false, synonym: {}});\n    }\n    handleSearchTextKeydown(event) {\n        if (event.key === \"Enter\") {\n            this.props.getSynonyms();\n        }\n    }\n    editSynonym(synonym) {\n        this.setState({synonym_edit: true, synonym: synonym});\n    }\n    newSynonym() {\n        this.setState({synonym_edit: true, synonym: {\n                id: \"\",\n                words: \"\",\n            }});\n    }\n    save(synonym) {\n        if (synonym) {\n            if (synonym.words.length > 0 && synonym.words.indexOf(\",\") > 0) {\n                this.props.saveSynonym(synonym);\n                this.setState({synonym_edit: false, synonym: {}});\n            } else {\n                this.props.setError(\"Error Saving Synonym\", \"synonym cannot be empty and need more than one item\");\n            }\n        } else {\n            this.setState({synonym_edit: false, synonym: {}});\n        }\n    }\n    isVisible() {\n        return this.props.selected_organisation_id && this.props.selected_organisation_id.length > 0 &&\n            this.props.selected_organisation && this.props.selected_organisation.length > 0 &&\n            this.props.selected_knowledgebase_id && this.props.selected_knowledgebase_id.length > 0;\n    }\n    render() {\n        const theme = this.props.theme;\n        return (\n            <div>\n                <SynonymEdit open={this.state.synonym_edit}\n                             theme={theme}\n                             synonym={this.state.synonym}\n                             onSave={(item) => this.save(item)}\n                             onError={(err) => this.props.setError(\"Error\", err)} />\n\n                {\n                    this.isVisible() &&\n\n                    <div className=\"filter-find-box\">\n                        <span className=\"filter-label\">find synonyms</span>\n                        <span className=\"filter-find-text\">\n                            <input type=\"text\" value={this.props.synonym_filter} autoFocus={true} className={theme}\n                                   onKeyPress={(event) => this.handleSearchTextKeydown(event)}\n                                   onChange={(event) => {\n                                       this.props.setSynonymFilter(event.target.value)\n                                   }}/>\n                        </span>\n                        <span className=\"filter-find-image\">\n                            <img className=\"image-size\"\n                                 onClick={() => this.props.getSemantics()}\n                                 src=\"../images/dark-magnifying-glass.svg\" title=\"search\" alt=\"search\"/>\n                        </span>\n                    </div>\n                }\n\n                <br clear=\"both\" />\n\n                {\n                    this.isVisible() &&\n                    <div>\n                        <table className=\"table\">\n                            <thead>\n                                <tr className='table-header'>\n                                    <th className='table-header'>id</th>\n                                    <th className='table-header'>synonyms</th>\n                                    <th className='table-header'>actions</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {\n                                    this.getSynonymList().map((synonym) => {\n                                        return (\n                                            <tr key={synonym.id}>\n                                                <td>\n                                                    <div>{synonym.id}</div>\n                                                </td>\n                                                <td>\n                                                    <div>{synonym.words}</div>\n                                                </td>\n                                                <td>\n                                                    <div className=\"link-button\" onClick={() => this.editSynonym(synonym)}>\n                                                        <img src=\"../images/edit.svg\" className=\"image-size\" title=\"edit synonym\" alt=\"edit\"/>\n                                                    </div>\n                                                    <div className=\"link-button\" onClick={() => this.deleteSynonymAsk(synonym)}>\n                                                        <img src=\"../images/delete.svg\" className=\"image-size\" title=\"remove synonym\" alt=\"remove\"/>\n                                                    </div>\n                                                </td>\n                                            </tr>\n                                        )\n                                    })\n                                }\n                                <tr>\n                                    <td/>\n                                    <td/>\n                                    <td>\n                                        {this.isVisible() &&\n                                        <div onClick={() => this.newSynonym()}><img\n                                            className=\"image-size\" src=\"../images/add.svg\" title=\"new synonym\"\n                                            alt=\"new synonym\"/></div>\n                                        }\n                                    </td>\n                                </tr>\n\n                            </tbody>\n\n                        </table>\n\n                        <Pagination\n                            theme={theme}\n                            rowsPerPageOptions={[5, 10, 25]}\n                            component=\"div\"\n                            count={this.props.num_synonyms}\n                            rowsPerPage={this.props.synonym_page_size}\n                            page={this.props.synonym_page}\n                            backIconButtonProps={{\n                                'aria-label': 'Previous Page',\n                            }}\n                            nextIconButtonProps={{\n                                'aria-label': 'Next Page',\n                            }}\n                            onChangePage={(page) => this.props.setSynonymPage(page)}\n                            onChangeRowsPerPage={(rows) => this.props.setSynonymPageSize(rows)}\n                        />\n\n                    </div>\n                }\n\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = function(state) {\n    return {\n        error: state.appReducer.error,\n        error_title: state.appReducer.error_title,\n        theme: state.appReducer.theme,\n\n        synonym_list: state.appReducer.synonym_list,\n        synonym_filter: state.appReducer.synonym_filter,\n        synonym_page: state.appReducer.synonym_page,\n        synonym_page_size: state.appReducer.synonym_page_size,\n        num_synonyms: state.appReducer.num_synonyms,\n\n        selected_organisation_id: state.appReducer.selected_organisation_id,\n        selected_organisation: state.appReducer.selected_organisation,\n        selected_knowledgebase_id: state.appReducer.selected_knowledgebase_id,\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    dispatch => bindActionCreators(appCreators, dispatch)\n)(Synonyms);\n\n","import React, {Component} from 'react';\n\nimport '../css/semantics.css';\n\n\nexport class SemanticEdit extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            has_error: false,\n            open: props.open,\n            semantic: props.semantic,\n            onSave: props.onSave,\n            onError: props.onError,\n            word: props.semantic && props.semantic.word ? props.semantic.word: \"\",\n            semantic_str: props.semantic && props.semantic.semantic ? props.semantic.semantic: \"\",\n        };\n    }\n    componentDidCatch(error, info) {\n        this.setState({ has_error: true });\n        console.log(error, info);\n    }\n    handleSave() {\n        if (this.state.onSave) {\n            this.state.onSave({\"word\": this.state.word, \"prevWord\": \"\", \"semantic\": this.state.semantic_str});\n        }\n    }\n    handleCancel() {\n        if (this.state.onSave) {\n            this.state.onSave(null);\n        }\n    }\n    UNSAFE_componentWillReceiveProps(props) {\n        this.setState({\n            open: props.open,\n            semantic: props.semantic,\n            onSave: props.onSave,\n            onError: props.onError,\n            word: props.semantic && props.semantic.word ? props.semantic.word: \"\",\n            semantic_str: props.semantic && props.semantic.semantic ? props.semantic.semantic: \"\",\n        })\n    }\n    render() {\n        if (this.state.has_error) {\n            return <h1>semantic-edit.js: Something went wrong.</h1>;\n        }\n        if (!this.state.open)\n            return (<div />);\n        return (\n            <div className=\"modal\" tabIndex=\"-1\" role=\"dialog\" style={{display: \"inline\"}}>\n                <div className={\"modal-dialog modal-dialog-centered modal-lg\"} role=\"document\">\n                    <div className=\"modal-content shadow p-3 mb-5 bg-white rounded\">\n\n                        <div className=\"modal-header\">Edit Semantic</div>\n                        <div className=\"modal-body\">\n                            <div>\n\n                                <div className=\"control-row\">\n                                    <span className=\"label-2\">word</span>\n                                    <span className=\"text\">\n                                        <input type=\"text\" className=\"form-control\"\n                                            autoFocus={true}\n                                            onChange={(event) => this.setState({word: event.target.value})}\n                                            placeholder=\"word\"\n                                            value={this.state.word}\n                                        />\n                                    </span>\n                                </div>\n\n                                <div className=\"control-row\">\n                                    <span className=\"label-2\">semantic</span>\n                                    <span className=\"text\">\n                                        <input type=\"text\" className=\"form-control\"\n                                            onChange={(event) => this.setState({semantic_str: event.target.value})}\n                                            placeholder=\"semantic\"\n                                            value={this.state.semantic_str}\n                                        />\n                                    </span>\n                                </div>\n\n                            </div>\n                        </div>\n                        <div className=\"modal-footer\">\n                            <button className=\"btn btn-primary btn-block\"  onClick={() => this.handleCancel()}>Cancel</button>\n                            <button className=\"btn btn-primary btn-block\"  onClick={() => this.handleSave()}>Save</button>\n                        </div>\n\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default SemanticEdit;\n","import React from 'react';\n\nimport {SemanticEdit} from \"./semantic-edit\";\n\nimport {connect} from \"react-redux\";\nimport {bindActionCreators} from \"redux\";\nimport {appCreators} from \"../actions/appActions\";\nimport {Pagination} from \"../common/pagination\";\n\n\nexport class Semantics extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            semantic: {},\n            prev_semantic: {word: \"\", semantic: \"\"},\n            semantic_edit: false,\n\n            openDialog: props.openDialog,\n            closeDialog: props.closeDialog,\n\n            // pagination\n            page_size: 5,\n            page: 0,\n        };\n    }\n    UNSAFE_componentWillReceiveProps(nextProps) {\n        this.setState({\n            openDialog: nextProps.openDialog,\n            closeDialog: nextProps.closeDialog,\n        });\n    }\n    componentDidCatch(error, info) {\n        this.props.setError(error, info);\n        console.log(error, info);\n    }\n    changePage(page) {\n        this.setState({page: page});\n    }\n    changePageSize(page_size) {\n        this.setState({page_size: page_size});\n    }\n    getSemanticList() {\n        return this.props.semantic_list;\n    }\n    deleteSemanticAsk(semantic) {\n        if (semantic) {\n            this.props.openDialog(\"are you sure you want to remove \" + semantic.word + \" is a \" + semantic.semantic + \"?\",\n                \"Remove Semantic\", (action) => { this.deleteSemantic(action) });\n            this.setState({semantic: semantic});\n        }\n    }\n    deleteSemantic(action) {\n        if (action && this.state.semantic) {\n            this.props.deleteSemantic(this.state.semantic.word);\n        }\n        if (this.props.closeDialog) {\n            this.props.closeDialog();\n        }\n        this.setState({semantic_edit: false, semantic: {}});\n    }\n    handleSearchTextKeydown(event) {\n        if (event.key === \"Enter\") {\n            this.props.getSemantics();\n        }\n    }\n    editSemantic(semantic) {\n        this.setState({semantic_edit: true,\n            prev_semantic: {\n                word: semantic.word,\n                semantic: semantic.semantic,\n            },\n            semantic: {\n                word: semantic.word,\n                semantic: semantic.semantic,\n            }});\n    }\n    newSemantic() {\n        this.setState({semantic_edit: true,\n            prev_semantic: {\n                word: \"\",\n                semantic: \"\",\n            },\n            semantic: {\n                word: \"\",\n                semantic: \"\",\n            }});\n    }\n    save(semantic) {\n        if (semantic) {\n            if (semantic.word.length > 0 && semantic.semantic.length > 0) {\n                // delete the previous semantic?\n                if (this.state.prev_semantic.word !== \"\" && this.state.prev_semantic.word !== semantic.word) {\n                    semantic.prevWord = this.state.prev_semantic.word;\n                } else {\n                    semantic.prevWord = '';\n                }\n                this.props.saveSemantic(semantic);\n                this.setState({semantic_edit: false, semantic: {}});\n                if (this.state.closeDialog) {\n                    this.state.closeDialog();\n                }\n            } else {\n                this.props.setError(\"Error Saving Semantic\", \"word and semantic must have a value\");\n            }\n        } else {\n            this.setState({semantic_edit: false, semantic: {}});\n        }\n    }\n    isVisible() {\n        return this.props.selected_organisation_id && this.props.selected_organisation_id.length > 0 &&\n            this.props.selected_organisation && this.props.selected_organisation.length > 0 &&\n            this.props.selected_knowledgebase_id && this.props.selected_knowledgebase_id.length > 0;\n    }\n    render() {\n        const theme = this.props.theme;\n        return (\n            <div>\n                <SemanticEdit open={this.state.semantic_edit}\n                              theme={theme}\n                              semantic={this.state.semantic}\n                              onSave={(item) => this.save(item)}\n                              onError={(err) => this.props.setError(\"Error\", err)} />\n\n                {\n                    this.isVisible() &&\n                    <div className=\"filter-find-box\">\n                        <span className=\"filter-label\">find semantics</span>\n                        <span className=\"filter-find-text\">\n                            <input type=\"text\" value={this.props.semantic_filter} autoFocus={true} className={theme}\n                                   onKeyPress={(event) => this.handleSearchTextKeydown(event)}\n                                   onChange={(event) => {\n                                       this.props.setSemanticFilter(event.target.value);\n                                   }}/>\n                        </span>\n                        <span className=\"filter-find-image\">\n                            <img className=\"image-size\"\n                                 onClick={() => this.props.getSemantics()}\n                                 src=\"../images/dark-magnifying-glass.svg\" title=\"search\" alt=\"search\"/>\n                        </span>\n                    </div>\n                }\n\n                <br clear=\"both\" />\n\n                {\n                    this.isVisible() &&\n                    <div>\n                        <table className=\"table\">\n                            <thead>\n                                <tr className='table-header'>\n                                    <th className='table-header'>word</th>\n                                    <th className='table-header'>semantic</th>\n                                    <th className='table-header'>actions</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {\n                                    this.getSemanticList().map((semantic) => {\n                                        return (\n                                            <tr key={semantic.word + \":\" + semantic.semantic}>\n                                                <td>\n                                                    <div>{semantic.word}</div>\n                                                </td>\n                                                <td>\n                                                    <div>{semantic.semantic}</div>\n                                                </td>\n                                                <td>\n                                                    <div className=\"link-button\" onClick={() => this.editSemantic(semantic)}>\n                                                        <img src=\"../images/edit.svg\" className=\"image-size\" title=\"edit semantic\" alt=\"edit\"/>\n                                                    </div>\n                                                    <div className=\"link-button\" onClick={() => this.deleteSemanticAsk(semantic)}>\n                                                        <img src=\"../images/delete.svg\" className=\"image-size\" title=\"remove semantic\" alt=\"remove\"/>\n                                                    </div>\n                                                </td>\n                                            </tr>\n                                        )\n                                    })\n                                }\n                                <tr>\n                                    <td/>\n                                    <td/>\n                                    <td>\n                                        {this.isVisible() &&\n                                            <div className=\"link-button\" onClick={() => this.newSemantic()}><img\n                                                className=\"image-size\" src=\"../images/add.svg\" title=\"new semantic\" alt=\"new semantic\"/></div>\n                                        }\n                                    </td>\n                                </tr>\n                            </tbody>\n                        </table>\n\n                        <Pagination\n                            theme={theme}\n                            rowsPerPageOptions={[5, 10, 25]}\n                            component=\"div\"\n                            count={this.props.num_semantics}\n                            rowsPerPage={this.props.semantic_page_size}\n                            page={this.props.semantic_page}\n                            onChangePage={(page) => this.props.setSemanticPage(page)}\n                            onChangeRowsPerPage={(rows) => this.props.setSemanticPageSize(rows)}\n                        />\n\n                    </div>\n                }\n\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = function(state) {\n    return {\n        error: state.appReducer.error,\n        error_title: state.appReducer.error_title,\n        theme: state.appReducer.theme,\n\n        semantic_list: state.appReducer.semantic_list,\n        semantic_filter: state.appReducer.semantic_filter,\n        semantic_page: state.appReducer.semantic_page,\n        semantic_page_size: state.appReducer.semantic_page_size,\n        num_semantics: state.appReducer.num_semantics,\n\n        selected_organisation_id: state.appReducer.selected_organisation_id,\n        selected_organisation: state.appReducer.selected_organisation,\n        selected_knowledgebase_id: state.appReducer.selected_knowledgebase_id,\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    dispatch => bindActionCreators(appCreators, dispatch)\n)(Semantics);\n\n","import React, {Component} from 'react';\n\nimport {Api} from '../common/api'\n\nimport '../css/synset.css';\n\n\nexport class SynSetEdit extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            has_error: false,\n            open: props.open,\n            synSet: props.synSet,\n            onSave: props.onSave,\n            onError: props.onError,\n            word: Api.defined(props.synSet) && Api.defined(props.synSet.word) ? props.synSet.word : \"\",\n            cloud_list: SynSetEdit.getWordCloudList(props.synSet),\n        };\n    }\n    componentDidCatch(error, info) {\n        this.setState({ has_error: true });\n        console.log(error, info);\n    }\n    static getWordCloudList(synSet) {\n        let list = [];\n        if (Api.defined(synSet) && Api.defined(synSet.wordCloudCsvList)) {\n            list = synSet.wordCloudCsvList;\n        }\n        while (list.length < 2) {\n            list.push(\"\");\n        }\n        return list;\n    }\n    handleSave() {\n        if (this.state.onSave) {\n            const syn = this.state.synSet;\n            syn.word = this.state.word.trim();\n            syn.wordCloudCsvList = this.state.cloud_list;\n\n            const index = syn.word.indexOf(' ');\n            if (index >= 0) {\n                this.state.onError(\"syn-sets must be a single words without spaces.\")\n            } else {\n                this.state.onSave(syn);\n            }\n        }\n    }\n    handleCancel() {\n        if (this.state.onSave) {\n            this.state.onSave(null);\n        }\n    }\n    UNSAFE_componentWillReceiveProps(props) {\n        this.setState({\n            open: props.open,\n            synSet: props.synSet,\n            onSave: props.onSave,\n            onError: props.onError,\n            word: Api.defined(props.synSet) && Api.defined(props.synSet.word) ? props.synSet.word : \"\",\n            cloud_list: SynSetEdit.getWordCloudList(props.synSet),\n        })\n    }\n    updateWC(index, str) {\n        const cl = this.state.cloud_list;\n        cl[index] = str;\n        this.setState({cloud_list: cl});\n    }\n    newSyn() {\n        const cl = this.state.cloud_list;\n        cl.push(\"\");\n        this.setState({cloud_list: cl});\n    }\n    deleteSyn(index) {\n        const newList = [];\n        const cl = this.state.cloud_list;\n        for (let i = 0; i < cl.length; i++) {\n            if (i !== index) {\n                newList.push(cl[i]);\n            }\n        }\n        this.setState({cloud_list: newList});\n    }\n    render() {\n        if (this.state.has_error) {\n            return <h1>synset-edit.js: Something went wrong.</h1>;\n        }\n        if (!this.state.open)\n            return (<div />);\n        return (\n            <div className=\"modal\" tabIndex=\"-1\" role=\"dialog\" style={{display: \"inline\"}}>\n                <div className={\"modal-dialog modal-dialog-centered modal-xl\"} role=\"document\">\n                    <div className=\"modal-content shadow p-3 mb-5 bg-white rounded\">\n\n                        <div className=\"modal-header\">Edit syn-set \"{this.state.word}\"</div>\n                        <div className=\"modal-body\">\n                            <div>\n\n                                <div className=\"control-row\">\n                                    <span className=\"label-2\">syn-set</span>\n                                    <span className=\"text\">\n                                        <input type=\"text\" className=\"form-control\"\n                                               autoFocus={true}\n                                               onChange={(event) => this.setState({word: event.target.value})}\n                                               placeholder={\"syn-set\"}\n                                               value={this.state.word} />\n                                    </span>\n                                </div>\n\n\n\n\n                                { this.state.cloud_list.map((item, index) => {\n                                    return (\n                                        <div className=\"edit-row\" key={index}>\n                                            <span className=\"label-area\">{\"word cloud \" + (index+1)}</span>\n                                            <span className=\"input-area synset-area-width\">\n                                                <textarea className=\"input-area synset-text-area-width\"\n                                                          onChange={(event) => this.updateWC(index, event.target.value)}\n                                                          placeholder={\"word-cloud for syn-set \" + (index + 1)}\n                                                          rows={2}\n                                                          value={item}\n                                                />\n                                                {\n                                                    index > 1 &&\n                                                    <div className=\"synset-trashcan\"\n                                                         onClick={() => this.deleteSyn(index)}>\n                                                        <img src={this.props.theme === 'light' ? \"../images/delete.svg\" : \"../images/delete-dark.svg\"} className=\"image-size\"\n                                                             title=\"remove syn\" alt=\"remove syn\"/>\n                                                    </div>\n                                                }\n                                            </span>\n                                        </div>)\n                                })}\n\n                                <div className=\"new-syn-button\" onClick={() => this.newSyn()}>\n                                    <img src={this.props.theme === 'light' ? \"../images/add.svg\" : \"../images/add-dark.svg\"} title=\"add a new syn item\"\n                                        className=\"image-size\" alt=\"add a new syn\"/>\n                                </div>\n                            </div>\n\n                        </div>\n                        <div className=\"modal-footer\">\n                            <button className=\"btn btn-primary btn-block\" onClick={() => this.handleCancel()}>Cancel</button>\n                            <button className=\"btn btn-primary btn-block\" onClick={() => this.handleSave()}>Save</button>\n                        </div>\n\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default SynSetEdit;\n","import React from 'react';\n\nimport {SynSetEdit} from \"./synset-edit\";\n\nimport {connect} from \"react-redux\";\nimport {bindActionCreators} from \"redux\";\nimport {appCreators} from \"../actions/appActions\";\nimport {Pagination} from \"../common/pagination\";\n\nimport '../css/synset.css';\n\n\nexport class SynSets extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            synSet: {},\n            synSet_edit: false,\n\n            openDialog: props.openDialog,\n            closeDialog: props.closeDialog,\n        };\n    }\n    UNSAFE_componentWillReceiveProps(nextProps) {\n        this.setState({\n            openDialog: nextProps.openDialog,\n            closeDialog: nextProps.closeDialog,\n        });\n    }\n    componentDidCatch(error, info) {\n        this.props.setError(error, info);\n        console.log(error, info);\n    }\n    deleteSynSetAsk(synSet) {\n        if (synSet) {\n            this.props.openDialog(\"are you sure you want to remove id \" + synSet.word + \"?\",\n                                    \"Remove SynSet\", (action) => { this.deleteSynSet(action) });\n            this.setState({synSet: synSet});\n        }\n    }\n    deleteSynSet(action) {\n        if (action && this.state.synSet) {\n            this.props.deleteSynSet(this.state.synSet.lemma);\n        }\n        if (this.props.closeDialog) {\n            this.props.closeDialog();\n        }\n        this.setState({synSet_edit: false, synSet: {}});\n    }\n    handleSynSetFilterKeydown(event) {\n        if (event.key === \"Enter\") {\n            this.props.findSynSets();\n        }\n    }\n    editSynSet(synSet) {\n        this.setState({synSet_edit: true, synSet: synSet});\n    }\n    newSynSet() {\n        this.setState({synSet_edit: true, synSet: {\n                word: \"\",\n                lemma: \"\",\n                wordCloudCsvList: [],\n            }});\n    }\n    save(synSet) {\n        if (synSet) {\n            if (synSet.word.trim().length > 0 && synSet.wordCloudCsvList.length > 1) {\n                const list = synSet.wordCloudCsvList;\n                let validList = true;\n                for (const item of list) {\n                    if (item.trim().length === 0) {\n                        validList = false;\n                    }\n                }\n                if (validList) {\n                    this.props.saveSynSet(synSet);\n                    this.setState({synSet_edit: false, synSet: {}});\n                } else {\n                    this.props.setError(\"Error Saving SynSet\", \"syn-set word-cloud items must not be empty.\");\n                }\n            } else {\n                this.props.setError(\"Error Saving SynSet\", \"syn-set cannot be empty and need more than one item\");\n            }\n        } else {\n            this.setState({synSet_edit: false, synSet: {}});\n        }\n    }\n    isVisible() {\n        return this.props.selected_organisation_id && this.props.selected_organisation_id.length > 0 &&\n            this.props.selected_organisation && this.props.selected_organisation.length > 0 &&\n            this.props.selected_knowledgebase_id && this.props.selected_knowledgebase_id.length > 0;\n    }\n    render() {\n        const theme = this.props.theme;\n        return (\n            <div className=\"synset-page\">\n                <SynSetEdit open={this.state.synSet_edit}\n                            theme={theme}\n                            synSet={this.state.synSet}\n                            onSave={(item) => this.save(item)}\n                            onError={(err) => this.props.setError(\"Error\", err)} />\n\n                {\n                    this.isVisible() &&\n\n                    <div className=\"filter-find-box\">\n                        <span className=\"filter-label\">find synsets</span>\n                        <span className=\"filter-find-text\">\n                            <input type=\"text\" value={this.props.synset_filter} autoFocus={true}\n                                   onKeyPress={(event) => this.handleSynSetFilterKeydown(event)}\n                                   onChange={(event) => {\n                                       this.props.setSynSetFilter(event.target.value)\n                                   }}/>\n                        </span>\n                        <span className=\"filter-find-image\">\n                            <img className=\"image-size\"\n                                 onClick={() => this.props.findSynSets()}\n                                 src=\"../images/dark-magnifying-glass.svg\" title=\"search\" alt=\"search\"/>\n                        </span>\n                    </div>\n                }\n\n                <br clear=\"both\" />\n\n                {\n                    this.isVisible() &&\n                    <div>\n                        <table className=\"table\">\n                            <thead>\n                                <tr className='table-header'>\n                                    <th className='table-header'>syn-set</th>\n                                    <th className='table-header'>actions</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {\n                                    this.props.synset_list.map((synSet) => {\n                                        return (\n                                            <tr key={synSet.word}>\n                                                <td>\n                                                    <div className=\"synset-label\">{synSet.word}</div>\n                                                </td>\n                                                <td>\n                                                    <div className=\"link-button\" onClick={() => this.editSynSet(synSet)}>\n                                                        <img src=\"../images/edit.svg\" className=\"image-size\" title=\"edit syn-set\" alt=\"edit\"/>\n                                                    </div>\n                                                    <div className=\"link-button\" onClick={() => this.deleteSynSetAsk(synSet)}>\n                                                        <img src=\"../images/delete.svg\" className=\"image-size\" title=\"remove syn-set\" alt=\"remove\"/>\n                                                    </div>\n                                                </td>\n                                            </tr>\n                                        )\n                                    })\n                                }\n                                <tr>\n                                    <td/>\n                                    <td>\n                                        {this.isVisible() &&\n                                        <div className=\"image-button\" onClick={() => this.newSynSet()}><img\n                                            className=\"image-size\" src=\"../images/add.svg\" title=\"new syn-set\"\n                                            alt=\"new syn-set\"/></div>\n                                        }\n                                    </td>\n                                </tr>\n\n                            </tbody>\n\n                        </table>\n\n                        <Pagination\n                            rowsPerPageOptions={[5, 10, 25]}\n                            theme={theme}\n                            component=\"div\"\n                            count={this.props.synset_total_size}\n                            rowsPerPage={this.props.synset_page_size}\n                            page={this.props.synset_page}\n                            onChangePage={(page) => this.props.setSynSetPage(page)}\n                            onChangeRowsPerPage={(rows) => this.props.setSynSetPageSize(rows)}\n                        />\n\n                    </div>\n                }\n\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = function(state) {\n    return {\n        error: state.appReducer.error,\n        error_title: state.appReducer.error_title,\n        theme: state.appReducer.theme,\n\n        synset_list: state.appReducer.synset_list,\n        synset_filter: state.appReducer.synset_filter,\n        synset_page: state.appReducer.synset_page,\n        synset_page_size: state.appReducer.synset_page_size,\n        synset_total_size: state.appReducer.synset_total_size,\n\n        selected_organisation_id: state.appReducer.selected_organisation_id,\n        selected_organisation: state.appReducer.selected_organisation,\n        selected_knowledgebase_id: state.appReducer.selected_knowledgebase_id,\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    dispatch => bindActionCreators(appCreators, dispatch)\n)(SynSets);\n\n","import React from 'react';\n\nimport {connect} from \"react-redux\";\nimport {bindActionCreators} from \"redux\";\nimport {appCreators} from \"../actions/appActions\";\n\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport Api from \"../common/api\";\n\nimport '../css/logs.css';\n\n\nexport class Logs extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            has_error: false,\n            onError : props.onError,\n            openDialog: props.openDialog,\n            closeDialog: props.closeDialog,\n            timer_value: 0,\n        };\n        this.messagesEndRef = React.createRef();\n        this.timer = null;\n    }\n    componentDidCatch(error, info) {\n        this.props.setError(error, info);\n        console.log(error, info);\n    }\n    UNSAFE_componentWillReceiveProps(nextProps) {\n        this.setState({\n            openDialog: nextProps.openDialog,\n            closeDialog: nextProps.closeDialog,\n        });\n    }\n    componentWillUnmount() {\n        if (this.timer != null) {\n            window.clearTimeout(this.timer);\n            this.timer = null;\n        }\n    }\n    componentDidUpdate(prevPops, prevState, snapshot) {\n        this.scrollToBottom()\n        const log_refresh = this.props.log_refresh;\n        if (log_refresh > 0) {\n            if (this.timer == null) {\n                this.timer = window.setTimeout(() => {\n                    this.timer = null; if (this.props.getLogs) this.props.getLogs();\n                }, log_refresh * 1000);\n            }\n        }\n    }\n    scrollToBottom() {\n        if (this.isVisible()) {\n            this.messagesEndRef.current.scrollIntoView({behavior: 'smooth'})\n        }\n    }\n    getClassForType(type) {\n        if (type === 'Debug') return \"log-type-debug\";\n        else if (type === 'Info') return \"log-type-info\";\n        else if (type === 'Error') return \"log-type-error\";\n        else return \"log-type-warn\";\n    }\n    getSelectedHourStyle(selected) {\n        if (selected) return \"log-hour-selector-selected\"\n         else return \"log-hour-selector\";\n    }\n    getHourTitle(hours) {\n        if (hours === 1) return \"display the next one hour after the selected time\";\n        else if (hours === 2) return \"display the next two hours after the selected time\";\n        else if (hours === 4) return \"display the next four hours after the selected time\";\n        else return \"display the next \" + hours + \" hours after the selected time\";\n    }\n    setLogHours(hours) {\n        this.props.setLogHours(hours);\n        this.props.getLogs();\n    }\n    getSelectedServiceStyle(selected) {\n        if (selected) return \"log-service-selector-selected\"\n        else return \"log-service-selector\";\n    }\n    setLogService(log_service) {\n        this.props.setLogService(log_service);\n        this.props.getLogs();\n    }\n    getSelectedLogStyle(selected) {\n        if (selected) return \"log-type-selector-selected\"\n        else return \"log-type-selector\";\n    }\n    setLogType(log_type) {\n        this.props.setLogType(log_type);\n        this.props.getLogs();\n    }\n    getLogRefreshStyle(selected) {\n        if (selected) return \"log-refresh-selector-selected\"\n        else return \"log-refresh-selector\";\n    }\n    setLogRefresh(log_refresh) {\n        this.props.setLogRefresh(log_refresh);\n        this.props.getLogs();\n    }\n    getLogs() {\n        if (this.props.log_list) {\n            const log_type = this.props.log_type;\n            const log_service = this.props.log_service;\n            const list = [];\n            for (let i = 0; i < this.props.log_list.length; i++) {\n                const item = this.props.log_list[i];\n                if ((log_type === 'All' || item.type === log_type) &&\n                    (log_service === 'All' || item.service === log_service)) {\n                    list.push(item);\n                }\n            }\n            return list;\n        }\n        return [];\n    }\n    isVisible() {\n        return this.props.selected_organisation_id && this.props.selected_organisation_id.length > 0;\n    }\n    render() {\n        let date = new Date();\n        if (this.props.log_date) {\n            date = new Date(this.props.log_date);\n        }\n        const theme = this.props.theme;\n        const hours = this.props.log_hours;\n        const log_type = this.props.log_type;\n        const log_service = this.props.log_service;\n        const log_refresh = this.props.log_refresh;\n        if (this.isVisible()) {\n            return (\n                <div className=\"log-page\">\n\n                    <div className=\"date-select\">\n                        <DatePicker\n                            className={theme === \"light\" ? \"wide-date-picker-input\" : \"wide-date-picker-input-dark\"}\n                            selected={date}\n                            dateFormat=\"yyyy/MM/dd HH:mm\"\n                            timeFormat=\"HH:mm\"\n                            showTimeSelect\n                            timeIntervals={60}\n                            todayButton=\"today\"\n                            onChange={date => {\n                                this.props.setLogDate(date);\n                                this.props.getLogs();\n                            }}/>\n                    </div>\n\n                    <div className=\"log-selectors\">\n                        <span title={this.getHourTitle(1)} className={this.getSelectedHourStyle(hours === 1)}\n                              onClick={() => this.setLogHours(1)}>1 hour</span>\n                        <span title={this.getHourTitle(2)} className={this.getSelectedHourStyle(hours === 2)}\n                              onClick={() => this.setLogHours(2)}>2 hours</span>\n                        <span title={this.getHourTitle(4)} className={this.getSelectedHourStyle(hours === 4)}\n                              onClick={() => this.setLogHours(4)}>4 hours</span>\n                        <span title={this.getHourTitle(12)} className={this.getSelectedHourStyle(hours === 12)}\n                              onClick={() => this.setLogHours(12)}>12 hours</span>\n                        <span title={this.getHourTitle(24)} className={this.getSelectedHourStyle(hours === 24)}\n                              onClick={() => this.setLogHours(24)}>24 hours</span>\n                        <span title={this.getHourTitle(48)} className={this.getSelectedHourStyle(hours === 48)}\n                              onClick={() => this.setLogHours(48)}>48 hours</span>\n                        <span className=\"log-spacer\">&nbsp;</span>\n                        <span title=\"display all log-types\" className={this.getSelectedLogStyle(log_type === \"All\")}\n                              onClick={() => this.setLogType(\"All\")}>all</span>\n                        <span title=\"display only 'info' log-types\"\n                              className={this.getSelectedLogStyle(log_type === \"Info\")}\n                              onClick={() => this.setLogType(\"Info\")}>info</span>\n                        <span title=\"display only 'debug' log-types\"\n                              className={this.getSelectedLogStyle(log_type === \"Debug\")}\n                              onClick={() => this.setLogType(\"Debug\")}>debug</span>\n                        <span title=\"display only 'error' log-types\"\n                              className={this.getSelectedLogStyle(log_type === \"Error\")}\n                              onClick={() => this.setLogType(\"Error\")}>error</span>\n                        <span title=\"display only 'warning' log-types\"\n                              className={this.getSelectedLogStyle(log_type === \"Warn\")}\n                              onClick={() => this.setLogType(\"Warn\")}>warn</span>\n                    </div>\n\n                    <div className=\"log-selectors\">\n                        <span title=\"do not automatically refresh the logs\"\n                              className={this.getLogRefreshStyle(log_refresh === 0)}\n                              onClick={() => this.setLogRefresh(0)}>off</span>\n                        <span title=\"automatically refresh this log every five seconds\"\n                              className={this.getLogRefreshStyle(log_refresh === 5)}\n                              onClick={() => this.setLogRefresh(5)}>5 seconds</span>\n                        <span title=\"automatically refresh this log every 10 seconds\"\n                              className={this.getLogRefreshStyle(log_refresh === 10)}\n                              onClick={() => this.setLogRefresh(10)}>10 seconds</span>\n                        <span className=\"log-spacer\">&nbsp;</span>\n                        <span title=\"display logs from all services\"\n                              className={this.getSelectedServiceStyle(log_service === 'All')}\n                              onClick={() => this.setLogService('All')}>all</span>\n                        <span title=\"only display logs from the Auth service\"\n                              className={this.getSelectedServiceStyle(log_service === 'Auth')}\n                              onClick={() => this.setLogService('Auth')}>auth</span>\n                        <span title=\"only display logs from the Conversion service\"\n                              className={this.getSelectedServiceStyle(log_service === 'Conversion')}\n                              onClick={() => this.setLogService('Conversion')}>conv</span>\n                        <span title=\"only display logs from the Crawler service\"\n                              className={this.getSelectedServiceStyle(log_service === 'Crawler')}\n                              onClick={() => this.setLogService('Crawler')}>crawl</span>\n                        <span title=\"only display logs from the Document service\"\n                              className={this.getSelectedServiceStyle(log_service === 'Document')}\n                              onClick={() => this.setLogService('Document')}>doc</span>\n                        <span title=\"only display logs from the Index service\"\n                              className={this.getSelectedServiceStyle(log_service === 'Index')}\n                              onClick={() => this.setLogService('Index')}>index</span>\n                        <span title=\"only display logs from the Knowledgebase service\"\n                              className={this.getSelectedServiceStyle(log_service === 'KB')}\n                              onClick={() => this.setLogService('KB')}>kb</span>\n                        <span title=\"only display logs from the Language service\"\n                              className={this.getSelectedServiceStyle(log_service === 'Language')}\n                              onClick={() => this.setLogService('Language')}>lang</span>\n                        <span title=\"only display logs from the Mind service\"\n                              className={this.getSelectedServiceStyle(log_service === 'Mind')}\n                              onClick={() => this.setLogService('Mind')}>mind</span>\n                        <span title=\"only display logs from the Operator service\"\n                              className={this.getSelectedServiceStyle(log_service === 'Operator')}\n                              onClick={() => this.setLogService('Operator')}>operator</span>\n                        <span title=\"only display logs from the Search service\"\n                              className={this.getSelectedServiceStyle(log_service === 'Search')}\n                              onClick={() => this.setLogService('Search')}>search</span>\n                        <span title=\"only display logs from the Statistics service\"\n                              className={this.getSelectedServiceStyle(log_service === 'Stats')}\n                              onClick={() => this.setLogService('Stats')}>stats</span>\n                        <span title=\"only display logs from the Web service\"\n                              className={this.getSelectedServiceStyle(log_service === 'Web')}\n                              onClick={() => this.setLogService('Web')}>web</span>\n                    </div>\n\n                    <div className=\"log-files\">\n                        {\n                            this.getLogs().map((line) => {\n                                return (<div className=\"log-line\" id={line.created}>\n                                    <span\n                                        className={'log-type-width ' + this.getClassForType(line.type)}>{line.type}</span>\n                                    <span className='log-service-width'>{line.service}</span>\n                                    <span className='log-time-width'>{Api.unixTimeConvert(line.created)}</span>\n                                    <span>{line.message}</span>\n                                </div>)\n                            })\n                        }\n                        <div ref={this.messagesEndRef}/>\n                    </div>\n\n                </div>\n            )\n        } else {\n            return (<div />)\n        }\n    }\n}\n\nconst mapStateToProps = function(state) {\n    return {\n        error: state.appReducer.error,\n        error_title: state.appReducer.error_title,\n\n        theme: state.appReducer.theme,\n\n        selected_knowledgebase_id: state.appReducer.selected_knowledgebase_id,\n        selected_organisation_id: state.appReducer.selected_organisation_id,\n\n        log_date: state.appReducer.log_date,\n        log_list: state.appReducer.log_list,\n        log_hours: state.appReducer.log_hours,\n        log_type: state.appReducer.log_type,\n        log_service: state.appReducer.log_service,\n        log_refresh: state.appReducer.log_refresh,\n\n        user: state.appReducer.user,\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    dispatch => bindActionCreators(appCreators, dispatch)\n)(Logs);\n\n","import React from 'react';\n\nimport {Bar, Line} from 'react-chartjs-2'\n\nimport {GraphHelper} from \"../common/graph-helper\";\n\nimport {connect} from \"react-redux\";\nimport {bindActionCreators} from \"redux\";\nimport {appCreators} from \"../actions/appActions\";\n\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport Comms from \"../common/comms\";\n\nimport '../css/reports.css';\n\n\nconst graphHeight = 350;\nconst graphWidth = 400;\n\n\nexport class Reports extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            has_error: false,\n            onError : props.onError,\n\n            openDialog: props.openDialog,\n            closeDialog: props.closeDialog,\n        };\n    }\n    componentDidCatch(error, info) {\n        this.props.setError(error, info);\n        console.log(error, info);\n    }\n    UNSAFE_componentWillReceiveProps(nextProps) {\n        this.setState({\n            openDialog: nextProps.openDialog,\n            closeDialog: nextProps.closeDialog,\n        });\n    }\n    componentDidMount() {\n    }\n    downloadReport() {\n        const date = new Date(this.props.report_date);\n        const year = date.getFullYear();\n        const month1 = date.getMonth() + 1;\n        Comms.download_query_log(this.props.selected_organisation_id, this.props.selected_knowledgebase_id, year, month1);\n    }\n    isVisible() {\n        return this.props.selected_organisation_id && this.props.selected_organisation_id.length > 0 &&\n            this.props.selected_organisation && this.props.selected_organisation.length > 0 &&\n            this.props.selected_knowledgebase_id && this.props.selected_knowledgebase_id.length > 0;\n    }\n    render() {\n        const date = new Date(this.props.report_date);\n        const theme = this.props.theme;\n        return (\n            <div className=\"report-page\">\n                { this.isVisible() &&\n                <div>\n                <br clear=\"both\" />\n                <div className=\"download-button\">\n                    <button className=\"btn btn-primary btn-block\"  onClick={() => this.downloadReport()}>download report</button>\n                </div>\n                <div className=\"date-select\">\n                    <DatePicker\n                        className={theme === \"light\" ? \"date-picker-input\" : \"date-picker-input-dark\"}\n                        selected={date}\n                        dateFormat=\"yyyy/MM\"\n                        todayButton=\"today\"\n                        showMonthYearPicker\n                        onChange={date => {\n                            this.props.setReportDate(date);\n                            this.props.getReports();\n                        }} />\n                </div>\n                <br clear=\"both\" />\n                </div>\n                }\n\n                <div className=\"bar-graphs\">\n                    {\n                        this.isVisible() && this.props.general_statistics.map( (stats) => {\n                            return (<div key={stats.id} className=\"bar-graph\">\n                                <Bar data={stats} options={GraphHelper.getGraphOptions('')} width={graphWidth} height={graphHeight}/>\n                            </div>)\n                        })\n                    }\n\n                    {\n                        this.isVisible() && this.props.file_type_statistics.map( (stats) => {\n                            return (<div key={stats.id} className=\"bar-graph\">\n                                <Bar data={stats} options={GraphHelper.getGraphOptions('')} width={graphWidth} height={graphHeight}/>\n                            </div>)\n                        })\n                    }\n\n                    {\n                        this.isVisible() && this.props.query_word_frequency.map( (stats) => {\n                            return (<div key={stats.id} className=\"bar-graph\">\n                                <Bar data={stats} options={GraphHelper.getGraphOptions('queries')} width={graphWidth} height={graphHeight}/>\n                            </div>)\n                        })\n                    }\n\n                    {\n                        this.isVisible() && this.props.access_frequency.labels.length > 0 &&\n                        <div className=\"bar-graph\">\n                            <Line data={this.props.access_frequency}\n                                  options={GraphHelper.getGraphOptions('access count')} width={graphWidth}\n                                  height={graphHeight}/>\n                        </div>\n                    }\n\n                </div>\n\n            </div>\n        );\n    }\n};\n\nconst mapStateToProps = function(state) {\n    return {\n        error: state.appReducer.error,\n        error_title: state.appReducer.error_title,\n        theme: state.appReducer.theme,\n\n        selected_knowledgebase_id: state.appReducer.selected_knowledgebase_id,\n        selected_organisation_id: state.appReducer.selected_organisation_id,\n        selected_organisation: state.appReducer.selected_organisation,\n\n        report_date: state.appReducer.report_date,\n        access_frequency: state.appReducer.access_frequency,\n        general_statistics: state.appReducer.general_statistics,\n        query_word_frequency: state.appReducer.query_word_frequency,\n        file_type_statistics: state.appReducer.file_type_statistics,\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    dispatch => bindActionCreators(appCreators, dispatch)\n)(Reports);\n\n","import React, {Component} from 'react';\n\n\nexport class OperatorTeach extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            has_error: false,\n            links: '',\n        };\n    }\n    componentDidCatch(error, info) {\n        this.setState({ has_error: true });\n        console.log(error, info);\n    }\n    handleSave() {\n        if (this.props.onSave) {\n            let links = this.state.links.replace(/\\n/g, ' ');\n            links = links.replace(/\\r/g, ' ');\n            links = links.replace(/\\t/g, ' ');\n            this.props.onSave(true, links);\n        }\n    }\n    handleCancel() {\n        if (this.props.onSave) {\n            this.props.onSave(false, '');\n        }\n    }\n    render() {\n        if (this.state.has_error) {\n            return <h1>operator-teach.js: Something went wrong.</h1>;\n        }\n        if (!this.props.open)\n            return (<div />);\n        return (\n            <div className=\"modal\" tabIndex=\"-1\" role=\"dialog\" style={{display: \"inline\"}}>\n                <div className={\"modal-dialog modal-dialog-centered modal-xl\"} role=\"document\">\n                    <div className=\"modal-content shadow p-3 mb-5 bg-white rounded\">\n\n                        <div className=\"modal-header\">Teach SimSage?</div>\n                        <div className=\"modal-body\">\n                            <div>\n\n                                <div>question</div>\n                                <div>\n                                    {this.props.question}\n                                </div>\n\n                                <div>answer</div>\n                                <div>\n                                    {this.props.answer}\n                                </div>\n\n                                <div>links</div>\n                                <div>\n                                    <textarea\n                                        onChange={(event) => this.setState({links: event.target.value})}\n                                        placeholder=\"links (images and page-links, separated by commas or spaces)\"\n                                        rows={5}\n                                        value={this.state.links}\n                                    />\n                                </div>\n\n                            </div>\n                        </div>\n                        <div className=\"modal-footer\">\n                            <button className=\"btn btn-primary btn-block\"  onClick={() => this.handleCancel()}>Cancel</button>\n                            <button className=\"btn btn-primary btn-block\"  onClick={() => this.handleSave()}>Save</button>\n                        </div>\n\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default OperatorTeach;\n","import React, {Component} from 'react';\n\nimport '../css/operator.css';\n\n\nexport class OperatorPreviousAnswer extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            has_error: false,\n            open: props.open,\n            onSave: props.onSave,\n            onError: props.onError,\n        };\n    }\n    componentDidCatch(error, info) {\n        this.setState({ has_error: true });\n        console.log(error, info);\n    }\n    UNSAFE_componentWillReceiveProps(nextProps) {\n        this.setState({\n            open: nextProps.open,\n        })\n    }\n    handleSave() {\n        if (this.state.onSave) {\n            this.state.onSave(true);\n        }\n    }\n    handleCancel() {\n        if (this.state.onSave) {\n            this.state.onSave(false);\n        }\n    }\n    render() {\n        if (this.state.has_error) {\n            return <h1>operator-previous-answer.js: Something went wrong.</h1>;\n        }\n        if (!this.state.open)\n            return (<div />);\n        return (\n            <div className=\"modal\" tabIndex=\"-1\" role=\"dialog\" style={{display: \"inline\"}}>\n                <div className={\"modal-dialog modal-dialog-centered modal-xl\"} role=\"document\">\n                    <div className=\"modal-content shadow p-3 mb-5 bg-white rounded operator-display\">\n\n                        <div className=\"modal-header\">Use Previous Answer?</div>\n                        <div className=\"modal-body\">\n                            <div>SimSage has a previous answer to the question: <div className=\"questionStyle\">{this.props.question}</div></div>\n                            <div>SimSage's answer was:</div>\n                            <div className=\"answerStyle\">{this.props.answer}</div>\n                        </div>\n                        <div className=\"modal-footer\">\n                            <button className=\"btn btn-primary btn-block\"  onClick={() => this.handleCancel()}>Cancel</button>\n                            <button className=\"btn btn-primary btn-block\"  onClick={() => this.handleSave()}>Use this Answer</button>\n                        </div>\n\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default OperatorPreviousAnswer;\n","import React, {Component} from 'react';\n\n\nexport class MicrophoneIcon extends Component {\n    render() {\n        return (\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" className=\"bi bi-mic-fill\"\n                 viewBox=\"0 0 16 16\">\n                <path d=\"M5 3a3 3 0 0 1 6 0v5a3 3 0 0 1-6 0V3z\"/>\n                <path\n                    d=\"M3.5 6.5A.5.5 0 0 1 4 7v1a4 4 0 0 0 8 0V7a.5.5 0 0 1 1 0v1a5 5 0 0 1-4.5 4.975V15h3a.5.5 0 0 1 0 1h-7a.5.5 0 0 1 0-1h3v-2.025A5 5 0 0 1 3 8V7a.5.5 0 0 1 .5-.5z\"/>\n            </svg>\n        )\n    }\n}\n","import React, {Component} from 'react';\n\n\nexport class CupIcon extends Component {\n    render() {\n        return (\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" className=\"bi bi-cup-fill\"\n                 viewBox=\"0 0 16 16\">\n                <path\n                    d=\"M1 2a1 1 0 0 1 1-1h11a1 1 0 0 1 1 1v1h.5A1.5 1.5 0 0 1 16 4.5v7a1.5 1.5 0 0 1-1.5 1.5h-.55a2.5 2.5 0 0 1-2.45 2h-8A2.5 2.5 0 0 1 1 12.5V2zm13 10h.5a.5.5 0 0 0 .5-.5v-7a.5.5 0 0 0-.5-.5H14v8z\"/>\n            </svg>\n        )\n    }\n}\n","import React, {Component} from 'react';\n\n\nexport class PersonCrossIcon extends Component {\n    render() {\n        return (\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" className=\"bi bi-person-x-fill\"\n                 viewBox=\"0 0 16 16\">\n                <path fillRule=\"evenodd\"\n                      d=\"M1 14s-1 0-1-1 1-4 6-4 6 3 6 4-1 1-1 1H1zm5-6a3 3 0 1 0 0-6 3 3 0 0 0 0 6zm6.146-2.854a.5.5 0 0 1 .708 0L14 6.293l1.146-1.147a.5.5 0 0 1 .708.708L14.707 7l1.147 1.146a.5.5 0 0 1-.708.708L14 7.707l-1.146 1.147a.5.5 0 0 1-.708-.708L13.293 7l-1.147-1.146a.5.5 0 0 1 0-.708z\"/>\n            </svg>\n        )\n    }\n}\n","import React, {Component} from 'react';\n\n\nexport class PersonIcon extends Component {\n    render() {\n        return (\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" className=\"bi bi-person-circle\"\n                 viewBox=\"0 0 16 16\">\n                <path d=\"M11 6a3 3 0 1 1-6 0 3 3 0 0 1 6 0z\"/>\n                <path fillRule=\"evenodd\"\n                      d=\"M0 8a8 8 0 1 1 16 0A8 8 0 0 1 0 8zm8-7a7 7 0 0 0-5.468 11.37C3.242 11.226 4.805 10 8 10s4.757 1.225 5.468 2.37A7 7 0 0 0 8 1z\"/>\n            </svg>\n        )\n    }\n}\n","import React from 'react';\n\nimport OperatorTeach from \"./operator-teach\";\nimport OperatorPreviousAnswer from './operator-previous-answer'\nimport Home from '../home'\nimport Api from '../common/api'\n\nimport {connect} from \"react-redux\";\nimport {bindActionCreators} from \"redux\";\nimport {appCreators} from \"../actions/appActions\";\nimport {MicrophoneIcon} from \"../icons/microphone-icon\";\nimport {CupIcon} from \"../icons/cup-icon\";\nimport {PersonCrossIcon} from \"../icons/person-cross\";\nimport {PersonIcon} from \"../icons/person-icon\";\n\nimport '../css/operator.css';\n\n\nexport class Operator extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            operator_reply: '', // operator text\n            last_time: 0,\n        };\n        this.messagesEndRef = React.createRef();\n    }\n    componentDidMount() {\n        window.setInterval(() => this.checkClientTyping(), 1000);\n    }\n    componentDidCatch(error, info) {\n        console.log(error, info);\n        this.props.setError(error, info);\n    }\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        this.scrollToBottom();\n    }\n    readyForChat() {\n        const data = {\n            sessionId: this.props.session.id,\n            operatorId: this.props.operator.id,\n            organisationId: this.props.selected_organisation_id,\n            userId: this.props.user.id,\n        };\n        this.props.sendOperatorMessage('/ops/ready', data);\n        this.props.operatorReady(this.props.operator.id, true);\n    }\n    isTyping() {\n        const last_time = this.state.last_time;\n        const curr_time = Api.getSystemTime();\n        if (last_time < curr_time) {\n            this.setState({last_time: curr_time + 2000});\n            if (this.props.operator.client_id && this.props.operator.id) {\n                const data = {\n                    fromId: this.props.operator.id,\n                    toId: this.props.operator.client_id,\n                    isTyping: true\n                };\n                this.props.sendOperatorMessage('/ops/typing', data);\n            }\n        }\n    }\n    checkClientTyping() {\n        // signal the client is no longer typing?  (on a timer, see mounted)\n        if (this.props.operator && this.props.operator.is_typing &&\n            this.props.operator.typing_time < Api.getSystemTime()) {\n            this.props.stopClientTyping(this.props.operator.id);\n        }\n    }\n    takeBreak() {\n        const data = {\n            sessionId: this.props.session.id,\n            operatorId: this.props.operator.id,\n            organisationId: this.props.selected_organisation_id,\n            clientId: this.props.operator.client_id,\n        };\n        this.props.sendOperatorMessage('/ops/take-break', data);\n        this.props.operatorReady(this.props.operator.id, false);\n    }\n    nextUser() {\n        const data = {\n            sessionId: this.props.session.id,\n            operatorId: this.props.operator.id,\n            organisationId: this.props.selected_organisation_id,\n            clientId: this.props.operator.client_id,\n        };\n        this.props.sendOperatorMessage('/ops/next-user', data);\n        this.props.clearUser(this.props.operator.id);\n    }\n    banUserConfirm() {\n        if (this.props.operator.client_id && this.props.operator.client_id.length > 0) {\n            this.props.openDialog(\"are you sure you want to ban this user?\",\n                \"Ban User\", (action) => {\n                    this.banUser(action)\n                });\n        }\n    }\n    banUser(act) {\n        if (act) {\n            const data = {\n                sessionId: this.props.session.id,\n                operatorId: this.props.operator.id,\n                organisationId: this.props.selected_organisation_id,\n                clientId: this.props.operator.client_id,\n            };\n            this.props.sendOperatorMessage('/ops/ban-user', data);\n            this.props.clearUser(this.props.operator.id);\n        }\n        if (this.props.closeDialog) {\n            this.props.closeDialog();\n        }\n    }\n    operatorReply(text) {\n        if (this.props.operator.client_id.length > 0 && text.length > 0) {\n            const data = {\n                sessionId: this.props.session.id,\n                operatorId: this.props.operator.id,\n                organisationId: this.props.selected_organisation_id,\n                clientId: this.props.operator.client_id,\n                kbId: this.props.operator.client_kb_id,\n                text: text,\n            };\n            this.props.sendOperatorMessage('/ops/chat', data);\n\n            // add a new conversation to the list\n            this.props.addConversation(this.props.operator.id, {id: this.props.operator.conversation_list.length + 1, primary: text,\n                                        secondary: \"You\", used: false, is_simsage: true});\n\n            this.setState({operator_reply: ''});\n        }\n    }\n    selectForLearn(item) {\n        if (item && item.is_simsage) {\n            if (item.id === this.props.operator.answer_id)\n                this.props.setOperatorAnswer(this.props.operator.id, '', '');\n            else\n                this.props.setOperatorAnswer(this.props.operator.id, item.id, item.primary);\n        } else if (item) {\n            if (item.id === this.props.operator.question_id)\n                this.props.setOperatorQuestion(this.props.operator.id, '', '');\n            else\n                this.props.setOperatorQuestion(this.props.operator.id, item.id, item.primary);\n        }\n    }\n    teachSimSage(teach, links) {\n        if (teach) {\n            if (this.props.operator.client_id.length > 0 && this.props.operator.question.length > 0 &&\n                this.props.operator.answer.length > 0) {\n                const data = {\n                    sessionId: this.props.session.id,\n                    operatorId: this.props.operator.id,\n                    organisationId: this.props.selected_organisation_id,\n                    clientId: this.props.operator.client_id,\n                    kbId: this.props.operator.client_kb_id,\n                    text: this.props.operator.question,\n                    answer: this.props.operator.answer,\n                    links: links,\n                };\n                this.props.sendOperatorMessage('/ops/teach', data);\n\n                // mark these two items as used\n                const conversation_list = this.props.operator.conversation_list;\n                for (const item of conversation_list) {\n                    if (item.id === this.props.operator.question_id || item.id === this.props.operator.answer_id) {\n                        this.props.markConversationItemUsed(this.props.operator.id, item.id);\n                    }\n                }\n            }\n        }\n        this.props.setOperatorAnswer(this.props.operator.id, '', '');\n        this.props.setOperatorQuestion(this.props.operator.id, '', '');\n    }\n    usePreviousQuestion(use) {\n        if (use && this.props.operator.prev_answer.length > 0) {\n            this.operatorReply(this.props.operator.prev_answer);\n        }\n        this.props.clearPreviousAnswer(this.state.operator.id);\n    }\n    getAvatarStyle(item) {\n        const theme = this.props.theme;\n        var add_text = \"\";\n        if (theme !== 'light') {\n            add_text = \"-dark\";\n        }\n        if (item.is_simsage) {\n            if (item.id === this.props.operator.answer_id || item.used) {\n                return \"operator-text-box-selected\" + add_text;\n            } else {\n                return \"operator-text-box\" + add_text;\n            }\n        } else {\n            if (item.id === this.props.operator.question_id || item.used) {\n                return \"user-text-selected\" + add_text;\n            } else {\n                return \"user-text\" + add_text;\n            }\n        }\n    }\n    scrollToBottom = () => {\n        this.messagesEndRef.current.scrollIntoView({ behavior: 'smooth' })\n    }\n    render() {\n        const isOperator = Home.hasRole(this.props.user, ['operator']);\n        const active = this.props.operator.operator_ready && this.props.operator_connected && isOperator;\n        const isReady = this.props.operator.operator_ready || !this.props.operator_connected;\n        const has_user = this.props.operator.client_id && this.props.operator.client_id.length > 0;\n        const operatorButtonStyle = this.props.theme === 'light' ? \"operator-buttons-top\" : \"operator-buttons-top-dark\";\n        return (\n            <div className=\"operator-display\">\n                <OperatorTeach\n                    open={this.props.operator.question_id !== '' && this.props.operator.answer_id !== ''}\n                    theme={this.props.theme}\n                    question={this.props.operator.question}\n                    onSave={(teach, links) => this.teachSimSage(teach, links)}\n                    answer={this.props.operator.answer}\n                    />\n\n                <OperatorPreviousAnswer\n                    open={this.props.operator.current_question !== '' && this.props.operator.prev_answer !== ''}\n                    theme={this.props.theme}\n                    question={this.props.operator.current_question}\n                    onSave={(use) => this.usePreviousQuestion(use)}\n                    answer={this.props.operator.prev_answer}\n                />\n\n                <div className={operatorButtonStyle}>\n                    <button className=\"operator-button\" disabled={isReady}\n                            title={isReady ? \"Disabled, click 'Break' top stop any conversations.\" : \"Signal that you are ready to go and converse with customers.\"}\n                            onClick={() => this.readyForChat()}>\n                        <MicrophoneIcon />\n                        <span className=\"operator-button-text\">Ready</span>\n                    </button>\n\n                    <button className=\"operator-button\" disabled={!active}\n                            title={!active ? \"Disabled, click Ready before you take a break.\" : \"take a break, stop participating in conversations while you have a break.\"}\n                            onClick={() => this.takeBreak()}>\n                        <CupIcon />\n                        <span className=\"operator-button-text\">Break</span>\n                    </button>\n\n                    <button className=\"operator-button operator-button-margin-left\" disabled={!has_user}\n                            title={!has_user ? \"Disabled, you aren't currently connected to any user.\" : \"The current conversation is abusive or bad spirited, ban this user from the system.\"}\n                            onClick={() => this.banUserConfirm()}>\n                        <PersonCrossIcon />\n                        <span className=\"operator-button-text\">Ban User</span>\n                    </button>\n\n                    <button className=\"operator-button operator-button-margin-left\" disabled={!has_user}\n                            title={!has_user ? \"Disabled, you aren't currently connected to any users.\" : \"We have finished the current conversation and are ready for a next one.\"}\n                            onClick={() => this.nextUser()}>\n                        <PersonIcon />\n                        <span className=\"operator-button-text\">End Chat</span>\n                    </button>\n\n                    {\n                        this.props.operator.client_kb_name && this.props.operator.client_kb_name.length > 0 &&\n                        <div className=\"kb-name\">{this.props.operator.client_kb_name}</div>\n                    }\n\n\n                </div>\n\n                <div className=\"operator-conversation-area\">\n                    {this.props.operator.conversation_list.map((item) => {\n                        return (\n                            <div key={item.id} className={item.is_simsage ? \"operator-box\" : \"user-box\"} onClick={() => {if (active) this.selectForLearn(item)}}>\n                                <div className={item.is_simsage ? \"operator-line\" : \"user-line\"}>\n                                    <span className=\"user-label\">{item.is_simsage ? \"You\" : \"User\"}</span>\n                                    <span className=\"hyphen\">-</span>\n                                    <span className=\"time\">{Api.unixTimeConvert(item.created)}</span>\n                                </div>\n                                <div className={this.getAvatarStyle(item)}>{item.primary}</div>\n                            </div>\n                        )\n                    })}\n                    {this.props.operator.is_typing &&\n                        <div>\n                        <img src=\"../images/dots.gif\" className=\"typing-dots\" alt=\"typing\" />\n                        </div>\n                    }\n                    <div ref={this.messagesEndRef} />\n                </div>\n\n                <div className=\"operator-reply-area\">\n                    <span className=\"operator-reply-text-box\">\n                        <input type=\"text\"\n                            title={!has_user ? \"Disabled, you aren't in a chat with a user.\" : \"Type your reply and press enter, or click the 'Reply' button.\"}\n                            className=\"operator-reply-text\"\n                            onChange={(event) => this.setState({operator_reply: event.target.value})}\n                            disabled={!has_user}\n                            onKeyPress={(event) => {\n                                if (event.key === \"Enter\") {\n                                    this.operatorReply(this.state.operator_reply);\n                                }\n                                this.isTyping();\n                            }}\n                            value={this.state.operator_reply}\n                        />\n                    </span>\n                    <span className=\"operator-reply-button-box\">\n                        <button disabled={!has_user} className=\"operator-button\"\n                                title={!has_user ? \"Disabled, you aren't in a chat with a user.\" : \"Send the text you've typed to the user (or press enter in the reply field).\"}\n                                onClick={() => this.operatorReply(this.state.operator_reply)}>\n                            Reply\n                        </button>\n                    </span>\n                </div>\n\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = function(state) {\n    return {\n        error: state.appReducer.error,\n        error_title: state.appReducer.error_title,\n        theme: state.appReducer.theme,\n\n        session: state.appReducer.session,\n        user: state.appReducer.user,\n\n        operator_connected: state.appReducer.operator_connected,\n        num_active_connections: state.appReducer.num_active_connections,\n\n        selected_organisation_id: state.appReducer.selected_organisation_id,\n    }\n};\n\nexport default connect(\n    mapStateToProps,\n    dispatch => bindActionCreators(appCreators, dispatch)\n)(Operator);\n\n","import React, {Component} from 'react';\n\n\nexport class PeopleIcon extends Component {\n    render() {\n        return (\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" className=\"bi bi-people-fill\"\n                 viewBox=\"0 0 16 16\">\n                <path d=\"M7 14s-1 0-1-1 1-4 5-4 5 3 5 4-1 1-1 1H7zm4-6a3 3 0 1 0 0-6 3 3 0 0 0 0 6z\"/>\n                <path fillRule=\"evenodd\"\n                      d=\"M5.216 14A2.238 2.238 0 0 1 5 13c0-1.355.68-2.75 1.936-3.72A6.325 6.325 0 0 0 5 9c-4 0-5 3-5 4s1 1 1 1h4.216z\"/>\n                <path d=\"M4.5 8a2.5 2.5 0 1 0 0-5 2.5 2.5 0 0 0 0 5z\"/>\n            </svg>\n        )\n    }\n}\n","import React, {Component} from 'react';\n\n\nexport class PlusIcon extends Component {\n    render() {\n        return (\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" className=\"bi bi-file-plus-fill\"\n                 viewBox=\"0 0 16 16\">\n                <path\n                    d=\"M12 0H4a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2h8a2 2 0 0 0 2-2V2a2 2 0 0 0-2-2zM8.5 6v1.5H10a.5.5 0 0 1 0 1H8.5V10a.5.5 0 0 1-1 0V8.5H6a.5.5 0 0 1 0-1h1.5V6a.5.5 0 0 1 1 0z\"/>\n            </svg>\n        )\n    }\n}\n","import React from 'react';\n\nimport Operator from \"./operator\";\n\nimport {MAX_OPERATORS} from '../actions/actions';\n\nimport {connect} from \"react-redux\";\nimport {bindActionCreators} from \"redux\";\nimport {appCreators} from \"../actions/appActions\";\nimport {PeopleIcon} from \"../icons/people-icon\";\nimport {PlusIcon} from \"../icons/plus-icon\";\n\nimport '../css/operator.css';\n\n\nexport class OperatorTabs extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            selectedTab: 1,\n        };\n    }\n    componentDidCatch(error, info) {\n        console.log(error, info);\n        this.props.setError(error, info);\n    }\n    takeBreak(operator) {\n        if (operator && operator.id) {\n            const data = {\n                sessionId: this.props.session.id,\n                operatorId: operator.id,\n                organisationId: this.props.selected_organisation_id,\n                clientId: operator.client_id,\n            };\n            this.props.sendOperatorMessage('/ops/take-break', data);\n            this.props.operatorReady(operator.id, false);\n        }\n    }\n    render() {\n        const dark = this.props.theme === 'light' ? \"\" : \"-dark\";\n        return (\n            <div className=\"operator-display\">\n\n                <div>\n                    {\n                        this.props.operators && this.props.operators.map((operator, index) => {\n                            return (<span key={'tab' + (index + 1)} className={(index+1) === this.state.selectedTab ? \"operator-tab-selected\" + dark : \"operator-tab\" + dark}>\n                                        <span title={'Conversation ' + (index+1)}\n                                              onClick={()=> this.setState({selectedTab: index+1})}>{'Conversation ' + (index + 1)}\n                                        </span>\n                                        {index > 0 &&\n                                        <span key={'tab_close' + (index + 1)} className=\"operator-close-conversation-button\"\n                                              title=\"Close and remove this conversation.\"\n                                              onClick={() => {\n                                                  this.takeBreak(operator);\n                                                  this.setState({selectedTab: 1});\n                                                  this.props.removeOperator(operator.id);\n                                              }}>\n                                                <span className=\"operator-close-conversation-text\">&times;</span>\n                                            </span>\n                                        }\n                                    </span>);\n                        })\n                    }\n                </div>\n                {\n                    this.props.operators && this.props.operators.length < MAX_OPERATORS &&\n                    <div className=\"add-button\" onClick={() => this.props.addOperator()} title=\"add Chat\">\n                        <PlusIcon />\n                        <span className=\"max-text\">(Max {MAX_OPERATORS} chats)</span>\n                        <span className=\"add-text\">Add Chat&nbsp;</span>\n                    </div>\n                }\n\n                <div className=\"kbName\"><PeopleIcon /> <span className=\"bot_text\">{this.props.num_active_connections} active users</span></div>\n\n\n                {\n                    this.props.operators && this.props.operators.map((operator, index) => {\n                        if ((index + 1) === this.state.selectedTab) {\n                            return (<Operator\n                                    key={'display' + (index + 1)}\n                                    operator={operator}\n                                    isFirst={index === 0}\n                                    onCloseTab={() => this.setState({selectedTab: 1})}\n                                    openDialog={(message, title, callback) => this.props.openDialog(message, title, callback)}\n                                    closeDialog={() => this.props.closeDialog()} />);\n                        } else {\n                            return (<div key={'display' + (index + 1)} />);\n                        }\n                    })\n                }\n\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = function(state) {\n    return {\n        error: state.appReducer.error,\n        error_title: state.appReducer.error_title,\n        theme: state.appReducer.theme,\n\n        session: state.appReducer.session,\n        user: state.appReducer.user,\n        num_active_connections: state.appReducer.num_active_connections,\n        selected_organisation_id: state.appReducer.selected_organisation_id,\n\n        operators: state.appReducer.operators,\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    dispatch => bindActionCreators(appCreators, dispatch)\n)(OperatorTabs);\n\n","import React, {Component} from 'react';\n\nimport TimeSelect from '../common/time-select'\nimport Api from \"../common/api\";\n\nimport '../css/domain-dialog.css';\n\nexport class DomainDialog extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            open: props.open,\n\n            onSave: props.onSave,  // save callback\n            onTest: props.onTest,   // test button callback\n            onUpdate: props.onUpdate, // update callback\n\n            onError: props.onError,\n            error_title: props.error_title,\n            error_msg: props.error_msg,\n\n            selectedTab: 'general',\n\n            // organisational details\n            organisation_id: props.organisation_id,\n            kb_id: props.kb_id,\n            edge_device_list: this.props.edge_device_list,\n\n            ...this.construct_data(props.domain),\n\n            has_error: false,\n        }\n    }\n\n    componentDidCatch(error, info) {\n        this.setState({has_error: true});\n        console.log(error, info);\n    }\n\n    UNSAFE_componentWillReceiveProps(nextProps) {\n        if (nextProps !== null) {\n            if (nextProps.domain) {\n                this.setState({\n                    open: nextProps.open,\n                    title: nextProps.title,\n\n                    onSave: nextProps.onSave,\n                    onUpdate: nextProps.onUpdate,\n                    onTest: nextProps.onTest,\n\n                    onError: nextProps.onError,\n                    error_title: nextProps.error_title,\n                    error_msg: nextProps.error_msg,\n\n                    organisation_id: nextProps.organisation_id,\n                    kb_id: nextProps.kb_id,\n                    edge_device_list: nextProps.edge_device_list,\n\n                    ...this.construct_data(nextProps.domain)\n                });\n\n            } else {\n                this.setState({\n                    open: nextProps.open,\n                    title: nextProps.title,\n\n                    onSave: nextProps.onSave,\n                    onError: nextProps.onError,\n                });\n            }\n        }\n    }\n\n    change_callback(data) {\n        this.setState(data);\n    }\n\n    construct_data(domain) {\n        if (domain) {\n            return {\n                organisationId: '', kbId: '',\n                domainId: Api.defined(domain.domainId) ? domain.domainId : '',\n                domainName: Api.defined(domain.domainName) ? domain.domainName : '',\n                userName: Api.defined(domain.userName) ? domain.userName : '',\n                password: Api.defined(domain.password) ? domain.password : '',\n                serverIp: Api.defined(domain.serverIp) ? domain.serverIp : '',\n                basePath: Api.defined(domain.basePath) ? domain.basePath : '',\n                portNumber: Api.defined(domain.portNumber) ? domain.portNumber : 389,\n                sslOn: Api.defined(domain.sslOn) ? domain.sslOn : false,\n                schedule: Api.defined(domain.schedule) ? domain.schedule : '',\n                edgeDeviceId: Api.defined(domain.edgeDeviceId) ? domain.edgeDeviceId : '',\n            }\n        } else {\n            return {\n                organisationId: '', kbId: '',\n                domainId: '', domainName: '',\n                userName: '', password: '',\n                serverIp: '', basePath: '',\n                portNumber: 389, sslOn: false,\n                schedule: '', edgeDeviceId: '',\n            }\n        }\n    }\n\n    gather_data() {\n        return {\n            organisationId: '', kbId: '',\n            domainId: this.state.domainId,\n            domainName: this.state.domainName,\n            userName: this.state.userName,\n            password: this.state.password,\n            serverIp: this.state.serverIp,\n            basePath: this.state.basePath,\n            portNumber: this.state.portNumber,\n            sslOn: this.state.sslOn,\n            schedule: this.state.schedule,\n            edgeDeviceId: this.state.edgeDeviceId,\n        }\n    }\n\n    setError(title, error_msg) {\n        if (this.props.onError) {\n            this.props.onError(title, error_msg);\n        }\n    }\n\n    handleCancel() {\n        if (this.state.onSave) {\n            this.state.onSave(null);\n        }\n        this.setState({open: false});\n    };\n\n    handleSave() {\n        if (this.state.userName.trim().length === 0 && (\n            this.state.password.trim().length === 0 ||\n            this.state.domainName.trim().length === 0 ||\n            this.state.serverIp.trim().length === 0 ||\n            this.state.portNumber.trim().length === 0 ||\n            this.state.basePath.trim().length === 0)) {\n\n            this.setError('invalid parameters', 'you must supply credentials, and domain details using all fields.');\n\n        } else {\n            if (this.state.onSave) {\n                this.state.onSave(this.gather_data());\n            }\n        }\n    }\n\n    testConnection() {\n        if (this.state.userName.trim().length === 0 && (\n            this.state.password.trim().length === 0 ||\n            this.state.domainName.trim().length === 0 ||\n            this.state.serverIp.trim().length === 0 ||\n            this.state.portNumber.trim().length === 0 ||\n            this.state.basePath.trim().length === 0)) {\n\n            this.setError('invalid parameters', 'you must supply credentials, and domain details using all fields.');\n\n        } else {\n            if (this.state.onTest) {\n                this.state.onTest(this.gather_data());\n            }\n        }\n    }\n\n    updateSchedule(time) {\n        if (time !== null) {\n            this.setState({schedule: time});\n            if (this.state.onUpdate) {\n                this.state.onUpdate({...this.gather_data(), \"schedule\": time});\n            }\n        }\n    }\n\n    filteredEdgeDevices() {\n        let list = [{\"key\": \"none\", \"value\": \"n/a\"}];\n        if (this.props.edge_device_list) {\n            for (let edge_device of this.props.edge_device_list) {\n                if (edge_device.organisationId === this.state.organisation_id && edge_device.edgeId) {\n                    list.push({\"key\": edge_device.edgeId, \"value\": edge_device.name});\n                }\n            }\n        }\n        return list;\n    }\n\n    render() {\n        if (this.state.has_error) {\n            return <h1>domain-dialog.js: Something went wrong.</h1>;\n        }\n        const theme = this.props.theme;\n        const tabStyle = (theme === 'light' ? '.tab' : 'tab_dark');\n        const t_value = this.state.selectedTab;\n        if (!this.state.open) {\n            return (<div />);\n        }\n        return (\n            <div className=\"domain-dialog\">\n                <div className=\"modal\" tabIndex=\"-1\" role=\"dialog\" style={{display: \"inline\"}}>\n                    <div className={\"modal-dialog modal-dialog-centered modal-xl \" + tabStyle} role=\"document\">\n                        <div className=\"modal-content shadow p-3 mb-5 bg-white rounded domain-dialog-height\">\n                            <div className=\"modal-header\">\n                                <h5 className={\"modal-title \" + theme}>{this.props.title}</h5>\n                                <button type=\"button\" className=\"btn btn-primary btn-block close\"  onClick={() => this.handleCancel()}\n                                        data-dismiss=\"modal\" aria-label=\"Close\">\n                                    <span aria-hidden=\"true\">&times;</span>\n                                </button>\n                            </div>\n                            <div className=\"modal-body\">\n\n                                <ul className=\"nav nav-tabs\">\n                                    <li className=\"nav-item nav-cursor\">\n                                        <div className={\"nav-link \" + (this.state.selectedTab === 'general' ? 'active' : '')}\n                                            onClick={() => this.setState({selectedTab: 'general'})}>general</div>\n                                    </li>\n                                    <li className=\"nav-item nav-cursor\">\n                                        <div className={\"nav-link \" + (this.state.selectedTab === 'schedule' ? 'active' : '')}\n                                             onClick={() => this.setState({selectedTab: 'schedule'})}>schedule</div>\n                                    </li>\n                                </ul>\n\n                                {t_value === 'general' &&\n                                <div className=\"domain-page\">\n\n                                    <div className=\"control-row\">\n                                        <span className=\"label-2\">domain name</span>\n                                        <span className=\"text\">\n                                            <form>\n                                                <input type=\"text\"\n                                                    autoFocus={true}\n                                                    aria-placeholder=\"domain name\"\n                                                    value={this.state.domainName}\n                                                    onChange={(event) => {this.change_callback({domainName: event.target.value})}}\n                                                    className=\"form-control\"\n                                                    />\n                                            </form>\n                                        </span>\n                                    </div>\n\n                                    <div className=\"control-row\">\n                                        <span className=\"label-2\">user name</span>\n                                        <span className=\"text\">\n                                            <form>\n                                                <input type=\"text\"\n                                                       aria-placeholder=\"user name\"\n                                                       value={this.state.userName}\n                                                       onChange={(event) => {this.change_callback({userName: event.target.value})}}\n                                                       className=\"form-control\"\n                                                    />\n                                            </form>\n                                        </span>\n                                    </div>\n\n                                    <div className=\"control-row\">\n                                        <span className=\"label-2\">password</span>\n                                        <span className=\"text\">\n                                            <form>\n                                                <input type=\"password\"\n                                                   aria-placeholder=\"password (leave blank not to change)\"\n                                                   value={this.state.password}\n                                                   onChange={(event) => {this.change_callback({password: event.target.value})}}\n                                                   className=\"form-control\"\n                                                />\n                                            </form>\n                                        </span>\n                                    </div>\n\n                                    <div className=\"control-row\">\n                                        <span className=\"label-2\">domain ip</span>\n                                        <span className=\"text\">\n                                            <form>\n                                                <input type=\"text\"\n                                                   aria-placeholder=\"domain ip-address\"\n                                                   value={this.state.serverIp}\n                                                   onChange={(event) => {this.change_callback({serverIp: event.target.value})}}\n                                                   className=\"form-control\"\n                                                />\n                                            </form>\n                                        </span>\n                                    </div>\n\n                                    <div className=\"control-row\">\n                                        <span className=\"label-2\">domain base path</span>\n                                        <span className=\"text\">\n                                            <form>\n                                                <input type=\"text\"\n                                                   aria-placeholder=\"domain base-path (e.g. dc=my-domain,dc=co,dc=uk)\"\n                                                   value={this.state.basePath}\n                                                   onChange={(event) => {this.change_callback({basePath: event.target.value})}}\n                                                   className=\"form-control\"\n                                                />\n                                            </form>\n                                        </span>\n                                    </div>\n\n                                    <div className=\"control-row\">\n                                        <span className=\"label-2\">port number</span>\n                                        <span className=\"text\">\n                                            <form>\n                                                <input type=\"text\"\n                                                   aria-placeholder=\"Active Directory port-number\"\n                                                   value={this.state.portNumber}\n                                                   onChange={(event) => {this.change_callback({portNumber: event.target.value})}}\n                                                   className=\"form-control\"\n                                                />\n                                            </form>\n                                        </span>\n                                    </div>\n\n                                    <div className=\"control-row\">\n                                        <span className=\"label-2\">edge device</span>\n                                        <span className=\"text\">\n                                            <form>\n                                                <select\n                                                    value={this.state.edgeDeviceId !== '' ? this.state.edgeDeviceId : 'none'}\n                                                    onChange={(event) => {\n                                                        this.change_callback({edgeDeviceId: event.target.value})\n                                                    }}>\n                                                {\n                                                    this.filteredEdgeDevices().map((value) => {\n                                                        return (<option key={value.key} value={value.key}>{value.value}</option>)\n                                                    })\n                                                }\n                                                </select>\n                                            </form>\n                                        </span>\n                                    </div>\n\n\n                                    <div className=\"control-row\">\n                                        <span className=\"label-2\">SSL?</span>\n                                        <span className=\"short-checkbox\">\n                                            <input type=\"checkbox\"\n                                                   checked={this.state.sslOn}\n                                                   onChange={(event) => {\n                                                       if (!event.target.checked) {\n                                                           this.change_callback({sslOn: false});\n                                                       } else {\n                                                           this.change_callback({sslOn: event.target.checked});\n                                                       }\n                                                   }}\n                                                   value=\"enable Active Directory SSL?\"\n                                            />\n                                        </span>\n                                        <span className=\"explanation-label\">Check this box if you want the enable SSL communications with the Active Directory server.</span>\n                                    </div>\n\n                                    <div className=\"control-box\">\n                                        <button className=\"btn btn-primary btn-block\" onClick={() => this.testConnection()}>Test Connection</button>\n                                    </div>\n\n                                </div>\n                                }\n\n\n                                {t_value === 'schedule' &&\n                                    <div className=\"time-tab-content\">\n                                        <TimeSelect time={this.state.schedule}\n                                                    onSave={(time) => this.updateSchedule(time)}/>\n                                    </div>\n                                }\n\n                            </div>\n                            <div className=\"modal-footer\">\n                                <button type=\"button\" className=\"btn btn-primary btn-block\" onClick={() => this.handleCancel()} data-dismiss=\"modal\">cancel</button>\n                                <button type=\"button\" className=\"btn btn-primary btn-block\" onClick={() => this.handleSave()}>save</button>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default DomainDialog;\n","import React, {Component} from 'react';\n\nimport {DomainDialog} from './domain_dialog'\n\nimport {connect} from \"react-redux\";\nimport {bindActionCreators} from \"redux\";\nimport {appCreators} from \"../actions/appActions\";\n\nimport '../css/domains.css';\nimport {Pagination} from \"../common/pagination\";\n\nconst empty_domain= {domainId: '', domainName: '', userName: '', password: '', serverIp: '', basePath: '', portNumber: 389, sslOn: false, schedule: '' };\n\n\nexport class Domains extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            // pagination\n            page_size: 5,\n            page: 0,\n            // dialog\n            open: false,\n            title: 'Create new domain',\n            selected_domain: {},\n            domain_ask: null,\n        };\n    }\n    componentDidCatch(error, info) {\n        this.props.setError(error, info);\n        console.log(error, info);\n    }\n    changePage(page) {\n        this.setState({page: page});\n    }\n    changePageSize(page_size) {\n        this.setState({page_size: page_size});\n    }\n    getDomains() {\n        const paginated_list = [];\n        const first = this.state.page * this.state.page_size;\n        const last = first + this.state.page_size;\n        for (const i in this.props.domain_list) {\n            if (i >= first && i < last) {\n                paginated_list.push(this.props.domain_list[i]);\n            }\n        }\n        return paginated_list;\n    }\n    addNewDomain() {\n        this.setState({open: true, selected_domain: empty_domain, title: 'Create new domain'});\n    }\n    onUpdate(domain) {\n        this.setState({selected_domain: domain});\n    }\n    editDomain(domain) {\n        if (domain) {\n            this.setState({open: true, selected_domain: { ...empty_domain, ...domain}, title: 'Edit domain'});\n        }\n    }\n    deleteDomainAsk(domain) {\n        this.setState({domain_ask: domain});\n        this.props.openDialog(\"are you sure you want to remove the domain named <b>\" + domain.domainName + \"</b>?\",\n            \"Remove Domain\", (action) => { this.deleteDomain(action) });\n    }\n    deleteDomain(action) {\n        if (action && this.state.domain_ask && this.state.domain_ask.domainId) {\n            this.props.deleteDomain(this.state.domain_ask.domainId);\n        }\n        if (this.props.closeDialog) {\n            this.props.closeDialog();\n        }\n    }\n    saveDomain(domain) {\n        if (domain) {\n            domain.organisationId = this.props.selected_organisation_id;\n            domain.kbId = this.props.selected_knowledgebase_id;\n            this.props.updateDomain(domain);\n        }\n        this.setState({open: false});\n    }\n    testDomain(domain) {\n        if (domain) {\n            domain.organisationId = this.props.selected_organisation_id;\n            domain.kbId = this.props.selected_knowledgebase_id;\n            this.setState({selected_domain: domain});\n            this.props.testDomain(domain);\n        }\n    }\n    isVisible() {\n        return this.props.selected_organisation_id && this.props.selected_organisation_id.length > 0 &&\n            this.props.selected_organisation && this.props.selected_organisation.length > 0 &&\n            this.props.selected_knowledgebase_id && this.props.selected_knowledgebase_id.length > 0;\n    }\n    render() {\n        const theme = this.props.theme;\n        return (\n            <div>\n                <DomainDialog\n                    open={this.state.open}\n                    title={this.state.title}\n                    theme={theme}\n                    organisation_id={this.props.selected_organisation_id}\n                    kb_id={this.props.selected_knowledgebase_id}\n                    edge_device_list={this.props.edge_device_list}\n                    onSave={(domain) => this.saveDomain(domain)}\n                    onTest={(domain) => this.testDomain(domain)}\n                    onUpdate={(domain) => this.onUpdate(domain)}\n                    onError={(title, errStr) => this.props.setError(title, errStr)}\n                    error_title={this.props.error_title}\n                    error_msg={this.props.error}\n                    domain={this.state.selected_domain}\n                />\n\n                {\n                    this.isVisible() &&\n\n                    <div className=\"page-width\">\n                        <table className=\"table\">\n                            <thead>\n                                <tr className='table-header'>\n                                    <th scope=\"col\" className='table-header'>name</th>\n                                    <th scope=\"col\" className='table-header'>path</th>\n                                    <th scope=\"col\" className='table-header'>objects</th>\n                                    <th scope=\"col\" className='table-header'>actions</th>\n                                </tr>\n                            </thead>\n                            <tbody className={theme === 'light' ? \"table-light\" : \"table-dark\"}>\n                                {\n                                    this.getDomains().map((domain) => {\n                                        return (\n                                            <tr key={domain.domainId}>\n                                                <td>\n                                                    <div className=\"label\">{domain.domainName}</div>\n                                                </td>\n                                                <td>\n                                                    <div className=\"label\">{domain.basePath}</div>\n                                                </td>\n                                                <td>\n                                                    <div className=\"label\">{domain.numObjects}</div>\n                                                </td>\n                                                <td>\n                                                    <div className=\"label-button\" onClick={() => this.editDomain(domain)}>\n                                                        <img src=\"../images/edit.svg\" className=\"download-image\" title=\"edit domain\" alt=\"edit\"/>\n                                                    </div>\n                                                    <div className=\"label-button\" onClick={() => this.deleteDomainAsk(domain)}>\n                                                        <img src=\"../images/delete.svg\" className=\"download-image\" title=\"remove domain\" alt=\"remove\"/>\n                                                    </div>\n                                                </td>\n                                            </tr>\n                                        )\n                                    })\n                                }\n                                <tr>\n                                    <td/>\n                                    <td/>\n                                    <td/>\n                                    <td>\n                                        {this.props.selected_organisation_id.length > 0 && this.props.selected_knowledgebase_id.length > 0 &&\n                                        <div className=\"image-button\" onClick={() => this.addNewDomain()}><img\n                                            className=\"add-image\" src=\"../images/add.svg\" title=\"add new domain\"\n                                            alt=\"add new domain\"/></div>\n                                        }\n                                    </td>\n                                </tr>\n                            </tbody>\n                        </table>\n\n                        <Pagination\n                            theme={theme}\n                            rowsPerPageOptions={[5, 10, 25]}\n                            component=\"div\"\n                            count={this.props.domain_list.length}\n                            rowsPerPage={this.state.page_size}\n                            page={this.state.page}\n                            backIconButtonProps={{\n                                'aria-label': 'Previous Page',\n                            }}\n                            nextIconButtonProps={{\n                                'aria-label': 'Next Page',\n                            }}\n                            onChangePage={(page) => this.changePage(page)}\n                            onChangeRowsPerPage={(rows) => this.changePageSize(rows)}\n                        />\n\n                    </div>\n                }\n\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = function(state) {\n    return {\n        error: state.appReducer.error,\n        error_title: state.appReducer.error_title,\n\n        selected_organisation_id: state.appReducer.selected_organisation_id,\n        selected_organisation: state.appReducer.selected_organisation,\n        selected_knowledgebase_id: state.appReducer.selected_knowledgebase_id,\n        edge_device_list: state.appReducer.edge_device_list,\n        domain_list: state.appReducer.domain_list,\n        theme: state.appReducer.theme,\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    dispatch => bindActionCreators(appCreators, dispatch)\n)(Domains);\n","import React, {Component} from 'react';\n\nimport '../css/user-selector.css';\n\n\n// select users from a list of available ones\nexport class UserSelector extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            has_error: false,\n            userIdList: props.user_id_List ? props.user_id_List: [],\n            selectedFilter: '',\n            availableFilter: '',\n        };\n    }\n    UNSAFE_componentWillReceiveProps(props) {\n        this.setState({\n            userIdList: props.user_id_List ? props.user_id_List: [],\n        })\n    }\n    componentDidCatch(error, info) {\n        this.setState({ has_error: true });\n        console.log(error, info);\n    }\n    update_parent(user_id_list) {\n        if (this.props.onChange) {\n            this.props.onChange(user_id_list);\n        }\n    }\n    getUserMap() {\n        const map = {};\n        const user_list = this.getAllUsers();\n        for (const user of user_list) {\n            map[user.id] = user;\n        }\n        return map;\n    }\n    getUserFullName(user) {\n        return user.email;\n    }\n    removeUserFromGroup(user_id) {\n        const new_users = [];\n        for (const e_user_id of this.state.userIdList) {\n            if (e_user_id !== user_id) {\n                new_users.push(e_user_id);\n            }\n        }\n        this.setState({userIdList: new_users});\n        this.update_parent(new_users);\n    }\n    addUserToGroup(user_id) {\n        const userIdList = JSON.parse(JSON.stringify(this.state.userIdList));\n        userIdList.push(user_id);\n        this.setState({userIdList: userIdList});\n        this.update_parent(userIdList);\n    }\n    getAllUsers() {\n        return this.props.user_list ? this.props.user_list : [];\n    }\n    getAvailableUsers() {\n        const list = [];\n        const filter = this.state.availableFilter.trim().toLowerCase();\n        for (const user of this.getAllUsers()) {\n            let found = false;\n            for (const e_user_id of this.state.userIdList) {\n                if (user.id === e_user_id) {\n                    found = true;\n                }\n            }\n            if (!found) {\n                const user_name = this.getUserFullName(user);\n                if (filter.length === 0 || user_name.toLowerCase().indexOf(filter) >= 0)\n                    list.push(user);\n            }\n        }\n        return list;\n    }\n    getSelectedUsers() {\n        const user_map = this.getUserMap();\n        const user_id_list = this.state.userIdList ? this.state.userIdList : [];\n        const user_list = [];\n        const filter = this.state.selectedFilter.trim().toLowerCase();\n        for (const user_id of user_id_list) {\n            const user = user_map[user_id];\n            if (user && user.id) {\n                const user_name = this.getUserFullName(user);\n                if (filter.length === 0 || user_name.toLowerCase().indexOf(filter) >= 0)\n                    user_list.push(user);\n            }\n        }\n        return user_list;\n    }\n    selectAll() {\n        const new_users = [];\n        for (const user of this.getAllUsers()) {\n            new_users.push(user.id);\n        }\n        this.setState({userIdList: new_users});\n        this.update_parent(new_users);\n    }\n    clearAll() {\n        this.setState({userIdList: []});\n        this.update_parent([]);\n    }\n    render() {\n        if (this.state.has_error) {\n            return <h1>user-selector.js: Something went wrong.</h1>;\n        }\n        return (\n            <div>\n\n                <div className=\"role-block\">\n                    <div className=\"role-label\">selected users\n                        <span className=\"filter-label\">filter </span>\n                        <span className=\"filter-text-box\"><input type=\"text\" className=\"filter-text\" value={this.state.selectedFilter}\n                                                                 onChange={(event) => { this.setState({selectedFilter: event.target.value})}} />\n                            <span className=\"clear\" title=\"clear filter\" onClick={() => this.setState({selectedFilter: ''})}>&times;</span>\n                        </span>\n                    </div>\n                    <div className=\"role-area\">\n                        {\n                            this.getSelectedUsers().map((user) => {\n                                const user_name = this.getUserFullName(user);\n                                return (<div key={user.id} className=\"user-name\" onClick={() => this.removeUserFromGroup(user.id)} title={user_name}>\n                                    <span className=\"user-group-image-box\"><img className=\"user-group-image\" src=\"../images/user.svg\" alt=\"user\"/></span><span>{user_name}</span>\n                                </div>)\n                            })\n                        }\n                    </div>\n                </div>\n\n                <div className=\"role-controls\">\n                    <div className=\"button\" title=\"move all to selected users\" onClick={() => this.selectAll()}>&lt;&lt;</div>\n                    <div className=\"button\" title=\"move all to available users\" onClick={() => this.clearAll()}>&gt;&gt;</div>\n                </div>\n\n                <div className=\"role-block\">\n                    <div className=\"role-label\">available users\n                        <span className=\"filter-label\">filter </span>\n                        <span className=\"filter-text-box\"><input type=\"text\" className=\"filter-text\" value={this.state.availableFilter}\n                                                                 onChange={(event) => { this.setState({availableFilter: event.target.value})}} />\n                            <span className=\"clear\" title=\"clear filter\" onClick={() => this.setState({availableFilter: ''})}>&times;</span>\n                        </span>\n                    </div>\n                    <div className=\"role-area\">\n                        {\n                            this.getAvailableUsers().map((user) => {\n                                const user_name = this.getUserFullName(user);\n                                return (<div key={user.id} className=\"user-name\" onClick={() => this.addUserToGroup(user.id)} title={user_name}>\n                                    <span className=\"user-group-image-box\"><img className=\"user-group-image\" src=\"../images/user.svg\" alt=\"user\"/></span><span>{user_name}</span>\n                                </div>)\n                            })\n                        }\n                    </div>\n                </div>\n\n            </div>\n        );\n    }\n}\n\nexport default UserSelector;\n","import React, {Component} from 'react';\n\nimport UserSelector from \"../common/user-selector\";\n\n\nexport class GroupEdit extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            has_error: false,\n            open: props.open,\n\n            onSave: props.onSave,\n            onError: props.onError,\n\n            name: props.group && props.group.name ? props.group.name : \"\",\n            userIdList: props.group && props.group.userIdList ? props.group.userIdList: [],\n        };\n    }\n    componentDidCatch(error, info) {\n        this.setState({ has_error: true });\n        console.log(error, info);\n    }\n    getAllUsers() {\n        return this.props.user_list ? this.props.user_list : [];\n    }\n    getUserMap() {\n        const map = {};\n        const user_list = this.getAllUsers();\n        for (const user of user_list) {\n            map[user.id] = user;\n        }\n        return map;\n    }\n    handleSave() {\n        if (this.state.onSave) {\n            const final_user_id_list = [];\n            const user_map = this.getUserMap();\n            for (const user_id of this.state.userIdList) {\n                const user = user_map[user_id];\n                if (user && user.id) {\n                    final_user_id_list.push(user_id);\n                }\n            }\n            this.state.onSave({\"name\": this.state.name, \"userIdList\": final_user_id_list});\n        }\n    }\n    handleCancel() {\n        if (this.state.onSave) {\n            this.state.onSave(null);\n        }\n    }\n    UNSAFE_componentWillReceiveProps(props) {\n        this.setState({\n            open: props.open,\n            onSave: props.onSave,\n            onError: props.onError,\n\n            name: props.group && props.group.name ? props.group.name : \"\",\n            userIdList: props.group && props.group.userIdList ? props.group.userIdList: [],\n        })\n    }\n\n    render() {\n        if (this.state.has_error) {\n            return <h1>group-edit.js: Something went wrong.</h1>;\n        }\n        if (!this.state.open)\n            return (<div />);\n        return (\n            <div className=\"modal\" tabIndex=\"-1\" role=\"dialog\" style={{display: \"inline\"}}>\n                <div className={\"modal-dialog modal-dialog-centered modal-xl\"} role=\"document\">\n                    <div className=\"modal-content shadow p-3 mb-5 bg-white rounded\">\n\n                        <div className=\"modal-header\">Edit Group</div>\n                        <div className=\"modal-body\">\n                            <div>\n\n                                <div className=\"control-row\">\n                                    <span className=\"label-2\">group name</span>\n                                    <span className=\"text\">\n                                        <input type=\"text\" className=\"form-control\"\n                                            autoFocus={true}\n                                            onChange={(event) => this.setState({name: event.target.value})}\n                                            placeholder=\"name\"\n                                            value={this.state.name}\n                                        />\n                                    </span>\n                                </div>\n\n\n                                <UserSelector\n                                    user_list={this.props.user_list}\n                                    user_id_List={this.state.userIdList}\n                                    onChange={(user_id_list) => this.setState({userIdList: user_id_list})}\n                                />\n\n                            </div>\n                        </div>\n                        <div className=\"modal-footer\">\n                            <button className=\"btn btn-primary btn-block\" onClick={() => this.handleCancel()}>Cancel</button>\n                            <button className=\"btn btn-primary btn-block\" onClick={() => this.handleSave()}>Save</button>\n                        </div>\n\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default GroupEdit;\n","import React from 'react';\n\nimport GroupEdit from \"./group-edit\";\n\nimport {connect} from \"react-redux\";\nimport {bindActionCreators} from \"redux\";\nimport {appCreators} from \"../actions/appActions\";\nimport {Pagination} from \"../common/pagination\";\n\nimport '../css/groups.css';\n\n\nexport class Groups extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            group_edit: false,\n            group: {name: '', userIdList: []},\n            openDialog: props.openDialog,\n            closeDialog: props.closeDialog,\n        };\n    }\n    UNSAFE_componentWillReceiveProps(nextProps) {\n        this.setState({\n            openDialog: nextProps.openDialog,\n            closeDialog: nextProps.closeDialog,\n        });\n    }\n    componentDidCatch(error, info) {\n        this.props.setError(error, info);\n        console.log(error, info);\n    }\n    getGroupList() {\n        const start = this.props.group_page * this.props.group_page_size;\n        const end = start + this.props.group_page_size;\n        // filter groups?\n        let list = this.props.group_list;\n        const filter = this.props.group_filter.trim().toLowerCase();\n        if (filter && filter.length > 0) {\n            const new_list = [];\n            for (const group of list) {\n                console.log(group);\n                if (group.name.toLowerCase().indexOf(filter) >= 0) {\n                    new_list.push(group);\n                }\n            }\n            list = new_list;\n        }\n        const final_list = [];\n        for (let i = start; i < end; i++) {\n            if (i < list.length) {\n                final_list.push(list[i]);\n            }\n        }\n        return {list: final_list, size: list.length};\n    }\n    deleteGroupAsk(group) {\n        if (group) {\n            this.props.openDialog(\"are you sure you want to remove \\\"\" + group.name + \"\\\"?\",\n                \"Remove Group\", (action) => { this.deleteGroup(action) });\n            this.setState({group: group});\n        }\n    }\n    deleteGroup(action) {\n        if (action && this.state.group) {\n            this.props.deleteGroup(this.state.group.name);\n        }\n        if (this.props.closeDialog) {\n            this.props.closeDialog();\n        }\n        this.setState({group_edit: false, group: {}});\n    }\n    handleSearchTextKeydown(event) {\n        if (event.key === \"Enter\") {\n            this.props.getGroups();\n        }\n    }\n    editGroup(group) {\n        this.setState({group_edit: true,\n            group: {\n                name: group.name,\n                userIdList: group.userIdList,\n            }});\n    }\n    newGroup() {\n        this.setState({group_edit: true,\n            group: {\n                name: \"\",\n                userIdList: [],\n            }});\n    }\n    save(group) {\n        if (group) {\n            if (group.name && group.name.trim().length > 0) {\n                this.props.saveGroup(group.name, group.userIdList);\n                this.setState({group_edit: false, group: {}});\n                if (this.state.closeDialog) {\n                    this.state.closeDialog();\n                }\n            } else {\n                this.props.setError(\"Error Saving Group\", \"group must have a valid name\");\n            }\n        } else {\n            this.setState({group_edit: false, group: {}});\n        }\n    }\n    isVisible() {\n        return this.props.selected_organisation_id && this.props.selected_organisation_id.length > 0;\n    }\n    render() {\n        const theme = this.props.theme;\n        const groups = this.getGroupList();\n        return (\n            <div className=\"group-display\">\n                <GroupEdit open={this.state.group_edit}\n                              theme={theme}\n                              group={this.state.group}\n                              user_list={this.props.user_list}\n                              onSave={(item) => this.save(item)}\n                              onError={(err) => this.props.setError(\"Error\", err)} />\n\n                {\n                    this.isVisible() &&\n                    <div className=\"filter-find-box\">\n                        <span className=\"filter-label\">find synonyms</span>\n                        <span className=\"filter-find-text\">\n                            <input type=\"text\" value={this.props.group_filter} autoFocus={true} className={theme}\n                                   onKeyPress={(event) => this.handleSearchTextKeydown(event)}\n                                   onChange={(event) => {\n                                       this.props.setGroupFilter(event.target.value);\n                                   }}/>\n                        </span>\n                        <span className=\"filter-find-image\">\n                            <img className=\"image-size\"\n                                 onClick={() => this.props.getGroups()}\n                                 src=\"../images/dark-magnifying-glass.svg\" title=\"search\" alt=\"search\"/>\n                        </span>\n                    </div>\n                }\n\n\n                <br clear=\"both\" />\n\n                {\n                    this.isVisible() &&\n                    <div>\n                        <table className=\"table\">\n                            <thead>\n                                <tr className='table-header'>\n                                    <th className='table-header'>group name</th>\n                                    <th className='table-header'>actions</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {\n                                    groups.list.map((group) => {\n                                        return (\n                                            <tr key={group.name}>\n                                                <td>\n                                                    <div className=\"label user-group-align-left\">{group.name}</div>\n                                                </td>\n                                                <td>\n                                                    <div className=\"link-button\" onClick={() => this.editGroup(group)}>\n                                                        <img src=\"../images/edit.svg\" className=\"image-size\" title=\"edit group\" alt=\"edit\"/>\n                                                    </div>\n                                                    <div className=\"link-button\" onClick={() => this.deleteGroupAsk(group)}>\n                                                        <img src=\"../images/delete.svg\" className=\"image-size\" title=\"remove group\" alt=\"remove\"/>\n                                                    </div>\n                                                </td>\n                                            </tr>\n                                        )\n                                    })\n                                }\n                                <tr>\n                                    <td/>\n                                    <td>\n                                        {this.isVisible() &&\n                                        <div className=\"image-button\" onClick={() => this.newGroup()}><img\n                                            className=\"image-size\" src=\"../images/add.svg\" title=\"new group\"\n                                            alt=\"new group\"/></div>\n                                        }\n                                    </td>\n                                </tr>\n                            </tbody>\n                        </table>\n\n                        <Pagination\n                            theme={theme}\n                            rowsPerPageOptions={[5, 10, 25]}\n                            component=\"div\"\n                            count={groups.size}\n                            rowsPerPage={this.props.group_page_size ? this.props.group_page_size : 10}\n                            page={this.props.group_page ? this.props.group_page : 0}\n                            backIconButtonProps={{\n                                'aria-label': 'Previous Page',\n                            }}\n                            nextIconButtonProps={{\n                                'aria-label': 'Next Page',\n                            }}\n                            onChangePage={(page) => this.props.setGroupPage(page)}\n                            onChangeRowsPerPage={(rows) => this.props.setGroupPageSize(rows)}\n                        />\n\n                    </div>\n                }\n\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = function(state) {\n    return {\n        error: state.appReducer.error,\n        error_title: state.appReducer.error_title,\n        theme: state.appReducer.theme,\n\n        group_list: state.appReducer.group_list,\n        group_filter: state.appReducer.group_filter,\n        group_page: state.appReducer.group_page,\n        group_page_size: state.appReducer.group_page_size,\n\n        user_list: state.appReducer.user_list,\n\n        selected_organisation_id: state.appReducer.selected_organisation_id,\n        selected_organisation: state.appReducer.selected_organisation,\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    dispatch => bindActionCreators(appCreators, dispatch)\n)(Groups);\n\n","import React, {Component} from 'react';\n\nimport AppMenu from './auth/app-menu'\nimport ErrorDialog from './common/error-dialog'\nimport {MessageDialog} from './common/message-dialog'\nimport AutoComplete from './common/autocomplete'\n\nimport Api from './common/api'\nimport Comms from './common/comms'\n\nimport Organisations from \"./organisations/organisations\";\nimport UserManager from \"./users/user-manager\";\nimport KnowledgeBases from \"./kb/knowledge-bases\";\nimport EdgeDevices from \"./edge/edge-devices\";\nimport EdgeDeviceCommands from \"./edge/edge-device-commands\";\nimport Inventory from './inventory/inventory'\nimport DocumentSources from \"./documents/document-sources\";\nimport Documents from \"./documents/documents\";\nimport Mind from \"./mind/mind\";\nimport MindTest from \"./mind/mind-test\";\nimport Synonyms from \"./synonyms/synonyms\";\nimport Semantics from \"./semantics/semantics\";\nimport SynSets from \"./synsets/synsets\";\nimport Logs from \"./reports/logs\";\nimport Reports from \"./reports/reports\";\nimport OperatorTabs from \"./operator/operator_tabs\";\nimport Domains from \"./ad/domains\";\nimport Groups from \"./users/groups\";\n\nimport SockJsClient from 'react-stomp';\n\nimport {connect} from \"react-redux\";\nimport {bindActionCreators} from \"redux\";\nimport {appCreators} from \"./actions/appActions\";\n\nimport './css/home.css';\n\n// if not defined, use this one\nconst default_operator_wait_timeout_in_ms = 10000;\n\n\nexport class Home extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            message_callback: null,\n            message: '',\n            message_title: '',\n        }\n    }\n    componentDidCatch(error, info) {\n        this.props.setError(error, info);\n        console.log(error, info);\n    }\n    componentDidMount() {\n        // do we still have a session?\n        if (!Api.defined(Comms.getSession())) {\n            // clearState();\n            window.location = \"/#/\";\n        } else {\n            this.props.getOrganisationList();\n\n            // switch tabs for non admin users to knowledge base default\n            if (!Home.hasRole(this.props.user, ['admin']) && this.props.selected_tab === \"organisations\") {\n                this.props.setupManager();\n            }\n\n            // /ops/refresh every operator_wait_timeout_in_ms interval\n            const isAdminOrManager = Home.hasRole(this.props.user, ['admin', 'manager']);\n            const isOperator = Home.hasRoleInOrganisation(this.props.user, this.props.selected_organisation_id, ['operator']);\n            const self = this;\n            let timeout = (this.props.operator_wait_timeout_in_ms && this.props.operator_wait_timeout_in_ms >= 1000) ?\n                this.props.operator_wait_timeout_in_ms : default_operator_wait_timeout_in_ms;\n            if (isAdminOrManager || isOperator) {\n                // refresh notifications and operator at interval\n                setInterval(() => { self.refreshOperator(self); }, timeout);\n            }\n\n            if (isOperator) {\n                // if this user has an operator role at all - we need to ask for events\n                if (!this.props.html5_notifications || this.props.html5_notifications.length === 0) {\n                    this.props.getHtml5Notifications();\n                }\n            }\n\n        }\n    }\n    refreshOperator(self) {\n        // keep operator alive if they're active and ready\n        if (self.props.selected_organisation_id.length > 0 &&\n            self.props.operators && self.props.operators.length > 0) {\n            const operatorList = [];\n            for (const op of self.props.operators) {\n                if (op.operator_ready) {\n                    operatorList.push({\"operatorId\": op.id, \"isTyping\": op.is_typing, \"clientId\": op.client_id});\n                }\n            }\n            if (operatorList.length > 0) {\n                const data = {\n                    sessionId: self.props.session.id,\n                    organisationId: self.props.selected_organisation_id,\n                    operatorList: operatorList,\n                };\n                this.props.sendOperatorMessage('/ops/refresh', data);\n            }\n        }\n    }\n    getStyle(tab, disabled) {\n        const theme = this.props.theme;\n        if (disabled) {\n            return theme === 'light' ? \"home-nav-item-disabled no-select\" : \"home-nav-item-disabled-dark no-select\";\n        }\n        return this.props.selected_tab === tab ? \"selected-home-nav-item\" : (theme === 'light' ? \"home-nav-item\" : \"home-nav-item-dark\");\n    }\n    static getTab(user) {\n        if (Home.hasRole(user, ['admin'])) {\n            return \"organisations\";\n        } else if (Home.hasRole(user, ['manager'])) {\n            return \"users\";\n        } else if (Home.hasRole(user, ['reporter'])) {\n            return \"reports\";\n        } else {\n            return \"invalid\"\n        }\n    }\n    static hasRole(user, role_name_list) {\n        if (user && user.roles) {\n            for (const role of user.roles) {\n                if (role_name_list.indexOf(role.role) >= 0) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n    static hasRoleInOrganisation(user, organisationId, role_name_list) {\n        if (user && user.roles) {\n            for (const role of user.roles) {\n                if (role.organisationId === organisationId && role_name_list.indexOf(role.role) >= 0) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n    // is this user entitle to edit the user passed in?\n    static canEdit(user, isAdmin, isManager) {\n        // admin can edit anyone, always\n        if (isAdmin) return true;\n        // a non admin user can never edit an administrator\n        const userIsAdmin = Home.hasRole(user, ['admin']);\n        if (userIsAdmin) return false;\n        // managers can edit everyone else\n        return isManager;\n    }\n    // is this user entitle to edit the user passed in?\n    static canDelete(user, signedInUser, isAdmin, isManager) {\n        // one cannot delete the signed-in user\n        if (user.email === signedInUser.email) return false;\n        // admin can edit anyone, always\n        if (isAdmin) return true;\n        // a non admin user can never edit an administrator\n        const userIsAdmin = Home.hasRole(user, ['admin']);\n        if (userIsAdmin) return false;\n        // managers can edit everyone else\n        return isManager;\n    }\n    static pad(item) {\n        return (\"\" + item).padStart(2, '0');\n    }\n    static pad2(item) {\n        return (\"\" + item).padStart(3, '0');\n    }\n    getOrganisationListFiltered(filter_text, callback) {\n        if (filter_text && filter_text.length > 0) {\n            const ft_lower = filter_text.toLowerCase();\n            const filtered_list = [];\n            for (const item of this.props.organisation_list) {\n                if (item.name.toLowerCase().indexOf(ft_lower) >= 0) {\n                    filtered_list.push({'label': item.name, 'data': item.id});\n                }\n            }\n            callback(filtered_list);\n        } else {\n            const filtered_list = [];\n            for (const item of this.props.organisation_list) {\n                filtered_list.push({'label': item.name, 'data': item.id});\n            }\n            callback(filtered_list);\n        }\n    }\n    getKnowledgeBaseListFiltered(filter_text, callback) {\n        if (filter_text && filter_text.length > 0) {\n            const ft_lower = filter_text.toLowerCase();\n            const filtered_list = [];\n            for (const item of this.props.knowledge_base_list) {\n                if (item.name.toLowerCase().indexOf(ft_lower) >= 0) {\n                    filtered_list.push({'label': item.name, 'data': item.kbId});\n                }\n            }\n            callback(filtered_list);\n        } else {\n            const filtered_list = [];\n            for (const item of this.props.knowledge_base_list) {\n                filtered_list.push({'label': item.name, 'data': item.kbId});\n            }\n            callback(filtered_list);\n        }\n    }\n    getEdgeDeviceList(filtered_text, callback) {\n        if (this.props.edge_device_list) {\n            if (filtered_text && filtered_text.length > 0) {\n                const ft_lower = filtered_text.toLowerCase();\n                const filtered_list = [];\n                for (const item of this.props.edge_device_list) {\n                    if (item.name.toLowerCase().indexOf(ft_lower) >= 0) {\n                        filtered_list.push({'label': item.name, 'data': item.edgeId});\n                    }\n                }\n                callback(filtered_list);\n            } else {\n                const filtered_list = [];\n                for (const item of this.props.edge_device_list) {\n                    filtered_list.push({'label': item.name, 'data': item.edgeId});\n                }\n                callback(filtered_list);\n            }\n        }\n    }\n    openDialog(message, message_title, message_callback) {\n        this.setState({dialog_open: true, message: message, message_title: message_title, message_callback: message_callback});\n    }\n    closeDialog() {\n        this.setState({dialog_open: false, message: \"\", message_title: \"\", message_callback: null});\n    }\n    connectionError(error) {\n        this.props.setOperatorConnected(false);\n        this.props.setError(\"Operator Connection\", error);\n    }\n    convertOrganisationList(list) {\n        const new_list = [];\n        for (const item of list) {\n            if (item.id && item.name) {\n                new_list.push({\"id\": item.id, \"name\": item.name});\n            }\n        }\n        return new_list;\n    }\n    convertKbList(list) {\n        const new_list = [];\n        for (const item of list) {\n            if (item.kbId && item.name) {\n                new_list.push({\"id\": item.kbId, \"name\": item.name});\n            }\n        }\n        return new_list;\n    }\n    convertEdgeList(list) {\n        const new_list = [];\n        for (const item of list) {\n            if (item.edgeId && item.name) {\n                new_list.push({\"id\": item.edgeId, \"name\": item.name});\n            }\n        }\n        return new_list;\n    }\n    render() {\n        const isAdmin = Home.hasRole(this.props.user, ['admin']);\n        const isOperator = Home.hasRoleInOrganisation(this.props.user, this.props.selected_organisation_id, ['operator']);\n        const operator_id_list = [];\n        if (this.props.operators) {\n            for (const operator of this.props.operators) {\n                if (operator && operator.id) {\n                    operator_id_list.push('/chat/' + operator.id);\n                }\n            }\n        }\n        const theme = this.props.theme;\n        return (\n            <div className=\"home-screen\">\n\n                {\n                    this.props.busy &&\n                    <div className={theme === 'light' ? \"busy\" : \"busyDark\"} />\n                }\n\n                <AppMenu title=\"\" signed_in={true} />\n\n                <ErrorDialog title={this.props.error_title}\n                             theme={theme}\n                             message={this.props.error}\n                             callback={() => this.props.closeError()} />\n\n                <MessageDialog callback={(action) => {if (this.state.message_callback) this.state.message_callback(action)}}\n                               open={this.state.message.length > 0}\n                               theme={this.props.theme}\n                               message={this.state.message}\n                               title={this.state.message_title} />\n\n                <SockJsClient url={window.ENV.ws_base} topics={operator_id_list}\n                              ref={ (client) => { this.clientRef = client }}\n                              onMessage={(msg) => { this.props.processOperatorMessage(msg) }}\n                              onConnect={() => this.props.setOperatorConnected(true)}\n                              onDisconnect={() => this.props.setOperatorConnected(false)}\n                              onError={(error) => this.connectionError(error)} />\n\n                 <div>\n\n                     <div className=\"page-nav\">\n                         {\n                             Home.hasRole(this.props.user, ['admin']) &&\n                             <div className={this.getStyle('organisations', false)}\n                                  onClick={() => this.props.selectTab('organisations')}>organisations</div>\n                         }\n                         {\n                             Home.hasRole(this.props.user, ['admin', 'manager']) &&\n                             <div className={this.getStyle('knowledge bases', false)}\n                                  onClick={() => this.props.selectTab('knowledge bases')}>knowledge bases</div>\n                         }\n                         {\n                             Home.hasRole(this.props.user, ['admin', 'manager']) &&\n                             <div className={this.getStyle('edge devices', false)}\n                                  onClick={() => this.props.selectTab('edge devices')}>Edge devices</div>\n                         }\n                         {\n                             Home.hasRole(this.props.user, ['admin', 'manager']) &&\n                             this.props.edge_device_list && this.props.edge_device_list.length > 0 &&\n                             <div className={this.getStyle('edge commands', false)} \n                                  onClick={() => this.props.selectTab('edge commands')}>Edge commands</div>\n                         }\n                         {\n                             Home.hasRole(this.props.user, ['admin', 'manager']) &&\n                             <div className={this.getStyle('users', false)} \n                                  onClick={() => this.props.selectTab('users')}>user manager</div>\n                         }\n                         {\n                             Home.hasRole(this.props.user, ['admin', 'manager']) &&\n                             <div className={this.getStyle('groups', false)} \n                                  onClick={() => this.props.selectTab('groups')}>group manager</div>\n                         }\n                         {\n                             <div className={this.getStyle('operator', !this.props.operator_connected || !isOperator)}\n                                  onClick={() => { if (isOperator) this.props.selectTab('operator')}} >operator</div>\n                         }\n                         {\n                             Home.hasRole(this.props.user, ['admin', 'manager']) &&\n                             <div className={this.getStyle('inventory', false)} \n                                  onClick={() => this.props.selectTab('inventory')}>inventory</div>\n                         }\n                         {\n                             Home.hasRole(this.props.user, ['admin', 'manager']) &&\n                             <div className={this.getStyle('document sources', false)} \n                                  onClick={() => this.props.selectTab('document sources')}>document\n                                 sources</div>\n                         }\n                         {\n                             Home.hasRole(this.props.user, ['admin', 'manager']) &&\n                             <div className={this.getStyle('documents', false)} \n                                  onClick={() => this.props.selectTab('documents')}>documents</div>\n                         }\n                         {\n                             Home.hasRole(this.props.user, ['admin', 'manager']) &&\n                             <div className={this.getStyle('active directory', false)} \n                                  onClick={() => this.props.selectTab('active directory')}>active directory</div>\n                         }\n                         {\n                             Home.hasRole(this.props.user, ['admin', 'manager']) &&\n                             <div className={this.getStyle('mind', false)} \n                                  onClick={() => this.props.selectTab('mind')}>the mind</div>\n                         }\n                         {\n                             Home.hasRole(this.props.user, ['admin', 'manager']) &&\n                             <div className={this.getStyle('mind-test', false)} \n                                  onClick={() => this.props.selectTab('mind-test')}>test the mind</div>\n                         }\n                         {\n                             Home.hasRole(this.props.user, ['admin', 'manager']) &&\n                             <div className={this.getStyle('synonyms', false)} \n                                  onClick={() => this.props.selectTab('synonyms')}>synonyms</div>\n                         }\n                         {\n                             Home.hasRole(this.props.user, ['admin', 'manager']) &&\n                             <div className={this.getStyle('semantics')} \n                                  onClick={() => this.props.selectTab('semantics')}>semantics</div>\n                         }\n                         {\n                             Home.hasRole(this.props.user, ['admin', 'manager']) &&\n                             <div className={this.getStyle('syn-sets')} \n                                  onClick={() => this.props.selectTab('syn-sets')}>syn-sets</div>\n                         }\n                         {\n                             Home.hasRole(this.props.user, ['admin', 'manager']) &&\n                             <div className={this.getStyle('reports', false)} \n                                  onClick={() => this.props.selectTab('reports')}>reports</div>\n                         }\n                         {\n                             Home.hasRole(this.props.user, ['admin']) &&\n                             <div className={this.getStyle('logs', false)}\n                                  onClick={() => this.props.selectTab('logs')}>logs</div>\n                         }\n                     </div>\n\n                     <div className=\"page-content\">\n\n                         {this.props.selected_tab !== 'organisations' && this.props.selected_tab !== 'os' &&\n                          this.props.selected_tab !== 'operator' && this.props.selected_tab !== 'license' && isAdmin &&\n                             <div className=\"organisation-select\">\n                                 <div className=\"lhs\">organisation</div>\n                                 <div className=\"rhs\">\n                                     <AutoComplete\n                                         theme={theme}\n                                         label='organisation'\n                                         value={this.props.selected_organisation_id}\n                                         data_list={this.convertOrganisationList(this.props.organisation_list)}\n                                         onSelect={(data) => this.props.selectOrganisation(data)}\n                                     />\n                                 </div>\n                             </div>\n                         }\n\n                         {this.props.selected_tab !== 'organisations' && this.props.selected_tab !== 'os' &&\n                          this.props.selected_tab !== 'license' && this.props.selected_tab !== 'operator' && !isAdmin &&\n                             <div className=\"organisation-select\">\n                                 <div className=\"lhs\">organisation</div>\n                                 <div className=\"rhs\">\n                                     <div className=\"organisation-label\">{this.props.selected_organisation}</div>\n                                 </div>\n                             </div>\n                         }\n\n                         {this.props.selected_tab !== 'organisations' && this.props.selected_tab !== 'os' && this.props.selected_tab !== 'users' &&\n                          this.props.selected_tab !== 'groups' && this.props.selected_tab !== 'operator' && this.props.selected_tab !== 'license' &&\n                          this.props.selected_tab !== 'knowledge bases' && this.props.selected_tab !== 'logs' && this.props.selected_tab !== 'edge devices' &&\n                          this.props.selected_tab !== 'edge commands' &&\n                             <div className=\"knowledgebase-select\">\n                                 <div className=\"lhs\">knowledge base</div>\n                                 <div className=\"rhs\">\n                                     <AutoComplete\n                                         label='knowledge base'\n                                         value={this.props.selected_knowledgebase_id}\n                                         data_list={this.convertKbList(this.props.knowledge_base_list)}\n                                         onSelect={(data) => this.props.selectKnowledgeBase(data)}\n                                         theme={theme}\n                                     />\n                                 </div>\n                             </div>\n                         }\n\n                         { this.props.selected_tab === 'edge commands' &&\n                         <div className=\"knowledgebase-select\">\n                             <div className=\"lhs\">edge device</div>\n                             <div className=\"rhs\">\n                                 <AutoComplete\n                                     label='edge device'\n                                     theme={theme}\n                                     value={this.props.selected_edge_device_id}\n                                     data_list={this.convertEdgeList(this.props.edge_device_list)}\n                                     onSelect={(data) => this.props.selectEdgeDevice(data)}\n                                 />\n                             </div>\n                         </div>\n                         }\n\n                         { this.props.selected_tab === 'organisations' &&\n                             <Organisations\n                                 openDialog={(message, title, callback) => this.openDialog(message, title, callback)}\n                                 closeDialog={() => this.closeDialog()} />\n                         }\n\n                         { this.props.selected_tab === 'knowledge bases' &&\n                            <KnowledgeBases\n                                openDialog={(message, title, callback) => this.openDialog(message, title, callback)}\n                                closeDialog={() => this.closeDialog()} />\n                         }\n\n                         { this.props.selected_tab === 'edge devices' &&\n                             <EdgeDevices\n                                 openDialog={(message, title, callback) => this.openDialog(message, title, callback)}\n                                 closeDialog={() => this.closeDialog()} />\n                         }\n\n                         { this.props.selected_tab === 'edge commands' &&\n                            <EdgeDeviceCommands\n                             openDialog={(message, title, callback) => this.openDialog(message, title, callback)}\n                             closeDialog={() => this.closeDialog()} />\n                         }\n\n                         { this.props.selected_tab === 'users' &&\n                            <UserManager\n                                openDialog={(message, title, callback) => this.openDialog(message, title, callback)}\n                                closeDialog={() => this.closeDialog()} />\n                         }\n\n                         { this.props.selected_tab === 'groups' &&\n                             <Groups\n                                 openDialog={(message, title, callback) => this.openDialog(message, title, callback)}\n                                 closeDialog={() => this.closeDialog()} />\n                         }\n\n                         { this.props.selected_tab === 'operator' &&\n                             <OperatorTabs\n                                 openDialog={(message, title, callback) => this.openDialog(message, title, callback)}\n                                 closeDialog={() => this.closeDialog()} />\n                         }\n\n                         { this.props.selected_tab === 'inventory' &&\n                             <Inventory\n                                 openDialog={(message, title, callback) => this.openDialog(message, title, callback)}\n                                 closeDialog={() => this.closeDialog()} />\n                         }\n\n                         { this.props.selected_tab === 'document sources' &&\n                            <DocumentSources\n                                openDialog={(message, title, callback) => this.openDialog(message, title, callback)}\n                                closeDialog={() => this.closeDialog()} />\n                         }\n\n                         { this.props.selected_tab === 'documents' &&\n                             <Documents\n                                 openDialog={(message, title, callback) => this.openDialog(message, title, callback)}\n                                 closeDialog={() => this.closeDialog()} />\n                         }\n\n                         { this.props.selected_tab === 'active directory' &&\n                             <Domains\n                                 openDialog={(message, title, callback) => this.openDialog(message, title, callback)}\n                                 closeDialog={() => this.closeDialog()} />\n                         }\n\n                         { this.props.selected_tab === 'mind' &&\n                             <Mind\n                                 openDialog={(message, title, callback) => this.openDialog(message, title, callback)}\n                                 closeDialog={() => this.closeDialog()} />\n                         }\n\n                         { this.props.selected_tab === 'mind-test' &&\n                             <MindTest\n                                 openDialog={(message, title, callback) => this.openDialog(message, title, callback)}\n                                 closeDialog={() => this.closeDialog()} />\n                         }\n\n                         { this.props.selected_tab === 'synonyms' &&\n                             <Synonyms\n                                 openDialog={(message, title, callback) => this.openDialog(message, title, callback)}\n                                 closeDialog={() => this.closeDialog()} />\n                         }\n\n                         { this.props.selected_tab === 'semantics' &&\n                             <Semantics\n                                 openDialog={(message, title, callback) => this.openDialog(message, title, callback)}\n                                 closeDialog={() => this.closeDialog()} />\n                         }\n\n                         { this.props.selected_tab === 'syn-sets' &&\n                             <SynSets\n                                 openDialog={(message, title, callback) => this.openDialog(message, title, callback)}\n                                 closeDialog={() => this.closeDialog()} />\n                         }\n\n                         { this.props.selected_tab === 'reports' &&\n                             <Reports\n                                 openDialog={(message, title, callback) => this.openDialog(message, title, callback)}\n                                 closeDialog={() => this.closeDialog()} />\n                         }\n\n                         { this.props.selected_tab === 'logs' &&\n                             <Logs\n                                 openDialog={(message, title, callback) => this.openDialog(message, title, callback)}\n                                 closeDialog={() => this.closeDialog()} />\n                         }\n\n                         {\n                             this.props.selected_tab === 'invalid' &&\n                             <div>You do not have access to this application</div>\n                         }\n\n                     </div>\n\n                 </div>\n\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = function(state) {\n    return {\n        error: state.appReducer.error,\n        error_title: state.appReducer.error_title,\n\n        operator_wait_timeout_in_ms: state.appReducer.operator_wait_timeout_in_ms,\n\n        busy: state.appReducer.busy,\n        theme: state.appReducer.theme,\n\n        user: state.appReducer.user,\n        selected_tab: state.appReducer.selected_tab,\n        session: state.appReducer.session,\n        operator_connected: state.appReducer.operator_connected,\n        operators: state.appReducer.operators,\n\n        organisation_list: state.appReducer.organisation_list,\n        knowledge_base_list: state.appReducer.knowledge_base_list,\n\n        html5_notifications: state.appReducer.html5_notifications,\n\n        selected_organisation: state.appReducer.selected_organisation,\n        selected_organisation_id: state.appReducer.selected_organisation_id,\n        selected_knowledgebase: state.appReducer.selected_knowledgebase,\n        selected_knowledgebase_id: state.appReducer.selected_knowledgebase_id,\n\n        // list of edge devices\n        edge_device_list: state.appReducer.edge_device_list,\n        selected_edge_device: state.appReducer.selected_edge_device,\n        selected_edge_device_id: state.appReducer.selected_edge_device_id,\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    dispatch => bindActionCreators(appCreators, dispatch)\n)(Home);\n\n","import React from 'react';\n// import 'babel-polyfill'\nimport ReactDOM from 'react-dom'\nimport {Provider} from 'react-redux'\nimport {HashRouter} from 'react-router-dom'\nimport {Route} from 'react-router'\n\nimport configureStore from \"./reducers/configureStore\";\nimport {saveState} from \"./reducers/stateLoader\";\n// must not have {} to work\nimport SignIn from './auth/sign_in'\n\nimport ResetPasswordRequest from './auth/reset_password_request'\nimport ResetPasswordResponse from './auth/reset_password_response'\nimport OpenSourceLicenses from './auth/open_source_licenses'\nimport LicenseAgreement from \"./auth/license_agreement\";\nimport SearchPage from \"./search/search-page\";\n\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport 'typeface-roboto';\n\nimport Home from './home'\n\nrequire('typeface-roboto')\n\n\nconst store = configureStore();\nstore.subscribe(() => {\n    saveState(store.getState());\n});\n\n\nReactDOM.render(\n    <Provider store={store}>\n    <div>\n        <HashRouter basename={'/'}>\n            <div>\n                <Route exact path=\"/\" component={SignIn} />\n                <Route exact path=\"/home\" component={Home} />\n                <Route exact path=\"/search\" component={SearchPage} />\n                <Route path=\"/reset-password-request\" component={ResetPasswordRequest} />\n                <Route path=\"/reset-password-response\" component={ResetPasswordResponse} />\n                <Route exact path=\"/foss-license\" component={OpenSourceLicenses} />\n                <Route exact path=\"/license-agreement\" component={LicenseAgreement} />\n            </div>\n        </HashRouter>\n    </div>\n    </Provider>,\n    document.getElementById('content')\n);\n"],"sourceRoot":""}